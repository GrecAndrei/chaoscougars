# 📘 COMPLETE IMPLEMENTATION GUIDE - COUGAR JOURNEY MOD

**Last Updated: October 24, 2025**

***

## 📋 TABLE OF CONTENTS

1. [Project Overview](#project-overview)
2. [Architecture Summary](#architecture-summary)
3. [Part 1: FiveM Resource (COMPLETE)](#part-1-fivem-resource)
4. [Part 2: Chaos Mod V Integration (IN PROGRESS)](#part-2-chaos-mod-v-integration)
5. [Part 3: Build Instructions](#part-3-build-instructions)
6. [Part 4: Testing Guide](#part-4-testing-guide)
7. [Part 5: Troubleshooting](#part-5-troubleshooting)

***

## PROJECT OVERVIEW

**Goal:** Create a 4-player cooperative journey mode where players traverse the GTA V map while being hunted by cougars. Chaos Mod effects randomly affect all players simultaneously.

**Components:**
1. ✅ FiveM Server Resource - Journey management, cougar spawning
2. ✅ FiveM Client Resource - HUD, visual effects, NUI communication
3. ⚠️ Modified Chaos Mod V - HTTP server for external triggers
4. ⚠️ Effect Database - Maps effect IDs to Chaos Mod classes

***

## ARCHITECTURE SUMMARY

```
FiveM Server (Lua)
    ↓ (every 30s, triggers chaos effect)
TriggerClientEvent('cougar:triggerChaosEffect', -1, effectId, duration)
    ↓
FiveM Client (Lua)
    ↓
SendNUIMessage({ action: 'triggerEffect', effectId, duration })
    ↓
NUI (JavaScript/HTML)
    ↓
HTTP POST to http://127.0.0.1:8080/trigger
    ↓
Chaos Mod V (C++ with HTTP Server)
    ↓
EffectDatabase::GetEffectById(effectId)
    ↓
EffectDispatcher::DispatchEffect(effect)
    ↓
Effect Applied to Player
```

***

# PART 1: FIVEM RESOURCE

## Directory Structure

```
fivem-resource/
├── fxmanifest.lua
├── config.lua
├── server/
│   ├── sv_main.lua
│   ├── sv_journey.lua
│   ├── sv_cougars.lua
│   └── sv_chaos.lua
├── client/
│   ├── cl_main.lua
│   ├── cl_journey.lua
│   ├── cl_hud.lua
│   └── cl_chaos.lua
└── html/
    └── index.html
```

***

## File 1: fxmanifest.lua

```lua
fx_version 'cerulean'
game 'gta5'

author 'Your Name'
description 'Cooperative Cougar Journey Mode with Chaos Mod Integration'
version '1.0.0'

shared_script 'config.lua'

server_scripts {
    'server/sv_main.lua',
    'server/sv_journey.lua',
    'server/sv_cougars.lua',
    'server/sv_chaos.lua'
}

client_scripts {
    'client/cl_main.lua',
    'client/cl_journey.lua',
    'client/cl_hud.lua',
    'client/cl_chaos.lua'
}

ui_page 'html/index.html'

files {
    'html/index.html'
}
```

***

## File 2: config.lua

```lua
Config = Config or {}

-- Journey Settings
Config.MaxTeamDeaths = 2
Config.RubberBandRadius = 600.0
Config.PositionUpdateRate = 100

-- Cougar Settings
Config.MaxAliveCougars = 12
Config.SpawnInterval = 8
Config.SpawnDistance = {min = 50, max = 100}
Config.DespawnDistance = 250

-- Cougar Types with Spawn Weights
Config.CougarTypes = {
    normal = {
        weight = 0.40,
        model = 'a_c_mtlion',
        health = 150,
        damage = 20,
        visualObject = nil
    },
    shooter = {
        weight = 0.20,
        model = 'a_c_mtlion',
        health = 120,
        damage = 0,
        visualObject = nil,
        weapon = 'WEAPON_PISTOL',
        accuracy = 30,
        shootRate = 200
    },
    blueBall = {
        weight = 0.15,
        model = 'a_c_mtlion',
        health = 100,
        damage = 15,
        visualObject = 'prop_bowling_ball',
        knockback = {x = 0, y = 0, z = 5.0}
    },
    purpleBall = {
        weight = 0.05,
        model = 'a_c_mtlion',
        health = 100,
        damage = 15,
        visualObject = 'prop_juicestand',
        knockback = {x = 0, y = 0, z = 15.0}
    },
    barrier = {
        weight = 0.05,
        model = 'a_c_mtlion',
        health = 100,
        damage = 10,
        visualObject = 'prop_barrier_work05',
        invertVelocity = true
    },
    health = {
        weight = 0.05,
        model = 'a_c_mtlion',
        health = 80,
        damage = 5,
        visualObject = 'prop_ld_health_pack',
        dropOnDeath = {type = 'health', amount = 25}
    },
    armor = {
        weight = 0.05,
        model = 'a_c_mtlion',
        health = 80,
        damage = 5,
        visualObject = 'prop_armour_pickup',
        dropOnDeath = {type = 'armor', amount = 25}
    },
    ammo = {
        weight = 0.03,
        model = 'a_c_mtlion',
        health = 80,
        damage = 5,
        visualObject = 'prop_box_ammo03a',
        dropOnDeath = {type = 'ammo', amount = 50}
    },
    jesus = {
        weight = 0.01,
        model = 'a_c_mtlion',
        health = 500,
        damage = 30,
        visualObject = 'u_m_m_jesus_01'
    },
    beeper = {
        weight = 0.01,
        model = 'a_c_mtlion',
        health = 50,
        damage = 0,
        visualObject = 'prop_ld_bomb',
        beepTime = 10.0,
        explosionRadius = 15.0,
        explosionDamage = 200
    }
}

-- Difficulty Scaling
Config.DifficultyScaling = {
    {distance = 0, multiplier = 1.0},
    {distance = 2, multiplier = 1.3},
    {distance = 5, multiplier = 1.6},
    {distance = 8, multiplier = 2.0}
}

-- Cropduster Event
Config.CropDusterInterval = 300
Config.CropDusterCougarCount = 8

-- Client-Specific Config
if IsDuplicityVersion() == false then
    Config.ChaosPort = 8080  -- ⚠️ CHANGE PER PLAYER: 8080, 8081, 8082, 8083
    Config.ChaosDebug = true
    Config.ChaosConnectionTestInterval = 10000
end
```

***

## File 3: server/sv_main.lua

```lua
JourneySession = {
    active = false,
    players = {},
    teamDeaths = 0,
    distanceTraveled = 0,
    startTime = 0,
    cougars = {},
    lastSpawnTime = 0,
    lastCropDusterTime = 0,
    lastCenter = nil
}

function GetPlayerCount()
    local count = 0
    for _ in pairs(JourneySession.players) do
        count = count + 1
    end
    return count
end

function GetTeamCenter()
    if GetPlayerCount() == 0 then return vec3(0, 0, 0) end
    
    local sumX, sumY, sumZ = 0, 0, 0
    for source, data in pairs(JourneySession.players) do
        sumX = sumX + data.position.x
        sumY = sumY + data.position.y
        sumZ = sumZ + data.position.z
    end
    
    local count = GetPlayerCount()
    return vec3(sumX / count, sumY / count, sumZ / count)
end

function GetDifficultyMultiplier()
    local distKm = JourneySession.distanceTraveled / 1000
    
    for i = #Config.DifficultyScaling, 1, -1 do
        if distKm >= Config.DifficultyScaling[i].distance then
            return Config.DifficultyScaling[i].multiplier
        end
    end
    
    return 1.0
end

print('^2[Cougar Journey] Resource started^7')
```

***

## File 4: server/sv_journey.lua

```lua
RegisterCommand('startjourney', function(source, args, rawCommand)
    if JourneySession.active then
        TriggerClientEvent('chat:addMessage', source, {
            args = {'^1Error', 'Journey already in progress!'}
        })
        return
    end
    
    JourneySession.active = true
    JourneySession.teamDeaths = 0
    JourneySession.distanceTraveled = 0
    JourneySession.startTime = os.time()
    JourneySession.players = {}
    JourneySession.cougars = {}
    JourneySession.lastCenter = nil
    
    local players = GetPlayers()
    for _, playerId in ipairs(players) do
        local playerPed = GetPlayerPed(playerId)
        local coords = GetEntityCoords(playerPed)
        
        JourneySession.players[playerId] = {
            position = vec3(coords.x, coords.y, coords.z),
            deaths = 0
        }
    end
    
    TriggerClientEvent('cougar:journeyStarted', -1)
    
    print('^2[Cougar Journey] Session started with ' .. GetPlayerCount() .. ' players^7')
end, false)

RegisterCommand('stopjourney', function(source, args, rawCommand)
    if not JourneySession.active then
        TriggerClientEvent('chat:addMessage', source, {
            args = {'^1Error', 'No journey in progress!'}
        })
        return
    end
    
    for netId, cougarData in pairs(JourneySession.cougars) do
        if DoesEntityExist(cougarData.entity) then
            DeleteEntity(cougarData.entity)
        end
    end
    
    JourneySession.active = false
    JourneySession.cougars = {}
    
    TriggerClientEvent('cougar:journeyStopped', -1)
    
    print('^2[Cougar Journey] Session ended^7')
end, false)

RegisterNetEvent('cougar:updatePosition')
AddEventHandler('cougar:updatePosition', function(position)
    local src = source
    
    if not JourneySession.active then return end
    if not JourneySession.players[src] then return end
    
    JourneySession.players[src].position = position
end)

RegisterNetEvent('cougar:playerDied')
AddEventHandler('cougar:playerDied', function()
    local src = source
    
    if not JourneySession.active then return end
    if not JourneySession.players[src] then return end
    
    JourneySession.teamDeaths = JourneySession.teamDeaths + 1
    JourneySession.players[src].deaths = JourneySession.players[src].deaths + 1
    
    if JourneySession.teamDeaths >= Config.MaxTeamDeaths then
        TriggerClientEvent('cougar:gameOver', -1, 'deaths')
        
        SetTimeout(10000, function()
            ExecuteCommand('stopjourney')
        end)
    else
        TriggerClientEvent('cougar:deathUpdate', -1, JourneySession.teamDeaths, Config.MaxTeamDeaths)
    end
end)

Citizen.CreateThread(function()
    while true do
        Wait(Config.PositionUpdateRate)
        
        if JourneySession.active and GetPlayerCount() > 0 then
            local center = GetTeamCenter()
            
            for source, data in pairs(JourneySession.players) do
                local playerPed = GetPlayerPed(source)
                if DoesEntityExist(playerPed) then
                    local dist = #(data.position - center)
                    
                    if dist > Config.RubberBandRadius then
                        SetEntityCoords(playerPed, center.x, center.y, center.z)
                        TriggerClientEvent('chat:addMessage', source, {
                            args = {'^3Warning', 'You strayed too far from the team!'}
                        })
                    end
                end
            end
        end
    end
end)

Citizen.CreateThread(function()
    while true do
        Wait(1000)
        
        if JourneySession.active and GetPlayerCount() > 0 then
            local currentCenter = GetTeamCenter()
            
            if JourneySession.lastCenter then
                local moved = #(currentCenter - JourneySession.lastCenter)
                JourneySession.distanceTraveled = JourneySession.distanceTraveled + moved
            end
            
            JourneySession.lastCenter = currentCenter
        end
    end
end)

RegisterNetEvent('cougar:requestDistance')
AddEventHandler('cougar:requestDistance', function()
    local src = source
    
    if not JourneySession.active then return end
    
    local distKm = JourneySession.distanceTraveled / 1000
    
    TriggerClientEvent('cougar:distanceUpdate', src, distKm)
end)
```

***

## File 5: server/sv_cougars.lua

```lua
function SelectCougarType()
    local rand = math.random()
    local cumulative = 0
    
    local multiplier = GetDifficultyMultiplier()
    
    for typeName, typeData in pairs(Config.CougarTypes) do
        cumulative = cumulative + typeData.weight
        if rand <= cumulative then
            return typeName, typeData
        end
    end
    
    return 'normal', Config.CougarTypes.normal
end

function SpawnCougar(position, typeName, typeData)
    local modelHash = GetHashKey(typeData.model)
    
    local cougar = CreatePed(4, modelHash, position.x, position.y, position.z, math.random(0, 360), true, true)
    
    SetEntityOrphanMode(cougar, 2)
    
    SetEntityMaxHealth(cougar, typeData.health)
    SetEntityHealth(cougar, typeData.health)
    
    SetPedRelationshipGroupHash(cougar, GetHashKey('COUGAR'))
    
    SetRelationshipBetweenGroups(5, GetHashKey('COUGAR'), GetHashKey('PLAYER'))
    SetRelationshipBetweenGroups(5, GetHashKey('PLAYER'), GetHashKey('COUGAR'))
    
    SetPedCombatAttributes(cougar, 46, true)
    SetPedCombatAttributes(cougar, 5, true)
    SetPedCombatAbility(cougar, 2)
    SetPedFleeAttributes(cougar, 0, false)
    
    if typeName == 'shooter' then
        GiveWeaponToPed(cougar, GetHashKey(typeData.weapon), 9999, false, true)
        SetPedAccuracy(cougar, typeData.accuracy)
        SetPedShootRate(cougar, typeData.shootRate)
    end
    
    local netId = NetworkGetNetworkIdFromEntity(cougar)
    
    JourneySession.cougars[netId] = {
        type = typeName,
        entity = cougar,
        position = position,
        spawnTime = os.time()
    }
    
    TriggerClientEvent('cougar:spawned', -1, netId, typeName, typeData)
    
    local nearestPlayer = GetNearestPlayer(position)
    if nearestPlayer then
        TaskCombatPed(cougar, GetPlayerPed(nearestPlayer), 0, 16)
    else
        TaskCombatHatedTargetsAroundPed(cougar, 100.0)
    end
    
    return netId
end

function GetNearestPlayer(position)
    local nearest = nil
    local nearestDist = math.huge
    
    for source, data in pairs(JourneySession.players) do
        local dist = #(data.position - position)
        if dist < nearestDist then
            nearestDist = dist
            nearest = source
        end
    end
    
    return nearest
end

Citizen.CreateThread(function()
    while true do
        Wait(Config.SpawnInterval * 1000)
        
        if JourneySession.active and GetPlayerCount() > 0 then
            local aliveCougars = 0
            
            for netId, cougarData in pairs(JourneySession.cougars) do
                if DoesEntityExist(cougarData.entity) and not IsEntityDead(cougarData.entity) then
                    aliveCougars = aliveCougars + 1
                else
                    JourneySession.cougars[netId] = nil
                end
            end
            
            local multiplier = GetDifficultyMultiplier()
            local maxCougars = math.floor(Config.MaxAliveCougars * multiplier)
            
            if aliveCougars < maxCougars then
                local center = GetTeamCenter()
                
                local angle = math.random() * 2 * math.pi
                local distance = math.random(Config.SpawnDistance.min, Config.SpawnDistance.max)
                
                local spawnPos = vec3(
                    center.x + math.cos(angle) * distance,
                    center.y + math.sin(angle) * distance,
                    center.z
                )
                
                local typeName, typeData = SelectCougarType()
                
                SpawnCougar(spawnPos, typeName, typeData)
            end
        end
    end
end)

RegisterNetEvent('cougar:died')
AddEventHandler('cougar:died', function(netId)
    if not JourneySession.cougars[netId] then return end
    
    local cougarData = JourneySession.cougars[netId]
    local typeData = Config.CougarTypes[cougarData.type]
    
    if typeData.dropOnDeath then
        TriggerClientEvent('cougar:spawnLoot', -1, cougarData.position, typeData.dropOnDeath)
    end
    
    if cougarData.type == 'beeper' then
        AddExplosion(cougarData.position.x, cougarData.position.y, cougarData.position.z, 
                     2, 
                     typeData.explosionDamage,
                     true, false, typeData.explosionRadius)
    end
    
    JourneySession.cougars[netId] = nil
end)

function SpawnCropduster()
    if not JourneySession.active or GetPlayerCount() == 0 then return end
    
    local center = GetTeamCenter()
    
    local angle = math.random() * 2 * math.pi
    local distance = 500
    
    local spawnPos = vec3(
        center.x + math.cos(angle) * distance,
        center.y + math.sin(angle) * distance,
        center.z + 200
    )
    
    local planeHash = GetHashKey('duster')
    
    local plane = CreateVehicle(planeHash, spawnPos.x, spawnPos.y, spawnPos.z, 0.0, true, true)
    SetEntityOrphanMode(plane, 2)
    
    local heading = math.atan2(center.y - spawnPos.y, center.x - spawnPos.x) * 180 / math.pi
    SetEntityHeading(plane, heading)
    SetVehicleForwardSpeed(plane, 50.0)
    SetVehicleEngineOn(plane, true, true, false)
    
    local cougarRefs = {}
    
    for i = 1, Config.CropDusterCougarCount do
        local typeName, typeData = SelectCougarType()
        local cougar = CreatePed(4, GetHashKey(typeData.model), spawnPos.x, spawnPos.y, spawnPos.z, 0.0, true, true)
        SetEntityOrphanMode(cougar, 2)
        
        SetPedIntoVehicle(cougar, plane, i - 2)
        
        table.insert(cougarRefs, {entity = cougar, type = typeName, data = typeData})
    end
    
    print('^3[Cropduster] Spawned with ' .. #cougarRefs .. ' cougars^7')
    
    TriggerClientEvent('chat:addMessage', -1, {
        args = {'^3⚠ WARNING', 'Incoming cropduster detected!'}
    })
    
    Citizen.CreateThread(function()
        local crashed = false
        
        while DoesEntityExist(plane) and not crashed do
            Wait(500)
            
            local planePos = GetEntityCoords(plane)
            local dist = #(vec3(planePos.x, planePos.y, planePos.z) - center)
            
            if dist < 150 then
                SetVehicleEngineHealth(plane, -1.0)
                SetEntityHealth(plane, 0)
                
                AddExplosion(planePos.x, planePos.y, planePos.z, 5, 50.0, true, false, 10.0)
                
                for _, cougarData in ipairs(cougarRefs) do
                    if DoesEntityExist(cougarData.entity) then
                        TaskLeaveVehicle(cougarData.entity, plane, 4096)
                        
                        Wait(100)
                        
                        SetPedRelationshipGroupHash(cougarData.entity, GetHashKey('COUGAR'))
                        SetPedCombatAttributes(cougarData.entity, 46, true)
                        SetPedCombatAbility(cougarData.entity, 2)
                        
                        local netId = NetworkGetNetworkIdFromEntity(cougarData.entity)
                        local cougarPos = GetEntityCoords(cougarData.entity)
                        
                        JourneySession.cougars[netId] = {
                            type = cougarData.type,
                            entity = cougarData.entity,
                            position = vec3(cougarPos.x, cougarPos.y, cougarPos.z),
                            spawnTime = os.time()
                        }
                        
                        TriggerClientEvent('cougar:spawned', -1, netId, cougarData.type, cougarData.data)
                        
                        local nearestPlayer = GetNearestPlayer(vec3(cougarPos.x, cougarPos.y, cougarPos.z))
                        if nearestPlayer then
                            TaskCombatPed(cougarData.entity, GetPlayerPed(nearestPlayer), 0, 16)
                        end
                    end
                end
                
                crashed = true
                print('^2[Cropduster] Crashed! Cougars deployed.^7')
                
                TriggerSyncedChaosEffect('player_ragdoll', 3000)
            end
            
            if os.time() - JourneySession.startTime > 60 then
                crashed = true
            end
        end
        
        Wait(10000)
        if DoesEntityExist(plane) then
            DeleteEntity(plane)
        end
    end)
end

Citizen.CreateThread(function()
    while true do
        Wait(Config.CropDusterInterval * 1000)
        
        if JourneySession.active then
            SpawnCropduster()
        end
    end
end)
```

***

## File 6: server/sv_chaos.lua

```lua
local chaosEffectInterval = 30000
local lastChaosEffect = 0

local allChaosEffects = {
    'player_drunk',
    'player_ragdoll',
    'player_super_jump',
    'player_invincibility',
    'player_low_gravity',
    'player_high_gravity',
    'player_slippery',
    'player_super_speed',
    'player_slow_motion',
    'player_fast_forward',
    'player_launch_up',
    'weapon_give_rpg',
    'weapon_explosive_bullets',
    'weapon_infinite_ammo',
    'vehicle_boost',
    'vehicle_inverted_controls',
    'world_midnight',
    'world_foggy',
    'world_rainy',
    'physics_low_gravity',
    'hud_disable',
    'hud_upside_down'
}

function TriggerSyncedChaosEffect(effectId, duration)
    if not JourneySession.active then return end
    
    local timestamp = os.time()
    local count = 0
    
    for source, playerData in pairs(JourneySession.players) do
        count = count + 1
    end
    
    TriggerClientEvent('cougar:triggerChaosEffect', -1, effectId, duration, timestamp)
    
    print(string.format('^2[Chaos] Triggered "%s" for %d players (duration: %dms)^7', 
        effectId, count, duration))
end

Citizen.CreateThread(function()
    while true do
        Wait(chaosEffectInterval)
        
        if JourneySession.active and GetPlayerCount() > 0 then
            local effectId = allChaosEffects[math.random(#allChaosEffects)]
            local duration = 20000
            
            local multiplier = GetDifficultyMultiplier()
            if multiplier > 1.5 then
                if math.random() < 0.3 then
                    local effectId2 = allChaosEffects[math.random(#allChaosEffects)]
                    TriggerSyncedChaosEffect(effectId2, duration)
                end
            end
            
            TriggerSyncedChaosEffect(effectId, duration)
        end
    end
end)
```

***

## File 7: client/cl_main.lua

```lua
local journeyActive = false
local localCougars = {}
local teamDeaths = 0
local maxDeaths = 2

Citizen.CreateThread(function()
    AddRelationshipGroup('COUGAR')
    
    SetRelationshipBetweenGroups(5, GetHashKey('COUGAR'), GetHashKey('PLAYER'))
    SetRelationshipBetweenGroups(5, GetHashKey('PLAYER'), GetHashKey('COUGAR'))
    
    SetRelationshipBetweenGroups(1, GetHashKey('COUGAR'), GetHashKey('COUGAR'))
end)

RegisterNetEvent('cougar:journeyStarted')
AddEventHandler('cougar:journeyStarted', function()
    journeyActive = true
    teamDeaths = 0
    localCougars = {}
    
    SetNotificationTextEntry('STRING')
    AddTextComponentString('~g~Journey started! Survive to the other side!')
    DrawNotification(false, true)
    
    print('^2[Cougar Journey] Journey started^7')
end)

RegisterNetEvent('cougar:journeyStopped')
AddEventHandler('cougar:journeyStopped', function()
    journeyActive = false
    
    for netId, data in pairs(localCougars) do
        if data.attachedObj and DoesEntityExist(data.attachedObj) then
            DeleteEntity(data.attachedObj)
        end
    end
    
    localCougars = {}
    
    SetNotificationTextEntry('STRING')
    AddTextComponentString('~r~Journey ended!')
    DrawNotification(false, true)
end)

RegisterNetEvent('cougar:gameOver')
AddEventHandler('cougar:gameOver', function(reason)
    if reason == 'deaths' then
        SetNotificationTextEntry('STRING')
        AddTextComponentString('~r~GAME OVER! Too many deaths!')
        DrawNotification(false, true)
    end
end)

RegisterNetEvent('cougar:deathUpdate')
AddEventHandler('cougar:deathUpdate', function(deaths, max)
    teamDeaths = deaths
    maxDeaths = max
    
    SetNotificationTextEntry('STRING')
    AddTextComponentString('~o~Team death! ' .. deaths .. '/' .. max .. ' deaths used.')
    DrawNotification(false, true)
end)

print('^2[Cougar Journey] Client script loaded^7')
```

***

## File 8: client/cl_journey.lua

```lua
Citizen.CreateThread(function()
    while true do
        Wait(Config.PositionUpdateRate)
        
        if journeyActive then
            local playerPed = PlayerPedId()
            local coords = GetEntityCoords(playerPed)
            
            TriggerServerEvent('cougar:updatePosition', vec3(coords.x, coords.y, coords.z))
        end
    end
end)

Citizen.CreateThread(function()
    while true do
        Wait(500)
        
        if journeyActive then
            local playerPed = PlayerPedId()
            
            if IsEntityDead(playerPed) then
                TriggerServerEvent('cougar:playerDied')
                
                while IsEntityDead(playerPed) do
                    Wait(100)
                end
            end
        end
    end
end)

RegisterNetEvent('cougar:spawned')
AddEventHandler('cougar:spawned', function(netId, typeName, typeData)
    local cougar = NetToPed(netId)
    
    local timeout = 0
    while not DoesEntityExist(cougar) and timeout < 50 do
        Wait(100)
        cougar = NetToPed(netId)
        timeout = timeout + 1
    end
    
    if not DoesEntityExist(cougar) then
        print('^1[Cougar Journey] Failed to sync cougar ' .. netId .. '^7')
        return
    end
    
    localCougars[netId] = {
        entity = cougar,
        type = typeName,
        attachedObj = nil
    }
    
    if typeData.visualObject then
        Citizen.CreateThread(function()
            local objHash = GetHashKey(typeData.visualObject)
            RequestModel(objHash)
            
            while not HasModelLoaded(objHash) do
                Wait(100)
            end
            
            local cougarCoords = GetEntityCoords(cougar)
            local obj = CreateObject(objHash, cougarCoords.x, cougarCoords.y, cougarCoords.z, false, false, false)
            
            AttachEntityToEntity(
                obj,
                cougar,
                GetPedBoneIndex(cougar, 31086),
                0.0, 0.0, 0.3,
                0.0, 0.0, 0.0,
                false,
                false,
                false,
                false,
                2,
                true
            )
            
            localCougars[netId].attachedObj = obj
            
            SetModelAsNoLongerNeeded(objHash)
        end)
    end
    
    if typeName == 'beeper' then
        Citizen.CreateThread(function()
            local beepStart = GetGameTimer()
            local beepDuration = typeData.beepTime * 1000
            local beepInterval = 1000
            local lastBeep = 0
            
            while DoesEntityExist(cougar) and not IsEntityDead(cougar) do
                Wait(100)
                
                local elapsed = GetGameTimer() - beepStart
                
                if elapsed - lastBeep >= beepInterval then
                    local coords = GetEntityCoords(cougar)
                    PlaySoundFromCoord(-1, "TIMER_STOP", coords.x, coords.y, coords.z, "HUD_MINI_GAME_SOUNDSET", false, 15.0, false)
                    lastBeep = elapsed
                end
                
                if elapsed >= beepDuration then
                    TriggerServerEvent('cougar:beeperExplode', netId)
                    break
                end
            end
        end)
    end
end)

Citizen.CreateThread(function()
    while true do
        Wait(0)
        
        if journeyActive then
            local playerPed = PlayerPedId()
            
            for netId, data in pairs(localCougars) do
                if DoesEntityExist(data.entity) and not IsEntityDead(data.entity) then
                    local cougarCoords = GetEntityCoords(data.entity)
                    local playerCoords = GetEntityCoords(playerPed)
                    local distance = #(cougarCoords - playerCoords)
                    
                    if distance < 2.0 then
                        local typeData = Config.CougarTypes[data.type]
                        
                        if data.type == 'blueBall' and typeData.knockback then
                            ApplyForceToEntity(
                                playerPed,
                                1,
                                typeData.knockback.x,
                                typeData.knockback.y,
                                typeData.knockback.z,
                                0.0, 0.0, 0.0,
                                0,
                                false, true, true, false, false, true
                            )
                            Wait(1000)
                        end
                        
                        if data.type == 'purpleBall' and typeData.knockback then
                            local velocity = GetEntityVelocity(playerPed)
                            ApplyForceToEntity(
                                playerPed,
                                1,
                                velocity.x + typeData.knockback.x,
                                velocity.y + typeData.knockback.y,
                                velocity.z + typeData.knockback.z,
                                0.0, 0.0, 0.0,
                                0,
                                false, true, true, false, false, true
                            )
                            Wait(1000)
                        end
                        
                        if data.type == 'barrier' and typeData.invertVelocity then
                            local velocity = GetEntityVelocity(playerPed)
                            SetEntityVelocity(playerPed, -velocity.x, -velocity.y, velocity.z)
                            Wait(500)
                        end
                        
                        if data.type == 'beeper' then
                            TriggerServerEvent('cougar:beeperExplode', netId)
                            Wait(1000)
                        end
                    end
                end
            end
        end
    end
end)

Citizen.CreateThread(function()
    while true do
        Wait(1000)
        
        if journeyActive then
            for netId, data in pairs(localCougars) do
                if DoesEntityExist(data.entity) and IsEntityDead(data.entity) then
                    TriggerServerEvent('cougar:died', netId)
                    
                    if data.attachedObj and DoesEntityExist(data.attachedObj) then
                        DeleteEntity(data.attachedObj)
                    end
                    
                    localCougars[netId] = nil
                end
            end
        end
    end
end)

RegisterNetEvent('cougar:spawnLoot')
AddEventHandler('cougar:spawnLoot', function(position, dropData)
    if dropData.type == 'health' then
        local pickup = CreatePickupRotate(
            GetHashKey('PICKUP_HEALTH_STANDARD'),
            position.x, position.y, position.z,
            0.0, 0.0, 0.0,
            512,
            dropData.amount,
            2,
            true,
            GetHashKey('prop_ld_health_pack')
        )
    elseif dropData.type == 'armor' then
        local pickup = CreatePickupRotate(
            GetHashKey('PICKUP_ARMOUR_STANDARD'),
            position.x, position.y, position.z,
            0.0, 0.0, 0.0,
            512,
            dropData.amount,
            2,
            true,
            GetHashKey('prop_armour_pickup')
        )
    elseif dropData.type == 'ammo' then
        local playerPed = PlayerPedId()
        local weapon = GetSelectedPedWeapon(playerPed)
        
        AddAmmoToPed(playerPed, weapon, dropData.amount)
        
        SetNotificationTextEntry('STRING')
        AddTextComponentString('~g~+' .. dropData.amount .. ' ammo')
        DrawNotification(false, true)
    end
end)
```

***

## File 9: client/cl_hud.lua

```lua
Citizen.CreateThread(function()
    while true do
        Wait(0)
        
        if journeyActive then
            SetScriptGfxAlign(82, 84)
            SetScriptGfxAlignParams(0.0, 0.0, 0.0, 0.0)
            
            local bgWidth = 0.15
            local bgHeight = 0.08
            local bgX = 1.0 - bgWidth / 2 - 0.01
            local bgY = bgHeight / 2 + 0.01
            
            DrawRect(bgX, bgY, bgWidth, bgHeight, 0, 0, 0, 150)
            
            SetTextFont(4)
            SetTextProportional(false)
            SetTextScale(0.35, 0.35)
            SetTextColour(255, 255, 255, 255)
            SetTextDropshadow(0, 0, 0, 0, 255)
            SetTextEdge(1, 0, 0, 0, 255)
            SetTextEntry("STRING")
            
            local deathText = string.format("Deaths: %d/%d", teamDeaths, maxDeaths)
            local deathColor = teamDeaths >= maxDeaths and "~r~" or (teamDeaths >= maxDeaths - 1 and "~o~" or "~w~")
            AddTextComponentString(deathColor .. deathText)
            
            DrawText(bgX - bgWidth / 2 + 0.01, bgY - bgHeight / 2 + 0.01)
            
            local aliveCougars = 0
            for netId, data in pairs(localCougars) do
                if DoesEntityExist(data.entity) and not IsEntityDead(data.entity) then
                    aliveCougars = aliveCougars + 1
                end
            end
            
            SetTextEntry("STRING")
            local cougarText = string.format("Cougars: %d", aliveCougars)
            AddTextComponentString("~w~" .. cougarText)
            DrawText(bgX - bgWidth / 2 + 0.01, bgY - bgHeight / 2 + 0.03)
            
            ResetScriptGfxAlign()
        end
    end
end)

Citizen.CreateThread(function()
    while true do
        Wait(5000)
        
        if journeyActive then
            TriggerServerEvent('cougar:requestDistance')
        end
    end
end)

RegisterNetEvent('cougar:distanceUpdate')
AddEventHandler('cougar:distanceUpdate', function(distanceKm)
    SetNotificationTextEntry('STRING')
    AddTextComponentString(string.format('~b~Distance: %.2f km', distanceKm))
    DrawNotification(false, true)
end)
```

***

## File 10: client/cl_chaos.lua

```lua
Citizen.CreateThread(function()
    Wait(2000)
    
    SendNUIMessage({
        action = 'setPort',
        port = Config.ChaosPort
    })
    
    if Config.ChaosDebug then
        SendNUIMessage({
            action = 'setDebug',
            enabled = true
        })
    end
    
    print('^2[Chaos] NUI configured with port ' .. Config.ChaosPort .. '^7')
end)

RegisterNUICallback('chaosResponse', function(data, cb)
    if data.success then
        if Config.ChaosDebug then
            print('^2[Chaos] Effect triggered: ' .. data.effectId .. '^7')
        end
    else
        print('^1[Chaos] Effect failed: ' .. data.effectId .. ' - ' .. tostring(data.error) .. '^7')
    end
    
    cb('ok')
end)

RegisterNetEvent('cougar:triggerChaosEffect')
AddEventHandler('cougar:triggerChaosEffect', function(effectId, duration, timestamp)
    SendNUIMessage({
        action = 'triggerEffect',
        effectId = effectId,
        duration = duration,
        timestamp = timestamp
    })
    
    local effectName = effectId:gsub('_', ' '):gsub("(%a)([%w_']*)", function(first, rest)
        return first:upper()..rest:lower()
    end)
    
    SetNotificationTextEntry('STRING')
    AddTextComponentString('~p~[CHAOS] ' .. effectName)
    DrawNotification(false, true)
end)

RegisterCommand('testchaos', function()
    SendNUIMessage({
        action = 'testConnection'
    })
end, false)

RegisterCommand('chaosdebug', function()
    Config.ChaosDebug = not Config.ChaosDebug
    
    SendNUIMessage({
        action = 'setDebug',
        enabled = Config.ChaosDebug
    })
    
    print('^2[Chaos] Debug mode: ' .. tostring(Config.ChaosDebug) .. '^7')
end, false)

print('^2[Cougar Journey] Chaos integration loaded^7')
```

***

## File 11: html/index.html

**(Full HTML with CORS, retry, debug - see previous response for complete 300+ line code)**

Due to length, the complete HTML is in my previous message. It includes:
- Connection monitoring
- CORS-enabled fetch
- Retry logic
- Debug console
- Visual status indicator

***

# PART 2: CHAOS MOD V INTEGRATION

## What You Need to Build

The Chaos Mod V `.asi` file with HTTP server support.

## Directory Structure

```
ChaosModV/
├── ChaosMod/
│   ├── ExternalTrigger.h       (NEW)
│   ├── ExternalTrigger.cpp     (NEW)
│   ├── EffectDatabase.h        (NEW)
│   ├── EffectDatabase.cpp      (NEW - YOU FILL)
│   ├── Main.cpp                (MODIFIED)
│   └── [... existing files ...]
├── vendor/
│   ├── httplib/
│   │   └── httplib.h           (DOWNLOAD)
│   └── nlohmann/
│       └── json.hpp            (DOWNLOAD)
└── config.ini                  (NEW)
```

***

## Step 1: Download Dependencies

```powershell
# Create vendor folders
mkdir vendor\httplib
mkdir vendor\nlohmann

# Download httplib
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/yhirose/cpp-httplib/master/httplib.h" -OutFile "vendor\httplib\httplib.h"

# Download nlohmann/json
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp" -OutFile "vendor\nlohmann\json.hpp"
```

***

## Step 2: Add New Files

**(See previous responses for complete code of these files)**

- `ChaosMod/ExternalTrigger.h`
- `ChaosMod/ExternalTrigger.cpp` (with CORS support)
- `ChaosMod/EffectDatabase.h`
- `ChaosMod/EffectDatabase.cpp` (template - needs filling)
- `config.ini`

***

## Step 3: Modify Main.cpp

Find the initialization function and add:

```cpp
#include "ExternalTrigger.h"
#include "EffectDatabase.h"

// In initialization:
EffectDatabase::InitializeRegistry();
ExternalTrigger::Initialize(8080);

// In shutdown:
ExternalTrigger::Shutdown();
```

***

## Step 4: Generate EffectDatabase.cpp

Use the Python script (see build scripts document):

```powershell
python tools\generate_effect_database.py "C:\path\to\ChaosModV"
```

This creates a complete `EffectDatabase.cpp` with all 350+ effect mappings.

***

## Step 5: Build with Visual Studio

**Option A: Use Existing .sln**

1. Open `ChaosModV.sln`
2. Find **ChaosMod** project (C++, not ConfigApp)
3. Right-click ChaosMod → Add → Existing Item
4. Add your 4 new files
5. Right-click ChaosMod → Properties:
   - C/C++ → General → Additional Include Directories
   - Add: `$(ProjectDir)..\vendor\httplib;$(ProjectDir)..\vendor\nlohmann`
6. Select **Release** + **x64**
7. Right-click ChaosMod → Build

**Output:** `bin\Release\ChaosMod.asi`

***

# PART 3: BUILD INSTRUCTIONS

## Prerequisites

- Visual Studio 2022 (Community Edition)
- Python 3.x (for generator script)
- FiveM Server
- GTA V with ScriptHookV

## Build Order

1. ✅ **FiveM Resource** - Copy files, configure ports
2. ⚠️ **Chaos Mod V** - Download deps, add files, build .asi
3. ⚠️ **Generate Effects** - Run Python script
4. ⚠️ **Deploy** - Install .asi to GTA V

***

# PART 4: TESTING GUIDE

## Test Phase 1: FiveM Only (No Chaos Mod)

**What works:**
- Journey start/stop
- Cougar spawning
- Death tracking
- Rubber band
- HUD
- Cropduster

**Commands:**
```
/startjourney
/stopjourney
/chaosdebug
```

**Expected:** Cougars spawn, journey works, but chaos effects don't apply (red dot in NUI).

***

## Test Phase 2: With Chaos Mod

**Prerequisites:**
- ChaosMod.asi in `GTA V/scripts/`
- config.ini with `Enabled=1`, `Port=8080`
- FiveM resource running

**Expected:**
- Green dot in NUI (connected)
- Chaos effects actually apply
- All players get same effect simultaneously

***

# PART 5: TROUBLESHOOTING

## FiveM Errors

### "attempt to index a nil value (global 'Config')"

**Fix:** Add `Config = Config or {}` to top of `config.lua`

### Cougars not spawning

**Check:**
- Journey started? (`/startjourney`)
- OneSync enabled in server.cfg?
- Server console errors?

### NUI showing "Disconnected"

**Expected** until Chaos Mod is built and running.

***

## Chaos Mod Build Errors

### "Cannot find httplib.h"

**Fix:**
```powershell
mkdir vendor\httplib
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/yhirose/cpp-httplib/master/httplib.h" -OutFile "vendor\httplib\httplib.h"
```

### "Unresolved external symbols"

**Cause:** EffectDatabase.cpp is empty or incomplete.

**Fix:** Run Python generator or manually fill effect mappings.

### "ConfigApp built instead of ChaosMod"

**Fix:** Right-click **ChaosMod** project (C++, not C#) → Build

***

# 🎯 CURRENT STATUS CHECKLIST

## What's Done ✅

- [x] FiveM server scripts (all .lua files)
- [x] FiveM client scripts (all .lua files)
- [x] NUI interface (HTML with CORS/retry)
- [x] Chaos Mod HTTP server code (C++)
- [x] Build scripts (Python generator)
- [x] Documentation

## What You Need To Do ⚠️

- [ ] Download httplib.h and json.hpp
- [ ] Add new files to ChaosMod project
- [ ] Run Python generator for EffectDatabase.cpp
- [ ] Build ChaosMod.asi
- [ ] Install to GTA V
- [ ] Test with 4 players

***

# 📞 NEXT STEPS

**Right now, do this:**

1. Download the two vendor dependencies (httplib + json)
2. Open ChaosModV.sln
3. Add the 4 new files to ChaosMod project
4. Run the Python generator
5. Build ChaosMod (C++ project, Release x64)
6. Copy `bin\Release\ChaosMod.asi` to `GTA V\scripts\`
7. Start GTA V, connect to FiveM, run `/startjourney`

**That's it. This document has everything you need.** 🔥
--[[
  FiveM Natives Documentation
  Total Natives: 6416
  Generated: 2025-10-27 18:50:25
]]


-- ========== APP ==========

--- APP_CLEAR_BLOCK
-- APP_CLEAR_BLOCK()

--- APP_CLOSE_APP
-- APP_CLOSE_APP()

--- APP_CLOSE_BLOCK
-- APP_CLOSE_BLOCK()

--- APP_DATA_VALID
-- APP_DATA_VALID()

--- APP_DELETE_APP_DATA
-- @param appName char*
-- APP_DELETE_APP_DATA(appName)

--- APP_GET_DELETED_FILE_STATUS
-- APP_GET_DELETED_FILE_STATUS()

--- APP_GET_FLOAT
-- @param property char*
-- APP_GET_FLOAT(property)

--- APP_GET_INT
-- @param property char*
-- APP_GET_INT(property)

--- APP_GET_STRING
-- @param property char*
-- APP_GET_STRING(property)

--- APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT
-- APP_HAS_LINKED_SOCIAL_CLUB_ACCOUNT()

--- APP_HAS_SYNCED_DATA
-- @param appName char*
-- APP_HAS_SYNCED_DATA(appName)

--- APP_SAVE_DATA
-- APP_SAVE_DATA()

--- APP_SET_APP
-- ```
Called in the gamescripts like:  
APP::APP_SET_APP("car");  
APP::APP_SET_APP("dog");  
```
-- @param appName char*
-- APP_SET_APP(appName)

--- APP_SET_BLOCK
-- @param blockName char*
-- APP_SET_BLOCK(blockName)

--- APP_SET_FLOAT
-- @param property char*
-- @param value float
-- APP_SET_FLOAT(property, value)

--- APP_SET_INT
-- @param property char*
-- @param value int
-- APP_SET_INT(property, value)

--- APP_SET_STRING
-- @param property char*
-- @param value char*
-- APP_SET_STRING(property, value)


-- ========== AUDIO ==========

--- 0x02E93C796ABD3A97
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 BOOL
-- 0x02E93C796ABD3A97(p0)

--- 0x11579D940949C49E
-- @param p0 Any
-- 0x11579D940949C49E(p0)

--- 0x19AF7ED9B9D23058
-- 0x19AF7ED9B9D23058()

--- 0x2DD39BF3E2F9C47F
-- ```
NativeDB Introduced: v463
```
-- 0x2DD39BF3E2F9C47F()

--- 0x43FA0DFC5DF87815
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x43FA0DFC5DF87815(vehicle, p1)

--- 0x55ECF4D13D9903B0
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x55ECF4D13D9903B0(p0, p1, p2, p3)

--- 0x58BB377BEC7CD5F4
-- @param p0 BOOL
-- @param p1 BOOL
-- 0x58BB377BEC7CD5F4(p0, p1)

--- 0x5B9853296731E88D
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- 0x5B9853296731E88D(p0, p1, p2, p3, p4, p5)

--- 0x8BF907833BE275DE
-- @param p0 float
-- @param p1 float
-- 0x8BF907833BE275DE(p0, p1)

--- 0x97FFB4ADEED08066
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- 0x97FFB4ADEED08066(p0, p1)

--- 0x9AC92EED5E4793AB
-- 0x9AC92EED5E4793AB()

--- 0x9BD7BD55E4533183
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x9BD7BD55E4533183(p0, p1, p2)

--- 0x9D3AF56E94C9AE98
-- ```
SET_H*
```
-- @param vehicle Vehicle
-- @param p1 float
-- 0x9D3AF56E94C9AE98(vehicle, p1)

--- 0xB542DE8C3D1CB210
-- @param p0 BOOL
-- 0xB542DE8C3D1CB210(p0)

--- 0xBEF34B1D9624D5DD
-- @param p0 BOOL
-- 0xBEF34B1D9624D5DD(p0)

--- 0xC1805D05E6D4FE10
-- ```
SET_VEH*
```
-- @param vehicle Vehicle
-- 0xC1805D05E6D4FE10(vehicle)

--- 0xDD6BCF9E94425DF9
-- ```
Tune Backwards... ?
SET_RADIO_*
```
-- 0xDD6BCF9E94425DF9()

--- 0xF3365489E0DD50F9
-- ```
SET_VEHICLE_*
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0xF3365489E0DD50F9(vehicle, toggle)

--- 0xFF266D1D0EB1195D
-- ```
Tune Forward... ?
SET_RADIO_*
```
-- 0xFF266D1D0EB1195D()

--- ACTIVATE_AUDIO_SLOWMO_MODE
-- Below is a list of modes and their respective hashes.

| Mode (string)               | Hash               |
|-----------------------------|--------------------|
| SLOWMO_BIG_SCORE_JUMP       | 0x2B981B0C         |
| JSH_EXIT_TUNNEL_SLOWMO      | 0x2562AA6          |
| SLOW_MO_METH_HOUSE_RAYFIRE  | 0xDB9E1909         |
| SLOWMO_FIB4\_TRUCK_SMASH     | 0x9E144347         |
| SLOWMO_PROLOGUE_VAULT       | 0xEA2E68E1         |
| SLOWMO_T1\_RAYFIRE_EXPLOSION | 0xD6D358F3         |
| SLOWMO_T1\_TRAILER_SMASH     | 0xBE607345         |
| BARRY\_01\_SLOWMO             | 0xD59540D4         |
| BARRY\_02\_SLOWMO             | 0x12F140B3         |
| SLOWMO_EXTREME\_04           | 0xF562EA50         |
| NIGEL\_02\_SLOWMO_SETTING     | 0x384689B0         |
-- @param mode char* - A string indicating the audio slow motion mode to use, *see the table*.
-- ACTIVATE_AUDIO_SLOWMO_MODE(mode)

--- ADD_ENTITY_TO_AUDIO_MIX_GROUP
-- ```
All found occurrences in b678d:
pastebin.com/ceu67jz8
```
-- @param entity Entity
-- @param groupName char*
-- @param fadeIn float
-- ADD_ENTITY_TO_AUDIO_MIX_GROUP(entity, groupName, fadeIn)

--- ADD_LINE_TO_CONVERSATION
-- ```cpp
enum eAudibility {
	AUD_AUDIBILITY_NORMAL = 0,
	AUD_AUDIBILITY_CLEAR = 1,
	AUD_AUDIBILITY_CRITICAL = 2,
	AUD_AUDIBILITY_LEAD_IN = 3
}
```
-- @param speakerConversationIndex int
-- @param context char*
-- @param subtitle char*
-- @param listenerNumber int
-- @param volumeType int
-- @param isRandom BOOL
-- @param interruptible BOOL
-- @param ducksRadio BOOL
-- @param ducksScore BOOL
-- @param audibility int - See eAudibility
-- @param headset BOOL
-- @param dontInterruptForSpecialAbility BOOL
-- @param isPadSpeakerRoute BOOL
-- ADD_LINE_TO_CONVERSATION(speakerConversationIndex, context, subtitle, listenerNumber, volumeType, isRandom, interruptible, ducksRadio, ducksScore, audibility, headset, dontInterruptForSpecialAbility, isPadSpeakerRoute)

--- ADD_PED_TO_CONVERSATION
-- @param speakerConversationIndex int
-- @param ped Ped
-- @param voiceName char*
-- ADD_PED_TO_CONVERSATION(speakerConversationIndex, ped, voiceName)

--- AUDIO_IS_SCRIPTED_MUSIC_PLAYING
-- AUDIO_IS_SCRIPTED_MUSIC_PLAYING()

--- BLIP_SIREN
-- Plays a siren blip from the vehicle when you double press the horn key.

This only works on vehicles with sirens.
-- @param vehicle Vehicle
-- BLIP_SIREN(vehicle)

--- BLOCK_ALL_SPEECH_FROM_PED
-- Blocks *all* speech playing on the given ped, including speech triggered by natives such as [PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE](#\_0x3523634255FC3318)

The flag itself is not synced, it must be called on each machine that wishes to suppress the speech.

The `SuppressOutgoingNetworkSpeech` flag can be set to `false` if you want speech triggered locally through `PLAY_PED_AMBIENT_SPEECH_*` related native calls to still be audible on remote machines, even though it was blocked on the local one.
-- @param ped Ped
-- @param shouldBlock BOOL
-- @param suppressOutgoingNetworkSpeech BOOL - Defaults to `true`.
-- BLOCK_ALL_SPEECH_FROM_PED(ped, shouldBlock, suppressOutgoingNetworkSpeech)

--- BLOCK_DEATH_JINGLE
-- @param blocked BOOL - Sets if the death jingle can play when a player dies or not
-- BLOCK_DEATH_JINGLE(blocked)

--- BLOCK_SPEECH_CONTEXT_GROUP
-- ```cpp
enum eAudContextBlockTarget {
	AUD_CONTEXT_BLOCK_PLAYER = 0,
	AUD_CONTEXT_BLOCK_NPCS = 1,
	AUD_CONTEXT_BLOCK_BUDDYS = 2,
	AUD_CONTEXT_BLOCK_EVERYONE = 3,

	AUD_CONTEXT_BLOCK_TARGETS_TOTAL
}
```

Stop a certain group of peds from using a certain group of speech contexts.

Note that the block will be automatically removed when the calling script finishes
-- @param groupName char* - the name of the context group to be blocked
-- @param contextBlockTarget int - the group of peds that should be used (refer to eAudContextBlockTarget)
-- BLOCK_SPEECH_CONTEXT_GROUP(groupName, contextBlockTarget)

--- CANCEL_ALL_POLICE_REPORTS
-- CANCEL_ALL_POLICE_REPORTS()

--- CANCEL_MUSIC_EVENT
-- ```
All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
```
-- @param eventName char* - the name of the event to cancel
-- CANCEL_MUSIC_EVENT(eventName)

--- CAN_VEHICLE_RECEIVE_CB_RADIO
-- @param vehicle Vehicle
-- CAN_VEHICLE_RECEIVE_CB_RADIO(vehicle)

--- CLEAR_ALL_BROKEN_GLASS
-- CLEAR_ALL_BROKEN_GLASS()

--- CLEAR_AMBIENT_ZONE_LIST_STATE
-- Resets the list of ambients zones enabled/disabled status to its value before it was modified by this script.

Default behaviour is that any state change only gets applied once the player leaves the zone.
-- @param zoneListName char* - The zone name to clear
-- @param forceUpdate BOOL - Whether ot not to force a zone to become disabled even if its currently active
-- CLEAR_AMBIENT_ZONE_LIST_STATE(zoneListName, forceUpdate)

--- CLEAR_AMBIENT_ZONE_STATE
-- Resets the ambient zone enabled/disabled status to its value before it was modified by this script

Default behaviour is that any state change only gets applied once the player leaves the zone.
-- @param zoneName char* - the zone name to clear
-- @param forceUpdate BOOL - Whether ot not to force a zone to become disabled even if its currently active
-- CLEAR_AMBIENT_ZONE_STATE(zoneName, forceUpdate)

--- CLEAR_CUSTOM_RADIO_TRACK_LIST
-- Clears the previously queued custom track lost for the given radio station.
-- @param radioStation char*
-- CLEAR_CUSTOM_RADIO_TRACK_LIST(radioStation)

--- CREATE_NEW_SCRIPTED_CONVERSATION
-- CREATE_NEW_SCRIPTED_CONVERSATION()

--- DEACTIVATE_AUDIO_SLOWMO_MODE
-- Deactivates the named slowmo mode.
-- @param mode char* - name of the mode to deactivate
-- DEACTIVATE_AUDIO_SLOWMO_MODE(mode)

--- DISABLE_PED_PAIN_AUDIO
-- @param ped Ped
-- @param shouldDisable BOOL
-- DISABLE_PED_PAIN_AUDIO(ped, shouldDisable)

--- DISTANT_COP_CAR_SIRENS
-- Toggles fake distant siren sounds
-- @param shouldPlay BOOL - True will play distand sounds, false will disable them.
-- DISTANT_COP_CAR_SIRENS(shouldPlay)

--- DOES_CONTEXT_EXIST_FOR_THIS_PED
-- Checks if the context exists for the ped, searching through the voices in its PedVoiceGroup.

The final argument can be set to true to allow searching in backup PVGs
-- @param ped Ped
-- @param speechName char*
-- @param allowBackupPVGs BOOL
-- DOES_CONTEXT_EXIST_FOR_THIS_PED(ped, speechName, allowBackupPVGs)

--- DOES_PLAYER_VEH_HAVE_RADIO
-- DOES_PLAYER_VEH_HAVE_RADIO()

--- ENABLE_STALL_WARNING_SOUNDS
-- Enable or disable the plane stall warning sounds
-- @param vehicle Vehicle
-- @param enable BOOL
-- ENABLE_STALL_WARNING_SOUNDS(vehicle, enable)

--- ENABLE_STUNT_JUMP_AUDIO
-- Enable the stunt jump audio detection code

This native is meant to be called per-frame for as long as detection is wanted.
-- ENABLE_STUNT_JUMP_AUDIO()

--- ENABLE_VEHICLE_EXHAUST_POPS
-- Enable or disable exhaust pops on the given vehicle.
-- @param vehicle Vehicle
-- @param toggle BOOL - Enables or disables exaust pops.
-- ENABLE_VEHICLE_EXHAUST_POPS(vehicle, toggle)

--- ENABLE_VEHICLE_FANBELT_DAMAGE
-- @param vehicle Vehicle
-- @param enableFanbeltDamage BOOL - Enables fanbelt damage
-- ENABLE_VEHICLE_FANBELT_DAMAGE(vehicle, enableFanbeltDamage)

--- FIND_RADIO_STATION_INDEX
-- @param stationNameHash int - the station name hash to search for
-- FIND_RADIO_STATION_INDEX(stationNameHash)

--- FORCE_MUSIC_TRACK_LIST
-- Forces the chosen station to paly the given music track list. All other music track lists will be locked.
-- @param radioStation char*
-- @param trackListName char*
-- @param timeOffsetMilliseconds int
-- FORCE_MUSIC_TRACK_LIST(radioStation, trackListName, timeOffsetMilliseconds)

--- FORCE_PED_PANIC_WALLA
-- Forces the ambient peds into their panic walla state
-- FORCE_PED_PANIC_WALLA()

--- FORCE_USE_AUDIO_GAME_OBJECT
-- This native sets the audio to the specific vehicle hash's audioNameHash.
-- @param vehicle Vehicle
-- @param gameObjectName char*
-- FORCE_USE_AUDIO_GAME_OBJECT(vehicle, gameObjectName)

--- FREEZE_MICROPHONE
-- Allows script to freeze the microphone for a single frame, mantaining its current transform/settings.
This native should be called every frame you want to keep the microphone frozen, when you stop calling it it will automatically unfreeze
-- FREEZE_MICROPHONE()

--- FREEZE_RADIO_STATION
-- @param radioStation char*
-- FREEZE_RADIO_STATION(radioStation)

--- GET_AMBIENT_VOICE_NAME_HASH
-- @param ped Ped
-- GET_AMBIENT_VOICE_NAME_HASH(ped)

--- GET_AUDIBLE_MUSIC_TRACK_TEXT_ID
-- GET_AUDIBLE_MUSIC_TRACK_TEXT_ID()

--- GET_CURRENT_SCRIPTED_CONVERSATION_LINE
-- GET_CURRENT_SCRIPTED_CONVERSATION_LINE()

--- GET_CURRENT_TRACK_SOUND_NAME
-- @param radioStationName char*
-- GET_CURRENT_TRACK_SOUND_NAME(radioStationName)

--- GET_IS_PRELOADED_CONVERSATION_READY
-- GET_IS_PRELOADED_CONVERSATION_READY()

--- GET_MUSIC_PLAYTIME
-- GET_MUSIC_PLAYTIME()

--- GET_MUSIC_VOL_SLIDER
-- GET_MUSIC_VOL_SLIDER()

--- GET_NETWORK_ID_FROM_SOUND_ID
-- @param soundId int
-- GET_NETWORK_ID_FROM_SOUND_ID(soundId)

--- GET_NEXT_AUDIBLE_BEAT
-- @param timeInSeconds float* - time in seconds until the start of the next beat
-- @param bpm float* - current tempo in beats per minute,
-- @param beatNum int* - integer beat within the bar
-- GET_NEXT_AUDIBLE_BEAT(timeInSeconds, bpm, beatNum)

--- GET_NUM_UNLOCKED_RADIO_STATIONS
-- GET_NUM_UNLOCKED_RADIO_STATIONS()

--- GET_PLAYER_RADIO_STATION_GENRE
-- GET_PLAYER_RADIO_STATION_GENRE()

--- GET_PLAYER_RADIO_STATION_INDEX
-- GET_PLAYER_RADIO_STATION_INDEX()

--- GET_PLAYER_RADIO_STATION_NAME
-- GET_PLAYER_RADIO_STATION_NAME()

--- GET_RADIO_STATION_NAME
-- @param stationIndex int
-- GET_RADIO_STATION_NAME(stationIndex)

--- GET_SOUND_ID
-- If a playback function has a soundId field but the sound doesn't need to be altered after triggering then pass a value of -1 for fire-and-forget playback, rather than getting a soundId.

SoundId's can be reused, without needing to release them and grab a new one.

If a sound's finished playing, you can reuse its SoundId to kick off another one.

If the sound's not finished playing, it'll be stopped first (fading out or whatever is set up in RAVE by the sound designer), and the new one kicked off; usually it is safer to just get a new SoundId.

SoundId's are not automatically cleaned up, you must use [RELEASE_SOUND_ID](#\_0x353FC880830B88FA) after you've finished using them to allow the engine to recycle the sound id.
-- GET_SOUND_ID()

--- GET_SOUND_ID_FROM_NETWORK_ID
-- Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#\_0x2DE3F0A134FFBC0D).
-- @param netId int - Network ID of sound.
-- GET_SOUND_ID_FROM_NETWORK_ID(netId)

--- GET_STREAM_PLAY_TIME
-- GET_STREAM_PLAY_TIME()

--- GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE
-- @param textLabel char* - all the text labels for filenames in `AmericanDialogueFiles.txt` appear to end with the letter 'A', it is the script's responsibility to add this 'A' before calling `GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE`.
-- GET_VARIATION_CHOSEN_FOR_SCRIPTED_LINE(textLabel)

--- GET_VEHICLE_DEFAULT_HORN
-- @param vehicle Vehicle
-- GET_VEHICLE_DEFAULT_HORN(vehicle)

--- GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS
-- @param vehicle Vehicle
-- GET_VEHICLE_DEFAULT_HORN_IGNORE_MODS(vehicle)

--- GET_VEHICLE_HORN_SOUND_INDEX
-- ```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle
-- GET_VEHICLE_HORN_SOUND_INDEX(vehicle)

--- HAS_LOADED_MP_DATA_SET
-- HAS_LOADED_MP_DATA_SET()

--- HAS_LOADED_SP_DATA_SET
-- HAS_LOADED_SP_DATA_SET()

--- HAS_SOUND_FINISHED
-- @param soundId int
-- HAS_SOUND_FINISHED(soundId)

--- HINT_AMBIENT_AUDIO_BANK
-- This native is marked as a deprecated native internally, use [HINT_SCRIPT_AUDIO_BANK](#\_0xFB380A29641EC31A) instead
-- @param bankName char*
-- @param bOverNetwork BOOL
-- HINT_AMBIENT_AUDIO_BANK(bankName, bOverNetwork)

--- HINT_MISSION_AUDIO_BANK
-- This is marked as a deprecated function internally, please use [HINT_SCRIPT_AUDIO_BANK](#\_0xFB380A29641EC31A) instead.
-- @param bankName char*
-- @param bOverNetwork BOOL
-- @param playerBits int
-- HINT_MISSION_AUDIO_BANK(bankName, bOverNetwork, playerBits)

--- HINT_SCRIPT_AUDIO_BANK
-- Hints that this bank would be good to load if there are free slots.
Does not guarentee loading of the bank, [REQUEST_SCRIPT_AUDIO_BANK](#\_0xFE02FFBED8CA9D99) MUST be used as normal before triggering sounds"

This native has a new argument on newer game builds:

*   **playerBits**: likely used to specifiy players to sync to as a bit mask (1 << (0-128))
-- @param bankName char*
-- @param bOverNetwork BOOL
-- HINT_SCRIPT_AUDIO_BANK(bankName, bOverNetwork)

--- INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY
-- @param audioName char*
-- @param entity Entity
-- INIT_SYNCH_SCENE_AUDIO_WITH_ENTITY(audioName, entity)

--- INIT_SYNCH_SCENE_AUDIO_WITH_POSITION
-- @param audioName char*
-- @param x float
-- @param y float
-- @param z float
-- INIT_SYNCH_SCENE_AUDIO_WITH_POSITION(audioName, x, y, z)

--- INTERRUPT_CONVERSATION
-- Handles conversation interrupts, using the code-side system for improved timing and to minimize unfriendly logic interactions.
-- @param interrupterPed Ped - the ped speaking
-- @param context char* - the line to use
-- @param voiceName char* - the voicename for the audio asset
-- INTERRUPT_CONVERSATION(interrupterPed, context, voiceName)

--- INTERRUPT_CONVERSATION_AND_PAUSE
-- Handles conversation interrupts and pauses, using the code-side system for improved timing and to minimize unfriendly logic interactions.
-- @param interrupterPed Ped - the ped speaking
-- @param context char* - the line to use
-- @param voiceName char* - the voicename for the audio asset
-- INTERRUPT_CONVERSATION_AND_PAUSE(interrupterPed, context, voiceName)

--- IS_ALARM_PLAYING
-- @param alarmName char*
-- IS_ALARM_PLAYING(alarmName)

--- IS_AMBIENT_SPEECH_DISABLED
-- @param ped Ped
-- IS_AMBIENT_SPEECH_DISABLED(ped)

--- IS_AMBIENT_SPEECH_PLAYING
-- @param ped Ped
-- IS_AMBIENT_SPEECH_PLAYING(ped)

--- IS_AMBIENT_ZONE_ENABLED
-- @param ambientZone char*
-- IS_AMBIENT_ZONE_ENABLED(ambientZone)

--- IS_ANIMAL_VOCALIZATION_PLAYING
-- @param pedHandle Ped
-- IS_ANIMAL_VOCALIZATION_PLAYING(pedHandle)

--- IS_ANY_POSITIONAL_SPEECH_PLAYING
-- Determines if any ped-independent, positionally-based scripted speech is currently active. This typically includes speech events triggered using [`PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE`](#\_0xED640017ED337E45).

```
NativeDB Introduced: v2189
```
-- IS_ANY_POSITIONAL_SPEECH_PLAYING()

--- IS_ANY_SPEECH_PLAYING
-- @param ped Ped
-- IS_ANY_SPEECH_PLAYING(ped)

--- IS_AUDIO_SCENE_ACTIVE
-- @param scene char* - the name of the scene
-- IS_AUDIO_SCENE_ACTIVE(scene)

--- IS_GAME_IN_CONTROL_OF_MUSIC
-- ```
Hardcoded to return 1  
```
-- IS_GAME_IN_CONTROL_OF_MUSIC()

--- IS_HORN_ACTIVE
-- @param vehicle Vehicle
-- IS_HORN_ACTIVE(vehicle)

--- IS_MISSION_COMPLETE_PLAYING
-- IS_MISSION_COMPLETE_PLAYING()

--- IS_MISSION_COMPLETE_READY_FOR_UI
-- IS_MISSION_COMPLETE_READY_FOR_UI()

--- IS_MISSION_NEWS_STORY_UNLOCKED
-- @param newsStory int
-- IS_MISSION_NEWS_STORY_UNLOCKED(newsStory)

--- IS_MOBILE_INTERFERENCE_ACTIVE
-- IS_MOBILE_INTERFERENCE_ACTIVE()

--- IS_MOBILE_PHONE_CALL_ONGOING
-- IS_MOBILE_PHONE_CALL_ONGOING()

--- IS_MOBILE_PHONE_RADIO_ACTIVE
-- IS_MOBILE_PHONE_RADIO_ACTIVE()

--- IS_MUSIC_ONESHOT_PLAYING
-- IS_MUSIC_ONESHOT_PLAYING()

--- IS_PED_IN_CURRENT_CONVERSATION
-- @param ped Ped
-- IS_PED_IN_CURRENT_CONVERSATION(ped)

--- IS_PED_RINGTONE_PLAYING
-- @param ped Ped
-- IS_PED_RINGTONE_PLAYING(ped)

--- IS_PLAYER_VEH_RADIO_ENABLE
-- IS_PLAYER_VEH_RADIO_ENABLE()

--- IS_RADIO_FADED_OUT
-- IS_RADIO_FADED_OUT()

--- IS_RADIO_RETUNING
-- IS_RADIO_RETUNING()

--- IS_RADIO_STATION_FAVOURITED
-- @param radioStation char*
-- IS_RADIO_STATION_FAVOURITED(radioStation)

--- IS_SCRIPTED_CONVERSATION_LOADED
-- IS_SCRIPTED_CONVERSATION_LOADED()

--- IS_SCRIPTED_CONVERSATION_ONGOING
-- IS_SCRIPTED_CONVERSATION_ONGOING()

--- IS_SCRIPTED_SPEECH_PLAYING
-- @param ped Ped
-- IS_SCRIPTED_SPEECH_PLAYING(ped)

--- IS_STREAM_PLAYING
-- IS_STREAM_PLAYING()

--- IS_VEHICLE_AUDIBLY_DAMAGED
-- @param vehicle Vehicle
-- IS_VEHICLE_AUDIBLY_DAMAGED(vehicle)

--- IS_VEHICLE_RADIO_ON
-- @param vehicle Vehicle - The vehicle to check
-- IS_VEHICLE_RADIO_ON(vehicle)

--- LINK_STATIC_EMITTER_TO_ENTITY
-- Links a static emitter to the given entity
-- @param emitterName char*
-- @param entity Entity
-- LINK_STATIC_EMITTER_TO_ENTITY(emitterName, entity)

--- LOAD_STREAM
-- Load in named stream. Optionally can specify a sound set which contains the sound specified by name.

Names for the streams can be found [here](https://gist.github.com/4mmonium/2bd2c9c54d6ca5cbdb7b156a82a3a85a), the list will be updated as more are found.
-- @param streamName char*
-- @param soundSet char* - an optional sound set, default is null
-- LOAD_STREAM(streamName, soundSet)

--- LOAD_STREAM_WITH_START_OFFSET
-- Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
-- @param streamName char*
-- @param startOffset int
-- @param soundSet char*
-- LOAD_STREAM_WITH_START_OFFSET(streamName, startOffset, soundSet)

--- LOCK_RADIO_STATION
-- This disables the radio station completely - it won't be selectable on the radio wheel or ever be heard coming from a vehicle/ambient emitter

```
NativeDB Introduced: v1493
```
-- @param radioStationName char*
-- @param toggle BOOL
-- LOCK_RADIO_STATION(radioStationName, toggle)

--- LOCK_RADIO_STATION_TRACK_LIST
-- @param radioStation char*
-- @param trackListName char*
-- LOCK_RADIO_STATION_TRACK_LIST(radioStation, trackListName)

--- OVERRIDE_MICROPHONE_SETTINGS
-- Sets audio flag "OverrideMicrophoneSettings"

Allows the script to ovverride the current microphone settings
-- @param hash Hash
-- @param toggle BOOL
-- OVERRIDE_MICROPHONE_SETTINGS(hash, toggle)

--- OVERRIDE_PLAYER_GROUND_MATERIAL
-- Sets the footstep tuning modes
-- @param overriddenMaterialHash Hash
-- @param scriptOverrides BOOL - True to override with the given overridenMaterialHash, false to stop overriding
-- OVERRIDE_PLAYER_GROUND_MATERIAL(overriddenMaterialHash, scriptOverrides)

--- OVERRIDE_TREVOR_RAGE
-- This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`

To clear the override use [RESET_TREVOR_RAGE](#\_0xE78503B10C4314E0)
-- @param voiceEffect char*
-- OVERRIDE_TREVOR_RAGE(voiceEffect)

--- OVERRIDE_UNDERWATER_STREAM
-- This native allows a scripter to override the current underwater stream.
It needs to be called before going into the water

It needs to also be called with OVERRIDE_UNDERWATER_STREAM("", false) in order to stop overriding.
-- @param streamName char*
-- @param override BOOL
-- OVERRIDE_UNDERWATER_STREAM(streamName, override)

--- OVERRIDE_VEH_HORN
-- Overrides the vehicle's horn hash.

When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#\_0xACB5DCCA1EC76840) will **not** return the 'overwritten' hash. It will still always return the default horn hash (same as [`GET_VEHICLE_DEFAULT_HORN`](#\_0x02165D55000219AC)).

List of possible hashes (found in decompiled scripts):

|        signed |     unsigned |      hex     |
|--------------:|-------------:|:------------:|
|  `1604822495` | `1604822495` | `0x5FA7A5DF` |
| `-1262465009` | `3032502287` | `0xB4C0500F` |
|  `-889553789` | `3405413507` | `0xCAFA7C83` |
| `-1557943086` | `2737024210` | `0xA323ACD2` |
| `-1318696617` | `2976270679` | `0xB1664957` |
|    `-7740003` | `4287227293` | `0xFF89E59D` |
| `-1815146967` | `2479820329` | `0x93CF0E29` |
|  `-339919356` | `3955047940` | `0xEBBD3E04` |
-- @param vehicle Vehicle - The vehicle you want to change the horn on.
-- @param override BOOL - Must be set to true. If set to false, the default horn hash will be restored.
-- @param hornHash int - A horn hash.
-- OVERRIDE_VEH_HORN(vehicle, override, hornHash)

--- PAUSE_SCRIPTED_CONVERSATION
-- To resume the conversation use [RESTART_SCRIPTED_CONVERSATION](#\_0x9AEB285D1818C9AC)
-- @param finishCurrentLine BOOL
-- PAUSE_SCRIPTED_CONVERSATION(finishCurrentLine)

--- PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE
-- @param speechName char*
-- @param voiceName char*
-- @param x float
-- @param y float
-- @param z float
-- @param speechParam char* - See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for params
-- PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE(speechName, voiceName, x, y, z, speechParam)

--- PLAY_ANIMAL_VOCALIZATION
-- ```cpp
enum eAudAnimalType {
	AUD_ANIMAL_NONE = -1,
	AUD_ANIMAL_BOAR = 0,
	AUD_ANIMAL_CHICKEN = 1,
	AUD_ANIMAL_DOG = 2,
	AUD_ANIMAL_DOG_ROTTWEILER = 3,
	AUD_ANIMAL_HORSE = 4,
	AUD_NUM_ANIMALS = 5
}
```
-- @param pedHandle Ped
-- @param animalType int
-- @param speechName char*
-- PLAY_ANIMAL_VOCALIZATION(pedHandle, animalType, speechName)

--- PLAY_DEFERRED_SOUND_FRONTEND
-- @param soundName char*
-- @param soundsetName char*
-- PLAY_DEFERRED_SOUND_FRONTEND(soundName, soundsetName)

--- PLAY_END_CREDITS_MUSIC
-- @param bActive BOOL
-- PLAY_END_CREDITS_MUSIC(bActive)

--- PLAY_MISSION_COMPLETE_AUDIO
-- ```
Called 38 times in the scripts. There are 5 different audioNames used.
 One unknown removed below.
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");
AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");
```
-- @param audioName char*
-- PLAY_MISSION_COMPLETE_AUDIO(audioName)

--- PLAY_PAIN
-- This native had a 4th parameter added in newer game builds
`syncOverNetwork` creates a `CPedPlayPainEvent` when set to true, by default this variable is false.

You won't be able to use this for clones (remote pedestrians that are not owned by you) or migrating peds if `syncOverNetwork` is set to true; it simply won't execute.

The `ped` should also have speech for this to work.

```cpp
enum eAudDamageReason {
	AUD_DAMAGE_REASON_DEFAULT = 0,
	AUD_DAMAGE_REASON_FALLING = 1,
	AUD_DAMAGE_REASON_SUPER_FALLING = 2,
	AUD_DAMAGE_REASON_SCREAM_PANIC = 3,
	AUD_DAMAGE_REASON_SCREAM_PANIC_SHORT = 4,
	AUD_DAMAGE_REASON_SCREAM_SCARED = 5,
	AUD_DAMAGE_REASON_SCREAM_SHOCKED = 6,
	AUD_DAMAGE_REASON_SCREAM_TERROR = 7,
	AUD_DAMAGE_REASON_ON_FIRE = 8,
	AUD_DAMAGE_REASON_DROWNING = 9,
	// drowning on the surface of water, after we time out
	AUD_DAMAGE_REASON_SURFACE_DROWNING = 10,
	AUD_DAMAGE_REASON_INHALE = 11,
	AUD_DAMAGE_REASON_EXHALE = 12,
	AUD_DAMAGE_REASON_POST_FALL_GRUNT = 13,
	AUD_DAMAGE_REASON_ENTERING_RAGDOLL_DEATH = 14,
	AUD_DAMAGE_REASON_EXPLOSION = 15,
	AUD_DAMAGE_REASON_MELEE = 16,
	AUD_DAMAGE_REASON_SHOVE = 17,
	AUD_DAMAGE_REASON_WHEEZE = 18,
	AUD_DAMAGE_REASON_COUGH = 19,
	AUD_DAMAGE_REASON_TAZER = 20,
	AUD_DAMAGE_REASON_EXHAUSTION = 21,
	AUD_DAMAGE_REASON_CLIMB_LARGE = 22,
	AUD_DAMAGE_REASON_CLIMB_SMALL = 23,
	AUD_DAMAGE_REASON_JUMP = 24,
	AUD_DAMAGE_REASON_COWER = 25,
	AUD_DAMAGE_REASON_WHIMPER = 26,
	AUD_DAMAGE_REASON_DYING_MOAN = 27,
	AUD_DAMAGE_REASON_CYCLING_EXHALE = 28,
	AUD_DAMAGE_REASON_PAIN_RAPIDS = 29,
	AUD_DAMAGE_REASON_SNEEZE = 30,
	AUD_DAMAGE_REASON_MELEE_SMALL_GRUNT = 31,
	AUD_DAMAGE_REASON_MELEE_LARGE_GRUNT = 32,
	AUD_DAMAGE_REASON_POST_FALL_GRUNT_LOW = 33
}
```
-- @param ped Ped - The ped entity.
-- @param damageReason int - The damage reason/type, refer to eAudDamageReason
-- @param rawDamage float - Damage value, defaults to 0.0
-- PLAY_PAIN(ped, damageReason, rawDamage)

--- PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE
-- See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for parameter specifications.

```
NativeDB Added Parameter 4: Any p3
```
-- @param ped Ped
-- @param speechName char*
-- @param speechParam char*
-- PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE(ped, speechName, speechParam)

--- PLAY_PED_AMBIENT_SPEECH_NATIVE
-- Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#\_0xC6941B4A3A8FBBB9).

```
speechParam: Can be one of the following:
SPEECH_PARAMS_STANDARD
SPEECH_PARAMS_ALLOW_REPEAT
SPEECH_PARAMS_BEAT
SPEECH_PARAMS_FORCE
SPEECH_PARAMS_FORCE_FRONTEND
SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
SPEECH_PARAMS_FORCE_NORMAL
SPEECH_PARAMS_FORCE_NORMAL_CLEAR
SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
SPEECH_PARAMS_FORCE_SHOUTED
SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
SPEECH_PARAMS_FORCE_PRELOAD_ONLY
SPEECH_PARAMS_MEGAPHONE
SPEECH_PARAMS_HELI
SPEECH_PARAMS_FORCE_MEGAPHONE
SPEECH_PARAMS_FORCE_HELI
SPEECH_PARAMS_INTERRUPT
SPEECH_PARAMS_INTERRUPT_SHOUTED
SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
SPEECH_PARAMS_INTERRUPT_NO_FORCE
SPEECH_PARAMS_INTERRUPT_FRONTEND
SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
SPEECH_PARAMS_ADD_BLIP
SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
SPEECH_PARAMS_ADD_BLIP_FORCE
SPEECH_PARAMS_ADD_BLIP_SHOUTED
SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
SPEECH_PARAMS_ADD_BLIP_INTERRUPT
SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
SPEECH_PARAMS_SHOUTED
SPEECH_PARAMS_SHOUTED_CLEAR
SPEECH_PARAMS_SHOUTED_CRITICAL
Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param ped Ped - The ped to play the ambient speech.
-- @param speechName char* - Name of the speech to play, eg. "GENERIC_HI".
-- @param speechParam char*
-- PLAY_PED_AMBIENT_SPEECH_NATIVE(ped, speechName, speechParam)

--- PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE
-- ```
This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
EX (C#):
GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
```
-- @param ped Ped
-- @param speechName char*
-- @param voiceName char*
-- @param speechParam char*
-- @param p4 BOOL
-- PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE(ped, speechName, voiceName, speechParam, p4)

--- PLAY_PED_RINGTONE
-- ```
All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny  
AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);  
AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);  
```
-- @param ringtoneName char*
-- @param ped Ped
-- @param p2 BOOL
-- PLAY_PED_RINGTONE(ringtoneName, ped, p2)

--- PLAY_POLICE_REPORT
-- ```
Plays the given police radio message.
All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
```
-- @param name char*
-- @param p1 float
-- PLAY_POLICE_REPORT(name, p1)

--- PLAY_SOUND
-- ```
All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ  
```
-- @param soundId int
-- @param audioName char*
-- @param audioRef char*
-- @param p3 BOOL
-- @param p4 Any
-- @param p5 BOOL
-- PLAY_SOUND(soundId, audioName, audioRef, p3, p4, p5)

--- PLAY_SOUND_FROM_COORD
-- ```
All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW  
gtaforums.com/topic/795622-audio-for-mods  
```
-- @param soundId int
-- @param audioName char*
-- @param x float
-- @param y float
-- @param z float
-- @param audioRef char*
-- @param isNetwork BOOL
-- @param range int
-- @param p8 BOOL
-- PLAY_SOUND_FROM_COORD(soundId, audioName, x, y, z, audioRef, isNetwork, range, p8)

--- PLAY_SOUND_FROM_ENTITY
-- ```
All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0   
No changes made in b678d.  
gtaforums.com/topic/795622-audio-for-mods  
```
-- @param soundId int
-- @param audioName char*
-- @param entity Entity
-- @param audioRef char*
-- @param isNetwork BOOL
-- @param p5 Any
-- PLAY_SOUND_FROM_ENTITY(soundId, audioName, entity, audioRef, isNetwork, p5)

--- PLAY_SOUND_FRONTEND
-- ```
List: https://pastebin.com/DCeRiaLJ
All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
```
-- @param soundId int
-- @param audioName char*
-- @param audioRef char*
-- @param p3 BOOL
-- PLAY_SOUND_FRONTEND(soundId, audioName, audioRef, p3)

--- PLAY_STREAM_FROM_OBJECT
-- Plays a preloaded stream back from the specified object.
-- @param object Object
-- PLAY_STREAM_FROM_OBJECT(object)

--- PLAY_STREAM_FROM_PED
-- Plays a preloaded stream back from the specified ped.
-- @param ped Ped
-- PLAY_STREAM_FROM_PED(ped)

--- PLAY_STREAM_FROM_POSITION
-- Plays a preloaded stream back from the specified Vector3.
-- @param x float
-- @param y float
-- @param z float
-- PLAY_STREAM_FROM_POSITION(x, y, z)

--- PLAY_STREAM_FROM_VEHICLE
-- Plays a preloaded stream back from the specified ped vehicle
-- @param vehicle Vehicle
-- PLAY_STREAM_FROM_VEHICLE(vehicle)

--- PLAY_STREAM_FRONTEND
-- PLAY_STREAM_FRONTEND()

--- PLAY_SYNCHRONIZED_AUDIO_EVENT
-- @param sceneId int
-- PLAY_SYNCHRONIZED_AUDIO_EVENT(sceneId)

--- PLAY_VEHICLE_DOOR_CLOSE_SOUND
-- @param vehicle Vehicle
-- @param doorIndex int
-- PLAY_VEHICLE_DOOR_CLOSE_SOUND(vehicle, doorIndex)

--- PLAY_VEHICLE_DOOR_OPEN_SOUND
-- @param vehicle Vehicle
-- @param doorIndex int
-- PLAY_VEHICLE_DOOR_OPEN_SOUND(vehicle, doorIndex)

--- PRELOAD_SCRIPT_CONVERSATION
-- Similar to [START_SCRIPT_CONVERSATION](#\_0x6B17C62C9635D2DC), except that is starts the conversation off paused.

A scripter can then kick off the conversation by calling [START_PRELOADED_CONVERSATION](#\_0x23641AFE870AF385).

If they want to check that the conversation is done preloading, they can use [GET_IS_PRELOADED_CONVERSATION_READY](#\_0xE73364DB90778FFA)
-- @param displaySubtitles BOOL
-- @param addToBriefScreen BOOL - Defaults to true
-- @param cloneConversation BOOL - Defaults to false
-- @param interruptible BOOL - Defaults to true
-- PRELOAD_SCRIPT_CONVERSATION(displaySubtitles, addToBriefScreen, cloneConversation, interruptible)

--- PRELOAD_SCRIPT_PHONE_CONVERSATION
-- @param displaySubtitles BOOL
-- @param addToBriefScreen BOOL - Defaults to true
-- PRELOAD_SCRIPT_PHONE_CONVERSATION(displaySubtitles, addToBriefScreen)

--- PRELOAD_VEHICLE_AUDIO_BANK
-- Request that we preload the required audio bank for a given vehicle model.

```
NativeDB Introduced: v1180
```
-- @param model Hash
-- PRELOAD_VEHICLE_AUDIO_BANK(model)

--- PREPARE_ALARM
-- Prepares any banks required to play the given alarm
-- @param alarmName char*
-- PREPARE_ALARM(alarmName)

--- PREPARE_MUSIC_EVENT
-- Prepares the specified music event. Preparing it in advance will preload any required data so that it's ready to play immediately.
-- @param eventName char*
-- PREPARE_MUSIC_EVENT(eventName)

--- PREPARE_SYNCHRONIZED_AUDIO_EVENT
-- @param audioEvent char* - The audio event name.
-- @param startOffsetMs int - Unused parameter (since v323)
-- PREPARE_SYNCHRONIZED_AUDIO_EVENT(audioEvent, startOffsetMs)

--- PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE
-- @param sceneId int
-- @param audioEvent char*
-- PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(sceneId, audioEvent)

--- RECORD_BROKEN_GLASS
-- Creates a broken glass area
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- RECORD_BROKEN_GLASS(x, y, z, radius)

--- REFRESH_CLOSEST_OCEAN_SHORELINE
-- Refreshes the closest shoreline using the nearest road position.
-- REFRESH_CLOSEST_OCEAN_SHORELINE()

--- REGISTER_SCRIPT_WITH_AUDIO
-- **This native does absolutely nothing, just a nullsub**
-- @param inChargeOfAudio BOOL
-- REGISTER_SCRIPT_WITH_AUDIO(inChargeOfAudio)

--- RELEASE_AMBIENT_AUDIO_BANK
-- This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#\_0x7A2D8AD0A9EB9C3F) instead.
-- RELEASE_AMBIENT_AUDIO_BANK()

--- RELEASE_MISSION_AUDIO_BANK
-- This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#\_0x7A2D8AD0A9EB9C3F) instead.
-- RELEASE_MISSION_AUDIO_BANK()

--- RELEASE_NAMED_SCRIPT_AUDIO_BANK
-- Unloads the specified audioBank
-- @param audioBank char*
-- RELEASE_NAMED_SCRIPT_AUDIO_BANK(audioBank)

--- RELEASE_SCRIPT_AUDIO_BANK
-- Unloads all audio banks requested by this script.
-- RELEASE_SCRIPT_AUDIO_BANK()

--- RELEASE_SOUND_ID
-- This should be called once a sound has finished being manipulated by the script so that its SoundId can be released and re-used.
-- @param soundId int
-- RELEASE_SOUND_ID(soundId)

--- RELEASE_WEAPON_AUDIO
-- ```
NativeDB Introduced: v323
```
-- RELEASE_WEAPON_AUDIO()

--- REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP
-- Removes an entity from its current mix group.
-- @param entity Entity
-- @param fadeOut float - Defaults to 0.0
-- REMOVE_ENTITY_FROM_AUDIO_MIX_GROUP(entity, fadeOut)

--- REMOVE_PORTAL_SETTINGS_OVERRIDE
-- ```
 Found in the b617d scripts, duplicates removed:
 AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");
 AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");
 AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");
 AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");
 AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");
```

For events like cars driving through windows, allows script to unocclude that window
-- @param portalSettingsName char*
-- REMOVE_PORTAL_SETTINGS_OVERRIDE(portalSettingsName)

--- REQUEST_AMBIENT_AUDIO_BANK
-- This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#\_0x2F844A8B08D76685)

This native has a new argument on newer game builds:

*   **playerBits**:
-- @param bankName char*
-- @param bOverNetwork BOOL
-- REQUEST_AMBIENT_AUDIO_BANK(bankName, bOverNetwork)

--- REQUEST_MISSION_AUDIO_BANK
-- This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#\_0x2F844A8B08D76685)

This native has a new argument on newer game builds:

*   **playerBits**:
-- @param bankName char*
-- @param bOverNetwork BOOL
-- REQUEST_MISSION_AUDIO_BANK(bankName, bOverNetwork)

--- REQUEST_SCRIPT_AUDIO_BANK
-- This native has a new argument on newer game builds:

*   **playerBits**:
-- @param bankName char*
-- @param bOverNetwork BOOL
-- REQUEST_SCRIPT_AUDIO_BANK(bankName, bOverNetwork)

--- REQUEST_TENNIS_BANKS
-- Loads the tennis vocalization banks into a couple animal slots.
-- @param opponentPed Ped
-- REQUEST_TENNIS_BANKS(opponentPed)

--- RESET_PED_AUDIO_FLAGS
-- @param ped Ped
-- RESET_PED_AUDIO_FLAGS(ped)

--- RESET_TREVOR_RAGE
-- Clears the override set by [OVERRIDE_TREVOR_RAGE](#\_0x13AD665062541A7E)
-- RESET_TREVOR_RAGE()

--- RESET_VEHICLE_STARTUP_REV_SOUND
-- Resets the override for [SET_VEHICLE_STARTUP_REV_SOUND](#\_0xF1F8157B8C3F171C)
-- @param vehicle Vehicle
-- RESET_VEHICLE_STARTUP_REV_SOUND(vehicle)

--- RESTART_SCRIPTED_CONVERSATION
-- Restarts a conversation that was previously paused with [PAUSE_SCRIPTED_CONVERSATION](#\_0x8530AD776CD72B12)
-- RESTART_SCRIPTED_CONVERSATION()

--- SCRIPT_OVERRIDES_WIND_ELEVATION
-- Overrides wind elevation sounds
-- @param override BOOL
-- @param windElevationHashName Hash
-- SCRIPT_OVERRIDES_WIND_ELEVATION(override, windElevationHashName)

--- SET_AGGRESSIVE_HORNS
-- Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
-- @param toggle BOOL
-- SET_AGGRESSIVE_HORNS(toggle)

--- SET_AMBIENT_VOICE_NAME
-- Sets the specified ped to use a specific voice different to the one associated with their model.
-- @param ped Ped
-- @param voiceName char*
-- SET_AMBIENT_VOICE_NAME(ped, voiceName)

--- SET_AMBIENT_VOICE_NAME_HASH
-- Sets the specified ped to use a specific voice different to the one associated with their model.
-- @param ped Ped
-- @param hash Hash
-- SET_AMBIENT_VOICE_NAME_HASH(ped, hash)

--- SET_AMBIENT_ZONE_LIST_STATE
-- @param zoneListName char*
-- @param enabled BOOL - Enables/disables a list of ambient zones for the duration of this script
-- @param forceUpdate BOOL - Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
-- SET_AMBIENT_ZONE_LIST_STATE(zoneListName, enabled, forceUpdate)

--- SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT
-- @param ambientZone char*
-- @param enabled BOOL - Enables/disables a list of ambient zones persistently
-- @param forceUpdate BOOL - Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
-- SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(ambientZone, enabled, forceUpdate)

--- SET_AMBIENT_ZONE_STATE
-- @param zoneName char*
-- @param enabled BOOL - Enables/disables an ambient zone for the duration of this script
-- @param forceUpdate BOOL - Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
-- SET_AMBIENT_ZONE_STATE(zoneName, enabled, forceUpdate)

--- SET_AMBIENT_ZONE_STATE_PERSISTENT
-- @param zoneName char*
-- @param enabled BOOL - Enables/disables an ambient zone for the duration of this script
-- @param forceUpdate BOOL - Set to true to force a zone to become disabled even if its currently active, default behaviour is to only change state when the player leaves the zone.
-- SET_AMBIENT_ZONE_STATE_PERSISTENT(zoneName, enabled, forceUpdate)

--- SET_ANIMAL_MOOD
-- ```cpp
enum eAudAnimalMood {
	AUD_ANIMAL_MOOD_ANGRY = 0,
	AUD_ANIMAL_MOOD_PLAYFUL = 1,

	AUD_ANIMAL_MOOD_NUM_MOODS = 2
}
```
-- @param animal Ped
-- @param mood int - Refer to `eAudAnimalMood`
-- SET_ANIMAL_MOOD(animal, mood)

--- SET_AUDIO_FLAG
-- Generic interface to toggle audio functionality, with auto-reset on script termination and support for multiple script threads

Flags used in game scripts:
| Flag Name | Description of Usage |
| ----- | -------- |
| ActivateSwitchWheelAudio | |
| AllowAmbientSpeechInSlowMo | |
| AllowCutsceneOverScreenFade | |
| AllowForceRadioAfterRetune | |
| AllowPainAndAmbientSpeechToPlayDuringCutscene | |
| AllowPlayerAIOnMission | |
| AllowPoliceScannerWhenPlayerHasNoControl | |
| AllowRadioDuringSwitch | |
| AllowRadioOverScreenFade | |
| AllowScoreAndRadio | |
| AllowScriptedSpeechInSlowMo | |
| AvoidMissionCompleteDelay | |
| DisableAbortConversationForDeathAndInjury | |
| DisableAbortConversationForRagdoll | |
| DisableBarks | |
| DisableFlightMusic | |
| DisableNPCHeadsetSpeechAttenuation | |
| DisableReplayScriptStreamRecording | |
| EnableHeadsetBeep | |
| EnableMissileLockWarningForAllVehicles | |
| ForceConversationInterrupt | |
| ForceSeamlessRadioSwitch | |
| ForceSniperAudio | |
| FrontendRadioDisabled | |
| HoldMissionCompleteWhenPrepared | |
| IsDirectorModeActive |  Allows you to play speech infinitely without any pauses like in Director Mode. |
| IsPlayerOnMissionForSpeech | |
| ListenerReverbDisabled | |
| LoadMPData | |
| MobileRadioInGame | |
| OnlyAllowScriptTriggerPoliceScanner | |
| PlayerOnDLCHeist4Island | |
| PlayMenuMusic | |
| PoliceScannerDisabled | |
| ScriptedConvListenerMaySpeak | |
| SpeechDucksScore | |
| SuppressPlayerScubaBreathing | |
| UseQuietSceneSoftVersion | |
| WantedMusicDisabled | |
| WantedMusicOnMission | |

```
All flag IDs and hashes:
ID: 01 | Hash: 0x20A7858F
ID: 02 | Hash: 0xA11C2259
ID: 03 | Hash: 0x08DE4700
ID: 04 | Hash: 0x989F652F
ID: 05 | Hash: 0x3C9E76BA
ID: 06 | Hash: 0xA805FEB0
ID: 07 | Hash: 0x4B94EA26
ID: 08 | Hash: 0x803ACD34
ID: 09 | Hash: 0x7C741226
ID: 10 | Hash: 0x31DB9EBD
ID: 11 | Hash: 0xDF386F18
ID: 12 | Hash: 0x669CED42
ID: 13 | Hash: 0x51F22743
ID: 14 | Hash: 0x2052B35C
ID: 15 | Hash: 0x071472DC
ID: 16 | Hash: 0xF9928BCC
ID: 17 | Hash: 0x7ADBDD48
ID: 18 | Hash: 0xA959BA1A
ID: 19 | Hash: 0xBBE89B60
ID: 20 | Hash: 0x87A08871
ID: 21 | Hash: 0xED1057CE
ID: 22 | Hash: 0x1584AD7A
ID: 23 | Hash: 0x8582CFCB
ID: 24 | Hash: 0x7E5E2FB0
ID: 25 | Hash: 0xAE4F72DB
ID: 26 | Hash: 0x5D16D1FA
ID: 27 | Hash: 0x06B2F4B8
ID: 28 | Hash: 0x5D4CDC96
ID: 29 | Hash: 0x8B5A48BA
ID: 30 | Hash: 0x98FBD539
ID: 31 | Hash: 0xD8CB0473
ID: 32 | Hash: 0x5CBB4874
ID: 33 | Hash: 0x2E9F93A9
ID: 34 | Hash: 0xD93BEA86
ID: 35 | Hash: 0x92109B7D
ID: 36 | Hash: 0xB7EC9E4D
ID: 37 | Hash: 0xCABDBB1D
ID: 38 | Hash: 0xB3FD4A52
ID: 39 | Hash: 0x370D94E5
ID: 40 | Hash: 0xA0F7938F
ID: 41 | Hash: 0xCBE1CE81
ID: 42 | Hash: 0xC27F1271
ID: 43 | Hash: 0x9E3258EB
ID: 44 | Hash: 0x551CDA5B
ID: 45 | Hash: 0xCB6D663C
ID: 46 | Hash: 0x7DACE87F
ID: 47 | Hash: 0xF9DE416F
ID: 48 | Hash: 0x882E6E9E
ID: 49 | Hash: 0x16B447E7
ID: 50 | Hash: 0xBD867739
ID: 51 | Hash: 0xA3A58604
ID: 52 | Hash: 0x7E046BBC
ID: 53 | Hash: 0xD95FDB98
ID: 54 | Hash: 0x5842C0ED
ID: 55 | Hash: 0x285FECC6
ID: 56 | Hash: 0x9351AC43
ID: 57 | Hash: 0x50032E75
ID: 58 | Hash: 0xAE6D0D59
ID: 59 | Hash: 0xD6351785
ID: 60 | Hash: 0xD25D71BC
ID: 61 | Hash: 0x1F7F6423
ID: 62 | Hash: 0xE24C3AA6
ID: 63 | Hash: 0xBFFDD2B7
```
-- @param flagName char*
-- @param toggle BOOL
-- SET_AUDIO_FLAG(flagName, toggle)

--- SET_AUDIO_SCENE_VARIABLE
-- @param scene char* - name of the scene
-- @param variableName char* - name of the variable to add/change
-- @param value float - value to set the variable to
-- SET_AUDIO_SCENE_VARIABLE(scene, variableName, value)

--- SET_AUDIO_SCRIPT_CLEANUP_TIME
-- Set a delay in milliseconds for the audio to be cleaned up when the script finishes.
-- @param timeMs int
-- SET_AUDIO_SCRIPT_CLEANUP_TIME(timeMs)

--- SET_AUDIO_SPECIAL_EFFECT_MODE
-- Needs to be called every frame.

```cpp
enum eAudSpecialEffectMode
{
	kSpecialEffectModeNormal = 0,
	kSpecialEffectModeUnderwater = 1,
	kSpecialEffectModeStoned = 2,
	kSpecialEffectModePauseMenu = 3,
	kSpecialEffectModeSlowMotion = 4,
	kSpecialEffectModeDrunkStage01 = 5,
	kSpecialEffectModeDrunkStage02 = 6,
	kSpecialEffectModeDrunkStage03 = 7,
	NUM_AUDSPECIALEFFECTMODE
};
```
-- @param mode int - Audio mode to apply this frame
-- SET_AUDIO_SPECIAL_EFFECT_MODE(mode)

--- SET_AUDIO_VEHICLE_PRIORITY
-- Sets the priority for the given vehicle. This is a hint for the audio system as to what LOD the
vehicle should use.

'High' priority will bump up the activation range significantly and prevent it
from dropping when the vehicle is not within the view frustrum.

'Max' will attempt to keep the vehicle at maximum LOD regardless of how far it is from the listener or what it is currently doing. Be careful with this!

There is a hard limit of 5 simulataneous granular cars (including the player) so we are quite limited on the number
we can play at once, so setting vehicles to max priority will reduce the number of engines availble for regular NPC vehicles

```cpp
enum eAudVehiclePriority {
	AUDIO_VEHICLE_PRIORITY_NORMAL = 0,
	AUDIO_VEHICLE_PRIORITY_MEDIUM = 1,
	AUDIO_VEHICLE_PRIORITY_MAX = 2,
	AUDIO_VEHICLE_PRIORITY_HIGH = 3,
}
```
-- @param vehicle Vehicle
-- @param priority int
-- SET_AUDIO_VEHICLE_PRIORITY(vehicle, priority)

--- SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM
-- Sets whether or not scripted conversation flow should be controlled by anim triggers
-- @param enable BOOL - Pass in true to set conversation flow to be controlled by animation triggers.
-- SET_CONVERSATION_AUDIO_CONTROLLED_BY_ANIM(enable)

--- SET_CONVERSATION_AUDIO_PLACEHOLDER
-- Used to determine whether conversation should use robot speech or not
-- @param isPlaceHolder BOOL - Whether or not the conversation should use robot speech or not
-- SET_CONVERSATION_AUDIO_PLACEHOLDER(isPlaceHolder)

--- SET_CUSTOM_RADIO_TRACK_LIST
-- Queues up a custom track list on the specified radio station. The content in the track list will be played as soon as possible.
The station does not have to be frozen.
-- @param radioStation char*
-- @param trackListName char*
-- @param forceNow BOOL - wheter or not to interrupt the current track on the tracklist
-- SET_CUSTOM_RADIO_TRACK_LIST(radioStation, trackListName, forceNow)

--- SET_CUTSCENE_AUDIO_OVERRIDE
-- ```
All occurrences found in b617d, sorted alphabetically and identical lines removed:
AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");
AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");
AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");
```

Add a suffix to the cutscene audio name. Call before loading the cutscene.
-- @param name char*
-- SET_CUTSCENE_AUDIO_OVERRIDE(name)

--- SET_EMITTER_RADIO_STATION
-- Retunes a named static emitter to the specified station
-- @param emitterName char*
-- @param radioStation char*
-- SET_EMITTER_RADIO_STATION(emitterName, radioStation)

--- SET_ENTITY_FOR_NULL_CONV_PED
-- @param speakerConversationIndex int
-- @param entity Entity
-- SET_ENTITY_FOR_NULL_CONV_PED(speakerConversationIndex, entity)

--- SET_FRONTEND_RADIO_ACTIVE
-- Allows the radio to be played in the frontend.
-- @param active BOOL
-- SET_FRONTEND_RADIO_ACTIVE(active)

--- SET_GLOBAL_RADIO_SIGNAL_LEVEL
-- Sets the global radio signal level, lower value will cause radio static.
Used only a handful of times in scripts.
-- @param signalLevel float - Radio signal level.
-- SET_GLOBAL_RADIO_SIGNAL_LEVEL(signalLevel)

--- SET_GPS_ACTIVE
-- @param active BOOL
-- SET_GPS_ACTIVE(active)

--- SET_HORN_ENABLED
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_HORN_ENABLED(vehicle, toggle)

--- SET_INITIAL_PLAYER_STATION
-- @param radioStation char*
-- SET_INITIAL_PLAYER_STATION(radioStation)

--- SET_MICROPHONE_POSITION
-- ```
If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so..  
```
-- @param p0 BOOL
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param x3 float
-- @param y3 float
-- @param z3 float
-- SET_MICROPHONE_POSITION(p0, x1, y1, z1, x2, y2, z2, x3, y3, z3)

--- SET_MOBILE_PHONE_RADIO_STATE
-- @param state BOOL
-- SET_MOBILE_PHONE_RADIO_STATE(state)

--- SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY
-- @param toggle BOOL
-- SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(toggle)

--- SET_PED_CLOTH_EVENTS_ENABLED
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param enabled BOOL
-- SET_PED_CLOTH_EVENTS_ENABLED(ped, enabled)

--- SET_PED_IS_DRUNK
-- Sets the ped so they sound drunk
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_IS_DRUNK(ped, toggle)

--- SET_PED_RACE_AND_VOICE_GROUP
-- @param ped Ped
-- @param pedRace int
-- @param pvgHash int - PedVoiceGroup hash, defaults to 0
-- SET_PED_RACE_AND_VOICE_GROUP(ped, pedRace, pvgHash)

--- SET_PED_VOICE_FULL
-- Calls the same internal function [`_SET_PED_VOICE_GROUP`](#\_0x7CDC8C3B89F661B3) calls, but passes `voiceGroupHash` (defined as a parameter in the referenced native) as `0`.
-- @param ped Ped
-- SET_PED_VOICE_FULL(ped)

--- SET_PED_WALLA_DENSITY
-- Overrides the calculated ped density that is used to modulate the ambient ped walla sounds (in exteriors only)

If you want to use this for interiors, use [SET_PED_INTERIOR_WALLA_DENSITY](#\_0x8BF907833BE275DE)
-- @param density float - desired walla density
-- @param applyValue float - how much the desired density affects the actual one
-- SET_PED_WALLA_DENSITY(density, applyValue)

--- SET_PLAYER_ANGRY
-- Sets a player ped to use his ANGRY speech contexts
-- @param ped Ped
-- @param isAngry BOOL
-- SET_PLAYER_ANGRY(ped, isAngry)

--- SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE
-- Enable player vehicle specific alarm disarm/arm sound triggering
-- @param vehicle Vehicle
-- @param active BOOL
-- SET_PLAYER_VEHICLE_ALARM_AUDIO_ACTIVE(vehicle, active)

--- SET_PORTAL_SETTINGS_OVERRIDE
-- @param oldPortalSettingsName char*
-- @param newPortalSettingsName char*
-- SET_PORTAL_SETTINGS_OVERRIDE(oldPortalSettingsName, newPortalSettingsName)

--- SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED
-- @param enabled BOOL - enables/disables a positioned emitter for the player vehicle radio
-- SET_POSITIONED_PLAYER_VEHICLE_RADIO_EMITTER_ENABLED(enabled)

--- SET_POSITION_FOR_NULL_CONV_PED
-- @param speakerConversationIndex int
-- @param x float
-- @param y float
-- @param z float
-- SET_POSITION_FOR_NULL_CONV_PED(speakerConversationIndex, x, y, z)

--- SET_RADIO_AUTO_UNFREEZE
-- @param toggle BOOL - if true the radio will automatically unfreeze as soon as the player gets in a vehicle
-- SET_RADIO_AUTO_UNFREEZE(toggle)

--- SET_RADIO_FRONTEND_FADE_TIME
-- @param fadeTime float
-- SET_RADIO_FRONTEND_FADE_TIME(fadeTime)

--- SET_RADIO_STATION_MUSIC_ONLY
-- ```
6 calls in the b617d scripts, removed identical lines:
AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);
AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);
AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);
```
-- @param radioStation char*
-- @param toggle BOOL
-- SET_RADIO_STATION_MUSIC_ONLY(radioStation, toggle)

--- SET_RADIO_TO_STATION_INDEX
-- ```
Sets radio station by index.  
```
-- @param radioStation int
-- SET_RADIO_TO_STATION_INDEX(radioStation)

--- SET_RADIO_TO_STATION_NAME
-- Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
-- @param stationName char*
-- SET_RADIO_TO_STATION_NAME(stationName)

--- SET_RADIO_TRACK
-- ```
Only found this one in the decompiled scripts:  
AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");  
```
-- @param radioStation char*
-- @param radioTrack char*
-- SET_RADIO_TRACK(radioStation, radioTrack)

--- SET_SCRIPT_UPDATE_DOOR_AUDIO
-- @param doorHash Hash
-- @param toggle BOOL
-- SET_SCRIPT_UPDATE_DOOR_AUDIO(doorHash, toggle)

--- SET_SIREN_WITH_NO_DRIVER
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_SIREN_WITH_NO_DRIVER(vehicle, toggle)

--- SET_STATIC_EMITTER_ENABLED
-- ```
Example:
AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);
This turns off surrounding sounds not connected directly to peds.
```
-- @param emitterName char*
-- @param toggle BOOL
-- SET_STATIC_EMITTER_ENABLED(emitterName, toggle)

--- SET_USER_RADIO_CONTROL_ENABLED
-- @param toggle BOOL
-- SET_USER_RADIO_CONTROL_ENABLED(toggle)

--- SET_VARIABLE_ON_SOUND
-- @param soundId int
-- @param variableName char*
-- @param value float
-- SET_VARIABLE_ON_SOUND(soundId, variableName, value)

--- SET_VARIABLE_ON_STREAM
-- ```
From the scripts, p0:  
"ArmWrestlingIntensity",  
"INOUT",  
"Monkey_Stream",  
"ZoomLevel"  
```
-- @param p0 char*
-- @param p1 float
-- SET_VARIABLE_ON_STREAM(p0, p1)

--- SET_VARIABLE_ON_UNDER_WATER_STREAM
-- ```
AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);
AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);
```
-- @param variableName char*
-- @param value float
-- SET_VARIABLE_ON_UNDER_WATER_STREAM(variableName, value)

--- SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR
-- Vehicle will make a 'rattling' noise when decelerating
-- @param vehicle Vehicle - Vehicle to modify
-- @param intensity float - A value 0.0 - 1.0. Higher the value, the more likely the vehicle is to make the sound while decelerating
-- SET_VEHICLE_AUDIO_BODY_DAMAGE_FACTOR(vehicle, intensity)

--- SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR
-- @param vehicle Vehicle
-- @param damageFactor float
-- SET_VEHICLE_AUDIO_ENGINE_DAMAGE_FACTOR(vehicle, damageFactor)

--- SET_VEHICLE_BOOST_ACTIVE
-- ```
SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);  
SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);   
Will give a boost-soundeffect.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_BOOST_ACTIVE(vehicle, toggle)

--- SET_VEHICLE_RADIO_ENABLED
-- ```
can't seem to enable radio on cop cars etc  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_RADIO_ENABLED(vehicle, toggle)

--- SET_VEHICLE_RADIO_LOUD
-- @param vehicle Vehicle
-- @param loud BOOL
-- SET_VEHICLE_RADIO_LOUD(vehicle, loud)

--- SET_VEHICLE_STARTUP_REV_SOUND
-- Overrides the vehicle's startup engine rev sound.

You can reset this with [RESET_VEHICLE_STARTUP_REV_SOUND](#\_0xD2DCCD8E16E20997)
-- @param vehicle Vehicle
-- @param soundName char*
-- @param setName char*
-- SET_VEHICLE_STARTUP_REV_SOUND(vehicle, soundName, setName)

--- SET_VEH_RADIO_STATION
-- Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
-- @param vehicle Vehicle
-- @param radioStation char*
-- SET_VEH_RADIO_STATION(vehicle, radioStation)

--- SKIP_RADIO_FORWARD
-- SKIP_RADIO_FORWARD()

--- SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE
-- SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE()

--- START_ALARM
-- You should call [PREPARE_ALARM](#\_0x9D74AE343DB65533) and wait for its value to be true before using this
-- @param alarmName char*
-- @param skipStartup BOOL
-- START_ALARM(alarmName, skipStartup)

--- START_AUDIO_SCENE
-- ```
Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.  
List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC  
```
-- @param scene char*
-- START_AUDIO_SCENE(scene)

--- START_PRELOADED_CONVERSATION
-- For use with [PRELOAD_SCRIPT_CONVERSATION](#\_0x3B3CAD6166916D87) and [GET_IS_PRELOADED_CONVERSATION_READY](#\_0xE73364DB90778FFA)
-- START_PRELOADED_CONVERSATION()

--- START_SCRIPT_CONVERSATION
-- @param displaySubtitles BOOL
-- @param addToBriefScreen BOOL - Defaults to true
-- @param cloneConversation BOOL - Defaults to false
-- @param interruptible BOOL - Defaults to true
-- START_SCRIPT_CONVERSATION(displaySubtitles, addToBriefScreen, cloneConversation, interruptible)

--- START_SCRIPT_PHONE_CONVERSATION
-- @param displaySubtitles BOOL
-- @param addToBriefScreen BOOL - Defaults to true
-- START_SCRIPT_PHONE_CONVERSATION(displaySubtitles, addToBriefScreen)

--- STOP_ALARM
-- @param alarmName char*
-- @param instantStop BOOL - Whether to kill the alarm instantly, or to let the audio system turn it off when it becomes inaudible
-- STOP_ALARM(alarmName, instantStop)

--- STOP_ALL_ALARMS
-- @param instantStop BOOL - Whether to kill the alarm instantly, or to let the audio system turn it off when it becomes inaudible
-- STOP_ALL_ALARMS(instantStop)

--- STOP_AUDIO_SCENE
-- Stops the named mixing scene (which was previously started by this script)
-- @param sceneName char*
-- STOP_AUDIO_SCENE(sceneName)

--- STOP_AUDIO_SCENES
-- Stops all mixed scenes which were previously started by this script
-- STOP_AUDIO_SCENES()

--- STOP_CURRENT_PLAYING_AMBIENT_SPEECH
-- Stops currently playing ambient speech.
-- @param ped Ped
-- STOP_CURRENT_PLAYING_AMBIENT_SPEECH(ped)

--- STOP_CURRENT_PLAYING_SPEECH
-- Stops currently playing speech (Pain, ambient, scripted, breathing).
-- @param ped Ped
-- STOP_CURRENT_PLAYING_SPEECH(ped)

--- STOP_CUTSCENE_AUDIO
-- Stops audio for the current cutscene.
-- STOP_CUTSCENE_AUDIO()

--- STOP_PED_RINGTONE
-- Stops a ped's ringtone from playing
-- @param ped Ped
-- STOP_PED_RINGTONE(ped)

--- STOP_PED_SPEAKING
-- This doesn't stop a piece of dialogue that has been triggered.

This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.

Nb. This does not sync over the network, it will only affect peds locally. Use [STOP_PED_SPEAKING_SYNCED](#\_0xAB6781A5F3101470) if you need to affect peds on other machines too.
-- @param ped Ped
-- @param shouldDisable BOOL
-- STOP_PED_SPEAKING(ped, shouldDisable)

--- STOP_PED_SPEAKING_SYNCED
-- This doesn't stop a piece of dialogue that has been triggered.

This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.

The ped will also be prevented from speaking on remote machines. Use [STOP_PED_SPEAKING](#\_0x9D64D7405520E3D3) if you just want to affect the local machine.
-- @param ped Ped
-- @param shouldDisable BOOL
-- STOP_PED_SPEAKING_SYNCED(ped, shouldDisable)

--- STOP_SCRIPTED_CONVERSATION
-- @param finishCurrentLine BOOL
-- STOP_SCRIPTED_CONVERSATION(finishCurrentLine)

--- STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS
-- Stops all smoke grenade sounds
-- STOP_SMOKE_GRENADE_EXPLOSION_SOUNDS()

--- STOP_SOUND
-- Stops the sound from currently playing, there isn't a way to resume a sound
after stopping it.
-- @param soundId int - The sound id to stop
-- STOP_SOUND(soundId)

--- STOP_STREAM
-- STOP_STREAM()

--- STOP_SYNCHRONIZED_AUDIO_EVENT
-- @param p0 Any
-- STOP_SYNCHRONIZED_AUDIO_EVENT(p0)

--- TRIGGER_MUSIC_EVENT
-- ```
List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W  
All music event names found in the b617d scripts: pastebin.com/GnYt0R3P  
```
-- @param eventName char*
-- TRIGGER_MUSIC_EVENT(eventName)

--- UNBLOCK_SPEECH_CONTEXT_GROUP
-- ```
NativeDB Introduced: v1493
```

Removes all instances of a given context block.
-- @param groupName char* - Context group name to unblock.
-- UNBLOCK_SPEECH_CONTEXT_GROUP(groupName)

--- UNFREEZE_RADIO_STATION
-- @param radioStation char*
-- UNFREEZE_RADIO_STATION(radioStation)

--- UNLOCK_MISSION_NEWS_STORY
-- @param newsStory int
-- UNLOCK_MISSION_NEWS_STORY(newsStory)

--- UNLOCK_RADIO_STATION_TRACK_LIST
-- ```
AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");
```
-- @param radioStation char*
-- @param trackListName char*
-- UNLOCK_RADIO_STATION_TRACK_LIST(radioStation, trackListName)

--- UNREGISTER_SCRIPT_WITH_AUDIO
-- **This native does absolutely nothing, just a nullsub**

```
On last-gen this just runs blr and this func is called by several other functions other then the native's table.  
```
-- UNREGISTER_SCRIPT_WITH_AUDIO()

--- UNREQUEST_TENNIS_BANKS
-- Unloads tennis vocalization banks loaded with [`REQUEST_TENNIS_BANKS`](#\_0x4ADA3F19BE4A6047).
-- UNREQUEST_TENNIS_BANKS()

--- UPDATE_SOUND_COORD
-- Updates a playing sounds absolute position.
-- @param soundId int
-- @param x float
-- @param y float
-- @param z float
-- UPDATE_SOUND_COORD(soundId, x, y, z)

--- UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS
-- Unlocks any available DJ radio tracks based on the tuneable status

```
NativeDB Introduced: v1493	
```
-- @param allowTrackReprioritization BOOL
-- UPDATE_UNLOCKABLE_DJ_RADIO_TRACKS(allowTrackReprioritization)

--- USE_FOOTSTEP_SCRIPT_SWEETENERS
-- Allows script to trigger a sweetener footstep sound
-- @param ped Ped
-- @param useSweetner BOOL
-- @param soundSetHash Hash
-- USE_FOOTSTEP_SCRIPT_SWEETENERS(ped, useSweetner, soundSetHash)

--- USE_SIREN_AS_HORN
-- @param vehicle Vehicle
-- @param sirenAsHorn BOOL
-- USE_SIREN_AS_HORN(vehicle, sirenAsHorn)

--- _FORCE_VEHICLE_ENGINE_SYNTH
-- This native is used alongside with [`SET_VEHICLE_TYRE_BURST`](#\_0xEC6A202EE4960385).

```
NativeDB Introduced: v3258
```
-- @param vehicle Vehicle
-- @param force BOOL
-- _FORCE_VEHICLE_ENGINE_SYNTH(vehicle, force)

--- _GET_CURRENT_RADIO_TRACK_PLAYBACK_TIME
-- ```
Return the playback time (in milliseconds) of the radio stations current track. 

NativeDB Introduced: v1493
```
-- @param radioStationName char*
-- _GET_CURRENT_RADIO_TRACK_PLAYBACK_TIME(radioStationName)

--- _SET_PED_AUDIO_FOOTSTEP_LOUD
-- ```
Enables/disables ped's "loud" footstep sound.
```

```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param toggle BOOL
-- _SET_PED_AUDIO_FOOTSTEP_LOUD(ped, toggle)

--- _SET_PED_AUDIO_GENDER
-- @param ped Ped
-- @param p1 BOOL
-- _SET_PED_AUDIO_GENDER(ped, p1)

--- _SET_PED_VOICE_GROUP
-- ```
From the scripts:
AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));
AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));
AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));
AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));
```
-- @param ped Ped
-- @param voiceGroupHash Hash
-- _SET_PED_VOICE_GROUP(ped, voiceGroupHash)

--- _SET_PED_VOICE_GROUP_RACE
-- ```
Dat151RelType == 29
```

```
NativeDB Introduced: v2699
```
-- @param ped Ped
-- @param voiceGroupHash Hash
-- _SET_PED_VOICE_GROUP_RACE(ped, voiceGroupHash)

--- _SET_RADIO_STATION_IS_VISIBLE
-- Doesn't have an effect in Story Mode.

```
NativeDB Introduced: v2372
```
-- @param radioStation char*
-- @param toggle BOOL
-- _SET_RADIO_STATION_IS_VISIBLE(radioStation, toggle)

--- _SET_RADIO_TRACK_MIX
-- ```
NativeDB Introduced: v1493
```
-- @param radioStationName char*
-- @param mixName char*
-- @param p2 int
-- _SET_RADIO_TRACK_MIX(radioStationName, mixName, p2)

--- _SET_SIREN_KEEP_ON
-- ```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_SIREN_KEEP_ON(vehicle, toggle)

--- _SET_VARIABLE_ON_CUTSCENE_AUDIO
-- ```
SET_VARIABLE_ON_*
```
-- @param variableName char*
-- @param value float
-- _SET_VARIABLE_ON_CUTSCENE_AUDIO(variableName, value)

--- _SET_VEHICLE_HORN_VARIATION
-- ```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle
-- @param value int
-- _SET_VEHICLE_HORN_VARIATION(vehicle, value)

--- _SET_VEH_HAS_RADIO_OVERRIDE
-- ```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- _SET_VEH_HAS_RADIO_OVERRIDE(vehicle)

--- _SOUND_VEHICLE_HORN_THIS_FRAME
-- ```
SET_*
```
-- @param vehicle Vehicle
-- _SOUND_VEHICLE_HORN_THIS_FRAME(vehicle)

--- _TRIGGER_SIREN
-- ... When not in a vehicle

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- _TRIGGER_SIREN(vehicle)


-- ========== BRAIN ==========

--- 0x0B40ED49D7D6FF84
-- 0x0B40ED49D7D6FF84()

--- 0x4D953DF78EBF8158
-- ```
Something like flush_all_scripts   
Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()  
```
-- 0x4D953DF78EBF8158()

--- 0x6D6840CEE8845831
-- ```
Possible values:  
act_cinema  
am_mp_carwash_launch  
am_mp_carwash_control  
am_mp_property_ext  
chop  
fairgroundHub  
launcher_BasejumpHeli  
launcher_BasejumpPack  
launcher_CarWash  
launcher_golf  
launcher_Hunting_Ambient  
launcher_MrsPhilips  
launcher_OffroadRacing  
launcher_pilotschool  
launcher_Racing  
launcher_rampage  
launcher_rampage  
launcher_range  
launcher_stunts  
launcher_stunts  
launcher_tennis  
launcher_Tonya  
launcher_Triathlon  
launcher_Yoga  
ob_mp_bed_low  
ob_mp_bed_med  
```
-- @param action char*
-- 0x6D6840CEE8845831(action)

--- 0x6E91B04E08773030
-- ```
Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar  
Here are possible values of argument -   
"ob_tv"  
"launcher_Darts"  
```
-- @param action char*
-- 0x6E91B04E08773030(action)

--- ADD_SCRIPT_TO_RANDOM_PED
-- ```
BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);
- Nacorpio
-----
Hardcoded to not work in Multiplayer.
```
-- @param name char*
-- @param model Hash
-- @param p2 float
-- @param p3 float
-- ADD_SCRIPT_TO_RANDOM_PED(name, model, p2, p3)

--- DISABLE_SCRIPT_BRAIN_SET
-- @param brainSet int
-- DISABLE_SCRIPT_BRAIN_SET(brainSet)

--- ENABLE_SCRIPT_BRAIN_SET
-- @param brainSet int
-- ENABLE_SCRIPT_BRAIN_SET(brainSet)

--- IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE
-- @param object Object
-- IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(object)

--- IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE
-- ```
Gets whether the world point the calling script is registered to is within desired range of the player.  
```
-- IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE()

--- REGISTER_OBJECT_SCRIPT_BRAIN
-- ```
Registers a script for any object with a specific model hash.
BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);
```
-- @param scriptName char*
-- @param modelHash Hash
-- @param p2 int
-- @param activationRange float
-- @param p4 int
-- @param p5 int
-- REGISTER_OBJECT_SCRIPT_BRAIN(scriptName, modelHash, p2, activationRange, p4, p5)

--- REGISTER_WORLD_POINT_SCRIPT_BRAIN
-- @param scriptName char*
-- @param activationRange float
-- @param p2 int
-- REGISTER_WORLD_POINT_SCRIPT_BRAIN(scriptName, activationRange, p2)


-- ========== CAM ==========

--- 0x0225778816FDC28C
-- ```
some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799  
```
-- @param p0 float
-- 0x0225778816FDC28C(p0)

--- 0x0AA27680A0BD43FA
-- 0x0AA27680A0BD43FA()

--- 0x12DED8CA53D47EA5
-- ```
Hardcoded to only work in multiplayer.  
```
-- @param p0 float
-- 0x12DED8CA53D47EA5(p0)

--- 0x17FCA7199A530203
-- 0x17FCA7199A530203()

--- 0x1F2300CB7FA7B7F6
-- 0x1F2300CB7FA7B7F6()

--- 0x247ACBC4ABBC9D1C
-- @param p0 BOOL
-- 0x247ACBC4ABBC9D1C(p0)

--- 0x271017B9BA825366
-- @param p0 Any
-- @param p1 BOOL
-- 0x271017B9BA825366(p0, p1)

--- 0x28B022A17B068A3A
-- F\*

```
NativeDB Introduced: v1734
```
-- @param p0 float
-- @param p1 float
-- 0x28B022A17B068A3A(p0, p1)

--- 0x2F7F2B26DD3F18EE
-- @param p0 float
-- @param p1 float
-- 0x2F7F2B26DD3F18EE(p0, p1)

--- 0x3044240D2E0FA842
-- 0x3044240D2E0FA842()

--- 0x324C5AA411DA7737
-- ```
NativeDB Introduced: v323
```
-- @param p0 Any
-- 0x324C5AA411DA7737(p0)

--- 0x380B4968D1E09E55
-- ```
NativeDB Introduced: v1290
```
-- 0x380B4968D1E09E55()

--- 0x4008EDF7D6E48175
-- @param p0 BOOL
-- 0x4008EDF7D6E48175(p0)

--- 0x469F2ECDEC046337
-- @param p0 BOOL
-- 0x469F2ECDEC046337(p0)

--- 0x4879E4FE39074CDF
-- ```
A*
```
-- 0x4879E4FE39074CDF()

--- 0x59424BD75174C9B1
-- 0x59424BD75174C9B1()

--- 0x5A43C76F7FC7BA5F
-- 0x5A43C76F7FC7BA5F()

--- 0x5C41E6BABC9E2112
-- @param p0 Any
-- 0x5C41E6BABC9E2112(p0)

--- 0x5C48A1D6E3B33179
-- ```
W*
```
-- @param cam Cam
-- 0x5C48A1D6E3B33179(cam)

--- 0x5D96CFB59DA076A0
-- p1: 0..16

```
NativeDB Introduced: v2060
```
-- @param vehicle Vehicle
-- @param p1 int
-- @param p2 float
-- 0x5D96CFB59DA076A0(vehicle, p1, p2)

--- 0x62374889A4D59F72
-- 0x62374889A4D59F72()

--- 0x62ECFCFDEE7885D6
-- 0x62ECFCFDEE7885D6()

--- 0x705A276EBFF3133D
-- 0x705A276EBFF3133D()

--- 0x7295C203DD659DFE
-- ```
_RESET_*

_RESET_GAMEPLAY_CAM_RELATIVE_ORBIT_HOLD_TIME?
```

```
NativeDB Introduced: v2699
```
-- 0x7295C203DD659DFE()

--- 0x7B8A361C1813FBEF
-- 0x7B8A361C1813FBEF()

--- 0x91EF6EE6419E5B97
-- @param p0 BOOL
-- 0x91EF6EE6419E5B97(p0)

--- 0x9DFE13ECDC1EC196
-- ```
SET_FOLLOW_*
```
-- @param p0 BOOL
-- @param p1 BOOL
-- 0x9DFE13ECDC1EC196(p0, p1)

--- 0x9F97DA93681F87EA
-- B\*

```
NativeDB Introduced: v1734
```
-- 0x9F97DA93681F87EA()

--- 0xA2767257A320FC82
-- @param p0 Any
-- @param p1 BOOL
-- 0xA2767257A320FC82(p0, p1)

--- 0xA7092AFE81944852
-- ```
NativeDB Introduced: v2189
```
-- 0xA7092AFE81944852()

--- 0xAABD62873FFB1A33
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0xAABD62873FFB1A33(p0, p1)

--- 0xB1381B97F70C7B30
-- ```
NativeDB Introduced: v1180
```
-- 0xB1381B97F70C7B30()

--- 0xBF72910D0F26F025
-- 0xBF72910D0F26F025()

--- 0xC8391C309684595A
-- 0xC8391C309684595A()

--- 0xC8B5C4A79CC18B94
-- @param cam Cam
-- 0xC8B5C4A79CC18B94(cam)

--- 0xCCD078C2665D2973
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 BOOL
-- 0xCCD078C2665D2973(p0)

--- 0xCED08CBE8EBB97C7
-- @param p0 float
-- @param p1 float
-- 0xCED08CBE8EBB97C7(p0, p1)

--- 0xDB90C6CCA48940F1
-- @param p0 BOOL
-- 0xDB90C6CCA48940F1(p0)

--- 0xDD79DF9F4D26E1C9
-- 0xDD79DF9F4D26E1C9()

--- 0xE111A7C0D200CBC5
-- @param p0 Any
-- @param p1 float
-- 0xE111A7C0D200CBC5(p0, p1)

--- 0xEAF0FA793D05C592
-- 0xEAF0FA793D05C592()

--- 0xF55E4046F6F831DC
-- @param p0 Any
-- @param p1 float
-- 0xF55E4046F6F831DC(p0, p1)

--- 0xFD3151CD37EA2245
-- @param entity Entity
-- 0xFD3151CD37EA2245(entity)

--- ADD_CAM_SPLINE_NODE
-- ```
I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.  
p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one  
p8 big values ~100 will slow down the camera movement before reaching this node  
p9 != 0 seems to override the rotation/pitch (bool?)  
```
-- @param camera Cam
-- @param x float
-- @param y float
-- @param z float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param length int
-- @param p8 int
-- @param transitionType int
-- ADD_CAM_SPLINE_NODE(camera, x, y, z, xRot, yRot, zRot, length, p8, transitionType)

--- ADD_CAM_SPLINE_NODE_USING_CAMERA
-- Takes a camera and uses the information from it as a camera spline node.
-- @param cam Cam - Camera to add cam2 as a node to
-- @param cam2 Cam - Camera used for reference
-- @param length int - Duration used for transition, has no effect for the first node.
-- @param p3 int
-- ADD_CAM_SPLINE_NODE_USING_CAMERA(cam, cam2, length, p3)

--- ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME
-- @param cam Cam
-- @param cam2 Cam
-- @param p2 int
-- @param p3 int
-- ADD_CAM_SPLINE_NODE_USING_CAMERA_FRAME(cam, cam2, p2, p3)

--- ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME
-- @param cam Cam
-- @param p1 int
-- @param p2 int
-- ADD_CAM_SPLINE_NODE_USING_GAMEPLAY_FRAME(cam, p1, p2)

--- ANIMATED_SHAKE_CAM
-- ```
Example from michael2 script.  
CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);  
```
-- @param cam Cam
-- @param p1 char*
-- @param p2 char*
-- @param p3 char*
-- @param amplitude float
-- ANIMATED_SHAKE_CAM(cam, p1, p2, p3, amplitude)

--- ANIMATED_SHAKE_SCRIPT_GLOBAL
-- ```
CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);
```
-- @param p0 char*
-- @param p1 char*
-- @param p2 char*
-- @param p3 float
-- ANIMATED_SHAKE_SCRIPT_GLOBAL(p0, p1, p2, p3)

--- ATTACH_CAM_TO_ENTITY
-- ```
Last param determines if its relative to the Entity  
```
-- @param cam Cam - The camera handle.
-- @param entity Entity - The entity handle.
-- @param xOffset float - X-axis offset
-- @param yOffset float - Y-axis offset
-- @param zOffset float - Z-axis offset
-- @param isRelative BOOL - Whether or not the camera will be relative to the entity
-- ATTACH_CAM_TO_ENTITY(cam, entity, xOffset, yOffset, zOffset, isRelative)

--- ATTACH_CAM_TO_PED_BONE
-- This native works with peds only.
-- @param cam Cam - The camera handle.
-- @param ped Ped - The ped handle.
-- @param boneIndex int - This is different to boneID, use ['GET_PED_BONE_INDEX'](#\_0x3F428D08BE5AAE31) to get the index from the ID. use the index for attaching to specific bones. `cam` will be attached to the center of `ped` if bone index given doesn't correspond to bone indexes for that entity type.
-- @param xOffset float - X-axis offset
-- @param yOffset float - Y-axis offset
-- @param zOffset float - Z-axis offset
-- @param isRelative BOOL - Whether or not the camera will be relative to the bone
-- ATTACH_CAM_TO_PED_BONE(cam, ped, boneIndex, xOffset, yOffset, zOffset, isRelative)

--- CREATE_CAM
-- Creates a camera with the specified cam name, You can use `SET_CAM_` natives to manipulate the camera.\
Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.

### Camera names:

*   DEFAULT_SCRIPTED_CAMERA
*   DEFAULT_ANIMATED_CAMERA
*   DEFAULT_SPLINE_CAMERA
*   DEFAULT_SCRIPTED_FLY_CAMERA
*   TIMED_SPLINE_CAMERA
*   CUSTOM_TIMED_SPLINE_CAMERA
*   ROUNDED_SPLINE_CAMERA
*   SMOOTHED_SPLINE_CAMERA
-- @param camName char* - A string representing the camera type, the game will convert the string into a joaat hash upon native execution.
-- @param active BOOL - Set to true if you wish to make this new camera the active camera.
-- CREATE_CAM(camName, active)

--- CREATE_CAMERA
-- Creates a camera with the specified camera hash, You can use `SET_CAM_` natives to manipulate the camera.
Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.

Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.

```
NativeDB Introduced: v323
```
-- @param camHash Hash - The hash of the camera type, use [GET_HASH_KEY](#\_0xD24D37CC275948CC) to get the camera hash from the name.
-- @param active BOOL - Set to true if you wish to make this new camera the active camera.
-- CREATE_CAMERA(camHash, active)

--- CREATE_CAMERA_WITH_PARAMS
-- Create a camera with the specified camera hash, You can use `SET_CAM_` natives to manipulate the camera.
Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.

Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.

```
NativeDB Introduced: v323
```
-- @param camHash Hash - The hash of the camera type, use [GET_HASH_KEY](#\_0xD24D37CC275948CC) to get the camera hash from the name.
-- @param posX float - The x position of the camera.
-- @param posY float - The y position of the camera.
-- @param posZ float - The z position of the camera.
-- @param rotX float - The x rotation of the camera.
-- @param rotY float - The y rotation of the camera.
-- @param rotZ float - The z rotation of the camera.
-- @param fov float - The Field Of View of the camera, is the observable world that is seen.
-- @param active BOOL - Set to true if you wish to make this new camera the active camera.
-- @param rotationOrder int - The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9).
-- CREATE_CAMERA_WITH_PARAMS(camHash, posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder)

--- CREATE_CAM_WITH_PARAMS
-- Create a camera with the specified cam name/type, You can use `SET_CAM_` natives to manipulate the camera.

Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.
-- @param camName char* - A string representing the camera type, the game will convert the string into a joaat hash upon native execution.
-- @param posX float - The x position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param posY float - The y position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param posZ float - The z position of the camera (you can also send a vector3 instead of the bulk coordinates)
-- @param rotX float - The x rotation of the camera
-- @param rotY float - The y rotation of the camera
-- @param rotZ float - The z rotation of the camera
-- @param fov float - The Field Of View of the camera, is the observable world that is seen
-- @param active BOOL - Set to true if you wish to make this new camera the active camera.
-- @param rotationOrder int - The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- CREATE_CAM_WITH_PARAMS(camName, posX, posY, posZ, rotX, rotY, rotZ, fov, active, rotationOrder)

--- CREATE_CINEMATIC_SHOT
-- @param p0 Any
-- @param p1 int
-- @param p2 Any
-- @param entity Entity
-- CREATE_CINEMATIC_SHOT(p0, p1, p2, entity)

--- CUSTOM_MENU_COORDINATES
-- ```
some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.  
```
-- @param p0 float
-- CUSTOM_MENU_COORDINATES(p0)

--- DESTROY_ALL_CAMS
-- ```
BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.  
```
-- @param bScriptHostCam BOOL
-- DESTROY_ALL_CAMS(bScriptHostCam)

--- DESTROY_CAM
-- ```
BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.  
```
-- @param cam Cam
-- @param bScriptHostCam BOOL
-- DESTROY_CAM(cam, bScriptHostCam)

--- DETACH_CAM
-- @param cam Cam
-- DETACH_CAM(cam)

--- DISABLE_AIM_CAM_THIS_UPDATE
-- DISABLE_AIM_CAM_THIS_UPDATE()

--- DISABLE_CAM_COLLISION_FOR_OBJECT
-- @param entity Entity
-- DISABLE_CAM_COLLISION_FOR_OBJECT(entity)

--- DOES_CAM_EXIST
-- Looks up a camera handle in the current camera pool and returns `true` if the handle is found, otherwise it returns `false`.
-- @param cam Cam - The camera handle to look for.
-- DOES_CAM_EXIST(cam)

--- DO_SCREEN_FADE_IN
-- ```
Fades the screen in.  
duration: The time the fade should take, in milliseconds.  
```
-- @param duration int
-- DO_SCREEN_FADE_IN(duration)

--- DO_SCREEN_FADE_OUT
-- ```
Fades the screen out.  
duration: The time the fade should take, in milliseconds.  
```
-- @param duration int
-- DO_SCREEN_FADE_OUT(duration)

--- FORCE_CINEMATIC_RENDERING_THIS_UPDATE
-- @param p0 BOOL
-- FORCE_CINEMATIC_RENDERING_THIS_UPDATE(p0)

--- GET_CAM_ANIM_CURRENT_PHASE
-- @param cam Cam
-- GET_CAM_ANIM_CURRENT_PHASE(cam)

--- GET_CAM_COORD
-- @param cam Cam
-- GET_CAM_COORD(cam)

--- GET_CAM_FAR_CLIP
-- @param cam Cam
-- GET_CAM_FAR_CLIP(cam)

--- GET_CAM_FAR_DOF
-- @param cam Cam
-- GET_CAM_FAR_DOF(cam)

--- GET_CAM_FOV
-- @param cam Cam
-- GET_CAM_FOV(cam)

--- GET_CAM_NEAR_CLIP
-- @param cam Cam
-- GET_CAM_NEAR_CLIP(cam)

--- GET_CAM_ROT
-- Gets a camera's rotation by handle (`cam`) lookup, outputs a `Vector3` in degrees.
-- @param cam Cam - The camera handle.
-- @param rotationOrder int - The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- GET_CAM_ROT(cam, rotationOrder)

--- GET_CAM_SPLINE_NODE_INDEX
-- @param cam Cam
-- GET_CAM_SPLINE_NODE_INDEX(cam)

--- GET_CAM_SPLINE_NODE_PHASE
-- ```
I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.  
```
-- @param cam Cam
-- GET_CAM_SPLINE_NODE_PHASE(cam)

--- GET_CAM_SPLINE_PHASE
-- ```
Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.  
(returns 1.0f when no nodes has been added, reached end of non existing spline)  
```
-- @param cam Cam
-- GET_CAM_SPLINE_PHASE(cam)

--- GET_CAM_VIEW_MODE_FOR_CONTEXT
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the view mode enum.
-- @param context int - See [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
-- GET_CAM_VIEW_MODE_FOR_CONTEXT(context)

--- GET_FINAL_RENDERED_CAM_COORD
-- GET_FINAL_RENDERED_CAM_COORD()

--- GET_FINAL_RENDERED_CAM_FAR_CLIP
-- GET_FINAL_RENDERED_CAM_FAR_CLIP()

--- GET_FINAL_RENDERED_CAM_FAR_DOF
-- GET_FINAL_RENDERED_CAM_FAR_DOF()

--- GET_FINAL_RENDERED_CAM_FOV
-- GET_FINAL_RENDERED_CAM_FOV()

--- GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH
-- GET_FINAL_RENDERED_CAM_MOTION_BLUR_STRENGTH()

--- GET_FINAL_RENDERED_CAM_NEAR_CLIP
-- GET_FINAL_RENDERED_CAM_NEAR_CLIP()

--- GET_FINAL_RENDERED_CAM_NEAR_DOF
-- GET_FINAL_RENDERED_CAM_NEAR_DOF()

--- GET_FINAL_RENDERED_CAM_ROT
-- @param rotationOrder int
-- GET_FINAL_RENDERED_CAM_ROT(rotationOrder)

--- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_FOV
-- @param player Player
-- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_FOV(player)

--- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_ROT
-- @param player Player
-- @param rotationOrder int
-- GET_FINAL_RENDERED_IN_WHEN_FRIENDLY_ROT(player, rotationOrder)

--- GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
-- GET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR()

--- GET_FOCUS_PED_ON_SCREEN
-- @param p0 float
-- @param p1 int
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 int
-- @param p8 int
-- GET_FOCUS_PED_ON_SCREEN(p0, p1, p2, p3, p4, p5, p6, p7, p8)

--- GET_FOLLOW_PED_CAM_VIEW_MODE
-- ```cpp
// view mode enumeration
enum eCamViewMode 
{
	THIRD_PERSON_NEAR = 0,
	THIRD_PERSON_MEDIUM = 1,
	THIRD_PERSON_FAR = 2,
	CINEMATIC = 3,
	FIRST_PERSON = 4,
};
```
-- GET_FOLLOW_PED_CAM_VIEW_MODE()

--- GET_FOLLOW_PED_CAM_ZOOM_LEVEL
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
-- GET_FOLLOW_PED_CAM_ZOOM_LEVEL()

--- GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
-- GET_FOLLOW_VEHICLE_CAM_VIEW_MODE()

--- GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
-- GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL()

--- GET_GAMEPLAY_CAM_COORD
-- GET_GAMEPLAY_CAM_COORD()

--- GET_GAMEPLAY_CAM_FOV
-- GET_GAMEPLAY_CAM_FOV()

--- GET_GAMEPLAY_CAM_RELATIVE_HEADING
-- GET_GAMEPLAY_CAM_RELATIVE_HEADING()

--- GET_GAMEPLAY_CAM_RELATIVE_PITCH
-- GET_GAMEPLAY_CAM_RELATIVE_PITCH()

--- GET_GAMEPLAY_CAM_ROT
-- This function takes a rotation order and outputs a `Vector3` in degrees.

It first calls a game function to calculate these values given the rotation order and effectively multiplies those values by `180/PI`, hence degrees since the function it calls outputs radians which are then converted to degrees.
-- @param rotationOrder int - The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- GET_GAMEPLAY_CAM_ROT(rotationOrder)

--- GET_RENDERING_CAM
-- GET_RENDERING_CAM()

--- HARD_ATTACH_CAM_TO_ENTITY
-- Attaches a camera to an entity, including full matrix transformations for both rotation and position offsets.

```
NativeDB Introduced: v2189
```
-- @param cam Cam - The camera handle.
-- @param entity Entity - The entity handle.
-- @param xRot float - X-axis rotation.
-- @param yRot float - Y-axis rotation.
-- @param zRot float - Z-axis rotation.
-- @param xOffset float - X-axis offset
-- @param yOffset float - Y-axis offset
-- @param zOffset float - Z-axis offset
-- @param isRelative BOOL - Whether or not the camera position will be relative to the entity rotation
-- HARD_ATTACH_CAM_TO_ENTITY(cam, entity, xRot, yRot, zRot, xOffset, yOffset, zOffset, isRelative)

--- HARD_ATTACH_CAM_TO_PED_BONE
-- Attaches a camera to a specific bone of a Ped, including full matrix transformations for both rotation and position offsets.
This native works with peds only.

```
NativeDB Introduced: v1180
```
-- @param cam Cam - The camera handle.
-- @param ped Ped - The ped handle.
-- @param boneIndex int - This is different to boneID, use [`GET_PED_BONE_INDEX`](#\_0x3F428D08BE5AAE31) to get the index from the ID. use the index for attaching to specific bones. `cam` will be attached to the center of `ped` if bone index given doesn't correspond to bone indexes for that entity type.
-- @param xRot float - X-axis rotation.
-- @param yRot float - Y-axis rotation.
-- @param zRot float - Z-axis rotation.
-- @param xOffset float - X-axis offset.
-- @param yOffset float - Y-axis offset.
-- @param zOffset float - Z-axis offset.
-- @param isRelative BOOL - Whether or not the camera position will be relative to the bone rotation.
-- HARD_ATTACH_CAM_TO_PED_BONE(cam, ped, boneIndex, xRot, yRot, zRot, xOffset, yOffset, zOffset, isRelative)

--- INVALIDATE_IDLE_CAM
-- Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
-- INVALIDATE_IDLE_CAM()

--- IS_AIM_CAM_ACTIVE
-- IS_AIM_CAM_ACTIVE()

--- IS_BONNET_CINEMATIC_CAM_RENDERING
-- IS_BONNET_CINEMATIC_CAM_RENDERING()

--- IS_CAM_ACTIVE
-- ```
Returns whether or not the passed camera handle is active.  
```
-- @param cam Cam
-- IS_CAM_ACTIVE(cam)

--- IS_CAM_INTERPOLATING
-- @param cam Cam
-- IS_CAM_INTERPOLATING(cam)

--- IS_CAM_PLAYING_ANIM
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param cam Cam
-- @param animName char*
-- @param animDictionary char*
-- IS_CAM_PLAYING_ANIM(cam, animName, animDictionary)

--- IS_CAM_RENDERING
-- @param cam Cam
-- IS_CAM_RENDERING(cam)

--- IS_CAM_SHAKING
-- @param cam Cam
-- IS_CAM_SHAKING(cam)

--- IS_CAM_SPLINE_PAUSED
-- @param p0 Any
-- IS_CAM_SPLINE_PAUSED(p0)

--- IS_CINEMATIC_CAM_INPUT_ACTIVE
-- ```
NativeDB Introduced: v1493
```
-- IS_CINEMATIC_CAM_INPUT_ACTIVE()

--- IS_CINEMATIC_CAM_RENDERING
-- IS_CINEMATIC_CAM_RENDERING()

--- IS_CINEMATIC_CAM_SHAKING
-- IS_CINEMATIC_CAM_SHAKING()

--- IS_CINEMATIC_IDLE_CAM_RENDERING
-- IS_CINEMATIC_IDLE_CAM_RENDERING()

--- IS_CINEMATIC_SHOT_ACTIVE
-- @param p0 Any
-- IS_CINEMATIC_SHOT_ACTIVE(p0)

--- IS_FIRST_PERSON_AIM_CAM_ACTIVE
-- IS_FIRST_PERSON_AIM_CAM_ACTIVE()

--- IS_FOLLOW_PED_CAM_ACTIVE
-- IS_FOLLOW_PED_CAM_ACTIVE()

--- IS_FOLLOW_VEHICLE_CAM_ACTIVE
-- IS_FOLLOW_VEHICLE_CAM_ACTIVE()

--- IS_GAMEPLAY_CAM_LOOKING_BEHIND
-- IS_GAMEPLAY_CAM_LOOKING_BEHIND()

--- IS_GAMEPLAY_CAM_RENDERING
-- ```
Examples when this function will return 0 are:
- During busted screen.
- When player is coming out from a hospital.
- When player is coming out from a police station.
- When player is buying gun from AmmuNation.
```
-- IS_GAMEPLAY_CAM_RENDERING()

--- IS_GAMEPLAY_CAM_SHAKING
-- IS_GAMEPLAY_CAM_SHAKING()

--- IS_GAMEPLAY_HINT_ACTIVE
-- IS_GAMEPLAY_HINT_ACTIVE()

--- IS_SCREEN_FADED_IN
-- IS_SCREEN_FADED_IN()

--- IS_SCREEN_FADED_OUT
-- IS_SCREEN_FADED_OUT()

--- IS_SCREEN_FADING_IN
-- IS_SCREEN_FADING_IN()

--- IS_SCREEN_FADING_OUT
-- IS_SCREEN_FADING_OUT()

--- IS_SCRIPT_GLOBAL_SHAKING
-- Determines if a global camera shake is currently active. You can stop the currently active global camera shake using [STOP_SCRIPT_GLOBAL_SHAKING](#\_0x1C9D7949FA533490).

```
NativeDB Introduced: v323
```
-- IS_SCRIPT_GLOBAL_SHAKING()

--- IS_SPHERE_VISIBLE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- IS_SPHERE_VISIBLE(x, y, z, radius)

--- OVERRIDE_CAM_SPLINE_MOTION_BLUR
-- ```
Max value for p1 is 15.  
```
-- @param cam Cam
-- @param p1 int
-- @param p2 float
-- @param p3 float
-- OVERRIDE_CAM_SPLINE_MOTION_BLUR(cam, p1, p2, p3)

--- OVERRIDE_CAM_SPLINE_VELOCITY
-- @param cam Cam
-- @param p1 int
-- @param p2 float
-- @param p3 float
-- OVERRIDE_CAM_SPLINE_VELOCITY(cam, p1, p2, p3)

--- PLAY_CAM_ANIM
-- ```
Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.  
p9 is unknown at this time.  
p10 throughout all the X360 Scripts is always 2.  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param cam Cam
-- @param animName char*
-- @param animDictionary char*
-- @param x float
-- @param y float
-- @param z float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param p9 BOOL
-- @param p10 int
-- PLAY_CAM_ANIM(cam, animName, animDictionary, x, y, z, xRot, yRot, zRot, p9, p10)

--- PLAY_SYNCHRONIZED_CAM_ANIM
-- ```
Examples:  
CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");  
CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7/*1*/], l_F4D[15/*1*/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param camera Cam
-- @param scene int
-- @param animName char*
-- @param animDictionary char*
-- PLAY_SYNCHRONIZED_CAM_ANIM(camera, scene, animName, animDictionary)

--- POINT_CAM_AT_COORD
-- @param cam Cam
-- @param x float
-- @param y float
-- @param z float
-- POINT_CAM_AT_COORD(cam, x, y, z)

--- POINT_CAM_AT_ENTITY
-- Points the camera at the specified entity.

Offset works like [GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS](#\_0x1899F328B0E12848).
-- @param cam Cam - Cam (Return value of CREATE_CAM or CREATE_CAM_WITH_PARAMS).
-- @param entity Entity - Entity for the camera to point at.
-- @param offsetX float - X offset for the camera (left/right).
-- @param offsetY float - Y offset for the camera (forward/backward).
-- @param offsetZ float - Z offset for the camera (up/down).
-- @param p5 BOOL - Always seems to be 1 (true).
-- POINT_CAM_AT_ENTITY(cam, entity, offsetX, offsetY, offsetZ, p5)

--- POINT_CAM_AT_PED_BONE
-- ```
Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.  
```
-- @param cam Cam
-- @param ped Ped
-- @param boneIndex int
-- @param x float
-- @param y float
-- @param z float
-- @param p6 BOOL
-- POINT_CAM_AT_PED_BONE(cam, ped, boneIndex, x, y, z, p6)

--- RENDER_SCRIPT_CAMS
-- Renders the camera previously created with [CREATE_CAM](#\_0xC3981DCE61D9E13F) or [CREATE_CAMERA](#\_0x5E3CF89C6BCCA67D)

```
NativeDB Added Parameter 6: Any p5
```
-- @param render BOOL - Whether to render the cams or not.
-- @param ease BOOL - If true it will make a smooth transition between the current camera and the new rendered camera.
-- @param easeTime int - The in milliseconds for the transition to happen.
-- @param easeCoordsAnim BOOL - If false it will only do the smooth transition to the rotation and the coords will be set instantly.
-- @param p4 BOOL - Doesn't seem to change anything.
-- RENDER_SCRIPT_CAMS(render, ease, easeTime, easeCoordsAnim, p4)

--- SET_CAM_ACTIVE
-- ```
Set camera as active/inactive.  
```
-- @param cam Cam
-- @param active BOOL
-- SET_CAM_ACTIVE(cam, active)

--- SET_CAM_ACTIVE_WITH_INTERP
-- ```
Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...  
```
-- @param camTo Cam
-- @param camFrom Cam
-- @param duration int
-- @param easeLocation int
-- @param easeRotation int
-- SET_CAM_ACTIVE_WITH_INTERP(camTo, camFrom, duration, easeLocation, easeRotation)

--- SET_CAM_AFFECTS_AIMING
-- ```
Allows you to aim and shoot at the direction the camera is facing.  
```
-- @param cam Cam
-- @param toggle BOOL
-- SET_CAM_AFFECTS_AIMING(cam, toggle)

--- SET_CAM_ANIM_CURRENT_PHASE
-- @param cam Cam
-- @param phase float
-- SET_CAM_ANIM_CURRENT_PHASE(cam, phase)

--- SET_CAM_CONTROLS_MINI_MAP_HEADING
-- Makes the minimap follow a scripted camera's rotation instead of the gameplay cam.
-- @param cam Cam - Cam handle returned by [CREATE_CAM](#\_0xC3981DCE61D9E13F)
-- @param toggle BOOL - Whether or not this camera should control the minimap heading.
-- SET_CAM_CONTROLS_MINI_MAP_HEADING(cam, toggle)

--- SET_CAM_COORD
-- ```
Sets the position of the cam.  
```
-- @param cam Cam
-- @param posX float
-- @param posY float
-- @param posZ float
-- SET_CAM_COORD(cam, posX, posY, posZ)

--- SET_CAM_DEBUG_NAME
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param camera Cam
-- @param name char*
-- SET_CAM_DEBUG_NAME(camera, name)

--- SET_CAM_DOF_PLANES
-- @param cam Cam
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- SET_CAM_DOF_PLANES(cam, p1, p2, p3, p4)

--- SET_CAM_DOF_STRENGTH
-- Specifies how much the DoF effect should be applied (Set using [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), etc.)
-- @param cam Cam - The camera handle
-- @param dofStrength float - Depth of Field strength (between 0.0 and 1.0)
-- SET_CAM_DOF_STRENGTH(cam, dofStrength)

--- SET_CAM_FAR_CLIP
-- @param cam Cam
-- @param farClip float
-- SET_CAM_FAR_CLIP(cam, farClip)

--- SET_CAM_FAR_DOF
-- Specifies when the camera should stop being in focus. Can be used together with [`SET_USE_HI_DOF`](#\_0xA13B0222F3D94A94), [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.

### Usage Example

A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- @param cam Cam - The camera handle
-- @param farDOF float - Distance in in standard units
-- SET_CAM_FAR_DOF(cam, farDOF)

--- SET_CAM_FOV
-- Adjusts the field of view (FOV) for a specified camera, allowing for a wider or narrower perspective of the game world. The field of view is measured in degrees and affects how much of the game world is visible at any given moment through the camera.

```
NativeDB Introduced: v323
```
-- @param cam Cam - The camera whose FOV is being set.
-- @param fieldOfView float - The new FOV value, in degrees. Valid range is from `1.0f` (minimum FOV, for a very narrow view) to `130.0f` (maximum FOV, for a very wide view).
-- SET_CAM_FOV(cam, fieldOfView)

--- SET_CAM_INHERIT_ROLL_VEHICLE
-- ```
The native seems to only be called once.  
The native is used as so,  
CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));  
In the exile1 script.  
```
-- @param cam Cam
-- @param p1 BOOL
-- SET_CAM_INHERIT_ROLL_VEHICLE(cam, p1)

--- SET_CAM_MOTION_BLUR_STRENGTH
-- @param cam Cam
-- @param strength float
-- SET_CAM_MOTION_BLUR_STRENGTH(cam, strength)

--- SET_CAM_NEAR_CLIP
-- @param cam Cam
-- @param nearClip float
-- SET_CAM_NEAR_CLIP(cam, nearClip)

--- SET_CAM_NEAR_DOF
-- Specifies when the camera should start being in focus. Can be used together with [`SET_USE_HI_DOF`](#\_0xA13B0222F3D94A94), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.

### Usage Example

A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- @param cam Cam - The camera handle
-- @param nearDOF float - Distance in in standard units
-- SET_CAM_NEAR_DOF(cam, nearDOF)

--- SET_CAM_PARAMS
-- @param cam Cam
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param fieldOfView float
-- @param transitionSpeed int - The speed of transition/interpolation to these new values
-- @param p9 int
-- @param p10 int
-- @param rotationOrder int - The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- SET_CAM_PARAMS(cam, posX, posY, posZ, rotX, rotY, rotZ, fieldOfView, transitionSpeed, p9, p10, rotationOrder)

--- SET_CAM_ROT
-- Sets the rotation of the camera.
-- @param cam Cam - The camera handle to use, in order to change the rotation
-- @param rotX float - Rotation on X
-- @param rotY float - Rotation on Y
-- @param rotZ float - Rotation on Z
-- @param rotationOrder int - The order of rotation, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- SET_CAM_ROT(cam, rotX, rotY, rotZ, rotationOrder)

--- SET_CAM_SHAKE_AMPLITUDE
-- @param cam Cam
-- @param amplitude float
-- SET_CAM_SHAKE_AMPLITUDE(cam, amplitude)

--- SET_CAM_SPLINE_DURATION
-- ```
I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.  
```
-- @param cam Cam
-- @param timeDuration int
-- SET_CAM_SPLINE_DURATION(cam, timeDuration)

--- SET_CAM_SPLINE_NODE_EASE
-- @param cam Cam
-- @param p1 int
-- @param p2 int
-- @param p3 float
-- SET_CAM_SPLINE_NODE_EASE(cam, p1, p2, p3)

--- SET_CAM_SPLINE_NODE_EXTRA_FLAGS
-- @param cam Cam
-- @param p1 int
-- @param flags int
-- SET_CAM_SPLINE_NODE_EXTRA_FLAGS(cam, p1, flags)

--- SET_CAM_SPLINE_NODE_VELOCITY_SCALE
-- @param cam Cam
-- @param p1 int
-- @param scale float
-- SET_CAM_SPLINE_NODE_VELOCITY_SCALE(cam, p1, scale)

--- SET_CAM_SPLINE_PHASE
-- @param cam Cam
-- @param p1 float
-- SET_CAM_SPLINE_PHASE(cam, p1)

--- SET_CAM_SPLINE_SMOOTHING_STYLE
-- Sets the smoothing style for a DEFAULT_SPLINE_CAMERA
Ranges from 0 to 3 in rockstar scripts although there are actually 26

```
0: No lead-in or lead-out smoothing
1: Smooth lead-in
2: Smooth lead-out
3: Both lead-in and lead-out are smoothed
4-6: Longer speed up, lead-in, lead-out, and both in order as above. 
6: see above, but missed a node in testing(?)
7: Smoothed lead-in, longer smoothed lead-out
8: Longer lead-in and lead-out than 6, didn't drop node
9: Constant acceleration
10: Constant deceleration. Dropped 2 nodes in testing.
11: Same as 0
12: 10 but slower lead-in, reaches end node less early
13: Extremely close to 3, slightly longer lead-in/lead-out
14: Constant acceleration, dropped last 2 nodes in testing and halted (?)
15: Very similar to 10, did not drop any nodes.
16: Long lead-in, dropped 2 nodes in testing, very long leadout.
17: Constant acceleration, slower speed-up than 9
18: Same as 17 is to 9, slightly longer lead-out, lingers at end node
19: Very long lead in and out
20: Very long, gradual lead-in acceleration at start, gets extremely fast
21: Same as 20 but for constant deceleration
22: 20 and 21 combined, long linger at end node. Dropped 2 nodes in testing
23: Constant acceleration, doesn't complete path before it stops
24: Same as 23 but with constant deceleration, but completes path
25: 23 and 24 combined, insanely fast at middle.
26: No noticable lead-in, misses last 2 nodes in testing
27+: Alternates between 0 and 26
```

The above is documented and graphed at [Spline Cam Interp Graphs](https://docs.google.com/spreadsheets/d/1ejyiMcEYrhhQOL0mLe8664UN-vU4Oh-SBqQnVcKlFIk/edit?usp=sharing)

```

Using 1-3 will result in misalignment from the passed durations for the spline nodes, the overall duration will remain but other nodes will be shortened if smoothing anything.

Graph below demonstrates interpolation between 0-1000 and back 10 times.

![](https://i.imgur.com/cixWh7m.png)

## Parameters
* **cam**: The DEFAULT_SPLINE_CAMERA to apply the smoothing to
* **smoothingStyle**: 0 to 3, 0 no additional smoothing, 1 smooth lead-in, 2 smooth lead-out, 3 smooth lead-in & lead-out
```
-- @param cam Cam
-- @param smoothingStyle int
-- SET_CAM_SPLINE_SMOOTHING_STYLE(cam, smoothingStyle)

--- SET_CAM_USE_SHALLOW_DOF_MODE
-- Enables or disables the usage of a shallow DOF. Needs to be set to true to use [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), etc. Doesn't need to be called every tick.

### Usage Example

A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- @param cam Cam - The camera handle
-- @param toggle BOOL - Boolean if the camera should use a shallow depth of field or not
-- SET_CAM_USE_SHALLOW_DOF_MODE(cam, toggle)

--- SET_CAM_VIEW_MODE_FOR_CONTEXT
-- @param context int - The view context; see [`_GET_CAM_ACTIVE_VIEW_MODE_CONTEXT`](#\_0x19CAFA3C87F7C2FF).
-- @param viewMode int - The view mode; see [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A).
-- SET_CAM_VIEW_MODE_FOR_CONTEXT(context, viewMode)

--- SET_CINEMATIC_BUTTON_ACTIVE
-- @param p0 BOOL
-- SET_CINEMATIC_BUTTON_ACTIVE(p0)

--- SET_CINEMATIC_CAM_SHAKE_AMPLITUDE
-- @param p0 float
-- SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(p0)

--- SET_CINEMATIC_MODE_ACTIVE
-- ```
Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
```
-- @param toggle BOOL
-- SET_CINEMATIC_MODE_ACTIVE(toggle)

--- SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE
-- SET_CINEMATIC_NEWS_CHANNEL_ACTIVE_THIS_UPDATE()

--- SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE
-- @param distance float
-- SET_FIRST_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(distance)

--- SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR
-- @param zoomFactor float
-- SET_FIRST_PERSON_AIM_CAM_ZOOM_FACTOR(zoomFactor)

--- SET_FLY_CAM_COORD_AND_CONSTRAIN
-- @param cam Cam
-- @param x float
-- @param y float
-- @param z float
-- SET_FLY_CAM_COORD_AND_CONSTRAIN(cam, x, y, z)

--- SET_FLY_CAM_HORIZONTAL_RESPONSE
-- @param cam Cam
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- SET_FLY_CAM_HORIZONTAL_RESPONSE(cam, p1, p2, p3)

--- SET_FLY_CAM_MAX_HEIGHT
-- @param cam Cam
-- @param height float
-- SET_FLY_CAM_MAX_HEIGHT(cam, height)

--- SET_FOLLOW_PED_CAM_THIS_UPDATE
-- Overrides the ped follow camera (not first person camera) with the specified camera. The game loads all camera metadata from `update/update.rpf/x64/data/metadata/cameras.ymt` and `x64a.rpf/data/metadata/cameras.ymt` with the ped follow cameras being of type `camFollowPedCameraMetadata`.

| Follow Camera Names                          |
|----------------------------------------------|
| DEFAULT_FOLLOW_PED_CAMERA                    |
| FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA           |
| FOLLOW_PED_ON_EXILE1\_LADDER_CAMERA           |
| FOLLOW_PED_SKY_DIVING_CAMERA                 |
| FOLLOW_PED_SKY_DIVING_FAMILY5\_CAMERA         |
| NIGHTCLUB_FOLLOW_PED_CAMERA                  |
| FOLLOW_PED_INTIMIDATION_CAMERA               |
| FOLLOW_PED_IN_WATER_CAMERA                   |
| FOLLOW_PED_PRONE_CAMERA                      |
| FOLLOW_PED_ON_SEAT_CAMERA                    |
| FOLLOW_PED_HANGING_UPSIDE_DOWN_CAMERA        |
| FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA           |
| CUSTOM_TRANSITION_AFTER_WARP_SKY_DIVE_CAMERA |
| FOLLOW_PED_ON_HORSE_CAMERA                   |
| FOLLOW_PED_ON_LOUNGER_CAMERA                 |

Other camera hashes (names not found yet)

```cpp
// 0x5DBBFB6E
// 0xA38DB056
// 0x16B702A3
// 0x41D72A2E
```
-- @param camName char* - The name of the camera to use this update
-- @param easeTime int - The time in milliseconds to ease in the camera
-- SET_FOLLOW_PED_CAM_THIS_UPDATE(camName, easeTime)

--- SET_FOLLOW_PED_CAM_VIEW_MODE
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
-- @param viewMode int
-- SET_FOLLOW_PED_CAM_VIEW_MODE(viewMode)

--- SET_FOLLOW_VEHICLE_CAM_VIEW_MODE
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
-- @param viewMode int
-- SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(viewMode)

--- SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL
-- See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
-- @param zoomLevel int
-- SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(zoomLevel)

--- SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE
-- @param ped Ped
-- SET_GAMEPLAY_CAM_FOLLOW_PED_THIS_UPDATE(ped)

--- SET_GAMEPLAY_CAM_RELATIVE_HEADING
-- ```
Sets the camera position relative to heading in float from -360 to +360.  
Heading is alwyas 0 in aiming camera.  
```
-- @param heading float
-- SET_GAMEPLAY_CAM_RELATIVE_HEADING(heading)

--- SET_GAMEPLAY_CAM_RELATIVE_PITCH
-- This native sets the camera's pitch (rotation on the x-axis).
-- @param angle float - the angle to rotate the camera by
-- @param scalingFactor float - always seems to be set to 1.0 in native calls
-- SET_GAMEPLAY_CAM_RELATIVE_PITCH(angle, scalingFactor)

--- SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE
-- ```
Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.  
```
-- @param amplitude float
-- SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(amplitude)

--- SET_GAMEPLAY_COORD_HINT
-- @param x float
-- @param y float
-- @param z float
-- @param duration int
-- @param blendOutDuration int
-- @param blendInDuration int
-- @param unk int
-- SET_GAMEPLAY_COORD_HINT(x, y, z, duration, blendOutDuration, blendInDuration, unk)

--- SET_GAMEPLAY_ENTITY_HINT
-- ```
p6 & p7 - possibly length or time  
```
-- @param entity Entity
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param p4 BOOL
-- @param p5 int
-- @param p6 int
-- @param p7 int
-- @param p8 Any
-- SET_GAMEPLAY_ENTITY_HINT(entity, xOffset, yOffset, zOffset, p4, p5, p6, p7, p8)

--- SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET
-- @param value float
-- SET_GAMEPLAY_HINT_BASE_ORBIT_PITCH_OFFSET(value)

--- SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR
-- @param value float
-- SET_GAMEPLAY_HINT_FOLLOW_DISTANCE_SCALAR(value)

--- SET_GAMEPLAY_HINT_FOV
-- @param FOV float
-- SET_GAMEPLAY_HINT_FOV(FOV)

--- SET_GAMEPLAY_OBJECT_HINT
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 BOOL
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- SET_GAMEPLAY_OBJECT_HINT(p0, p1, p2, p3, p4, p5, p6, p7)

--- SET_GAMEPLAY_PED_HINT
-- @param p0 Ped
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param p4 BOOL
-- @param duration int
-- @param blendOutDuration int
-- @param blendInDuration int
-- SET_GAMEPLAY_PED_HINT(p0, x1, y1, z1, p4, duration, blendOutDuration, blendInDuration)

--- SET_GAMEPLAY_VEHICLE_HINT
-- Focuses the camera on the specified vehicle.
-- @param vehicle Vehicle - The vehicle to focus on.
-- @param offsetX float - Position offset X
-- @param offsetY float - Position offset Y
-- @param offsetZ float - Position offset Z
-- @param p4 BOOL
-- @param time int - Effect duration
-- @param easeInTime int - Effect fade in duration
-- @param easeOutTime int - EFfect fade out duration
-- SET_GAMEPLAY_VEHICLE_HINT(vehicle, offsetX, offsetY, offsetZ, p4, time, easeInTime, easeOutTime)

--- SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE
-- @param p0 Vehicle
-- @param p1 int
-- SET_IN_VEHICLE_CAM_STATE_THIS_UPDATE(p0, p1)

--- SET_TABLE_GAMES_CAMERA_THIS_UPDATE
-- Override the camera work of the third-person camera to table game for current frame only.

|                  HashKey                    |       Hash        |    Game         |
| :---------------------------------: | :-----------:| :-------------:  |
| `CASINO_LUCKY_WHEEL_CAMERA` |   `5891389`   |  Lucky Wheel    |
| `CASINO_SLOT_MACHINE_CAMERA` |  `518572876`  |     Slots       |
| `CASINO_ROULETTE_CAMERA` |   `71681063`  |    Roulette     |
| `CASINO_BLACKJACK_CAMERA` | `-2124244681` |    Blackjack    |
| `CASINO_POKER_CAMERA` | `-1938411241` |   Three Cards   |
| `CASINO_INSIDE_TRACK_CAMERA` | `1929822423` |   Inside Track    |
| `ARCADE_LOVE_PROFESSOR_P1_CAMERA` | `545868034` |   LoveProfessorP1   |
| `ARCADE_LOVE_PROFESSOR_P2_CAMERA` | `935304251` |   LoveProfessorP2   |
-- @param hash Hash - Hash for table game
-- SET_TABLE_GAMES_CAMERA_THIS_UPDATE(hash)

--- SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE
-- @param distance float
-- SET_THIRD_PERSON_AIM_CAM_NEAR_CLIP_THIS_UPDATE(distance)

--- SET_USE_HI_DOF
-- Needs to be called every tick to make the active camera use a high depth of field.\
The DoF can be customized using [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.

### Usage Example

A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
-- SET_USE_HI_DOF()

--- SET_WIDESCREEN_BORDERS
-- @param p0 BOOL
-- @param p1 int
-- SET_WIDESCREEN_BORDERS(p0, p1)

--- SHAKE_CAM
-- ```
Possible shake types (updated b617d):  
DEATH_FAIL_IN_EFFECT_SHAKE  
DRUNK_SHAKE  
FAMILY5_DRUG_TRIP_SHAKE  
HAND_SHAKE  
JOLT_SHAKE  
LARGE_EXPLOSION_SHAKE  
MEDIUM_EXPLOSION_SHAKE  
SMALL_EXPLOSION_SHAKE  
ROAD_VIBRATION_SHAKE  
SKY_DIVING_SHAKE  
VIBRATE_SHAKE  
```
-- @param cam Cam
-- @param type char*
-- @param amplitude float
-- SHAKE_CAM(cam, type, amplitude)

--- SHAKE_CINEMATIC_CAM
-- ```
p0 argument found in the b617d scripts: "DRUNK_SHAKE"  
```
-- @param p0 char*
-- @param p1 float
-- SHAKE_CINEMATIC_CAM(p0, p1)

--- SHAKE_GAMEPLAY_CAM
-- ```
Possible shake types (updated b617d):  
DEATH_FAIL_IN_EFFECT_SHAKE  
DRUNK_SHAKE  
FAMILY5_DRUG_TRIP_SHAKE  
HAND_SHAKE  
JOLT_SHAKE  
LARGE_EXPLOSION_SHAKE  
MEDIUM_EXPLOSION_SHAKE  
SMALL_EXPLOSION_SHAKE  
ROAD_VIBRATION_SHAKE  
SKY_DIVING_SHAKE  
VIBRATE_SHAKE  
```
-- @param shakeName char*
-- @param intensity float
-- SHAKE_GAMEPLAY_CAM(shakeName, intensity)

--- SHAKE_SCRIPT_GLOBAL
-- ```
CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);
```
-- @param p0 char*
-- @param p1 float
-- SHAKE_SCRIPT_GLOBAL(p0, p1)

--- STOP_CAM_POINTING
-- @param cam Cam
-- STOP_CAM_POINTING(cam)

--- STOP_CAM_SHAKING
-- @param cam Cam
-- @param p1 BOOL
-- STOP_CAM_SHAKING(cam, p1)

--- STOP_CINEMATIC_CAM_SHAKING
-- @param p0 BOOL
-- STOP_CINEMATIC_CAM_SHAKING(p0)

--- STOP_CINEMATIC_SHOT
-- @param p0 Hash
-- STOP_CINEMATIC_SHOT(p0)

--- STOP_CUTSCENE_CAM_SHAKING
-- STOP_CUTSCENE_CAM_SHAKING()

--- STOP_GAMEPLAY_CAM_SHAKING
-- @param bStopImmediately BOOL - Should the shake stop this frame.
-- STOP_GAMEPLAY_CAM_SHAKING(bStopImmediately)

--- STOP_GAMEPLAY_HINT
-- Terminates the current gameplay hint camera, with an option for immediate cessation or a gradual fade out.

```
NativeDB Introduced: v323
```
-- @param bStopImmediately BOOL - Specifies whether the gameplay hint camera should stop instantly `true` or gradually transition out `false`.
-- STOP_GAMEPLAY_HINT(bStopImmediately)

--- STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP
-- Instructs the game engine to stop rendering scripted cameras and transition back to the gameplay camera, optionally applying custom blending and rendering options.

```cpp
enum eRenderingOptionFlags {
    RO_NO_OPTIONS = 0,
    RO_STOP_RENDERING_OPTION_WHEN_PLAYER_EXITS_INTO_COVER = 1
};
```

```cpp
enum eCamSplineSmoothingFlags {
	// No smoothing just moves at a constant rate
	CAM_SPLINE_NO_SMOOTH = 0,
	// Decelerates when approaching a node
	CAM_SPLINE_SLOW_IN_SMOOTH = 1, 
	// Accelerates slowly when leaving a node
	CAM_SPLINE_SLOW_OUT_SMOOTH = 2,    
	// Decelerates when approaching a node and accelerates slowly when leaving a node
	CAM_SPLINE_SLOW_IN_OUT_SMOOTH = 3,
	CAM_SPLINE_VERY_SLOW_IN = 4,
	CAM_SPLINE_VERY_SLOW_OUT = 5,
	CAM_SPLINE_VERY_SLOW_IN_SLOW_OUT = 6,
	CAM_SPLINE_SLOW_IN_VERY_SLOW_OUT = 7,
	CAM_SPLINE_VERY_SLOW_IN_VERY_SLOW_OUT = 8,
	CAM_SPLINE_EASE_IN = 9,
	CAM_SPLINE_EASE_OUT = 10,
	CAM_SPLINE_QUADRATIC_EASE_IN = 11,
	CAM_SPLINE_QUADRATIC_EASE_OUT = 12,
	CAM_SPLINE_QUADRATIC_EASE_IN_OUT = 13,
	CAM_SPLINE_CUBIC_EASE_IN = 14,
	CAM_SPLINE_CUBIC_EASE_OUT = 15,
	CAM_SPLINE_CUBIC_EASE_IN_OUT = 16,
	CAM_SPLINE_QUARTIC_EASE_IN = 17,
	CAM_SPLINE_QUARTIC_EASE_OUT = 18,
	CAM_SPLINE_QUARTIC_EASE_IN_OUT = 19,
	CAM_SPLINE_QUINTIC_EASE_IN = 20,
	CAM_SPLINE_QUINTIC_EASE_OUT = 21,
	CAM_SPLINE_QUINTIC_EASE_IN_OUT = 22,
	CAM_SPLINE_CIRCULAR_EASE_IN = 23,
	CAM_SPLINE_CIRCULAR_EASE_OUT = 24,
	CAM_SPLINE_CIRCULAR_EASE_IN_OUT = 25 
};
```

```
NativeDB Added Parameter 4: int renderingOptions : An integer bitmask of eRenderingOptionFlags to apply specific rendering behaviors during the transition. RO_NO_OPTIONS signifies no special options are applied.
```

```
NativeDB Introduced: v323
```
-- @param bShouldApplyAcrossAllThreads BOOL - If `true`, ensures that the rendering stop request is enforced regardless of other script threads that might still expect rendering to be active. Use with caution to avoid conflicts.
-- @param distanceToBlend float - Specifies the distance over which the camera should blend from the scripted camera back to the gameplay camera. A value of `0.0` uses the game's default blending distance.
-- @param blendType int - An integer representing `eCamSplineSmoothingFlags` to determine the smoothness of the camera transition. Common values include `CAM_SPLINE_SLOW_IN_OUT_SMOOTH` among others, defining the easing of the blend.
-- STOP_RENDERING_SCRIPT_CAMS_USING_CATCH_UP(bShouldApplyAcrossAllThreads, distanceToBlend, blendType)

--- STOP_SCRIPT_GLOBAL_SHAKING
-- Stops the currently active global camera shake that was initiated by a script. You can check if a global camera shake is active using [IS_SCRIPT_GLOBAL_SHAKING](#\_0xC912AF078AF19212).

```
NativeDB Introduced: v323
```
-- @param bStopImmediately BOOL - A boolean indicating whether the camera shake should stop instantly (TRUE) or gradually fade out (FALSE).
-- STOP_SCRIPT_GLOBAL_SHAKING(bStopImmediately)

--- USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME
-- Sets the ambient ped & vehicle population spawning origin to be based around the active scripted camera for this frame
This will prevent vehicles from being created close to the camera and/or on-screen
-- @param vehicles BOOL
-- @param peds BOOL
-- USE_SCRIPT_CAM_FOR_AMBIENT_POPULATION_ORIGIN_THIS_FRAME(vehicles, peds)

--- USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE
-- Applies a predefined set of vehicle camera settings optimized for capturing stunts, effective for the current game update/frame.

```
NativeDB Introduced: v791
```
-- USE_VEHICLE_CAM_STUNT_SETTINGS_THIS_UPDATE()

--- _ACTIVATE_CAM_WITH_INTERP_AND_FOV_CURVE
-- ```
NativeDB Introduced: v3258
```
-- @param camTo Cam
-- @param camFrom Cam
-- @param duration int
-- @param easeLocation int
-- @param easeRotation int
-- @param easeFove int
-- _ACTIVATE_CAM_WITH_INTERP_AND_FOV_CURVE(camTo, camFrom, duration, easeLocation, easeRotation, easeFove)

--- _ANIMATE_GAMEPLAY_CAM_ZOOM
-- ```
Seems to animate the gameplay camera zoom.  
Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);  
will animate the camera zooming in from 1000 meters away.  
Game scripts use it like this:  
// Setting this to 1 prevents V key from changing zoom  
PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);  
// These restrict how far you can move cam up/down left/right  
CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);  
CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);  
CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);  
```
-- @param p0 float
-- @param distance float
-- _ANIMATE_GAMEPLAY_CAM_ZOOM(p0, distance)

--- _ATTACH_CAM_TO_VEHICLE_BONE
-- This native works with vehicles only.
Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA).
-- @param cam Cam - The camera handle.
-- @param vehicle Vehicle - The vehicle handle.
-- @param boneIndex int
-- @param relativeRotation BOOL - Whether or not the camera rotation will relative the vehicle rotation.
-- @param rotX float - The X rotation.
-- @param rotY float - The Y rotation.
-- @param rotZ float - The Z rotation.
-- @param offX float - The X offset direction.
-- @param offY float - The Y offset direction.
-- @param offZ float - The Z offset direction.
-- @param fixedDirection BOOL - Whether or not the camera direction will relative to the vehicle direction.
-- _ATTACH_CAM_TO_VEHICLE_BONE(cam, vehicle, boneIndex, relativeRotation, rotX, rotY, rotZ, offX, offY, offZ, fixedDirection)

--- _CLAMP_GAMEPLAY_CAM_PITCH
-- ```
minimum: Degrees between -90f and 90f.
maximum: Degrees between -90f and 90f.
Clamps the gameplay camera's current pitch.
Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
```
-- @param minimum float
-- @param maximum float
-- _CLAMP_GAMEPLAY_CAM_PITCH(minimum, maximum)

--- _CLAMP_GAMEPLAY_CAM_YAW
-- ```
minimum: Degrees between -180f and 180f.
maximum: Degrees between -180f and 180f.
Clamps the gameplay camera's current yaw.
Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
```
-- @param minimum float
-- @param maximum float
-- _CLAMP_GAMEPLAY_CAM_YAW(minimum, maximum)

--- _DISABLE_CAM_COLLISION_FOR_ENTITY
-- @param entity Entity
-- _DISABLE_CAM_COLLISION_FOR_ENTITY(entity)

--- _DISABLE_FIRST_PERSON_CAM_THIS_FRAME
-- ```
Disables first person camera for the current frame.  
Found in decompiled scripts:  
GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);  
CAM::_DE2EF5DA284CC8DF();  
```
-- _DISABLE_FIRST_PERSON_CAM_THIS_FRAME()

--- _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME
-- _DISABLE_VEHICLE_FIRST_PERSON_CAM_THIS_FRAME()

--- _ENABLE_CROSSHAIR_THIS_FRAME
-- ```
Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.  
```
-- _ENABLE_CROSSHAIR_THIS_FRAME()

--- _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT
-- Enumerated type defined in camControlHelperMetadataViewModes:

```cpp
enum eContext {
    ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
    IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
    ON_BIKE = 2,
    IN_BOAT = 3,
    IN_AIRCRAFT = 4,
    IN_SUBMARINE = 5,
    IN_HELI = 6,
    IN_TURRET = 7,
}
```
-- _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT()

--- _GET_CAM_DOF_STRENGTH
-- ```
NativeDB Introduced: v2699
```
-- @param cam Cam
-- _GET_CAM_DOF_STRENGTH(cam)

--- _GET_CAM_NEAR_DOF
-- ```
NativeDB Introduced: v2699
```
-- @param cam Cam
-- _GET_CAM_NEAR_DOF(cam)

--- _GET_DEBUG_CAMERA
-- ```
NativeDB Introduced: v2372
```
-- _GET_DEBUG_CAMERA()

--- _INTERPOLATE_CAM_WITH_PARAMS
-- Interpolates the camera to specified parameters over a set duration using various curve types for position, rotation, and fov.

```
NativeDB Introduced: v3258
```
-- @param camera Cam
-- @param camPosX float
-- @param camPosY float
-- @param camPosZ float
-- @param camRotX float
-- @param camRotY float
-- @param camRotZ float
-- @param fov float
-- @param duration int
-- @param posCurveType int
-- @param rotCurveType int
-- @param rotOrder int
-- @param fovCurveType int
-- _INTERPOLATE_CAM_WITH_PARAMS(camera, camPosX, camPosY, camPosZ, camRotX, camRotY, camRotZ, fov, duration, posCurveType, rotCurveType, rotOrder, fovCurveType)

--- _INVALIDATE_VEHICLE_IDLE_CAM
-- Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
-- _INVALIDATE_VEHICLE_IDLE_CAM()

--- _IS_AIM_CAM_THIRD_PERSON_ACTIVE
-- ```
IS_A*
```
-- _IS_AIM_CAM_THIRD_PERSON_ACTIVE()

--- _IS_IN_VEHICLE_CAM_DISABLED
-- _IS_IN_VEHICLE_CAM_DISABLED()

--- _REPLAY_FREE_CAM_GET_MAX_RANGE
-- _REPLAY_FREE_CAM_GET_MAX_RANGE()

--- _SET_CAM_DOF_FNUMBER_OF_LENS
-- ```
This native has its name defined inside its codE  
```
-- @param camera Cam
-- @param p1 float
-- _SET_CAM_DOF_FNUMBER_OF_LENS(camera, p1)

--- _SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER
-- ```
Native name labeled within its code
```
-- @param camera Cam
-- @param multiplier float
-- _SET_CAM_DOF_FOCAL_LENGTH_MULTIPLIER(camera, multiplier)

--- _SET_CAM_DOF_FOCUS_DISTANCE_BIAS
-- ```
This native has a name defined inside its code  
```
-- @param camera Cam
-- @param p1 float
-- _SET_CAM_DOF_FOCUS_DISTANCE_BIAS(camera, p1)

--- _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE
-- ```
This native has a name defined inside its code  
```
-- @param camera Cam
-- @param p1 float
-- _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE(camera, p1)

--- _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL
-- ```
This native has a name defined inside its code  
```
-- @param camera Cam
-- @param p1 float
-- _SET_CAM_DOF_MAX_NEAR_IN_FOCUS_DISTANCE_BLEND_LEVEL(camera, p1)

--- _SET_CAM_EFFECT
-- ```
if p0 is 0, effect is cancelled  
if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.  
if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.  
```
-- @param p0 int
-- _SET_CAM_EFFECT(p0)

--- _SET_FIRST_PERSON_CAM_PITCH_RANGE
-- @param minAngle float
-- @param maxAngle float
-- _SET_FIRST_PERSON_CAM_PITCH_RANGE(minAngle, maxAngle)

--- _SET_FLY_CAM_VERTICAL_SPEED_MULTIPLIER
-- @param cam Cam
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- _SET_FLY_CAM_VERTICAL_SPEED_MULTIPLIER(cam, p1, p2, p3)

--- _SET_FOLLOW_TURRET_SEAT_CAM
-- ```
NativeDB Introduced: v1365
```
-- @param seatIndex int - See [IS_TURRET_SEAT](#\_0xE33FFA906CE74880)
-- _SET_FOLLOW_TURRET_SEAT_CAM(seatIndex)

--- _SET_GAMEPLAY_CAM_HASH
-- ```
Sets gameplay camera to hash
```

```
NativeDB Introduced: v1180
```
-- @param camName char*
-- _SET_GAMEPLAY_CAM_HASH(camName)

--- _SET_GAMEPLAY_CAM_RAW_PITCH
-- @param pitch float
-- _SET_GAMEPLAY_CAM_RAW_PITCH(pitch)

--- _SET_GAMEPLAY_CAM_RAW_YAW
-- ```
Does nothing  
```

```
NativeDB Added Parameter 2: Any p1
```
-- @param yaw float
-- _SET_GAMEPLAY_CAM_RAW_YAW(yaw)

--- _SET_GAMEPLAY_CAM_RELATIVE_ROTATION
-- @param roll float
-- @param pitch float
-- @param yaw float
-- _SET_GAMEPLAY_CAM_RELATIVE_ROTATION(roll, pitch, yaw)

--- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA
-- ```
From b617 scripts:
CAM::_21E253A7F8DA5DFB("DINGHY");
CAM::_21E253A7F8DA5DFB("ISSI2");
CAM::_21E253A7F8DA5DFB("SPEEDO");
```
-- @param vehicleName char*
-- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA(vehicleName)

--- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA_NAME
-- @param vehicleModel Hash
-- _SET_GAMEPLAY_CAM_VEHICLE_CAMERA_NAME(vehicleModel)

--- _SET_GAMEPLAY_HINT_ANIM_CLOSEUP
-- @param toggle BOOL
-- _SET_GAMEPLAY_HINT_ANIM_CLOSEUP(toggle)

--- _SET_GAMEPLAY_HINT_ANIM_OFFSETX
-- @param xOffset float
-- _SET_GAMEPLAY_HINT_ANIM_OFFSETX(xOffset)

--- _SET_GAMEPLAY_HINT_ANIM_OFFSETY
-- @param yOffset float
-- _SET_GAMEPLAY_HINT_ANIM_OFFSETY(yOffset)

--- _SET_USE_HI_DOF_IN_CUTSCENE
-- ```
Only used in R* Script fm_mission_controller_2020
```

```
NativeDB Introduced: v2699
```
-- _SET_USE_HI_DOF_IN_CUTSCENE()


-- ========== CLOCK ==========

--- ADD_TO_CLOCK_TIME
-- @param hours int
-- @param minutes int
-- @param seconds int
-- ADD_TO_CLOCK_TIME(hours, minutes, seconds)

--- ADVANCE_CLOCK_TIME_TO
-- @param hour int
-- @param minute int
-- @param second int
-- ADVANCE_CLOCK_TIME_TO(hour, minute, second)

--- GET_CLOCK_DAY_OF_MONTH
-- GET_CLOCK_DAY_OF_MONTH()

--- GET_CLOCK_DAY_OF_WEEK
-- ```
Gets the current day of the week.  
0: Sunday  
1: Monday  
2: Tuesday  
3: Wednesday  
4: Thursday  
5: Friday  
6: Saturday  
```
-- GET_CLOCK_DAY_OF_WEEK()

--- GET_CLOCK_HOURS
-- ```
Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)  
```
-- GET_CLOCK_HOURS()

--- GET_CLOCK_MINUTES
-- ```
Gets the current ingame clock minute.  
```
-- GET_CLOCK_MINUTES()

--- GET_CLOCK_MONTH
-- GET_CLOCK_MONTH()

--- GET_CLOCK_SECONDS
-- ```
Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.  
```
-- GET_CLOCK_SECONDS()

--- GET_CLOCK_YEAR
-- GET_CLOCK_YEAR()

--- GET_LOCAL_TIME
-- ```
Gets local system time as year, month, day, hour, minute and second.  
Example usage:  
int year;  
int month;  
int day;  
int hour;  
int minute;  
int second;  
or use std::tm struct  
TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);  
```
-- @param year int*
-- @param month int*
-- @param day int*
-- @param hour int*
-- @param minute int*
-- @param second int*
-- GET_LOCAL_TIME(year, month, day, hour, minute, second)

--- GET_MILLISECONDS_PER_GAME_MINUTE
-- Returns how many real ms are equal to one game minute.
A getter for [`SetMillisecondsPerGameMinute`](#\_0x36CA2554).
-- GET_MILLISECONDS_PER_GAME_MINUTE()

--- GET_POSIX_TIME
-- ```
Gets system time as year, month, day, hour, minute and second.  
Example usage:  
	int year;  
	int month;  
	int day;  
	int hour;  
	int minute;  
	int second;  
	TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);  
```
-- @param year int*
-- @param month int*
-- @param day int*
-- @param hour int*
-- @param minute int*
-- @param second int*
-- GET_POSIX_TIME(year, month, day, hour, minute, second)

--- GET_UTC_TIME
-- ```
Gets current UTC time
```
-- @param year int*
-- @param month int*
-- @param day int*
-- @param hour int*
-- @param minute int*
-- @param second int*
-- GET_UTC_TIME(year, month, day, hour, minute, second)

--- PAUSE_CLOCK
-- @param toggle BOOL
-- PAUSE_CLOCK(toggle)

--- SET_CLOCK_DATE
-- @param day int
-- @param month int
-- @param year int
-- SET_CLOCK_DATE(day, month, year)

--- SET_CLOCK_TIME
-- ```
SET_CLOCK_TIME(12, 34, 56);  
```
-- @param hour int
-- @param minute int
-- @param second int
-- SET_CLOCK_TIME(hour, minute, second)


-- ========== CUTSCENE ==========

--- 0x011883F41211432A
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param p6 int
-- 0x011883F41211432A(x1, y1, z1, x2, y2, z2, p6)

--- 0x06EE9048FD080382
-- @param p0 BOOL
-- 0x06EE9048FD080382(p0)

--- 0x20746F7B1032A3C7
-- @param p0 BOOL
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- 0x20746F7B1032A3C7(p0, p1, p2, p3)

--- 0x2F137B508DE238F2
-- @param p0 BOOL
-- 0x2F137B508DE238F2(p0)

--- 0x4CEBC1ED31E8925E
-- ```
This function is hard-coded to always return 1.  
```
-- @param cutsceneName char*
-- 0x4CEBC1ED31E8925E(cutsceneName)

--- 0x4FCD976DA686580C
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- 0x4FCD976DA686580C(p0)

--- 0x583DF8E3D4AFBD98
-- 0x583DF8E3D4AFBD98()

--- 0x5EDEF0CF8C1DAB3C
-- 0x5EDEF0CF8C1DAB3C()

--- 0x7F96F23FA9B73327
-- ```
SET_VEHICLE_*
```
-- @param modelHash Hash
-- 0x7F96F23FA9B73327(modelHash)

--- 0x8D9DF6ECA8768583
-- ```
SET_SCRIPT_*
Sets the cutscene's owning thread ID.
```
-- @param threadId int
-- 0x8D9DF6ECA8768583(threadId)

--- 0xA0FE76168A189DDB
-- 0xA0FE76168A189DDB()

--- 0xC61B86C9F61EB404
-- ```
Toggles a value (bool) for cutscenes.
SET_*
```
-- @param toggle BOOL
-- 0xC61B86C9F61EB404(toggle)

--- 0xE36A98D8AB3D3C66
-- @param p0 BOOL
-- 0xE36A98D8AB3D3C66(p0)

--- CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY
-- Returns when it is safe to start applying changes to cutscene entities.

Should always be used for applying components.

See [`SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED`](#\_0x2A56C06EBEF2B0D9) and [`REGISTER_ENTITY_FOR_CUTSCENE`](#\_0xE40C1C56DF95C2E8) for an example.

This will be true before the cutscene is considered loaded
-- CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY()

--- CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY
-- ```
modelHash (p1) was always 0 in R* scripts  
```
-- @param cutsceneEntName char*
-- @param modelHash Hash
-- CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(cutsceneEntName, modelHash)

--- CAN_SET_EXIT_STATE_FOR_CAMERA
-- Whether or not it is safe to run functions on the camera,
as the camera is now no longer being used by the cutscene.
-- @param p0 BOOL - Mostly false
-- CAN_SET_EXIT_STATE_FOR_CAMERA(p0)

--- CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY
-- Returns if the script can begin interacting with the registered entity. Primarly used for lead-outs of cutscenes.
Returns on frame after cutscene ends, so you cannot get is while using IsCutsceneActive()

Whether it is safe to start doing scripted actions on the entity, like simulating walking out of a cutscene.
-- @param cutsceneEntName char* - i.e Michael
-- @param modelHash Hash - Can be 0
-- CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(cutsceneEntName, modelHash)

--- DOES_CUTSCENE_ENTITY_EXIST
-- @param cutsceneEntName char*
-- @param modelHash Hash
-- DOES_CUTSCENE_ENTITY_EXIST(cutsceneEntName, modelHash)

--- GET_CUTSCENE_PLAY_TIME
-- Gets the current time of the cutscene.

```
NativeDB Introduced: v3258
```
-- GET_CUTSCENE_PLAY_TIME()

--- GET_CUTSCENE_SECTION_PLAYING
-- GET_CUTSCENE_SECTION_PLAYING()

--- GET_CUTSCENE_TIME
-- Gets the elapsed time of the current cutscene in
-- GET_CUTSCENE_TIME()

--- GET_CUTSCENE_TOTAL_DURATION
-- Gets the total length of the cutscene irrespective of playback list in milliseconds
To account for sections, see [`_GET_CUTSCENE_END_TIME`](#\_0x971D7B15BCDBEF99)
-- GET_CUTSCENE_TOTAL_DURATION()

--- GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY
-- Returns the handle of a cutscene entity, can be ped
-- @param cutsceneEntName char* - I.E MP\_1, MP\_4, Michael, Trevor
-- @param modelHash Hash - Not strictly neccasary, can get 0
-- GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(cutsceneEntName, modelHash)

--- GET_ENTITY_INDEX_OF_REGISTERED_ENTITY
-- @param cutsceneEntName char*
-- @param modelHash Hash
-- GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(cutsceneEntName, modelHash)

--- HAS_CUTSCENE_CUT_THIS_FRAME
-- HAS_CUTSCENE_CUT_THIS_FRAME()

--- HAS_CUTSCENE_FINISHED
-- HAS_CUTSCENE_FINISHED()

--- HAS_CUTSCENE_LOADED
-- HAS_CUTSCENE_LOADED()

--- HAS_CUT_FILE_LOADED
-- ```
Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
```
-- @param cutsceneName char*
-- HAS_CUT_FILE_LOADED(cutsceneName)

--- HAS_THIS_CUTSCENE_LOADED
-- @param cutsceneName char*
-- HAS_THIS_CUTSCENE_LOADED(cutsceneName)

--- IS_CUTSCENE_ACTIVE
-- IS_CUTSCENE_ACTIVE()

--- IS_CUTSCENE_PLAYBACK_FLAG_SET
-- @param flag int
-- IS_CUTSCENE_PLAYBACK_FLAG_SET(flag)

--- IS_CUTSCENE_PLAYING
-- IS_CUTSCENE_PLAYING()

--- REGISTER_ENTITY_FOR_CUTSCENE
-- This can only be run once [`CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY`](#\_0xB56BBBCC2955D9CB) is true, but can be run before [`HAS_CUTSCENE_LOADED`](#\_0xC59F528E9AB9F339)
-- @param cutsceneEntity Entity - Entity to put into the cutscene.
-- @param cutsceneEntName char* - cHandle of cutscene entity, i.e Michael, MP\_1, MP\_4, Lamar
-- @param p2 int
-- @param modelHash Hash - Not strictly neccasary, often 0 in R\* scripts
-- @param p4 int - 0 for SP, 64 for MP seemingly
-- REGISTER_ENTITY_FOR_CUTSCENE(cutsceneEntity, cutsceneEntName, p2, modelHash, p4)

--- REGISTER_SYNCHRONISED_SCRIPT_SPEECH
-- Only used twice in armenian1.c
-- REGISTER_SYNCHRONISED_SCRIPT_SPEECH()

--- REMOVE_CUTSCENE
-- REMOVE_CUTSCENE()

--- REMOVE_CUT_FILE
-- ```
Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
```
-- @param cutsceneName char*
-- REMOVE_CUT_FILE(cutsceneName)

--- REQUEST_CUTSCENE
-- @param cutsceneName char* - Case insensitive
-- @param flags int - Usually 8
-- REQUEST_CUTSCENE(cutsceneName, flags)

--- REQUEST_CUTSCENE_WITH_PLAYBACK_LIST
-- ```
playbackFlags: Which scenes should be played.
Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
```
-- @param cutsceneName char*
-- @param playbackFlags int
-- @param flags int - Usually 8
-- REQUEST_CUTSCENE_WITH_PLAYBACK_LIST(cutsceneName, playbackFlags, flags)

--- REQUEST_CUT_FILE
-- ```
Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
```
-- @param cutsceneName char*
-- REQUEST_CUT_FILE(cutsceneName)

--- SET_CUTSCENE_CAN_BE_SKIPPED
-- @param p0 BOOL
-- SET_CUTSCENE_CAN_BE_SKIPPED(p0)

--- SET_CUTSCENE_ENTITY_STREAMING_FLAGS
-- Only used in networked environment with MP cutscenes
-- @param cutsceneEntName char* - MP\_1, MP\_2, etc
-- @param p1 int - Always 0 in R\* scripts
-- @param p2 int - Always 1 in R\* scripts
-- SET_CUTSCENE_ENTITY_STREAMING_FLAGS(cutsceneEntName, p1, p2)

--- SET_CUTSCENE_FADE_VALUES
-- @param p0 BOOL
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- SET_CUTSCENE_FADE_VALUES(p0, p1, p2, p3)

--- SET_CUTSCENE_ORIGIN
-- Sets cutscene location, used for multiplayer apartments/businesses.
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param p4 int - Often -1, 0 or 1
-- SET_CUTSCENE_ORIGIN(x, y, z, heading, p4)

--- SET_CUTSCENE_PED_COMPONENT_VARIATION
-- See [`SET_PED_COMPONENT_VARIATION`](#\_0x262B14F48D29DE80)
-- @param cutsceneEntName char*
-- @param componentId int
-- @param drawableId int
-- @param textureId int
-- @param modelHash Hash
-- SET_CUTSCENE_PED_COMPONENT_VARIATION(cutsceneEntName, componentId, drawableId, textureId, modelHash)

--- SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED
-- Sets the components for a cutscene ped, this will take precendence over the cutscene's component overrides. This does not require the entity be registered.

See
-- @param cutsceneEntName char* - cut file cHandle, i.e Michael, Lamar, Franklin, MP\_1-MP\_4 etc
-- @param ped Ped - Ped to copy components from
-- @param modelHash Hash - Not strictly neccasary, can be 0
-- SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED(cutsceneEntName, ped, modelHash)

--- SET_CUTSCENE_PED_PROP_VARIATION
-- See [`SET_PED_PROP_INDEX`](#\_0x93376B65A266EB5F)
-- @param cutsceneEntName char* - i.e Michael, Trevor, MP\_1, MP\_4
-- @param componentId int
-- @param drawableId int
-- @param textureId int
-- @param modelHash Hash
-- SET_CUTSCENE_PED_PROP_VARIATION(cutsceneEntName, componentId, drawableId, textureId, modelHash)

--- SET_CUTSCENE_TRIGGER_AREA
-- ```
Only used twice in R* scripts  
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- SET_CUTSCENE_TRIGGER_AREA(p0, p1, p2, p3, p4, p5)

--- START_CUTSCENE
-- ```
flags: Usually 0.
```
-- @param flags int
-- START_CUTSCENE(flags)

--- START_CUTSCENE_AT_COORDS
-- Similar to [`SET_CUTSCENE_ORIGIN`](#\_0xB812B3FD1C01CF27) but without heading and doesn't need [`START_CUTSCENE`](#\_0x186D5CB5E7B0FF7B)
-- @param x float
-- @param y float
-- @param z float
-- @param flags int - Usually 0
-- START_CUTSCENE_AT_COORDS(x, y, z, flags)

--- STOP_CUTSCENE
-- @param p0 BOOL - Always false
-- STOP_CUTSCENE(p0)

--- STOP_CUTSCENE_IMMEDIATELY
-- Stop cutscene instantly, will dump registered entities right where they were when ran.
-- STOP_CUTSCENE_IMMEDIATELY()

--- WAS_CUTSCENE_SKIPPED
-- WAS_CUTSCENE_SKIPPED()

--- _GET_CUTSCENE_END_TIME
-- Returns the time of the cutscene's end accounting for [`REQUEST_CUTSCENE_WITH_PLAYBACK_LIST`](#\_0xC23DE0E91C30B58C)

If a cutscene is laid out with 10 second sections, and section 0 and 1 are enabled then it would be 20000ms.

```
NativeDB Introduced: v1734
```
-- _GET_CUTSCENE_END_TIME()

--- _GET_CUT_FILE_NUM_SECTIONS
-- @param cutsceneName char*
-- _GET_CUT_FILE_NUM_SECTIONS(cutsceneName)


-- ========== DATAFILE ==========

--- 0x6AD0BD5E087866CB
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0x6AD0BD5E087866CB(p0)

--- 0xA6EEF01087181EDD
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0xA6EEF01087181EDD(p0, p1)

--- 0xDBF860CF1DB8E599
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0xDBF860CF1DB8E599(p0)

--- DATAARRAY_ADD_BOOL
-- @param arrayData Any*
-- @param value BOOL
-- DATAARRAY_ADD_BOOL(arrayData, value)

--- DATAARRAY_ADD_DICT
-- @param arrayData Any*
-- DATAARRAY_ADD_DICT(arrayData)

--- DATAARRAY_ADD_FLOAT
-- @param arrayData Any*
-- @param value float
-- DATAARRAY_ADD_FLOAT(arrayData, value)

--- DATAARRAY_ADD_INT
-- @param arrayData Any*
-- @param value int
-- DATAARRAY_ADD_INT(arrayData, value)

--- DATAARRAY_ADD_STRING
-- @param arrayData Any*
-- @param value char*
-- DATAARRAY_ADD_STRING(arrayData, value)

--- DATAARRAY_ADD_VECTOR
-- @param arrayData Any*
-- @param valueX float
-- @param valueY float
-- @param valueZ float
-- DATAARRAY_ADD_VECTOR(arrayData, valueX, valueY, valueZ)

--- DATAARRAY_GET_BOOL
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_BOOL(arrayData, arrayIndex)

--- DATAARRAY_GET_COUNT
-- @param arrayData Any*
-- DATAARRAY_GET_COUNT(arrayData)

--- DATAARRAY_GET_DICT
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_DICT(arrayData, arrayIndex)

--- DATAARRAY_GET_FLOAT
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_FLOAT(arrayData, arrayIndex)

--- DATAARRAY_GET_INT
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_INT(arrayData, arrayIndex)

--- DATAARRAY_GET_STRING
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_STRING(arrayData, arrayIndex)

--- DATAARRAY_GET_TYPE
-- ```
Types:  
1 = Boolean  
2 = Integer  
3 = Float  
4 = String  
5 = Vector3  
6 = Object  
7 = Array  
```
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_TYPE(arrayData, arrayIndex)

--- DATAARRAY_GET_VECTOR
-- @param arrayData Any*
-- @param arrayIndex int
-- DATAARRAY_GET_VECTOR(arrayData, arrayIndex)

--- DATADICT_CREATE_ARRAY
-- @param objectData Any*
-- @param key char*
-- DATADICT_CREATE_ARRAY(objectData, key)

--- DATADICT_CREATE_DICT
-- @param objectData Any*
-- @param key char*
-- DATADICT_CREATE_DICT(objectData, key)

--- DATADICT_GET_ARRAY
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_ARRAY(objectData, key)

--- DATADICT_GET_BOOL
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_BOOL(objectData, key)

--- DATADICT_GET_DICT
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_DICT(objectData, key)

--- DATADICT_GET_FLOAT
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_FLOAT(objectData, key)

--- DATADICT_GET_INT
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_INT(objectData, key)

--- DATADICT_GET_STRING
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_STRING(objectData, key)

--- DATADICT_GET_TYPE
-- ```
Types:  
1 = Boolean  
2 = Integer  
3 = Float  
4 = String  
5 = Vector3  
6 = Object  
7 = Array  
```
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_TYPE(objectData, key)

--- DATADICT_GET_VECTOR
-- @param objectData Any*
-- @param key char*
-- DATADICT_GET_VECTOR(objectData, key)

--- DATADICT_SET_BOOL
-- @param objectData Any*
-- @param key char*
-- @param value BOOL
-- DATADICT_SET_BOOL(objectData, key, value)

--- DATADICT_SET_FLOAT
-- @param objectData Any*
-- @param key char*
-- @param value float
-- DATADICT_SET_FLOAT(objectData, key, value)

--- DATADICT_SET_INT
-- @param objectData Any*
-- @param key char*
-- @param value int
-- DATADICT_SET_INT(objectData, key, value)

--- DATADICT_SET_STRING
-- @param objectData Any*
-- @param key char*
-- @param value char*
-- DATADICT_SET_STRING(objectData, key, value)

--- DATADICT_SET_VECTOR
-- @param objectData Any*
-- @param key char*
-- @param valueX float
-- @param valueY float
-- @param valueZ float
-- DATADICT_SET_VECTOR(objectData, key, valueX, valueY, valueZ)

--- DATAFILE_CLEAR_WATCH_LIST
-- DATAFILE_CLEAR_WATCH_LIST()

--- DATAFILE_CREATE
-- ```
NativeDB Added Parameter 1: int p0
```
-- DATAFILE_CREATE()

--- DATAFILE_DELETE
-- ```
NativeDB Added Parameter 1: int p0
```
-- DATAFILE_DELETE()

--- DATAFILE_DELETE_REQUESTED_FILE
-- @param p0 Any
-- DATAFILE_DELETE_REQUESTED_FILE(p0)

--- DATAFILE_FLUSH_MISSION_HEADER
-- DATAFILE_FLUSH_MISSION_HEADER()

--- DATAFILE_GET_FILE_DICT
-- ```
NativeDB Added Parameter 1: int p0
```
-- DATAFILE_GET_FILE_DICT()

--- DATAFILE_HAS_LOADED_FILE_DATA
-- @param p0 Any
-- DATAFILE_HAS_LOADED_FILE_DATA(p0)

--- DATAFILE_HAS_VALID_FILE_DATA
-- @param p0 Any
-- DATAFILE_HAS_VALID_FILE_DATA(p0)

--- DATAFILE_IS_SAVE_PENDING
-- ```
Example:  
if (!DATAFILE::_BEDB96A7584AA8CF())  
{  
    if (!g_109E3)  
	{  
        if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))  
{  
            if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())  
	{  
                g_17A8B = 0;  
            }  
            if (!g_D52C)  
	{  
                sub_730();  
            }  
        }  
    }  
}  
```
-- DATAFILE_IS_SAVE_PENDING()

--- DATAFILE_IS_VALID_REQUEST_ID
-- @param index int
-- DATAFILE_IS_VALID_REQUEST_ID(index)

--- DATAFILE_LOAD_OFFLINE_UGC
-- ```
Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
Returns whether or not the file was successfully loaded.
Example:
DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"
```

```
NativeDB Added Parameter 2: Any p1
```
-- @param filename char*
-- DATAFILE_LOAD_OFFLINE_UGC(filename)

--- DATAFILE_SELECT_ACTIVE_FILE
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 Any
-- DATAFILE_SELECT_ACTIVE_FILE(p0)

--- DATAFILE_SELECT_CREATOR_STATS
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 int
-- DATAFILE_SELECT_CREATOR_STATS(p0)

--- DATAFILE_SELECT_UGC_DATA
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 int
-- DATAFILE_SELECT_UGC_DATA(p0)

--- DATAFILE_SELECT_UGC_PLAYER_DATA
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 int
-- DATAFILE_SELECT_UGC_PLAYER_DATA(p0)

--- DATAFILE_SELECT_UGC_STATS
-- ```
NativeDB Added Parameter 3: Any p2
```
-- @param p0 int
-- @param p1 BOOL
-- DATAFILE_SELECT_UGC_STATS(p0, p1)

--- DATAFILE_START_SAVE_TO_CLOUD
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param filename char*
-- DATAFILE_START_SAVE_TO_CLOUD(filename)

--- DATAFILE_STORE_MISSION_HEADER
-- ```
NativeDB Added Parameter 1: int p0
```
-- DATAFILE_STORE_MISSION_HEADER()

--- DATAFILE_UPDATE_SAVE_TO_CLOUD
-- @param p0 BOOL*
-- DATAFILE_UPDATE_SAVE_TO_CLOUD(p0)

--- DATAFILE_WATCH_REQUEST_ID
-- ```
Adds the given request ID to the watch list.
```
-- @param id int
-- DATAFILE_WATCH_REQUEST_ID(id)

--- UGC_CREATE_CONTENT
-- ```
NativeDB Added Parameter 8: Any p7
```
-- @param data char*
-- @param dataCount int
-- @param contentName char*
-- @param description char*
-- @param tagsCsv char*
-- @param contentTypeName char*
-- @param publish BOOL
-- UGC_CREATE_CONTENT(data, dataCount, contentName, description, tagsCsv, contentTypeName, publish)

--- UGC_CREATE_MISSION
-- ```
NativeDB Added Parameter 6: Any p5
```
-- @param contentName char*
-- @param description char*
-- @param tagsCsv char*
-- @param contentTypeName char*
-- @param publish BOOL
-- UGC_CREATE_MISSION(contentName, description, tagsCsv, contentTypeName, publish)

--- UGC_SET_PLAYER_DATA
-- ```
NativeDB Added Parameter 4: Any p3
```
-- @param contentId char*
-- @param rating float
-- @param contentTypeName char*
-- UGC_SET_PLAYER_DATA(contentId, rating, contentTypeName)

--- UGC_UPDATE_CONTENT
-- ```
NativeDB Added Parameter 8: Any p7
```
-- @param contentId char*
-- @param data Any*
-- @param dataCount int
-- @param contentName char*
-- @param description char*
-- @param tagsCsv char*
-- @param contentTypeName char*
-- UGC_UPDATE_CONTENT(contentId, data, dataCount, contentName, description, tagsCsv, contentTypeName)

--- UGC_UPDATE_MISSION
-- ```
NativeDB Added Parameter 6: Any p5
```
-- @param contentId char*
-- @param contentName char*
-- @param description char*
-- @param tagsCsv char*
-- @param contentTypeName char*
-- UGC_UPDATE_MISSION(contentId, contentName, description, tagsCsv, contentTypeName)


-- ========== DECORATOR ==========

--- DECOR_EXIST_ON
-- ```
Returns whether or not the specified property is set for the entity.  
```
-- @param entity Entity
-- @param propertyName char*
-- DECOR_EXIST_ON(entity, propertyName)

--- DECOR_GET_BOOL
-- @param entity Entity
-- @param propertyName char*
-- DECOR_GET_BOOL(entity, propertyName)

--- DECOR_GET_FLOAT
-- @param entity Entity
-- @param propertyName char*
-- DECOR_GET_FLOAT(entity, propertyName)

--- DECOR_GET_INT
-- @param entity Entity
-- @param propertyName char*
-- DECOR_GET_INT(entity, propertyName)

--- DECOR_IS_REGISTERED_AS_TYPE
-- @param propertyName char*
-- @param type int - See [`DECOR_REGISTER`](#\_0x9FD90732F56403CE).
-- DECOR_IS_REGISTERED_AS_TYPE(propertyName, type)

--- DECOR_REGISTER
-- ```cpp
enum eDecorType
{
    DECOR_TYPE_FLOAT = 1,
    DECOR_TYPE_BOOL = 2,
    DECOR_TYPE_INT = 3,
    DECOR_TYPE_STRING = 4,
    DECOR_TYPE_TIME = 5
};
```
-- @param propertyName char*
-- @param type int
-- DECOR_REGISTER(propertyName, type)

--- DECOR_REGISTER_LOCK
-- ```
Called after all decorator type initializations.  
```
-- DECOR_REGISTER_LOCK()

--- DECOR_REMOVE
-- @param entity Entity
-- @param propertyName char*
-- DECOR_REMOVE(entity, propertyName)

--- DECOR_SET_BOOL
-- ```
This function sets metadata of type bool to specified entity.  
```
-- @param entity Entity
-- @param propertyName char*
-- @param value BOOL
-- DECOR_SET_BOOL(entity, propertyName, value)

--- DECOR_SET_FLOAT
-- @param entity Entity
-- @param propertyName char*
-- @param value float
-- DECOR_SET_FLOAT(entity, propertyName, value)

--- DECOR_SET_INT
-- ```
Sets property to int.  
```
-- @param entity Entity
-- @param propertyName char*
-- @param value int
-- DECOR_SET_INT(entity, propertyName, value)

--- DECOR_SET_TIME
-- @param entity Entity
-- @param propertyName char*
-- @param timestamp int
-- DECOR_SET_TIME(entity, propertyName, timestamp)


-- ========== DLC ==========

--- 0x241FCA5B1AA14F75
-- ```
Only used once in scripts, in maintransition.
maintransition.c4, line ~82432:
if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {
    g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
    return 1;
}
Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
Most likely ARE_*
```
-- 0x241FCA5B1AA14F75()

--- 0x9489659372A81585
-- 0x9489659372A81585()

--- 0xA213B11DFF526300
-- 0xA213B11DFF526300()

--- 0xC4637A6D03C24CC3
-- GET_IS_LOADING_\*

```
NativeDB Introduced: v1734
```
-- 0xC4637A6D03C24CC3()

--- 0xF2E07819EF1A5289
-- 0xF2E07819EF1A5289()

--- GET_IS_LOADING_SCREEN_ACTIVE
-- GET_IS_LOADING_SCREEN_ACTIVE()

--- HAS_CLOUD_REQUESTS_FINISHED
-- ```
Sets the value of the specified variable to 0.
Always returns true.
```
-- @param variable BOOL*
-- @param unused Any
-- HAS_CLOUD_REQUESTS_FINISHED(variable, unused)

--- IS_DLC_PRESENT
-- ```
Example:
DLC::IS_DLC_PRESENT($\mpbusiness2\);
($ = gethashkey)
bruteforce these:
0xB119F6D
0x96F02EE6
```
-- @param dlcHash Hash
-- IS_DLC_PRESENT(dlcHash)

--- ON_ENTER_MP
-- ```
This loads the GTA:O dlc map parts (high end garages, apartments).
Works in singleplayer.
In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
```
-- ON_ENTER_MP()

--- ON_ENTER_SP
-- ```
Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
The original (and wrong) definition is below:
This unload the GTA:O DLC map parts (like high end garages/apartments).
Works in singleplayer.
```
-- ON_ENTER_SP()

--- _GET_EXTRA_CONTENT_PACK_HAS_BEEN_INSTALLED
-- _GET_EXTRA_CONTENT_PACK_HAS_BEEN_INSTALLED()


-- ========== ENTITY ==========

--- 0x1A092BB0C3808B96
-- ```
SET_ENTITY_*  
```
-- @param entity Entity
-- @param p1 BOOL
-- 0x1A092BB0C3808B96(entity, p1)

--- 0x352E2B5CF420BF3B
-- @param p0 Any
-- @param p1 Any
-- 0x352E2B5CF420BF3B(p0, p1)

--- 0x36F32DE87082343E
-- @param p0 Any
-- @param p1 Any
-- 0x36F32DE87082343E(p0, p1)

--- 0x490861B88F4FD846
-- ```
Does nothing (essentially a nullsub).
```
-- @param p0 Any
-- 0x490861B88F4FD846(p0)

--- 0x5C3B791D580E0BC2
-- ```
Only called once in the scripts.  
Related to weapon objects.  
```
-- @param entity Entity
-- @param p1 float
-- 0x5C3B791D580E0BC2(entity, p1)

--- 0x68B562E124CC0AEF
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- 0x68B562E124CC0AEF(p0, p1)

--- 0x78E8E3A640178255
-- ```
Related to cutscene entities. Unsure about the use.
SET_ENTITY_*
```
-- @param entity Entity
-- 0x78E8E3A640178255(entity)

--- 0xB17BC6453F6CF5AC
-- @param p0 Any
-- @param p1 Any
-- 0xB17BC6453F6CF5AC(p0, p1)

--- 0xC34BC448DA29F5E9
-- ```
SET_ENTITY_*
```
-- @param entity Entity
-- @param toggle BOOL
-- 0xC34BC448DA29F5E9(entity, toggle)

--- 0xCEA7C8E1B48FF68C
-- @param p0 Any
-- @param p1 Any
-- 0xCEA7C8E1B48FF68C(p0, p1)

--- 0xE66377CDDADA4810
-- SET_ENTITY_M\*

```
NativeDB Introduced: v1734
```
-- @param entity Entity
-- @param p1 BOOL
-- 0xE66377CDDADA4810(entity, p1)

--- APPLY_FORCE_TO_ENTITY
-- Applies a force to the specified entity.

```cpp
enum eForceType
{
    MinForce = 0,
    MaxForceRot = 1,
    MinForce2 = 2,
    MaxForceRot2 = 3,
    ForceNoRot = 4,
    ForceRotPlusForce = 5
}
```

Research/documentation on the gtaforums can be found [here](https://gtaforums.com/topic/885669-precisely-define-object-physics/) and [here](https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/).
-- @param entity Entity - The entity you want to apply a force on
-- @param forceType int - Refer to `eForceType`
-- @param x float - Force amount (X)
-- @param y float - Force amount (Y)
-- @param z float - Force amount (Z)
-- @param offX float - Rotation/offset force (X)
-- @param offY float - Rotation/offset force (Y)
-- @param offZ float - Rotation/offset force (Z)
-- @param boneIndex int - (Often 0) Entity bone index
-- @param isDirectionRel BOOL - (Usually false) Vector defined in local (body-fixed) coordinate frame
-- @param ignoreUpVec BOOL - (Usually true)
-- @param isForceRel BOOL - (Usually true) When true, force gets multiplied with the objects mass and different objects will have the same acceleration
-- @param p12 BOOL - (Usually false)
-- @param p13 BOOL - (Usually true)
-- APPLY_FORCE_TO_ENTITY(entity, forceType, x, y, z, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel, p12, p13)

--- APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS
-- @param entity Entity
-- @param forceType int - Refer to [APPLY_FORCE_TO_ENTITY](#\_0xC5F68BE9613E2D18)
-- @param x float
-- @param y float
-- @param z float
-- @param p5 BOOL
-- @param isDirectionRel BOOL
-- @param isForceRel BOOL
-- @param p8 BOOL
-- APPLY_FORCE_TO_ENTITY_CENTER_OF_MASS(entity, forceType, x, y, z, p5, isDirectionRel, isForceRel, p8)

--- ATTACH_ENTITY_TO_ENTITY
-- Attach an entity to the specified entity.
-- @param entity1 Entity - Entity to attach.
-- @param entity2 Entity - Entity to attach `entity1` with.
-- @param boneIndex int - This is different to boneID, use ['GET_PED_BONE_INDEX'](#\_0x3F428D08BE5AAE31) to get the index from the ID. use the index for attaching to specific bones. `entity1` will be attached to the center of `entity2` if bone index given doesn't correspond to bone indexes for that entity type.
-- @param xPos float - X-axis offset from the center of `entity2`.
-- @param yPos float - Y-axis offset from the center of `entity2`.
-- @param zPos float - Z-axis offset from the center of `entity2`.
-- @param xRot float - X-axis rotation.
-- @param yRot float - Y-axis rotation.
-- @param zRot float - Z-axis rotation.
-- @param p9 BOOL - Unknown. Does not seem to have any effect.
-- @param useSoftPinning BOOL - If set to false attached entity will not detach when fixed.
-- @param collision BOOL - Controls collision between the two entities (FALSE disables collision).
-- @param isPed BOOL - Pitch doesnt work when false and roll will only work on negative numbers (only peds)
-- @param rotationOrder int - The order in which the rotation is applied. See [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9)
-- @param syncRot BOOL - If false it ignores entity rotation.
-- ATTACH_ENTITY_TO_ENTITY(entity1, entity2, boneIndex, xPos, yPos, zPos, xRot, yRot, zRot, p9, useSoftPinning, collision, isPed, rotationOrder, syncRot)

--- ATTACH_ENTITY_TO_ENTITY_PHYSICALLY
-- ```
breakForce is the amount of force required to break the bond.
p14 - is always 1 in scripts
p15 - is 1 or 0 in scripts - unknown what it does
p16 - controls collision between the two entities (FALSE disables collision).
p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
p18 - is always 2 in scripts.
```
-- @param entity1 Entity
-- @param entity2 Entity
-- @param boneIndex1 int
-- @param boneIndex2 int
-- @param xPos1 float
-- @param yPos1 float
-- @param zPos1 float
-- @param xPos2 float
-- @param yPos2 float
-- @param zPos2 float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param breakForce float
-- @param fixedRot BOOL
-- @param p15 BOOL
-- @param collision BOOL
-- @param teleport BOOL
-- @param p18 int
-- ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, xRot, yRot, zRot, breakForce, fixedRot, p15, collision, teleport, p18)

--- CLEAR_ENTITY_LAST_DAMAGE_ENTITY
-- This native **could affect** the arguments of the `CEventNetworkEntityDamage` game event, by clearing the damaging entity before the event is fired.
-- @param entity Entity - The entity to clear the last damaging entity from.
-- CLEAR_ENTITY_LAST_DAMAGE_ENTITY(entity)

--- CREATE_FORCED_OBJECT
-- @param x float
-- @param y float
-- @param z float
-- @param p3 Any
-- @param modelHash Hash
-- @param p5 BOOL
-- CREATE_FORCED_OBJECT(x, y, z, p3, modelHash, p5)

--- CREATE_MODEL_HIDE
-- ```
p5 = sets as true in scripts  
Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.  
Network players do not see changes done with this.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param model Hash
-- @param p5 BOOL
-- CREATE_MODEL_HIDE(x, y, z, radius, model, p5)

--- CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param model Hash
-- @param p5 BOOL
-- CREATE_MODEL_HIDE_EXCLUDING_SCRIPT_OBJECTS(x, y, z, radius, model, p5)

--- CREATE_MODEL_SWAP
-- ```
Only works with objects!  
Network players do not see changes done with this.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param originalModel Hash
-- @param newModel Hash
-- @param p6 BOOL
-- CREATE_MODEL_SWAP(x, y, z, radius, originalModel, newModel, p6)

--- DELETE_ENTITY
-- Delete the specified entity, and invalidate the passed handle (i.e., the in/out argument).
You might want to check if the entity exists before with [DOES_ENTITY_EXIST](#\_0x7239B21A38F536BA).
-- @param entity Entity* - The entity to delete.
-- DELETE_ENTITY(entity)

--- DETACH_ENTITY
-- @param entity Entity
-- @param dynamic BOOL - Set to `true` to keep velocity after detaching
-- @param collision BOOL
-- DETACH_ENTITY(entity, dynamic, collision)

--- DOES_ENTITY_BELONG_TO_THIS_SCRIPT
-- @param entity Entity
-- @param p2 BOOL
-- DOES_ENTITY_BELONG_TO_THIS_SCRIPT(entity, p2)

--- DOES_ENTITY_EXIST
-- Checks whether an entity exists in the game world.
-- @param entity Entity - The entity to check if it exists.
-- DOES_ENTITY_EXIST(entity)

--- DOES_ENTITY_HAVE_DRAWABLE
-- @param entity Entity
-- DOES_ENTITY_HAVE_DRAWABLE(entity)

--- DOES_ENTITY_HAVE_PHYSICS
-- @param entity Entity
-- DOES_ENTITY_HAVE_PHYSICS(entity)

--- FIND_ANIM_EVENT_PHASE
-- ```
In the script "player_scene_t_bbfight.c4":  
"if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4/*16*/], v_9, &v_A, &v_B))"  
-- &l_16E (p0) is requested as an anim dictionary earlier in the script.  
-- &l_19F[v_4/*16*/] (p1) is used in other natives in the script as the "animation" param.  
-- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim  
--v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:   
"if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"  
Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though  
-alphazolam  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param animDictionary char*
-- @param animName char*
-- @param p2 char*
-- @param p3 Any*
-- @param p4 Any*
-- FIND_ANIM_EVENT_PHASE(animDictionary, animName, p2, p3, p4)

--- FORCE_ENTITY_AI_AND_ANIMATION_UPDATE
-- ```
Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.  
```
-- @param entity Entity
-- FORCE_ENTITY_AI_AND_ANIMATION_UPDATE(entity)

--- FREEZE_ENTITY_POSITION
-- Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B).
-- @param entity Entity - The entity to freeze/unfreeze.
-- @param toggle BOOL - Freeze or unfreeze entity.
-- FREEZE_ENTITY_POSITION(entity, toggle)

--- GET_ANIM_DURATION
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param animDict char*
-- @param animName char*
-- GET_ANIM_DURATION(animDict, animName)

--- GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY
-- @param entity Entity
-- GET_COLLISION_NORMAL_OF_LAST_HIT_FOR_ENTITY(entity)

--- GET_ENTITY_ALPHA
-- @param entity Entity
-- GET_ENTITY_ALPHA(entity)

--- GET_ENTITY_ANIM_CURRENT_TIME
-- ```
Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.  
Example:  
0.000000 - mark the starting of animation.  
0.500000 - mark the midpoint of the animation.  
1.000000 - mark the end of animation.  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param animDict char*
-- @param animName char*
-- GET_ENTITY_ANIM_CURRENT_TIME(entity, animDict, animName)

--- GET_ENTITY_ANIM_TOTAL_TIME
-- ```
Returns a float value representing animation's total playtime in milliseconds.  
Example:  
GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")   
return 20800.000000  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param animDict char*
-- @param animName char*
-- GET_ENTITY_ANIM_TOTAL_TIME(entity, animDict, animName)

--- GET_ENTITY_ATTACHED_TO
-- @param entity Entity
-- GET_ENTITY_ATTACHED_TO(entity)

--- GET_ENTITY_BONE_INDEX_BY_NAME
-- ```
Returns the index of the bone. If the bone was not found, -1 will be returned.   
list:  
pastebin.com/D7JMnX1g  
BoneNames:  
	chassis,  
	windscreen,  
	seat_pside_r,  
	seat_dside_r,  
	bodyshell,  
	suspension_lm,  
	suspension_lr,  
	platelight,  
	attach_female,  
	attach_male,  
	bonnet,  
	boot,  
	chassis_dummy,	//Center of the dummy  
	chassis_Control,	//Not found yet  
	door_dside_f,	//Door left, front  
	door_dside_r,	//Door left, back  
	door_pside_f,	//Door right, front  
	door_pside_r,	//Door right, back  
	Gun_GripR,  
	windscreen_f,  
	platelight,	//Position where the light above the numberplate is located  
	VFX_Emitter,  
	window_lf,	//Window left, front  
	window_lr,	//Window left, back  
	window_rf,	//Window right, front  
	window_rr,	//Window right, back  
	engine,	//Position of the engine  
	gun_ammo,  
	ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".  
	wheel_lf,	//Wheel left, front  
	wheel_lr,	//Wheel left, back  
	wheel_rf,	//Wheel right, front  
	wheel_rr,	//Wheel right, back  
	exhaust,	//Exhaust. shows only the position of the stock-exhaust  
	overheat,	//A position on the engine(not exactly sure, how to name it)  
	misc_e,	//Not a car-bone.  
	seat_dside_f,	//Driver-seat  
	seat_pside_f,	//Seat next to driver  
	Gun_Nuzzle,  
	seat_r  
I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.  
```
-- @param entity Entity
-- @param boneName char*
-- GET_ENTITY_BONE_INDEX_BY_NAME(entity, boneName)

--- GET_ENTITY_CAN_BE_DAMAGED
-- @param entity Entity
-- GET_ENTITY_CAN_BE_DAMAGED(entity)

--- GET_ENTITY_COLLISION_DISABLED
-- @param entity Entity
-- GET_ENTITY_COLLISION_DISABLED(entity)

--- GET_ENTITY_COORDS
-- Gets the current coordinates (world position) for a specified entity.
-- @param entity Entity - The entity to get the coordinates from.
-- @param alive BOOL - Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- GET_ENTITY_COORDS(entity, alive)

--- GET_ENTITY_FORWARD_VECTOR
-- ```
Gets the entity's forward vector.
```
-- @param entity Entity - The entity to get the forward vector for.
-- GET_ENTITY_FORWARD_VECTOR(entity)

--- GET_ENTITY_FORWARD_X
-- ```
Gets the X-component of the entity's forward vector.  
```
-- @param entity Entity
-- GET_ENTITY_FORWARD_X(entity)

--- GET_ENTITY_FORWARD_Y
-- ```
Gets the Y-component of the entity's forward vector.  
```
-- @param entity Entity
-- GET_ENTITY_FORWARD_Y(entity)

--- GET_ENTITY_HEADING
-- ```
Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
```
-- @param entity Entity - The entity to get the heading from.
-- GET_ENTITY_HEADING(entity)

--- GET_ENTITY_HEADING_FROM_EULERS
-- Gets the heading of the entity physics in degrees, which tends to be more accurate than just [`GET_ENTITY_HEADING`](#\_0xE83D4F9BA2A38914). This can be clearly seen while, for example, ragdolling a ped/player.
-- @param entity Entity - The entity to get the heading from.
-- GET_ENTITY_HEADING_FROM_EULERS(entity)

--- GET_ENTITY_HEALTH
-- ```
Returns an integer value of entity's current health.
Example of range for ped:
- Player [0 to 200]
- Ped [100 to 200]
- Vehicle [0 to 1000]
- Object [0 to 1000]
Health is actually a float value but this native casts it to int.
In order to get the actual value, do:
float health = *(float *)(entityAddress + 0x280);
```
-- @param entity Entity - The entity to get the health from.
-- GET_ENTITY_HEALTH(entity)

--- GET_ENTITY_HEIGHT
-- @param entity Entity
-- @param X float
-- @param Y float
-- @param Z float
-- @param atTop BOOL
-- @param inWorldCoords BOOL
-- GET_ENTITY_HEIGHT(entity, X, Y, Z, atTop, inWorldCoords)

--- GET_ENTITY_HEIGHT_ABOVE_GROUND
-- ```
Return height (z-dimension) above ground.   
Example: The pilot in a titan plane is 1.844176 above ground.  
How can i convert it to meters?  
Everything seems to be in meters, probably this too.  
```
-- @param entity Entity
-- GET_ENTITY_HEIGHT_ABOVE_GROUND(entity)

--- GET_ENTITY_LOD_DIST
-- ```
Returns the LOD distance of an entity.  
```
-- @param entity Entity
-- GET_ENTITY_LOD_DIST(entity)

--- GET_ENTITY_MATRIX
-- @param entity Entity
-- @param forwardVector Vector3*
-- @param rightVector Vector3*
-- @param upVector Vector3*
-- @param position Vector3*
-- GET_ENTITY_MATRIX(entity, forwardVector, rightVector, upVector, position)

--- GET_ENTITY_MAX_HEALTH
-- ```
Return an integer value of entity's maximum health.  
Example:  
- Player = 200  
```
-- @param entity Entity
-- GET_ENTITY_MAX_HEALTH(entity)

--- GET_ENTITY_MODEL
-- Returns the model hash from an entity.
-- @param entity Entity - The entity to get the model for.
-- GET_ENTITY_MODEL(entity)

--- GET_ENTITY_PITCH
-- @param entity Entity
-- GET_ENTITY_PITCH(entity)

--- GET_ENTITY_POPULATION_TYPE
-- A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
-- @param entity Entity - The entity to obtain the population type from.
-- GET_ENTITY_POPULATION_TYPE(entity)

--- GET_ENTITY_QUATERNION
-- ```
w is the correct parameter name!  
```
-- @param entity Entity
-- @param x float*
-- @param y float*
-- @param z float*
-- @param w float*
-- GET_ENTITY_QUATERNION(entity, x, y, z, w)

--- GET_ENTITY_ROLL
-- ```
Displays the current ROLL axis of the entity [-180.0000/180.0000+]  
(Sideways Roll) such as a vehicle tipped on its side  
```
-- @param entity Entity
-- GET_ENTITY_ROLL(entity)

--- GET_ENTITY_ROTATION
-- **NOTE**: What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.

```cpp
enum eRotationOrder {
    // Rotate around the z-axis, then the y-axis and finally the x-axis.
    ROT_ZYX = 0,
    // Rotate around the y-axis, then the z-axis and finally the x-axis.
    ROT_YZX = 1,
    // Rotate around the z-axis, then the x-axis and finally the y-axis.
    ROT_ZXY = 2,
    // Rotate around the x-axis, then the z-axis and finally the y-axis.
    ROT_XZY = 3,
    // Rotate around the y-axis, then the x-axis and finally the z-axis.
    ROT_YXZ = 4,
    // Rotate around the x-axis, then the y-axis and finally the z-axis.
    ROT_XYZ = 5,
}
```
-- @param entity Entity - The entity to get the rotation for.
-- @param rotationOrder int - The order yaw, pitch and roll is applied. Usually 2.
-- GET_ENTITY_ROTATION(entity, rotationOrder)

--- GET_ENTITY_ROTATION_VELOCITY
-- @param entity Entity
-- GET_ENTITY_ROTATION_VELOCITY(entity)

--- GET_ENTITY_SCRIPT
-- ```
All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.  
```
-- @param entity Entity
-- @param script ScrHandle*
-- GET_ENTITY_SCRIPT(entity, script)

--- GET_ENTITY_SPEED
-- Get the speed of a entity.
-- @param entity Entity - Entity id you want to test for speed.
-- GET_ENTITY_SPEED(entity)

--- GET_ENTITY_SPEED_VECTOR
-- ```
Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).  
```
-- @param entity Entity
-- @param relative BOOL
-- GET_ENTITY_SPEED_VECTOR(entity, relative)

--- GET_ENTITY_SUBMERGED_LEVEL
-- ```
Get how much of the entity is submerged.  1.0f is whole entity.  
```
-- @param entity Entity
-- GET_ENTITY_SUBMERGED_LEVEL(entity)

--- GET_ENTITY_TYPE
-- ```
Returns:
0 = no entity
1 = ped
2 = vehicle
3 = object
```
-- @param entity Entity
-- GET_ENTITY_TYPE(entity)

--- GET_ENTITY_UPRIGHT_VALUE
-- @param entity Entity
-- GET_ENTITY_UPRIGHT_VALUE(entity)

--- GET_ENTITY_VELOCITY
-- @param entity Entity
-- GET_ENTITY_VELOCITY(entity)

--- GET_LAST_MATERIAL_HIT_BY_ENTITY
-- @param entity Entity
-- GET_LAST_MATERIAL_HIT_BY_ENTITY(entity)

--- GET_NEAREST_PLAYER_TO_ENTITY
-- @param entity Entity
-- GET_NEAREST_PLAYER_TO_ENTITY(entity)

--- GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM
-- @param entity Entity
-- @param team int
-- GET_NEAREST_PLAYER_TO_ENTITY_ON_TEAM(entity, team)

--- GET_OBJECT_INDEX_FROM_ENTITY_INDEX
-- ```
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
```
-- @param entity Entity
-- GET_OBJECT_INDEX_FROM_ENTITY_INDEX(entity)

--- GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS
-- ```
Converts world coords (posX - Z) to coords relative to the entity  
Example:  
posX = 50  
posY = 1000  
posZ = 60  
Entity's coords are: x=30, y=1000, z=60.  
All three returned coords will then be in range of [-20,20] depending on rotation of the entity.  
```
-- @param entity Entity
-- @param posX float
-- @param posY float
-- @param posZ float
-- GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(entity, posX, posY, posZ)

--- GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS
-- ```
Offset values are relative to the entity.  
x = left/right  
y = forward/backward  
z = up/down  
```
-- @param entity Entity
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(entity, offsetX, offsetY, offsetZ)

--- GET_PED_INDEX_FROM_ENTITY_INDEX
-- ```
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
```
-- @param entity Entity
-- GET_PED_INDEX_FROM_ENTITY_INDEX(entity)

--- GET_VEHICLE_INDEX_FROM_ENTITY_INDEX
-- ```
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
```
-- @param entity Entity
-- GET_VEHICLE_INDEX_FROM_ENTITY_INDEX(entity)

--- GET_WORLD_POSITION_OF_ENTITY_BONE
-- ```
Returns the coordinates of an entity-bone.  
```
-- @param entity Entity
-- @param boneIndex int
-- GET_WORLD_POSITION_OF_ENTITY_BONE(entity, boneIndex)

--- HAS_ANIM_EVENT_FIRED
-- ```
if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))
```
-- @param entity Entity
-- @param actionHash Hash
-- HAS_ANIM_EVENT_FIRED(entity, actionHash)

--- HAS_COLLISION_LOADED_AROUND_ENTITY
-- @param entity Entity
-- HAS_COLLISION_LOADED_AROUND_ENTITY(entity)

--- HAS_ENTITY_ANIM_FINISHED
-- ```
P3 is always 3 as far as i cant tell  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param animDict char*
-- @param animName char*
-- @param p3 int
-- HAS_ENTITY_ANIM_FINISHED(entity, animDict, animName, p3)

--- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT
-- @param entity Entity
-- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(entity)

--- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED
-- @param entity Entity
-- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(entity)

--- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE
-- @param entity Entity
-- HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(entity)

--- HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY
-- @param entity Entity - The entity to check.
-- @param damager Entity - The entity that caused the damage.
-- @param bCheckDamagerVehicle BOOL - If the damager is driving a vehicle then check to see if the entity was damaged by the vehicle.
-- HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(entity, damager, bCheckDamagerVehicle)

--- HAS_ENTITY_CLEAR_LOS_TO_ENTITY
-- Checks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.

The direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false.
-- @param entity1 Entity - Entity to start from
-- @param entity2 Entity - Entity to check to
-- @param flags int - A bit mask with bits 1, 2, 4, etc, relating to collider types (see: [START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE](#\_0x377906D8A31E5586)). 17 is most common in GTA scripts.
-- HAS_ENTITY_CLEAR_LOS_TO_ENTITY(entity1, entity2, flags)

--- HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT
-- ```
Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.  
This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops  
```
-- @param entity1 Entity
-- @param entity2 Entity
-- HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(entity1, entity2)

--- HAS_ENTITY_COLLIDED_WITH_ANYTHING
-- ```
Called on tick.  
Tested with vehicles, returns true whenever the vehicle is touching any entity.  
Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.  
```
-- @param entity Entity
-- HAS_ENTITY_COLLIDED_WITH_ANYTHING(entity)

--- IS_AN_ENTITY
-- @param handle int
-- IS_AN_ENTITY(handle)

--- IS_ENTITY_AN_OBJECT
-- @param entity Entity
-- IS_ENTITY_AN_OBJECT(entity)

--- IS_ENTITY_ATTACHED
-- @param entity Entity - The entity to check if it is attached to another entity.
-- IS_ENTITY_ATTACHED(entity)

--- IS_ENTITY_ATTACHED_TO_ANY_OBJECT
-- @param entity Entity
-- IS_ENTITY_ATTACHED_TO_ANY_OBJECT(entity)

--- IS_ENTITY_ATTACHED_TO_ANY_PED
-- @param entity Entity
-- IS_ENTITY_ATTACHED_TO_ANY_PED(entity)

--- IS_ENTITY_ATTACHED_TO_ANY_VEHICLE
-- @param entity Entity
-- IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(entity)

--- IS_ENTITY_ATTACHED_TO_ENTITY
-- @param from Entity
-- @param to Entity
-- IS_ENTITY_ATTACHED_TO_ENTITY(from, to)

--- IS_ENTITY_AT_COORD
-- ```
Checks if entity is within x/y/zSize distance of x/y/z.   
Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0  
```
-- @param entity Entity
-- @param xPos float
-- @param yPos float
-- @param zPos float
-- @param xSize float
-- @param ySize float
-- @param zSize float
-- @param p7 BOOL
-- @param p8 BOOL
-- @param p9 int
-- IS_ENTITY_AT_COORD(entity, xPos, yPos, zPos, xSize, ySize, zSize, p7, p8, p9)

--- IS_ENTITY_AT_ENTITY
-- ```
Checks if entity1 is within the box defined by x/y/zSize of entity2.  
Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0  
```
-- @param entity1 Entity
-- @param entity2 Entity
-- @param xSize float
-- @param ySize float
-- @param zSize float
-- @param p5 BOOL
-- @param p6 BOOL
-- @param p7 int
-- IS_ENTITY_AT_ENTITY(entity1, entity2, xSize, ySize, zSize, p5, p6, p7)

--- IS_ENTITY_A_MISSION_ENTITY
-- @param entity Entity
-- IS_ENTITY_A_MISSION_ENTITY(entity)

--- IS_ENTITY_A_PED
-- @param entity Entity - The entity to check if it's a Ped.
-- IS_ENTITY_A_PED(entity)

--- IS_ENTITY_A_VEHICLE
-- @param entity Entity
-- IS_ENTITY_A_VEHICLE(entity)

--- IS_ENTITY_DEAD
-- ```
NativeDB Added Parameter 2: BOOL p1
```
-- @param entity Entity
-- IS_ENTITY_DEAD(entity)

--- IS_ENTITY_IN_AIR
-- @param entity Entity
-- IS_ENTITY_IN_AIR(entity)

--- IS_ENTITY_IN_ANGLED_AREA
-- p10 is some entity flag check, also used in [`IS_ENTITY_AT_ENTITY`](#\_0x751B70C3D034E187), [`IS_ENTITY_IN_AREA`](#\_0x54736AA40E271165) and [`IS_ENTITY_AT_COORD`](#\_0x20B60995556D004F).

See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param entity Entity
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param debug BOOL - a debug flag invoking functions in the same path as `DRAW_MARKER`
-- @param includez BOOL - If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
-- @param p10 Any
-- IS_ENTITY_IN_ANGLED_AREA(entity, x1, y1, z1, x2, y2, z2, width, debug, includez, p10)

--- IS_ENTITY_IN_AREA
-- @param entity Entity
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param p7 BOOL
-- @param p8 BOOL
-- @param p9 Any
-- IS_ENTITY_IN_AREA(entity, x1, y1, z1, x2, y2, z2, p7, p8, p9)

--- IS_ENTITY_IN_WATER
-- @param entity Entity
-- IS_ENTITY_IN_WATER(entity)

--- IS_ENTITY_IN_ZONE
-- @param entity Entity
-- @param zone char*
-- IS_ENTITY_IN_ZONE(entity, zone)

--- IS_ENTITY_OCCLUDED
-- @param entity Entity
-- IS_ENTITY_OCCLUDED(entity)

--- IS_ENTITY_ON_SCREEN
-- Determines whether the screen position of the specified entity is within the 2D bounds of the screen.

This native will not check if the entity is not visible due to being occluded (for example, behind a wall). To check if a entity is on screen and is not occluded, use [IS_ENTITY_OCCLUDED](#\_0xE31C2C72B8692B64).
-- @param entity Entity - The entity to check.
-- IS_ENTITY_ON_SCREEN(entity)

--- IS_ENTITY_PLAYING_ANIM
-- See also [`IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM`](#\_0x6EC47A344923E1ED)

```
Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)  
p4 is always 3 in the scripts.  
taskFlag:  
2 - Check synchronized scene  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param animDict char*
-- @param animName char*
-- @param taskFlag int
-- IS_ENTITY_PLAYING_ANIM(entity, animDict, animName, taskFlag)

--- IS_ENTITY_STATIC
-- ```
A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.  
^ Attach a phCollider to the ped.  
```
-- @param entity Entity
-- IS_ENTITY_STATIC(entity)

--- IS_ENTITY_TOUCHING_ENTITY
-- @param entity Entity
-- @param targetEntity Entity
-- IS_ENTITY_TOUCHING_ENTITY(entity, targetEntity)

--- IS_ENTITY_TOUCHING_MODEL
-- @param entity Entity
-- @param modelHash Hash
-- IS_ENTITY_TOUCHING_MODEL(entity, modelHash)

--- IS_ENTITY_UPRIGHT
-- @param entity Entity
-- @param angle float
-- IS_ENTITY_UPRIGHT(entity, angle)

--- IS_ENTITY_UPSIDEDOWN
-- @param entity Entity
-- IS_ENTITY_UPSIDEDOWN(entity)

--- IS_ENTITY_VISIBLE
-- @param entity Entity
-- IS_ENTITY_VISIBLE(entity)

--- IS_ENTITY_VISIBLE_TO_SCRIPT
-- @param entity Entity
-- IS_ENTITY_VISIBLE_TO_SCRIPT(entity)

--- IS_ENTITY_WAITING_FOR_WORLD_COLLISION
-- @param entity Entity
-- IS_ENTITY_WAITING_FOR_WORLD_COLLISION(entity)

--- PLAY_ENTITY_ANIM
-- ```
delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.  
The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param animName char*
-- @param animDict char*
-- @param p3 float
-- @param loop BOOL
-- @param stayInAnim BOOL
-- @param p6 BOOL
-- @param delta float
-- @param bitset Any
-- PLAY_ENTITY_ANIM(entity, animName, animDict, p3, loop, stayInAnim, p6, delta, bitset)

--- PLAY_SYNCHRONIZED_ENTITY_ANIM
-- ```
p4 and p7 are usually 1000.0f.  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param syncedScene int
-- @param animation char*
-- @param propName char*
-- @param p4 float
-- @param p5 float
-- @param p6 Any
-- @param p7 float
-- PLAY_SYNCHRONIZED_ENTITY_ANIM(entity, syncedScene, animation, propName, p4, p5, p6, p7)

--- PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any*
-- @param p7 Any*
-- @param p8 float
-- @param p9 float
-- @param p10 Any
-- @param p11 float
-- PLAY_SYNCHRONIZED_MAP_ENTITY_ANIM(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)

--- PROCESS_ENTITY_ATTACHMENTS
-- ```
Called to update entity attachments.
```
-- @param entity Entity
-- PROCESS_ENTITY_ATTACHMENTS(entity)

--- REMOVE_FORCED_OBJECT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- REMOVE_FORCED_OBJECT(p0, p1, p2, p3, p4)

--- REMOVE_MODEL_HIDE
-- p5 requires more research. See also [`CREATE_MODEL_HIDE`](#\_0x8A97BCA30A0CE478) and [`CREATE_MODEL_SWAP`](#\_0x92C47782FDA8B2A3).

Network players do not see changes done with this.
-- @param x float
-- @param y float
-- @param z float
-- @param radius float - The radius specified in gta units
-- @param model Hash - The model that you want to make visible
-- @param p5 BOOL
-- REMOVE_MODEL_HIDE(x, y, z, radius, model, p5)

--- REMOVE_MODEL_SWAP
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param originalModel Hash
-- @param newModel Hash
-- @param p6 BOOL
-- REMOVE_MODEL_SWAP(x, y, z, radius, originalModel, newModel, p6)

--- RESET_ENTITY_ALPHA
-- @param entity Entity
-- RESET_ENTITY_ALPHA(entity)

--- SET_CAN_AUTO_VAULT_ON_ENTITY
-- @param entity Entity
-- @param toggle BOOL
-- SET_CAN_AUTO_VAULT_ON_ENTITY(entity, toggle)

--- SET_CAN_CLIMB_ON_ENTITY
-- @param entity Entity
-- @param toggle BOOL
-- SET_CAN_CLIMB_ON_ENTITY(entity, toggle)

--- SET_ENTITY_ALPHA
-- This native sets the entity's alpha level.
-- @param entity Entity - The entity to change the alpha for.
-- @param alphaLevel int - The alpha level ranges from 0 to 255, but changes occur every 20% (every 51).
-- @param skin BOOL - Whether or not to change the alpha of the entity's skin.
-- SET_ENTITY_ALPHA(entity, alphaLevel, skin)

--- SET_ENTITY_ALWAYS_PRERENDER
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_ALWAYS_PRERENDER(entity, toggle)

--- SET_ENTITY_ANIM_CURRENT_TIME
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param entity Entity
-- @param animDictionary char*
-- @param animName char*
-- @param time float
-- SET_ENTITY_ANIM_CURRENT_TIME(entity, animDictionary, animName, time)

--- SET_ENTITY_ANIM_SPEED
-- @param entity Entity
-- @param animDictionary char*
-- @param animName char*
-- @param speedMultiplier float
-- SET_ENTITY_ANIM_SPEED(entity, animDictionary, animName, speedMultiplier)

--- SET_ENTITY_AS_MISSION_ENTITY
-- Assigns an existing entity to be owned by the current script. If the entity was not owned by a script yet, this also means the entity will remain persistent until released.

Note that this is not needed right after creating an entity as a script-created entity will automatically be assigned.
-- @param entity Entity - An entity handle.
-- @param scriptHostObject BOOL - Whether or not to assign script info to this entity, if set to false the entity will only be protected from despawning locally.
-- @param bGrabFromOtherScript BOOL - Changes the entity so it's owned by the current script if the entity is already a mission entity. This will only work on entities the machine has control of (non-remote entities).
-- SET_ENTITY_AS_MISSION_ENTITY(entity, scriptHostObject, bGrabFromOtherScript)

--- SET_ENTITY_AS_NO_LONGER_NEEDED
-- ```
Marks the specified entity (ped, vehicle or object) as no longer needed.  
Entities marked as no longer needed, will be deleted as the engine sees fit.  
```
-- @param entity Entity*
-- SET_ENTITY_AS_NO_LONGER_NEEDED(entity)

--- SET_ENTITY_CAN_BE_DAMAGED
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_CAN_BE_DAMAGED(entity, toggle)

--- SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP
-- @param entity Entity
-- @param bCanBeDamaged BOOL
-- @param relGroup int
-- SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(entity, bCanBeDamaged, relGroup)

--- SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS
-- ```
Sets whether the entity can be targeted without being in line-of-sight.  
```
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(entity, toggle)

--- SET_ENTITY_COLLISION
-- @param entity Entity
-- @param toggle BOOL
-- @param keepPhysics BOOL
-- SET_ENTITY_COLLISION(entity, toggle, keepPhysics)

--- SET_ENTITY_COMPLETELY_DISABLE_COLLISION
-- @param entity Entity
-- @param toggle BOOL
-- @param keepPhysics BOOL
-- SET_ENTITY_COMPLETELY_DISABLE_COLLISION(entity, toggle, keepPhysics)

--- SET_ENTITY_COORDS
-- Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
-- @param entity Entity - The entity to change coordinates for.
-- @param xPos float - The X coordinate.
-- @param yPos float - The Y coordinate.
-- @param zPos float - The Z coordinate, ground level.
-- @param alive BOOL - Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
-- @param deadFlag BOOL - Whether to disable physics for dead peds, too, and not just living peds.
-- @param ragdollFlag BOOL - A special flag used for ragdolling peds.
-- @param clearArea BOOL - Whether to clear any entities in the target area.
-- SET_ENTITY_COORDS(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)

--- SET_ENTITY_COORDS_NO_OFFSET
-- Teleports an entity to specified coordinates directly, with options to maintain certain behaviors post-teleportation.

**Note**:

*   This native allows precise placement of entities without the usual adjustments for collision or interaction with the environment that may occur with other teleportation natives.
*   The `keepTasks` and `keepIK` parameters are specifically useful for maintaining the current state of a ped, ensuring actions or animations are not abruptly stopped due to the teleportation.
*   Setting `doWarp` to `false` is useful when simulating continuous movement or when the entity should interact with its immediate surroundings upon arrival.
-- @param entity Entity - The entity to reposition.
-- @param x float - X coordinate for the new position.
-- @param y float - Y coordinate for the new position.
-- @param z float - Z coordinate for the new position.
-- @param keepTasks BOOL - If `true`, the tasks currently assigned to the ped are not removed upon teleportation. Applies only to peds.
-- @param keepIK BOOL - If `true`, the Inverse Kinematics (IK) on the ped are not reset upon teleportation. Applies only to peds.
-- @param doWarp BOOL - If `false`, the entity will maintain continuous motion and will not clear contacts nor create space for itself upon teleportation.
-- SET_ENTITY_COORDS_NO_OFFSET(entity, x, y, z, keepTasks, keepIK, doWarp)

--- SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET
-- @param entity Entity
-- @param xPos float
-- @param yPos float
-- @param zPos float
-- @param alive BOOL
-- @param deadFlag BOOL
-- @param ragdollFlag BOOL
-- @param clearArea BOOL
-- SET_ENTITY_COORDS_WITHOUT_PLANTS_RESET(entity, xPos, yPos, zPos, alive, deadFlag, ragdollFlag, clearArea)

--- SET_ENTITY_DYNAMIC
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_DYNAMIC(entity, toggle)

--- SET_ENTITY_HAS_GRAVITY
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_HAS_GRAVITY(entity, toggle)

--- SET_ENTITY_HEADING
-- Set the heading of an entity in degrees also known as "Yaw".
-- @param entity Entity - The entity to set the heading for.
-- @param heading float - The heading in degrees.
-- SET_ENTITY_HEADING(entity, heading)

--- SET_ENTITY_HEALTH
-- When setting health for a player ped, the game will clamp the health value to ensure it does not exceed the maximum health. This maximum health can be retrieved by calling [`GET_PED_MAX_HEALTH`](#\_0x4700A416E8324EF3). It can also be modified by calling [`SET_PED_MAX_HEALTH`](#\_0xF5F6378C4F3419D3).

When setting the health for non-player peds or entities, the maximum health will be increased if the new health value exceeds the current maximum.

Default health for male peds is `200`, for female peds it is `175`.

### Added parameters

*   **inflictor**: The handle for the entity that caused the damage.
-- @param entity Entity - The entity handle.
-- @param health int - The health we should set this entity to.
-- SET_ENTITY_HEALTH(entity, health)

--- SET_ENTITY_INVINCIBLE
-- ```
Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.  
If you use this for a ped and you want Ragdoll to stay enabled, then do:  
*(DWORD *)(pedAddress + 0x188) |= (1 << 9);  
Use this if you want to get the invincibility status:  
	bool IsPedInvincible(Ped ped)  
	{  
auto addr = getScriptHandleBaseAddress(ped);	  
if (addr)  
{  
	DWORD flag = *(DWORD *)(addr + 0x188);  
	return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);  
}  
return false;  
	}  
```
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_INVINCIBLE(entity, toggle)

--- SET_ENTITY_IS_TARGET_PRIORITY
-- @param entity Entity
-- @param p1 BOOL
-- @param p2 float
-- SET_ENTITY_IS_TARGET_PRIORITY(entity, p1, p2)

--- SET_ENTITY_LIGHTS
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_LIGHTS(entity, toggle)

--- SET_ENTITY_LOAD_COLLISION_FLAG
-- Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.

Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.

```
NativeDB Added Parameter 3: Any p2
```
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_LOAD_COLLISION_FLAG(entity, toggle)

--- SET_ENTITY_LOD_DIST
-- ```
LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).  
```
-- @param entity Entity
-- @param value int
-- SET_ENTITY_LOD_DIST(entity, value)

--- SET_ENTITY_MAX_HEALTH
-- ```
For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849  
```
-- @param entity Entity
-- @param value int
-- SET_ENTITY_MAX_HEALTH(entity, value)

--- SET_ENTITY_MAX_SPEED
-- @param entity Entity - Entity to apply a maximum speed on
-- @param speed float - Speed in meters per second
-- SET_ENTITY_MAX_SPEED(entity, speed)

--- SET_ENTITY_MOTION_BLUR
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_MOTION_BLUR(entity, toggle)

--- SET_ENTITY_NO_COLLISION_ENTITY
-- ```
Calling this function disables collision between two entities.
The importance of the order for entity1 and entity2 is unclear.
The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
```
-- @param entity1 Entity
-- @param entity2 Entity
-- @param thisFrameOnly BOOL
-- SET_ENTITY_NO_COLLISION_ENTITY(entity1, entity2, thisFrameOnly)

--- SET_ENTITY_ONLY_DAMAGED_BY_PLAYER
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(entity, toggle)

--- SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP
-- @param entity Entity
-- @param p1 BOOL
-- @param relationshipHash Hash
-- SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(entity, p1, relationshipHash)

--- SET_ENTITY_PROOFS
-- ```
Enable / disable each type of damage.  
--------------  
p7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);  
```
-- @param entity Entity
-- @param bulletProof BOOL
-- @param fireProof BOOL
-- @param explosionProof BOOL
-- @param collisionProof BOOL
-- @param meleeProof BOOL
-- @param steamProof BOOL
-- @param p7 BOOL
-- @param drownProof BOOL
-- SET_ENTITY_PROOFS(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)

--- SET_ENTITY_QUATERNION
-- ```
w is the correct parameter name!  
```
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- @param w float
-- SET_ENTITY_QUATERNION(entity, x, y, z, w)

--- SET_ENTITY_RECORDS_COLLISIONS
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_RECORDS_COLLISIONS(entity, toggle)

--- SET_ENTITY_RENDER_SCORCHED
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_RENDER_SCORCHED(entity, toggle)

--- SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_REQUIRES_MORE_EXPENSIVE_RIVER_CHECK(entity, toggle)

--- SET_ENTITY_ROTATION
-- Sets the rotation of a specified entity in the game world.

```
NativeDB Introduced: v323
```
-- @param entity Entity - The entity to rotate.
-- @param pitch float - The pitch (X-axis) rotation in degrees.
-- @param roll float - The roll (Y-axis) rotation in degrees.
-- @param yaw float - The yaw (Z-axis) rotation in degrees.
-- @param rotationOrder int - Specifies the order in which yaw, pitch, and roll are applied, see [`GET_ENTITY_ROTATION`](#\_0xAFBD61CC738D9EB9) for the available rotation orders.
-- @param bDeadCheck BOOL - Usually set to `true`. Determines whether to check if the entity is dead before applying the rotation.
-- SET_ENTITY_ROTATION(entity, pitch, roll, yaw, rotationOrder, bDeadCheck)

--- SET_ENTITY_TRAFFICLIGHT_OVERRIDE
-- Changing traffic-lights will not change the behavior of NPCs.

Example: [here](https://www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340)

```cpp
enum eTrafficlightOverrideMode
{
    TLO_RED = 0,
    TLO_AMBER = 1,
    TLO_GREEN = 2,
    TLO_NONE = 3
}
```
-- @param entity Entity
-- @param state int
-- SET_ENTITY_TRAFFICLIGHT_OVERRIDE(entity, state)

--- SET_ENTITY_VELOCITY
-- ```
Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
```
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- SET_ENTITY_VELOCITY(entity, x, y, z)

--- SET_ENTITY_VISIBLE
-- Toggle the visibility of a given entity.
-- @param entity Entity - The entity to change the visibility of
-- @param toggle BOOL - Whether or not the entity will be visible
-- @param unk BOOL - Always 0 in scripts
-- SET_ENTITY_VISIBLE(entity, toggle, unk)

--- SET_OBJECT_AS_NO_LONGER_NEEDED
-- ```
This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  
```
-- @param object Object*
-- SET_OBJECT_AS_NO_LONGER_NEEDED(object)

--- SET_PED_AS_NO_LONGER_NEEDED
-- ```
This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  
```
-- @param ped Ped*
-- SET_PED_AS_NO_LONGER_NEEDED(ped)

--- SET_PICK_UP_BY_CARGOBOB_DISABLED
-- Configures an entity to either allow or prevent it from being picked up by Cargobobs.

```
NativeDB Introduced: v1180
```
-- @param entity Entity - The entity to be configured for pick up by Cargobob.
-- @param toggle BOOL - A boolean value where `true` prevents the entity from being picked up by Cargobobs, and `false` allows it.
-- SET_PICK_UP_BY_CARGOBOB_DISABLED(entity, toggle)

--- SET_VEHICLE_AS_NO_LONGER_NEEDED
-- ```
This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.  
```
-- @param vehicle Vehicle*
-- SET_VEHICLE_AS_NO_LONGER_NEEDED(vehicle)

--- SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE
-- ```
SET_*
Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
Ran after these 2 natives,
set_object_targettable(uParam0, 0);
set_entity_invincible(uParam0, 1);
```
-- @param entity Entity
-- @param toggle BOOL
-- SET_WAIT_FOR_COLLISIONS_BEFORE_PROBE(entity, toggle)

--- STOP_ENTITY_ANIM
-- ```
RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
```
-- @param entity Entity
-- @param animation char*
-- @param animGroup char*
-- @param p3 float
-- STOP_ENTITY_ANIM(entity, animation, animGroup, p3)

--- STOP_SYNCHRONIZED_ENTITY_ANIM
-- ```
p1 sync task id?  
```
-- @param entity Entity
-- @param p1 float
-- @param p2 BOOL
-- STOP_SYNCHRONIZED_ENTITY_ANIM(entity, p1, p2)

--- STOP_SYNCHRONIZED_MAP_ENTITY_ANIM
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 Any
-- @param p5 float
-- STOP_SYNCHRONIZED_MAP_ENTITY_ANIM(p0, p1, p2, p3, p4, p5)

--- WOULD_ENTITY_BE_OCCLUDED
-- @param entityModelHash Hash
-- @param x float
-- @param y float
-- @param z float
-- @param p4 BOOL
-- WOULD_ENTITY_BE_OCCLUDED(entityModelHash, x, y, z, p4)

--- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE
-- @param entity1 Entity
-- @param entity2 Entity
-- @param entityBone int
-- @param entityBone2 int
-- @param p4 BOOL
-- @param p5 BOOL
-- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE(entity1, entity2, entityBone, entityBone2, p4, p5)

--- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE_PHYSICALLY
-- @param entity1 Entity
-- @param entity2 Entity
-- @param entityBone int
-- @param entityBone2 int
-- @param p4 BOOL
-- @param p5 BOOL
-- _ATTACH_ENTITY_BONE_TO_ENTITY_BONE_PHYSICALLY(entity1, entity2, entityBone, entityBone2, p4, p5)

--- _DOES_ENTITY_HAVE_ANIM_DIRECTOR
-- ```
NativeDB Introduced: v2699
```
-- @param entity Entity
-- _DOES_ENTITY_HAVE_ANIM_DIRECTOR(entity)

--- _DOES_ENTITY_HAVE_SKELETON_DATA
-- ```
NativeDB Introduced: v2699
```
-- @param entity Entity
-- _DOES_ENTITY_HAVE_SKELETON_DATA(entity)

--- _ENABLE_ENTITY_UNK
-- ```
ENABLE_*
```
-- @param entity Entity
-- _ENABLE_ENTITY_UNK(entity)

--- _GET_ENTITY_BONE_COUNT
-- @param entity Entity
-- _GET_ENTITY_BONE_COUNT(entity)

--- _GET_ENTITY_BONE_POSITION_2
-- ```
Gets the world rotation of the specified bone of the specified entity.
This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
```
-- @param entity Entity
-- @param boneIndex int
-- _GET_ENTITY_BONE_POSITION_2(entity, boneIndex)

--- _GET_ENTITY_BONE_ROTATION
-- ```
Gets the world rotation of the specified bone of the specified entity.
```
-- @param entity Entity
-- @param boneIndex int
-- _GET_ENTITY_BONE_ROTATION(entity, boneIndex)

--- _GET_ENTITY_BONE_ROTATION_LOCAL
-- Gets the local rotation of the specified bone of the specified entity.

```
NativeDB Introduced: v1734
```
-- @param entity Entity
-- @param boneIndex int
-- _GET_ENTITY_BONE_ROTATION_LOCAL(entity, boneIndex)

--- _GET_ENTITY_PICKUP
-- ```
GET_ENTITY_*

Seems to return the handle of the entity's portable pickup.

NativeDB Introduced: v1180
```
-- @param entity Entity
-- @param modelHash Hash
-- _GET_ENTITY_PICKUP(entity, modelHash)

--- _GET_ENTITY_PROOFS
-- ```
NativeDB Introduced: v1604
```
-- @param entity Entity
-- @param bulletProof BOOL*
-- @param fireProof BOOL*
-- @param explosionProof BOOL*
-- @param collisionProof BOOL*
-- @param meleeProof BOOL*
-- @param steamProof BOOL*
-- @param p7 BOOL*
-- @param drownProof BOOL*
-- _GET_ENTITY_PROOFS(entity, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, p7, drownProof)

--- _HAS_ENTITY_CLEAR_LOS_TO_ENTITY_2
-- ```
NativeDB Introduced: v1868
```
-- @param entity1 Entity
-- @param entity2 Entity
-- @param traceType int
-- _HAS_ENTITY_CLEAR_LOS_TO_ENTITY_2(entity1, entity2, traceType)

--- _SET_ENTITY_ANGULAR_VELOCITY
-- ```
NativeDB Introduced: v2372
```
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- _SET_ENTITY_ANGULAR_VELOCITY(entity, x, y, z)

--- _SET_ENTITY_CLEANUP_BY_ENGINE
-- ```
True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
```
-- @param entity Entity
-- @param toggle BOOL
-- _SET_ENTITY_CLEANUP_BY_ENGINE(entity, toggle)

--- _SET_ENTITY_DECALS_DISABLED
-- ```
SET_ENTITY_*
```
-- @param entity Entity
-- @param p1 BOOL
-- _SET_ENTITY_DECALS_DISABLED(entity, p1)


-- ========== EVENT ==========

--- ADD_SHOCKING_EVENT_AT_POSITION
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
```
-- @param eventType int
-- @param x float
-- @param y float
-- @param z float
-- @param duration float
-- ADD_SHOCKING_EVENT_AT_POSITION(eventType, x, y, z, duration)

--- ADD_SHOCKING_EVENT_FOR_ENTITY
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
```
-- @param eventType int
-- @param entity Entity
-- @param duration float
-- ADD_SHOCKING_EVENT_FOR_ENTITY(eventType, entity, duration)

--- BLOCK_DECISION_MAKER_EVENT
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
This is limited to 4 blocked events at a time.
```
-- @param name Hash
-- @param eventType int
-- BLOCK_DECISION_MAKER_EVENT(name, eventType)

--- CLEAR_DECISION_MAKER_EVENT_RESPONSE
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
```
-- @param name Hash
-- @param eventType int
-- CLEAR_DECISION_MAKER_EVENT_RESPONSE(name, eventType)

--- IS_SHOCKING_EVENT_IN_SPHERE
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
```
-- @param eventType int
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- IS_SHOCKING_EVENT_IN_SPHERE(eventType, x, y, z, radius)

--- REMOVE_ALL_SHOCKING_EVENTS
-- @param p0 BOOL
-- REMOVE_ALL_SHOCKING_EVENTS(p0)

--- REMOVE_SHOCKING_EVENT
-- @param event ScrHandle
-- REMOVE_SHOCKING_EVENT(event)

--- REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS
-- REMOVE_SHOCKING_EVENT_SPAWN_BLOCKING_AREAS()

--- SET_DECISION_MAKER
-- @param ped Ped
-- @param name Hash
-- SET_DECISION_MAKER(ped, name)

--- SUPPRESS_AGITATION_EVENTS_NEXT_FRAME
-- SUPPRESS_AGITATION_EVENTS_NEXT_FRAME()

--- SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME
-- SUPPRESS_SHOCKING_EVENTS_NEXT_FRAME()

--- SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
```
-- @param eventType int
-- SUPPRESS_SHOCKING_EVENT_TYPE_NEXT_FRAME(eventType)

--- UNBLOCK_DECISION_MAKER_EVENT
-- ```
eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
```
-- @param name Hash
-- @param eventType int
-- UNBLOCK_DECISION_MAKER_EVENT(name, eventType)


-- ========== FILES ==========

--- 0x6CEBE002E58DEE97
-- Returns some sort of index/offset for props.
Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.

```
NativeDB Introduced: v2189
```
-- @param componentHash Hash
-- 0x6CEBE002E58DEE97(componentHash)

--- 0x96E2929292A4DB77
-- Returns some sort of index/offset for components.
Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.

```
NativeDB Introduced: v2189
```
-- @param componentHash Hash
-- 0x96E2929292A4DB77(componentHash)

--- DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG
-- @param componentHash Hash
-- @param restrictionTagHash Hash
-- @param componentId int
-- DOES_SHOP_PED_APPAREL_HAVE_RESTRICTION_TAG(componentHash, restrictionTagHash, componentId)

--- GET_DLC_VEHICLE_DATA
-- The Second item in the struct `*(Hash *)(outData + 1)` is the vehicle hash.
-- @param dlcVehicleIndex int - takes a number from 0 to `GET_NUM_DLC_VEHICLES()` - 1.
-- @param outData Any* - a struct of 3 8-byte items.
-- GET_DLC_VEHICLE_DATA(dlcVehicleIndex, outData)

--- GET_DLC_VEHICLE_FLAGS
-- @param dlcVehicleIndex int
-- GET_DLC_VEHICLE_FLAGS(dlcVehicleIndex)

--- GET_DLC_VEHICLE_MODEL
-- ```
dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()  
```
-- @param dlcVehicleIndex int
-- GET_DLC_VEHICLE_MODEL(dlcVehicleIndex)

--- GET_DLC_VEHICLE_MOD_LOCK_HASH
-- @param hash Hash
-- GET_DLC_VEHICLE_MOD_LOCK_HASH(hash)

--- GET_DLC_WEAPON_COMPONENT_DATA
-- ```
p0 seems to be the weapon index  
p1 seems to be the weapon component index  
struct DlcComponentData{  
int attachBone;  
int padding1;  
int bActiveByDefault;  
int padding2;  
int unk;  
int padding3;  
int componentHash;  
int padding4;  
int unk2;  
int padding5;  
int componentCost;  
int padding6;  
char nameLabel[64];  
char descLabel[64];  
};  
```
-- @param dlcWeaponIndex int
-- @param dlcWeapCompIndex int
-- @param ComponentDataPtr int*
-- GET_DLC_WEAPON_COMPONENT_DATA(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)

--- GET_DLC_WEAPON_DATA
-- ```
dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.  
struct DlcWeaponData  
{  
int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this  
int padding1;  
int weaponHash;  
int padding2;  
int unk;  
int padding3;  
int weaponCost;  
int padding4;  
int ammoCost;  
int padding5;  
int ammoType;  
int padding6;  
int defaultClipSize;  
int padding7;  
char nameLabel[64];  
char descLabel[64];  
char desc2Label[64]; // usually "the" + name  
char upperCaseNameLabel[64];  
};  
```
-- @param dlcWeaponIndex int
-- @param outData int*
-- GET_DLC_WEAPON_DATA(dlcWeaponIndex, outData)

--- GET_FORCED_COMPONENT
-- @param componentHash Hash
-- @param forcedComponentIndex int
-- @param nameHash Hash*
-- @param enumValue int*
-- @param componentType int*
-- GET_FORCED_COMPONENT(componentHash, forcedComponentIndex, nameHash, enumValue, componentType)

--- GET_FORCED_PROP
-- @param componentHash Hash
-- @param forcedPropIndex int
-- @param nameHash Hash*
-- @param enumValue int*
-- @param anchorPoint int*
-- GET_FORCED_PROP(componentHash, forcedPropIndex, nameHash, enumValue, anchorPoint)

--- GET_HASH_NAME_FOR_COMPONENT
-- @param entity Entity
-- @param componentId int
-- @param drawableVariant int
-- @param textureVariant int
-- GET_HASH_NAME_FOR_COMPONENT(entity, componentId, drawableVariant, textureVariant)

--- GET_HASH_NAME_FOR_PROP
-- @param entity Entity
-- @param componentId int
-- @param propIndex int
-- @param propTextureIndex int
-- GET_HASH_NAME_FOR_PROP(entity, componentId, propIndex, propTextureIndex)

--- GET_NUM_DLC_VEHICLES
-- Returns the total number of DLC vehicles.
-- GET_NUM_DLC_VEHICLES()

--- GET_NUM_DLC_WEAPONS
-- ```
Returns the total number of DLC weapons.
```
-- GET_NUM_DLC_WEAPONS()

--- GET_NUM_DLC_WEAPON_COMPONENTS
-- ```
Returns the total number of DLC weapon components.
```
-- @param dlcWeaponIndex int
-- GET_NUM_DLC_WEAPON_COMPONENTS(dlcWeaponIndex)

--- GET_NUM_TATTOO_SHOP_DLC_ITEMS
-- ```
Character types:
0 = Michael,
1 = Franklin,
2 = Trevor,
3 = MPMale,
4 = MPFemale
```
-- @param character int
-- GET_NUM_TATTOO_SHOP_DLC_ITEMS(character)

--- GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT
-- ```
Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
```
-- @param componentHash Hash
-- GET_SHOP_PED_APPAREL_FORCED_COMPONENT_COUNT(componentHash)

--- GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT
-- ```
Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
```
-- @param componentHash Hash
-- GET_SHOP_PED_APPAREL_FORCED_PROP_COUNT(componentHash)

--- GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT
-- @param componentHash Hash
-- GET_SHOP_PED_APPAREL_VARIANT_COMPONENT_COUNT(componentHash)

--- GET_SHOP_PED_COMPONENT
-- ```
More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
```
-- @param componentHash Hash
-- @param outComponent Any*
-- GET_SHOP_PED_COMPONENT(componentHash, outComponent)

--- GET_SHOP_PED_OUTFIT
-- @param p0 Any
-- @param p1 Any*
-- GET_SHOP_PED_OUTFIT(p0, p1)

--- GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT
-- @param outfit Hash - A structure, see [`GET_SHOP_PED_QUERY_OUTFIT`](#\_0x6D793F03A631FE56).
-- @param slot int - outfit slot.
-- @param outComponentVariant Any*
-- GET_SHOP_PED_OUTFIT_COMPONENT_VARIANT(outfit, slot, outComponentVariant)

--- GET_SHOP_PED_OUTFIT_LOCATE
-- @param p0 Any
-- GET_SHOP_PED_OUTFIT_LOCATE(p0)

--- GET_SHOP_PED_OUTFIT_PROP_VARIANT
-- @param outfitHash Hash
-- @param variantIndex int
-- @param outPropVariant Any*
-- GET_SHOP_PED_OUTFIT_PROP_VARIANT(outfitHash, variantIndex, outPropVariant)

--- GET_SHOP_PED_PROP
-- @param componentHash Hash
-- @param outProp Any*
-- GET_SHOP_PED_PROP(componentHash, outProp)

--- GET_SHOP_PED_QUERY_COMPONENT
-- @param componentId int
-- @param outComponent int*
-- GET_SHOP_PED_QUERY_COMPONENT(componentId, outComponent)

--- GET_SHOP_PED_QUERY_OUTFIT
-- ```
struct Outfit_s  
{  
	int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;  
	int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,   
		armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;  
};  
```
-- @param outfitIndex int
-- @param outfit Any*
-- GET_SHOP_PED_QUERY_OUTFIT(outfitIndex, outfit)

--- GET_SHOP_PED_QUERY_PROP
-- @param componentId int
-- @param outProp Any*
-- GET_SHOP_PED_QUERY_PROP(componentId, outProp)

--- GET_TATTOO_SHOP_DLC_ITEM_DATA
-- Returns data that adheres to the tattoo shop item data that is used in shop_tattoo.meta

Character types:

```cpp
enum eTattooFaction
{
	TATTOO_SP_MICHAEL = 0,
	TATTOO_SP_FRANKLIN = 1,
	TATTOO_SP_TREVOR = 2,
	TATTOO_MP_FM = 3,
	TATTOO_MP_FM_F = 4
}
```

Returned struct properties:

```cpp
struct sTattooShopItemValues
{
	// Lock hash, used with IS_CONTENT_ITEM_LOCKED
	int LockHash;
	// Unique ID of this slot. It can also be 0.
	int Index;
	// Collection hash of this tattoo
	int CollectionHash;
	// Preset hash of this tattoo
	int PresetHash;
	// Cost of this tattoo in shops.
	int Cost;
	// Secondary placement of this tattoo.
	int eFacing;
	// Location of this tattoo on the body (for example, for torso there would be chest upper, stomach, etc)
	int UpdateGroup;
	// This tattoo's name in the form of a text label.
	const char* NameTextLabel;
};
```
-- @param characterType int - Which character to get the tattoo data for (Refer to `eTattooFaction` above).
-- @param decorationIndex int - Tattoo index, value between 0 and [GET_NUM_TATTOO_SHOP_DLC_ITEMS](#\_0x278F76C3B0A8F109).
-- @param outComponent Any* - The referenced struct.
-- GET_TATTOO_SHOP_DLC_ITEM_DATA(characterType, decorationIndex, outComponent)

--- GET_TATTOO_SHOP_DLC_ITEM_INDEX
-- ```
NativeDB Introduced: v2189
```
-- @param character int - AKA eFaction in shop_tattoo.meta. Which character this tattoo belongs to. See [GET_NUM_TATTOO_SHOP_DLC_ITEMS](#\_0x278F76C3B0A8F109).
-- @param collection int - Which collection this tattoo belongs to. If you specify `-1`, it will check all collections.
-- @param preset int - Which preset this tattoo belongs to.
-- GET_TATTOO_SHOP_DLC_ITEM_INDEX(character, collection, preset)

--- GET_VARIANT_COMPONENT
-- @param componentHash Hash
-- @param variantComponentIndex int
-- @param nameHash Hash*
-- @param enumValue int*
-- @param componentType int*
-- GET_VARIANT_COMPONENT(componentHash, variantComponentIndex, nameHash, enumValue, componentType)

--- INIT_SHOP_PED_COMPONENT
-- @param outComponent int*
-- INIT_SHOP_PED_COMPONENT(outComponent)

--- INIT_SHOP_PED_PROP
-- @param outProp int*
-- INIT_SHOP_PED_PROP(outProp)

--- IS_CONTENT_ITEM_LOCKED
-- @param itemHash Hash
-- IS_CONTENT_ITEM_LOCKED(itemHash)

--- IS_DLC_VEHICLE_MOD
-- @param hash Hash
-- IS_DLC_VEHICLE_MOD(hash)

--- SETUP_SHOP_PED_APPAREL_QUERY
-- @param p0 int
-- @param p1 int
-- @param p2 int
-- @param p3 int
-- SETUP_SHOP_PED_APPAREL_QUERY(p0, p1, p2, p3)

--- SETUP_SHOP_PED_APPAREL_QUERY_TU
-- ```
character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
componentId is between 0 and 11 and corresponds to the usual component slots.
p1 could be the outfit number; unsure.
p2 is usually -1; unknown function.
p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
p4 is usually -1; unknown function.
componentId is -1 when p3 is true in decompiled scripts.
```
-- @param character int
-- @param p1 int
-- @param p2 int
-- @param p3 BOOL
-- @param p4 int
-- @param componentId int
-- SETUP_SHOP_PED_APPAREL_QUERY_TU(character, p1, p2, p3, p4, componentId)

--- SETUP_SHOP_PED_OUTFIT_QUERY
-- ```
characters
0: Michael
1: Franklin
2: Trevor
3: MPMale
4: MPFemale
```
-- @param character int
-- @param p1 BOOL
-- SETUP_SHOP_PED_OUTFIT_QUERY(character, p1)

--- _GET_DLC_WEAPON_COMPONENT_DATA_SP
-- Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.

```
NativeDB Introduced: v2060
```
-- @param dlcWeaponIndex int
-- @param dlcWeapCompIndex int
-- @param ComponentDataPtr int*
-- _GET_DLC_WEAPON_COMPONENT_DATA_SP(dlcWeaponIndex, dlcWeapCompIndex, ComponentDataPtr)

--- _GET_DLC_WEAPON_DATA_SP
-- Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.

```
NativeDB Introduced: v2060
```
-- @param dlcWeaponIndex int
-- @param outData int*
-- _GET_DLC_WEAPON_DATA_SP(dlcWeaponIndex, outData)

--- _GET_NUM_DLC_WEAPONS_SP
-- Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).

```
NativeDB Introduced: v2060
```
-- _GET_NUM_DLC_WEAPONS_SP()

--- _GET_NUM_DLC_WEAPON_COMPONENTS_SP
-- Returns the total number of DLC weapon components that are available in SP.

```
NativeDB Introduced: v2060
```
-- @param dlcWeaponIndex int
-- _GET_NUM_DLC_WEAPON_COMPONENTS_SP(dlcWeaponIndex)

--- _GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT
-- @param propHash Hash - Ped helmet prop hash
-- _GET_SHOP_PED_APPAREL_VARIANT_PROP_COUNT(propHash)

--- _GET_VARIANT_PROP
-- @param componentHash Hash
-- @param variantPropIndex int
-- @param nameHash Hash*
-- @param enumValue int*
-- @param anchorPoint int*
-- _GET_VARIANT_PROP(componentHash, variantPropIndex, nameHash, enumValue, anchorPoint)

--- _LOAD_CONTENT_CHANGE_SET_GROUP
-- ```
From fm_deathmatch_creator and fm_race_creator:

FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));

NativeDB Introduced: v1604
```
-- @param hash Hash
-- _LOAD_CONTENT_CHANGE_SET_GROUP(hash)

--- _UNLOAD_CONTENT_CHANGE_SET_GROUP
-- ```
From fm_deathmatch_creator and fm_race_creator:

FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));
FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));

NativeDB Introduced: v1604
```
-- @param hash Hash
-- _UNLOAD_CONTENT_CHANGE_SET_GROUP(hash)


-- ========== FIRE ==========

--- ADD_EXPLOSION
-- ```
NativeDB Added Parameter 9: BOOL noDamage
```

```
BOOL isAudible = If explosion makes a sound.  
BOOL isInvisible = If the explosion is invisible or not.
BOOL noDamage = false: damage || nodamage = true: no damage
```

```cpp
enum eExplosionTag
{
	DONTCARE = -1,
	GRENADE = 0,
	GRENADELAUNCHER = 1,
	STICKYBOMB = 2,
	MOLOTOV = 3,
	ROCKET = 4,
	TANKSHELL = 5,
	HI_OCTANE = 6,
	CAR = 7,
	PLANE = 8,
	PETROL_PUMP = 9,
	BIKE = 10,
	DIR_STEAM = 11,
	DIR_FLAME = 12,
	DIR_WATER_HYDRANT = 13,
	DIR_GAS_CANISTER = 14,
	BOAT = 15,
	SHIP_DESTROY = 16,
	TRUCK = 17,
	BULLET = 18,
	SMOKE_GRENADE_LAUNCHER = 19,
	SMOKE_GRENADE = 20,
	BZGAS = 21,
	FLARE = 22,
	GAS_CANISTER = 23,
	EXTINGUISHER = 24,
	PROGRAMMABLEAR = 25,
	TRAIN = 26,
	BARREL = 27,
	PROPANE = 28,
	BLIMP = 29,
	DIR_FLAME_EXPLODE = 30,
	TANKER = 31,
	PLANE_ROCKET = 32,
	VEHICLE_BULLET = 33,
	GAS_TANK = 34,
	BIRD_CRAP = 35,
	RAILGUN = 36,
	BLIMP2 = 37,
	FIREWORK = 38,
	SNOWBALL = 39,
	PROXMINE = 40,
	VALKYRIE_CANNON = 41,
	AIR_DEFENCE = 42,
	PIPEBOMB = 43,
	VEHICLEMINE = 44,
	EXPLOSIVEAMMO = 45,
	APCSHELL = 46,
	BOMB_CLUSTER = 47,
	BOMB_GAS = 48,
	BOMB_INCENDIARY = 49,
	BOMB_STANDARD = 50,
	TORPEDO = 51,
	TORPEDO_UNDERWATER = 52,
	BOMBUSHKA_CANNON = 53,
	BOMB_CLUSTER_SECONDARY = 54,
	HUNTER_BARRAGE = 55,
	HUNTER_CANNON = 56,
	ROGUE_CANNON = 57,
	MINE_UNDERWATER = 58,
	ORBITAL_CANNON = 59,
	BOMB_STANDARD_WIDE = 60,
	EXPLOSIVEAMMO_SHOTGUN = 61,
	OPPRESSOR2_CANNON = 62,
	MORTAR_KINETIC = 63,
	VEHICLEMINE_KINETIC = 64,
	VEHICLEMINE_EMP = 65,
	VEHICLEMINE_SPIKE = 66,
	VEHICLEMINE_SLICK = 67,
	VEHICLEMINE_TAR = 68,
	SCRIPT_DRONE = 69,
	RAYGUN = 70,
	BURIEDMINE = 71,
	SCRIPT_MISSILE = 72,
	RCTANK_ROCKET = 73,
	BOMB_WATER = 74,
	BOMB_WATER_SECONDARY = 75,
	MINE_CNCSPIKE = 76,
	BZGAS_MK2 = 77,
	FLASHGRENADE = 78,
	STUNGRENADE = 79,
	CNC_KINETICRAM = 80,
	SCRIPT_MISSILE_LARGE = 81,
	SUBMARINE_BIG = 82,
	EMPLAUNCHER_EMP = 83
};
```
-- @param x float
-- @param y float
-- @param z float
-- @param explosionType int
-- @param damageScale float
-- @param isAudible BOOL
-- @param isInvisible BOOL
-- @param cameraShake float
-- ADD_EXPLOSION(x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)

--- ADD_EXPLOSION_WITH_USER_VFX
-- @param x float
-- @param y float
-- @param z float
-- @param explosionType int - See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param explosionFx Hash
-- @param damageScale float
-- @param isAudible BOOL - If explosion makes a sound.
-- @param isInvisible BOOL - If the explosion is invisible or not.
-- @param cameraShake float
-- ADD_EXPLOSION_WITH_USER_VFX(x, y, z, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake)

--- ADD_OWNED_EXPLOSION
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param explosionType int - See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param damageScale float
-- @param isAudible BOOL - If explosion makes a sound.
-- @param isInvisible BOOL - If the explosion is invisible or not.
-- @param cameraShake float
-- ADD_OWNED_EXPLOSION(ped, x, y, z, explosionType, damageScale, isAudible, isInvisible, cameraShake)

--- GET_CLOSEST_FIRE_POS
-- ```
Returns TRUE if it found something. FALSE if not.  
```
-- @param outPosition Vector3*
-- @param x float
-- @param y float
-- @param z float
-- GET_CLOSEST_FIRE_POS(outPosition, x, y, z)

--- GET_NUMBER_OF_FIRES_IN_RANGE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- GET_NUMBER_OF_FIRES_IN_RANGE(x, y, z, radius)

--- IS_ENTITY_ON_FIRE
-- @param entity Entity
-- IS_ENTITY_ON_FIRE(entity)

--- IS_EXPLOSION_ACTIVE_IN_AREA
-- @param explosionType int - See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- IS_EXPLOSION_ACTIVE_IN_AREA(explosionType, x1, y1, z1, x2, y2, z2)

--- IS_EXPLOSION_IN_ANGLED_AREA
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param explosionType int - explosion enum, -1 for any explosion type. See [ADD_EXPLOSION](#\_0xE3AD2BDBAEE269AC).
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- IS_EXPLOSION_IN_ANGLED_AREA(explosionType, x1, y1, z1, x2, y2, z2, width)

--- IS_EXPLOSION_IN_AREA
-- @param explosionType int - See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- IS_EXPLOSION_IN_AREA(explosionType, x1, y1, z1, x2, y2, z2)

--- IS_EXPLOSION_IN_SPHERE
-- @param explosionType int - See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- IS_EXPLOSION_IN_SPHERE(explosionType, x, y, z, radius)

--- REMOVE_SCRIPT_FIRE
-- @param fireHandle FireId
-- REMOVE_SCRIPT_FIRE(fireHandle)

--- START_ENTITY_FIRE
-- @param entity Entity
-- START_ENTITY_FIRE(entity)

--- START_SCRIPT_FIRE
-- ```
Starts a fire:  
xyz: Location of fire  
maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.  
isGasFire: Whether or not the fire is powered by gasoline.  
```
-- @param X float
-- @param Y float
-- @param Z float
-- @param maxChildren int
-- @param isGasFire BOOL
-- START_SCRIPT_FIRE(X, Y, Z, maxChildren, isGasFire)

--- STOP_ENTITY_FIRE
-- @param entity Entity
-- STOP_ENTITY_FIRE(entity)

--- STOP_FIRE_IN_RANGE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- STOP_FIRE_IN_RANGE(x, y, z, radius)

--- _GET_ENTITY_INSIDE_EXPLOSION_AREA
-- ```
Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
```
-- @param explosionType int - See [`ADD_EXPLOSION`](#\_0xE3AD2BDBAEE269AC).
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param radius float
-- _GET_ENTITY_INSIDE_EXPLOSION_AREA(explosionType, x1, y1, z1, x2, y2, z2, radius)

--- _GET_ENTITY_INSIDE_EXPLOSION_SPHERE
-- ```
NativeDB Introduced: v1290
```
-- @param explosionType int
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- _GET_ENTITY_INSIDE_EXPLOSION_SPHERE(explosionType, x, y, z, radius)

--- _SET_FIRE_SPREAD_RATE
-- SET_FIRE_\*

```
NativeDB Introduced: v1734
```
-- @param p0 float
-- _SET_FIRE_SPREAD_RATE(p0)


-- ========== GRAPHICS ==========

--- 0x0218BA067D249DEA
-- 0x0218BA067D249DEA()

--- 0x02369D5C8A51FDCF
-- ```
DISABLE_S*
```
-- @param toggle BOOL
-- 0x02369D5C8A51FDCF(toggle)

--- 0x03300B57FCAC6DDB
-- @param p0 BOOL
-- 0x03300B57FCAC6DDB(p0)

--- 0x0AE73D8DF3A762B2
-- @param p0 BOOL
-- 0x0AE73D8DF3A762B2(p0)

--- 0x0E4299C549F0D1F1
-- @param toggle BOOL
-- 0x0E4299C549F0D1F1(toggle)

--- 0x108BE26959A9D9BB
-- ```
UI3DSCENE_*
```
-- @param toggle BOOL
-- 0x108BE26959A9D9BB(toggle)

--- 0x14FC5833464340A8
-- 0x14FC5833464340A8()

--- 0x1612C45F9E3E0D44
-- 0x1612C45F9E3E0D44()

--- 0x1BBC135A4D25EDDE
-- @param p0 BOOL
-- 0x1BBC135A4D25EDDE(p0)

--- 0x1CBA05AE7BD7EE05
-- ```
SET_TRA*
```
-- @param p0 float
-- 0x1CBA05AE7BD7EE05(p0)

--- 0x259BA6D4E6F808F1
-- @param p0 Any
-- 0x259BA6D4E6F808F1(p0)

--- 0x25FC3E33A31AD0C9
-- @param p0 BOOL
-- 0x25FC3E33A31AD0C9(p0)

--- 0x27CFB1B1E078CB2D
-- 0x27CFB1B1E078CB2D()

--- 0x27FEB5254759CDE3
-- @param textureDict char*
-- @param p1 BOOL
-- 0x27FEB5254759CDE3(textureDict, p1)

--- 0x2A251AA48B2B46DB
-- ```
NativeDB Introduced: v323
```
-- 0x2A251AA48B2B46DB()

--- 0x2B40A97646381508
-- @param p0 Any
-- 0x2B40A97646381508(p0)

--- 0x2C42340F916C5930
-- @param p0 Any
-- 0x2C42340F916C5930(p0)

--- 0x2D3B147AFAD49DE0
-- ```
Used in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)

NativeDB Introduced: v1290
```
-- @param textureDict char* - inside script_txds.rpf, browse it with OpenIV
-- @param textureName char* - textureName
-- @param x float - x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
-- @param y float - y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
-- @param width float - width 0.0 - 1.0 is the reasonable amount generally
-- @param height float - height 0.0 - 1.0 is the reasonable amount generally
-- @param p6 float - almost always 0.0
-- @param red int - red color
-- @param green int - green color
-- @param blue int - blue color
-- @param alpha int - alpha
-- @param p11 int
-- 0x2D3B147AFAD49DE0(textureDict, textureName, x, y, width, height, p6, red, green, blue, alpha, p11)

--- 0x2FCB133CA50A49EB
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- 0x2FCB133CA50A49EB(p0)

--- 0x30432A0118736E00
-- ```
GET_CURRENT_*

NativeDB Introduced: v1493
```
-- 0x30432A0118736E00()

--- 0x346EF3ECAAAB149E
-- 0x346EF3ECAAAB149E()

--- 0x36F6626459D91457
-- @param p0 float
-- 0x36F6626459D91457(p0)

--- 0x393BD2275CEB7793
-- 0x393BD2275CEB7793()

--- 0x3C788E7F6438754D
-- ```
NativeDB Introduced: v1180
```

Sets the given checkpoint target to the new coords
-- @param checkpointHandle int - the handle of a created checkpoint
-- @param x float
-- @param y float
-- @param z float
-- 0x3C788E7F6438754D(checkpointHandle, x, y, z)

--- 0x43FA7CBE20DAB219
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- 0x43FA7CBE20DAB219(p0)

--- 0x46D1A61A21F566FC
-- @param p0 float
-- 0x46D1A61A21F566FC(p0)

--- 0x4AF92ACD3141D96C
-- 0x4AF92ACD3141D96C()

--- 0x54E22EA2C1956A8D
-- @param p0 float
-- 0x54E22EA2C1956A8D(p0)

--- 0x5B0316762AFD4A64
-- 0x5B0316762AFD4A64()

--- 0x5DBF05DB5926D089
-- @param p0 Any
-- 0x5DBF05DB5926D089(p0)

--- 0x5DEBD9C4DC995692
-- 0x5DEBD9C4DC995692()

--- 0x5F6DF3D92271E8A1
-- ```
DISABLE_*
```
-- @param toggle BOOL
-- 0x5F6DF3D92271E8A1(toggle)

--- 0x615D3925E87A3B26
-- ```
Unknown. Called after creating a checkpoint (type: 51) in the creators.  
```
-- @param checkpoint int
-- 0x615D3925E87A3B26(checkpoint)

--- 0x61F95E5BB3E0A8C6
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- 0x61F95E5BB3E0A8C6(p0)

--- 0x649C97D52332341A
-- @param p0 Any
-- 0x649C97D52332341A(p0)

--- 0x6A51F78772175A51
-- ```
SET_F*
```
-- @param toggle BOOL
-- 0x6A51F78772175A51(toggle)

--- 0x759650634F07B6B4
-- @param p0 int
-- 0x759650634F07B6B4(p0)

--- 0x7A42B2E236E71415
-- ```
UI3DSCENE_*
```
-- 0x7A42B2E236E71415()

--- 0x7AC24EAB6D74118D
-- @param p0 BOOL
-- 0x7AC24EAB6D74118D(p0)

--- 0x7FA5D82B8F58EC06
-- 0x7FA5D82B8F58EC06()

--- 0x814AF7DCAACC597B
-- @param p0 Any
-- 0x814AF7DCAACC597B(p0)

--- 0x82ACC484FFA3B05F
-- @param p0 Any
-- 0x82ACC484FFA3B05F(p0)

--- 0x851CD923176EBA7C
-- 0x851CD923176EBA7C()

--- 0x8CDE909A0370BB3A
-- ```
Used only once in the scripts (taxi_clowncar)

SET_PARTICLE_FX_*
```
-- @param toggle BOOL
-- 0x8CDE909A0370BB3A(toggle)

--- 0x908311265D42A820
-- ```
NativeDB Introduced: v323
```
-- @param p0 Any
-- 0x908311265D42A820(p0)

--- 0x949F397A288B28B3
-- @param p0 float
-- 0x949F397A288B28B3(p0)

--- 0x9641588DAB93B4B5
-- @param p0 Any
-- 0x9641588DAB93B4B5(p0)

--- 0x98D18905BF723B99
-- ```
NativeDB Introduced: v1493
```
-- 0x98D18905BF723B99()

--- 0x98EDF76A7271E4F2
-- ```
REQUEST_*
```
-- 0x98EDF76A7271E4F2()

--- 0x9B079E5221D984D3
-- ```
FORCE_*
```
-- @param p0 BOOL
-- 0x9B079E5221D984D3(p0)

--- 0xA46B73FAA3460AE1
-- @param p0 BOOL
-- 0xA46B73FAA3460AE1(p0)

--- 0xAAE9BE70EC7C69AB
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- 0xAAE9BE70EC7C69AB(p0, p1, p2, p3, p4, p5, p6, p7)

--- 0xADD6627C4D325458
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0xADD6627C4D325458(p0)

--- 0xAE51BC858F32BA66
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- 0xAE51BC858F32BA66(p0, p1, p2, p3, p4)

--- 0xB2EBE8CBC58B90E9
-- 0xB2EBE8CBC58B90E9()

--- 0xB3C641F3630BF6DA
-- ```
Setter for 0xE59343E9E96529E7

SET_M*
```
-- @param p0 float
-- 0xB3C641F3630BF6DA(p0)

--- 0xB569F41F3E7E83A4
-- @param p0 Any
-- 0xB569F41F3E7E83A4(p0)

--- 0xBA0127DA25FD54C9
-- @param p0 Any
-- @param p1 Any
-- 0xBA0127DA25FD54C9(p0, p1)

--- 0xBA3D194057C79A7B
-- ```
SET_PARTICLE_FX_*
```
-- @param p0 char*
-- 0xBA3D194057C79A7B(p0)

--- 0xBB90E12CAC1DAB25
-- @param p0 float
-- 0xBB90E12CAC1DAB25(p0)

--- 0xBCEDB009461DA156
-- 0xBCEDB009461DA156()

--- 0xBE197EAA669238F4
-- ```
This function is hard-coded to always return 0.  
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xBE197EAA669238F4(p0, p1, p2, p3)

--- 0xC0416B061F2B7E5E
-- ```
GOLF_TRAIL_SET_*
```
-- @param p0 BOOL
-- 0xC0416B061F2B7E5E(p0)

--- 0xC35A6D07C93802B2
-- 0xC35A6D07C93802B2()

--- 0xC5C8F970D4EDFF71
-- @param p0 Any
-- 0xC5C8F970D4EDFF71(p0)

--- 0xCA465D9CC0D231BA
-- @param p0 Any
-- 0xCA465D9CC0D231BA(p0)

--- 0xCA4AE345A153D573
-- @param p0 BOOL
-- 0xCA4AE345A153D573(p0)

--- 0xCB82A0BF0E3E3265
-- @param p0 int
-- 0xCB82A0BF0E3E3265(p0)

--- 0xCFD16F0DB5A3535C
-- ```
NativeDB Introduced: v2060
```
-- @param toggle BOOL
-- 0xCFD16F0DB5A3535C(toggle)

--- 0xD1C55B110E4DF534
-- ```
SET_TV_???  
```
-- @param p0 Any
-- 0xD1C55B110E4DF534(p0)

--- 0xDB1EA9411C8911EC
-- ```
NativeDB Introduced: v1180
```

This native is used for the "larger" circular checkpoints, and sets the circle/ring around the checkpoint to point in the same direction as the inner arrow
-- @param checkpointHandle int - the handle of a created checkpoint
-- 0xDB1EA9411C8911EC(checkpointHandle)

--- 0xE2892E7E55D7073A
-- @param p0 float
-- 0xE2892E7E55D7073A(p0)

--- 0xE3E2C1B4C59DBC77
-- ```
Sets an unknown value related to timecycles.  
```
-- @param unk int
-- 0xE3E2C1B4C59DBC77(unk)

--- 0xE59343E9E96529E7
-- ```
Getter for 0xB3C641F3630BF6DA

GET_M*
```
-- 0xE59343E9E96529E7()

--- 0xE63D7C6EECECB66B
-- ```
TOGGLE_*
```
-- @param toggle BOOL
-- 0xE63D7C6EECECB66B(toggle)

--- 0xE791DF1F73ED2C8B
-- ```
This function is hard-coded to always return 0.  
```
-- @param p0 Any
-- 0xE791DF1F73ED2C8B(p0)

--- 0xEC72C258667BE5EA
-- ```
This function is hard-coded to always return 0.  
```
-- @param p0 Any
-- 0xEC72C258667BE5EA(p0)

--- 0xEF398BEEE4EF45F9
-- @param p0 BOOL
-- 0xEF398BEEE4EF45F9(p0)

--- 0xEFABC7722293DA7C
-- ```
AD*
```
-- 0xEFABC7722293DA7C()

--- 0xF3F776ADA161E47D
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0xF3F776ADA161E47D(p0, p1)

--- 0xF51D36185993515D
-- @param checkpoint int
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param unkX float
-- @param unkY float
-- @param unkZ float
-- 0xF51D36185993515D(checkpoint, posX, posY, posZ, unkX, unkY, unkZ)

--- 0xF78B803082D4386F
-- @param p0 float
-- 0xF78B803082D4386F(p0)

--- 0xFCF6788FC4860CD4
-- SET_CHECKPOINT_\*

```
NativeDB Introduced: v1734
```
-- @param checkpoint int
-- 0xFCF6788FC4860CD4(checkpoint)

--- ADD_DECAL
-- Places a decal into the world

```cs
public enum DecalTypes  
{  
    splatters_blood = 1010,  
    splatters_blood_dir = 1015,  
    splatters_blood_mist = 1017,  
    splatters_mud = 1020,  
    splatters_paint = 1030,  
    splatters_water = 1040,  
    splatters_water_hydrant = 1050,  
    splatters_blood2 = 1110,  
    weapImpact_metal = 4010,  
    weapImpact_concrete = 4020,  
    weapImpact_mattress = 4030,  
    weapImpact_mud = 4032,  
    weapImpact_wood = 4050,  
    weapImpact_sand = 4053,  
    weapImpact_cardboard = 4040,  
    weapImpact_melee_glass = 4100,  
    weapImpact_glass_blood = 4102,  
    weapImpact_glass_blood2 = 4104,  
    weapImpact_shotgun_paper = 4200,  
    weapImpact_shotgun_mattress,  
    weapImpact_shotgun_metal,  
    weapImpact_shotgun_wood,  
    weapImpact_shotgun_dirt,  
    weapImpact_shotgun_tvscreen,  
    weapImpact_shotgun_tvscreen2,  
    weapImpact_shotgun_tvscreen3,  
    weapImpact_melee_concrete = 4310,  
    weapImpact_melee_wood = 4312,  
    weapImpact_melee_metal = 4314,  
    burn1 = 4421,  
    burn2,  
    burn3,  
    burn4,  
    burn5,  
    bang_concrete_bang = 5000,  
    bang_concrete_bang2,  
    bang_bullet_bang,  
    bang_bullet_bang2 = 5004,  
    bang_glass = 5031,  
    bang_glass2,  
    solidPool_water = 9000,  
    solidPool_blood,  
    solidPool_oil,  
    solidPool_petrol,  
    solidPool_mud,  
    porousPool_water,  
    porousPool_blood,  
    porousPool_oil,  
    porousPool_petrol,  
    porousPool_mud,  
    porousPool_water_ped_drip,  
    liquidTrail_water = 9050  
}  
```
-- @param decalType int - which type of decal to place, based on the ID, see `DecalTypes` enum.
-- @param posX float - X position coordinate.
-- @param posY float - Y position coordinate.
-- @param posZ float - Z position coordinate.
-- @param dirX float - X Orientation.
-- @param dirY float - Y Orientation.
-- @param dirZ float - Z Orientation.
-- @param sideX float - Usually set to 0.
-- @param sideY float - Usually set to 1.
-- @param sideZ float - Usually set to 0.
-- @param width float - Width of the decal.
-- @param height float - Height of the decal.
-- @param rCoef float - Red Color.
-- @param gCoef float - Green Color.
-- @param bCoef float - Blue Color.
-- @param opacity float - Alpha Color.
-- @param timeout float - The lifetime of the decal.
-- @param isLongRange BOOL - toggle further LOD draw distance.
-- @param isDynamic BOOL - toggle dynamics.
-- @param useComplexColn BOOL - use complex coloring.
-- ADD_DECAL(decalType, posX, posY, posZ, dirX, dirY, dirZ, sideX, sideY, sideZ, width, height, rCoef, gCoef, bCoef, opacity, timeout, isLongRange, isDynamic, useComplexColn)

--- ADD_ENTITY_ICON
-- ```
Example:  
GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");  
I tried this and nothing happened...  
```
-- @param entity Entity
-- @param icon char*
-- ADD_ENTITY_ICON(entity, icon)

--- ADD_PETROL_DECAL
-- @param x float
-- @param y float
-- @param z float
-- @param groundLvl float
-- @param width float
-- @param transparency float
-- ADD_PETROL_DECAL(x, y, z, groundLvl, width, transparency)

--- ADD_PETROL_TRAIL_DECAL_INFO
-- @param x float
-- @param y float
-- @param z float
-- @param p3 float
-- ADD_PETROL_TRAIL_DECAL_INFO(x, y, z, p3)

--- ADD_TCMODIFIER_OVERRIDE
-- @param modifierName1 char*
-- @param modifierName2 char*
-- ADD_TCMODIFIER_OVERRIDE(modifierName1, modifierName2)

--- ADD_VEHICLE_CREW_EMBLEM
-- ```
boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
```
-- @param vehicle Vehicle
-- @param ped Ped
-- @param boneIndex int
-- @param x1 float
-- @param x2 float
-- @param x3 float
-- @param y1 float
-- @param y2 float
-- @param y3 float
-- @param z1 float
-- @param z2 float
-- @param z3 float
-- @param scale float
-- @param p13 Any
-- @param alpha int
-- ADD_VEHICLE_CREW_EMBLEM(vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, p13, alpha)

--- ANIMPOSTFX_IS_RUNNING
-- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
-- @param effectName char*
-- ANIMPOSTFX_IS_RUNNING(effectName)

--- ANIMPOSTFX_PLAY
-- ```
duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
```
-- @param effectName char*
-- @param duration int
-- @param looped BOOL
-- ANIMPOSTFX_PLAY(effectName, duration, looped)

--- ANIMPOSTFX_STOP
-- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
-- @param effectName char*
-- ANIMPOSTFX_STOP(effectName)

--- ANIMPOSTFX_STOP_ALL
-- ANIMPOSTFX_STOP_ALL()

--- ATTACH_TV_AUDIO_TO_ENTITY
-- ```
Might be more appropriate in AUDIO?  
```
-- @param entity Entity
-- ATTACH_TV_AUDIO_TO_ENTITY(entity)

--- BEGIN_SCALEFORM_MOVIE_METHOD
-- ```
Push a function from the Scaleform onto the stack  
```
-- @param scaleform int
-- @param methodName char*
-- BEGIN_SCALEFORM_MOVIE_METHOD(scaleform, methodName)

--- BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND
-- Starts frontend (pause menu) scaleform movie methods.
This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.

Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
-- @param functionName char* - The function name of the scaleform to call.
-- BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND(functionName)

--- BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER
-- Starts frontend (pause menu) scaleform movie methods for header options.

Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
-- @param functionName char* - Scaleform function name.
-- BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER(functionName)

--- BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD
-- ```
Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.
Known components:
19 - MP_RANK_BAR
20 - HUD_DIRECTOR_MODE
This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
```
-- @param hudComponent int
-- @param methodName char*
-- BEGIN_SCALEFORM_SCRIPT_HUD_MOVIE_METHOD(hudComponent, methodName)

--- BEGIN_TAKE_HIGH_QUALITY_PHOTO
-- BEGIN_TAKE_HIGH_QUALITY_PHOTO()

--- BEGIN_TAKE_MISSION_CREATOR_PHOTO
-- BEGIN_TAKE_MISSION_CREATOR_PHOTO()

--- BEGIN_TEXT_COMMAND_SCALEFORM_STRING
-- ```
Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.
Examples:
GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");
HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");
HUD::_ADD_TEXT_COMPONENT_STRING(a_2);
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");
HUD::_0x17299B63C7683A2B(v_3);
HUD::_0x17299B63C7683A2B(v_4);
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");
HUD::_0x17299B63C7683A2B(v_3);
GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();
```
-- @param textLabel char* - a GXT text label
-- BEGIN_TEXT_COMMAND_SCALEFORM_STRING(textLabel)

--- CALL_SCALEFORM_MOVIE_METHOD
-- ```
Calls the Scaleform function.  
```
-- @param scaleform int
-- @param method char*
-- CALL_SCALEFORM_MOVIE_METHOD(scaleform, method)

--- CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER
-- ```
Calls the Scaleform function and passes the parameters as floats.  
The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.  
```
-- @param scaleform int
-- @param methodName char*
-- @param param1 float
-- @param param2 float
-- @param param3 float
-- @param param4 float
-- @param param5 float
-- CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER(scaleform, methodName, param1, param2, param3, param4, param5)

--- CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING
-- ```
Calls the Scaleform function and passes both float and string parameters (in their respective order).  
The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).  
NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.  
Examples:  
// function MY_FUNCTION(floatParam1, floatParam2, stringParam)  
GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);  
// function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)  
GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);  
```
-- @param scaleform int
-- @param methodName char*
-- @param floatParam1 float
-- @param floatParam2 float
-- @param floatParam3 float
-- @param floatParam4 float
-- @param floatParam5 float
-- @param stringParam1 char*
-- @param stringParam2 char*
-- @param stringParam3 char*
-- @param stringParam4 char*
-- @param stringParam5 char*
-- CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5)

--- CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING
-- ```
Calls the Scaleform function and passes the parameters as strings.  
The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).  
```
-- @param scaleform int
-- @param methodName char*
-- @param param1 char*
-- @param param2 char*
-- @param param3 char*
-- @param param4 char*
-- @param param5 char*
-- CALL_SCALEFORM_MOVIE_METHOD_WITH_STRING(scaleform, methodName, param1, param2, param3, param4, param5)

--- CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER
-- ```
When this is set to ON, shadows only draw as you get nearer.
When OFF, they draw from a further distance.
```
-- @param toggle BOOL
-- CASCADE_SHADOWS_ENABLE_ENTITY_TRACKER(toggle)

--- CASCADE_SHADOWS_INIT_SESSION
-- CASCADE_SHADOWS_INIT_SESSION()

--- CASCADE_SHADOWS_SET_AIRCRAFT_MODE
-- @param p0 BOOL
-- CASCADE_SHADOWS_SET_AIRCRAFT_MODE(p0)

--- CASCADE_SHADOWS_SET_CASCADE_BOUNDS
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 BOOL
-- @param p7 float
-- CASCADE_SHADOWS_SET_CASCADE_BOUNDS(p0, p1, p2, p3, p4, p5, p6, p7)

--- CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE
-- @param p0 float
-- CASCADE_SHADOWS_SET_CASCADE_BOUNDS_SCALE(p0)

--- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE
-- @param p0 BOOL
-- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_MODE(p0)

--- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE
-- @param p0 float
-- CASCADE_SHADOWS_SET_DYNAMIC_DEPTH_VALUE(p0)

--- CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE
-- @param p0 float
-- CASCADE_SHADOWS_SET_ENTITY_TRACKER_SCALE(p0)

--- CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE
-- ```
Possible values:
"CSM_ST_POINT"
"CSM_ST_LINEAR"
"CSM_ST_TWOTAP"
"CSM_ST_BOX3x3"
"CSM_ST_BOX4x4"
"CSM_ST_DITHER2_LINEAR"
"CSM_ST_CUBIC"
"CSM_ST_DITHER4"
"CSM_ST_DITHER16"
"CSM_ST_SOFT16"
"CSM_ST_DITHER16_RPDB"
"CSM_ST_POISSON16_RPDB_GNORM"
"CSM_ST_HIGHRES_BOX4x4"
"CSM_ST_CLOUDS_SIMPLE"
"CSM_ST_CLOUDS_LINEAR"
"CSM_ST_CLOUDS_TWOTAP"
"CSM_ST_CLOUDS_BOX3x3"
"CSM_ST_CLOUDS_BOX4x4"
"CSM_ST_CLOUDS_DITHER2_LINEAR"
"CSM_ST_CLOUDS_SOFT16"
"CSM_ST_CLOUDS_DITHER16_RPDB"
"CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
```
-- @param type char*
-- CASCADE_SHADOWS_SET_SHADOW_SAMPLE_TYPE(type)

--- CLEAR_DRAW_ORIGIN
-- Resets the screen's draw-origin which was changed by the function [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) back to `x=0, y=0`. See [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) for further information.
-- CLEAR_DRAW_ORIGIN()

--- CLEAR_TIMECYCLE_MODIFIER
-- CLEAR_TIMECYCLE_MODIFIER()

--- CLEAR_TV_CHANNEL_PLAYLIST
-- @param tvChannel int
-- CLEAR_TV_CHANNEL_PLAYLIST(tvChannel)

--- CREATE_CHECKPOINT
-- ```
Creates a checkpoint. Returns the handle of the checkpoint.  
20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
Parameters:  
* type - The type of checkpoint to create. See below for a list of checkpoint types.  
* pos1 - The position of the checkpoint.  
* pos2 - The position of the next checkpoint to point to.  
* diameter - The diameter of the checkpoint.
* color - The color of the checkpoint.  
* reserved - Special parameter, see below for details. Usually set to 0 in the scripts.  
Checkpoint types (prior to game build 2189):  
0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  
5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  
10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker  
15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker        
20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   
25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker      
30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker   
35-38-------Ring: Airplane Up, Left, Right, UpsideDown  
39----------?  
40----------Ring: just a ring  
41----------?  
42-44-------Cylinder w/ number (uses 'reserved' parameter)  
45-47-------Cylinder no arrow or number  
If using type 42-44, reserved sets number / number and shape to display  
0-99------------Just numbers (0-99)  
100-109-----------------Arrow (0-9)  
110-119------------Two arrows (0-9)  
120-129----------Three arrows (0-9)  
130-139----------------Circle (0-9)  
140-149------------CycleArrow (0-9)  
150-159----------------Circle (0-9)  
160-169----Circle  w/ pointer (0-9)  
170-179-------Perforated ring (0-9)  
180-189----------------Sphere (0-9)  
```

[Checkpoint Types](https://docs.fivem.net/docs/game-references/checkpoints/) as of game build 2189
-- @param type int
-- @param posX1 float
-- @param posY1 float
-- @param posZ1 float
-- @param posX2 float
-- @param posY2 float
-- @param posZ2 float
-- @param diameter float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- @param reserved int
-- CREATE_CHECKPOINT(type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved)

--- CREATE_TRACKED_POINT
-- Creates a tracked point: useful for checking the visibility of a 3D point on screen.

Tracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See [`DESTROY_TRACKED_POINT`](#\_0xB25DC90BAD56CA42) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/).

Only 64 points may be tracked at a given time.
-- CREATE_TRACKED_POINT()

--- DELETE_CHECKPOINT
-- @param checkpoint int
-- DELETE_CHECKPOINT(checkpoint)

--- DESTROY_TRACKED_POINT
-- @param point int
-- DESTROY_TRACKED_POINT(point)

--- DISABLE_MOON_CYCLE_OVERRIDE
-- Removes any custom moon cycle overrides that have been configured with [ENABLE_MOON_CYCLE_OVERRIDE](#\_0x2C328AF17210F009)
-- DISABLE_MOON_CYCLE_OVERRIDE()

--- DISABLE_OCCLUSION_THIS_FRAME
-- DISABLE_OCCLUSION_THIS_FRAME()

--- DISABLE_SCREENBLUR_FADE
-- DISABLE_SCREENBLUR_FADE()

--- DISABLE_VEHICLE_DISTANTLIGHTS
-- @param toggle BOOL
-- DISABLE_VEHICLE_DISTANTLIGHTS(toggle)

--- DOES_LATEST_BRIEF_STRING_EXIST
-- Used in pi_menu.c. Checks if there is a brief entry for specified value.
Values:
0 - Dialogue brief
1 - Help text brief
2 - Mission Objective brief
-- @param briefValue int - A value indicating brief text.
-- DOES_LATEST_BRIEF_STRING_EXIST(briefValue)

--- DOES_PARTICLE_FX_LOOPED_EXIST
-- @param ptfxHandle int
-- DOES_PARTICLE_FX_LOOPED_EXIST(ptfxHandle)

--- DOES_VEHICLE_HAVE_CREW_EMBLEM
-- @param vehicle Vehicle
-- @param p1 int
-- DOES_VEHICLE_HAVE_CREW_EMBLEM(vehicle, p1)

--- DONT_RENDER_IN_GAME_UI
-- @param p0 BOOL
-- DONT_RENDER_IN_GAME_UI(p0)

--- DRAW_BOX
-- This native draws a box between two vectors in the game world. It is typically used for visualizing boundaries or areas of interest. The color of the box is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.

```
NativeDB Introduced: v323
```
-- @param x1 float - The x-coordinate of the first corner of the box.
-- @param y1 float - The y-coordinate of the first corner of the box.
-- @param z1 float - The z-coordinate of the first corner of the box.
-- @param x2 float - The x-coordinate of the opposite corner of the box.
-- @param y2 float - The y-coordinate of the opposite corner of the box.
-- @param z2 float - The z-coordinate of the opposite corner of the box.
-- @param red int - The red color component of the box (0 - 255).
-- @param green int - The green color component of the box (0 - 255).
-- @param blue int - The blue color component of the box (0 - 255).
-- @param alpha int - The alpha value of the box (0 - 255).
-- DRAW_BOX(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)

--- DRAW_DEBUG_BOX
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- DRAW_DEBUG_BOX(x1, y1, z1, x2, y2, z2, r, g, b, a)

--- DRAW_DEBUG_CROSS
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param size float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_DEBUG_CROSS(x, y, z, size, red, green, blue, alpha)

--- DRAW_DEBUG_LINE
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- DRAW_DEBUG_LINE(x1, y1, z1, x2, y2, z2, r, g, b, a)

--- DRAW_DEBUG_LINE_WITH_TWO_COLOURS
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param r1 int
-- @param g1 int
-- @param b1 int
-- @param r2 int
-- @param g2 int
-- @param b2 int
-- @param alpha1 int
-- @param alpha2 int
-- DRAW_DEBUG_LINE_WITH_TWO_COLOURS(x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2)

--- DRAW_DEBUG_SPHERE
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_DEBUG_SPHERE(x, y, z, radius, red, green, blue, alpha)

--- DRAW_DEBUG_TEXT
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param text char*
-- @param x float
-- @param y float
-- @param z float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_DEBUG_TEXT(text, x, y, z, red, green, blue, alpha)

--- DRAW_DEBUG_TEXT_2D
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param text char*
-- @param x float
-- @param y float
-- @param z float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_DEBUG_TEXT_2D(text, x, y, z, red, green, blue, alpha)

--- DRAW_LIGHT_WITH_RANGE
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param colorR int
-- @param colorG int
-- @param colorB int
-- @param range float
-- @param intensity float
-- DRAW_LIGHT_WITH_RANGE(posX, posY, posZ, colorR, colorG, colorB, range, intensity)

--- DRAW_LINE
-- This native draws a line between two vectors in the game world. It is typically used for visualizing paths or connections between points. The color of the line is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.

```
NativeDB Introduced: v323
```
-- @param x1 float - The x-coordinate of the starting point of the line.
-- @param y1 float - The y-coordinate of the starting point of the line.
-- @param z1 float - The z-coordinate of the starting point of the line.
-- @param x2 float - The x-coordinate of the ending point of the line.
-- @param y2 float - The y-coordinate of the ending point of the line.
-- @param z2 float - The z-coordinate of the ending point of the line.
-- @param red int - The red color component of the line (0 - 255).
-- @param green int - The green color component of the line (0 - 255).
-- @param blue int - The blue color component of the line (0 - 255).
-- @param alpha int - The alpha value of the line (0 - 255).
-- DRAW_LINE(x1, y1, z1, x2, y2, z2, red, green, blue, alpha)

--- DRAW_LOW_QUALITY_PHOTO_TO_PHONE
-- @param p0 BOOL
-- @param p1 BOOL
-- DRAW_LOW_QUALITY_PHOTO_TO_PHONE(p0, p1)

--- DRAW_MARKER
-- Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.

There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
-- @param type int - The marker type to draw.
-- @param posX float - The X coordinate to draw the marker at.
-- @param posY float - The Y coordinate to draw the marker at.
-- @param posZ float - The Z coordinate to draw the marker at.
-- @param dirX float - The X component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirY float - The Y component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param dirZ float - The Z component of the direction vector for the marker, or 0.0 to use rotX/Y/Z.
-- @param rotX float - The X rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotY float - The Y rotation for the marker. Only used if the direction vector is 0.0.
-- @param rotZ float - The Z rotation for the marker. Only used if the direction vector is 0.0.
-- @param scaleX float - The scale for the marker on the X axis.
-- @param scaleY float - The scale for the marker on the Y axis.
-- @param scaleZ float - The scale for the marker on the Z axis.
-- @param red int - The red component of the marker color, on a scale from 0-255.
-- @param green int - The green component of the marker color, on a scale from 0-255.
-- @param blue int - The blue component of the marker color, on a scale from 0-255.
-- @param alpha int - The alpha component of the marker color, on a scale from 0-255.
-- @param bobUpAndDown BOOL - Whether or not the marker should slowly animate up/down.
-- @param faceCamera BOOL - Whether the marker should be a 'billboard', as in, should constantly face the camera.
-- @param p19 int - Typically set to `2`. Does not seem to matter directly.
-- @param rotate BOOL - Rotations only apply to the heading.
-- @param textureDict char* - A texture dictionary to draw the marker with, or NULL. Example: 'GolfPutting'
-- @param textureName char* - A texture name in `textureDict` to draw the marker with, or NULL. Example: 'PuttingMarker'
-- @param drawOnEnts BOOL - Whether or not the marker should draw on intersecting entities.
-- DRAW_MARKER(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts)

--- DRAW_POLY
-- ```
x/y/z - Location of a vertex (in world coords), presumably.  
----------------  
x1, y1, z1     : Coordinates for the first point  
x2, y2, z2     : Coordinates for the second point  
x3, y3, z3     : Coordinates for the third point  
r, g, b, alpha : Color with RGBA-Values  
Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).  
But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.  
I recommend using a predefined function to call this.  
[VB.NET]  
Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)  
    [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)  
End Sub  
[C#]  
public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)  
{  
    Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);  
}  
BTW: Intersecting triangles are not supported: They overlap in the order they were called.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param x3 float
-- @param y3 float
-- @param z3 float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_POLY(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha)

--- DRAW_RECT
-- ```
Draws a rectangle on the screen.  
-x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)  
-y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)  
-width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)  
-height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)  
-R: Red part of the color. (0-255)  
-G: Green part of the color. (0-255)  
-B: Blue part of the color. (0-255)  
-A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)  
The total number of rectangles to be drawn in one frame is apparently limited to 399.  
```

```
NativeDB Added Parameter 9: BOOL p8
```
-- @param x float
-- @param y float
-- @param width float
-- @param height float
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- DRAW_RECT(x, y, width, height, r, g, b, a)

--- DRAW_SCALEFORM_MOVIE
-- @param scaleformHandle int
-- @param x float
-- @param y float
-- @param width float
-- @param height float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- @param unk int
-- DRAW_SCALEFORM_MOVIE(scaleformHandle, x, y, width, height, red, green, blue, alpha, unk)

--- DRAW_SCALEFORM_MOVIE_3D
-- @param scaleform int
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param p7 float
-- @param sharpness float
-- @param p9 float
-- @param scaleX float
-- @param scaleY float
-- @param scaleZ float
-- @param p13 Any
-- DRAW_SCALEFORM_MOVIE_3D(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, sharpness, p9, scaleX, scaleY, scaleZ, p13)

--- DRAW_SCALEFORM_MOVIE_3D_SOLID
-- @param scaleform int
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param p7 float
-- @param p8 float
-- @param p9 float
-- @param scaleX float
-- @param scaleY float
-- @param scaleZ float
-- @param p13 Any
-- DRAW_SCALEFORM_MOVIE_3D_SOLID(scaleform, posX, posY, posZ, rotX, rotY, rotZ, p7, p8, p9, scaleX, scaleY, scaleZ, p13)

--- DRAW_SCALEFORM_MOVIE_FULLSCREEN
-- ```
unk is not used so no need  
```
-- @param scaleform int
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- @param unk int
-- DRAW_SCALEFORM_MOVIE_FULLSCREEN(scaleform, red, green, blue, alpha, unk)

--- DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED
-- @param scaleform1 int
-- @param scaleform2 int
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_SCALEFORM_MOVIE_FULLSCREEN_MASKED(scaleform1, scaleform2, red, green, blue, alpha)

--- DRAW_SPOT_LIGHT
-- ```
Parameters:  
* pos - coordinate where the spotlight is located  
* dir - the direction vector the spotlight should aim at from its current position  
* r,g,b - color of the spotlight  
* distance - the maximum distance the light can reach  
* brightness - the brightness of the light  
* roundness - "smoothness" of the circle edge  
* radius - the radius size of the spotlight  
* falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)  
Example in C# (spotlight aims at the closest vehicle):  
Vector3 myPos = Game.Player.Character.Position;  
Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);  
Vector3 destinationCoords = nearest.Position;  
Vector3 dirVector = destinationCoords - myPos;  
dirVector.Normalize();  
Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);  
```
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param dirX float
-- @param dirY float
-- @param dirZ float
-- @param colorR int
-- @param colorG int
-- @param colorB int
-- @param distance float
-- @param brightness float
-- @param hardness float
-- @param radius float
-- @param falloff float
-- DRAW_SPOT_LIGHT(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff)

--- DRAW_SPRITE
-- ```
Draws a 2D sprite on the screen.  
Parameters:  
textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)  
textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)  
screenX/Y - Screen offset (0.5 = center)  
scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)  
heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees  
red,green,blue - Sprite color (default = 255/255/255)  
alpha - opacity level  
```

```
NativeDB Added Parameter 12: BOOL p11
```
-- @param textureDict char*
-- @param textureName char*
-- @param screenX float
-- @param screenY float
-- @param width float
-- @param height float
-- @param heading float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_SPRITE(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)

--- DRAW_TEXTURED_POLY
-- This native draws a textured polygon between three vectors in the game world. It's commonly utilized for rendering deadline trailing lights, with additional details available in the `deadline.ytd` file. UVW mapping details (u,v,w parameters) can be found on various internet resources. This native is specifically used for drawing textured polygons on the screen, where UV coordinates define the texture mapping and color/alpha parameters define the appearance of the polygon. This native should be called every frame for continuous rendering.

```
NativeDB Introduced: v877
```
-- @param x1 float - The x-coordinate of the first vector.
-- @param y1 float - The y-coordinate of the first vector.
-- @param z1 float - The z-coordinate of the first vector.
-- @param x2 float - The x-coordinate of the second vector.
-- @param y2 float - The y-coordinate of the second vector.
-- @param z2 float - The z-coordinate of the second vector.
-- @param x3 float - The x-coordinate of the third vector.
-- @param y3 float - The y-coordinate of the third vector.
-- @param z3 float - The z-coordinate of the third vector.
-- @param red int - The red color component of the polygon (0 - 255).
-- @param green int - The green color component of the polygon (0 - 255).
-- @param blue int - The blue color component of the polygon (0 - 255).
-- @param alpha int - The alpha value of the polygon (0 - 255).
-- @param textureDict char* - The name of the texture dictionary.
-- @param textureName char* - The name of the texture.
-- @param u1 float - The u-coordinate of the first UV mapping.
-- @param v1 float - The v-coordinate of the first UV mapping.
-- @param w1 float - The w-coordinate of the first UV mapping.
-- @param u2 float - The u-coordinate of the second UV mapping.
-- @param v2 float - The v-coordinate of the second UV mapping.
-- @param w2 float - The w-coordinate of the second UV mapping.
-- @param u3 float - The u-coordinate of the third UV mapping.
-- @param v3 float - The v-coordinate of the third UV mapping.
-- @param w3 float - The w-coordinate of the third UV mapping.
-- DRAW_TEXTURED_POLY(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)

--- DRAW_TV_CHANNEL
-- ```
All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.
"act_cinema.ysc", line 1483:
HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);
HUD::SET_TEXT_RENDER_ID(l_AE);
GRAPHICS::_0x61BB1D9B3A95D802(4);
GRAPHICS::_0xC6372ECD45D73BCD(1);
if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {
    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);
} else {
    GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
}
"am_mp_property_int.ysc", line 102545:
if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {
    if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {
        HUD::SET_TEXT_RENDER_ID(a_2._f1);
        GRAPHICS::_0x61BB1D9B3A95D802(4);
        GRAPHICS::_0xC6372ECD45D73BCD(1);
        GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);
        if (GRAPHICS::GET_TV_CHANNEL() == -1) {
            sub_a8fa5(a_2, 1);
        } else {
            sub_a8fa5(a_2, 1);
            GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);
        }
        HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());
    }
}
```
-- @param xPos float
-- @param yPos float
-- @param xScale float
-- @param yScale float
-- @param rotation float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- DRAW_TV_CHANNEL(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha)

--- ENABLE_ALIEN_BLOOD_VFX
-- Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.

This native does not seem to work, however by using the [ANIMPOSTFX_PLAY](#\_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
-- @param toggle BOOL
-- ENABLE_ALIEN_BLOOD_VFX(toggle)

--- ENABLE_CLOWN_BLOOD_VFX
-- If true, this native will create purple explosions upon projectile impact, add comic-like PTFX when firing a weapon, create a sound on bullet impact and have its own "blood effect".

If the PTFX asset "scr_rcbarry2" is not requested using ([`RequestNamedPtfxAsset`](#\_0xD821490579791273)) then this native **will not work as intended**.

Excerpt from fm_content_drug_lab_work.c:

```
STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_rcbarry2");
if (STREAMING::HAS_NAMED_PTFX_ASSET_LOADED("scr_rcbarry2"))
{
  GRAPHICS::ENABLE_CLOWN_BLOOD_VFX(true);
  AUDIO::START_AUDIO_SCENE("DLC_CM2022_DRUG_TRIP_SPRINKLERS_SCENE");
  func_720(26);
}
```
-- @param toggle BOOL - Whether to toggle the clown VFX on or off.
-- ENABLE_CLOWN_BLOOD_VFX(toggle)

--- ENABLE_MOON_CYCLE_OVERRIDE
-- Enable a custom moon cycle, allowing control of which lunar phase the moon is in.

Valid values are from `0.0` to `1.0`, with `0.5` representing a full moon.

| Value |   Lunar Phase   |
| :---: | :-------------: |
| `0.1` | Waxing Crescent |
| `0.2` |  First Quarter  |
| `0.3` | Waxing Gibbous  |
| `0.5` |    Full Moon    |
| `0.7` | Waning Gibbous  |
| `0.8` |  Third Quarter  |
| `0.9` | Waning Crescent |

The moon phase can be disabled with [DISABLE_MOON_CYCLE_OVERRIDE](#\_0x2BF72AD5B41AA739)
-- @param phase float - A value indicating the moon cycle.
-- ENABLE_MOON_CYCLE_OVERRIDE(phase)

--- ENABLE_MOVIE_KEYFRAME_WAIT
-- @param toggle BOOL
-- ENABLE_MOVIE_KEYFRAME_WAIT(toggle)

--- ENABLE_MOVIE_SUBTITLES
-- @param toggle BOOL
-- ENABLE_MOVIE_SUBTITLES(toggle)

--- END_PETROL_TRAIL_DECALS
-- END_PETROL_TRAIL_DECALS()

--- END_SCALEFORM_MOVIE_METHOD
-- ```
Pops and calls the Scaleform function on the stack  
```
-- END_SCALEFORM_MOVIE_METHOD()

--- END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
-- END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE()

--- END_TEXT_COMMAND_SCALEFORM_STRING
-- END_TEXT_COMMAND_SCALEFORM_STRING()

--- END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING
-- Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
Also useful for when you are trying to add blips and inputs in your scaleform (If the scaleform supports it).
-- END_TEXT_COMMAND_UNPARSED_SCALEFORM_STRING()

--- FADE_DECALS_IN_RANGE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param duration float - A duration in seconds.
-- FADE_DECALS_IN_RANGE(x, y, z, radius, duration)

--- FADE_UP_PED_LIGHT
-- @param p0 float
-- FADE_UP_PED_LIGHT(p0)

--- FORCE_RENDER_IN_GAME_UI
-- @param toggle BOOL
-- FORCE_RENDER_IN_GAME_UI(toggle)

--- FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO
-- FREE_MEMORY_FOR_HIGH_QUALITY_PHOTO()

--- FREE_MEMORY_FOR_LOW_QUALITY_PHOTO
-- FREE_MEMORY_FOR_LOW_QUALITY_PHOTO()

--- FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO
-- FREE_MEMORY_FOR_MISSION_CREATOR_PHOTO()

--- GET_ACTUAL_SCREEN_RESOLUTION
-- Returns current screen resolution.

```
NativeDB Introduced: v323
```
-- @param x int*
-- @param y int*
-- GET_ACTUAL_SCREEN_RESOLUTION(x, y)

--- GET_ASPECT_RATIO
-- This native retrieves the aspect ratio of the game window. If `physicalAspect` is `true`, it returns the physical aspect ratio of the game window, which is useful for 3x1 modes. Otherwise, it returns the aspect ratio of the main game window, considering any custom overrides from the settings menu.

```
NativeDB Introduced: v323
```
-- @param physicalAspect BOOL - A boolean value. Passing in `true` returns the physical aspect ratio of the game window. Passing in `false` returns the aspect ratio of the main game window.
-- GET_ASPECT_RATIO(physicalAspect)

--- GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS
-- GET_CURRENT_NUMBER_OF_CLOUD_PHOTOS()

--- GET_DECAL_WASH_LEVEL
-- @param decal int
-- GET_DECAL_WASH_LEVEL(decal)

--- GET_IS_HIDEF
-- This native indicates whether the game is running in high-definition (HD) resolution. It returns `false` if the resolution is less than `1280x720` and `true` if it's equal to or greater than `1280x720`.

```
NativeDB Introduced: v323
```
-- GET_IS_HIDEF()

--- GET_IS_PETROL_DECAL_IN_RANGE
-- @param xCoord float
-- @param yCoord float
-- @param zCoord float
-- @param radius float
-- GET_IS_PETROL_DECAL_IN_RANGE(xCoord, yCoord, zCoord, radius)

--- GET_IS_WIDESCREEN
-- This native retrieves whether the game is running in widescreen mode or not.

```
NativeDB Introduced: v323
```
-- GET_IS_WIDESCREEN()

--- GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS
-- ```
This function is hard-coded to always return 96.
```
-- GET_MAXIMUM_NUMBER_OF_CLOUD_PHOTOS()

--- GET_MAXIMUM_NUMBER_OF_PHOTOS
-- ```
This function is hard-coded to always return 0.
```
-- GET_MAXIMUM_NUMBER_OF_PHOTOS()

--- GET_REQUESTINGNIGHTVISION
-- GET_REQUESTINGNIGHTVISION()

--- GET_SAFE_ZONE_SIZE
-- ```
Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.  
```
-- GET_SAFE_ZONE_SIZE()

--- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL
-- @param methodReturn int - Operation handle returned by [`END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE`](#\_0xC50AA39A577AF886)
-- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_BOOL(methodReturn)

--- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT
-- Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
-- @param method_return int - The return value of this native: `EndScaleformMovieMethodReturn`
-- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT(method_return)

--- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING
-- Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
-- @param method_return int - The return value of this native: `EndScaleformMovieMethodReturn`
-- GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING(method_return)

--- GET_SCREENBLUR_FADE_CURRENT_TIME
-- GET_SCREENBLUR_FADE_CURRENT_TIME()

--- GET_SCREEN_COORD_FROM_WORLD_COORD
-- ```
Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
For .NET users...
VB:
Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
        Dim x2dp, y2dp As New Native.OutputArgument
        Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
        Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))

    End Function
C#:
Vector2 World3DToScreen2d(Vector3 pos)
    {
        var x2dp = new OutputArgument();
        var y2dp = new OutputArgument();
        Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
        return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
    }
//USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
Used to be called _WORLD3D_TO_SCREEN2D
I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
```
-- @param worldX float
-- @param worldY float
-- @param worldZ float
-- @param screenX float*
-- @param screenY float*
-- GET_SCREEN_COORD_FROM_WORLD_COORD(worldX, worldY, worldZ, screenX, screenY)

--- GET_SCREEN_RESOLUTION
-- Hardcoded to always return 1280x720. Use [`_GET_ACTIVE_SCREEN_RESOLUTION`](?\_0x873C9F3104101DD3) to retrieve the correct screen resolution.
-- @param x int*
-- @param y int*
-- GET_SCREEN_RESOLUTION(x, y)

--- GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO
-- @param p0 char*
-- GET_STATUS_OF_LOAD_MISSION_CREATOR_PHOTO(p0)

--- GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO
-- GET_STATUS_OF_SAVE_HIGH_QUALITY_PHOTO()

--- GET_STATUS_OF_SORTED_LIST_OPERATION
-- Returns status of gallery photo fetch, which was requested by [`QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS`](#\_0x2A893980E96B659A).
-- @param scanForSaving BOOL
-- GET_STATUS_OF_SORTED_LIST_OPERATION(scanForSaving)

--- GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO
-- GET_STATUS_OF_TAKE_HIGH_QUALITY_PHOTO()

--- GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO
-- GET_STATUS_OF_TAKE_MISSION_CREATOR_PHOTO()

--- GET_TEXTURE_RESOLUTION
-- ```
Returns the texture resolution of the passed texture dict+name.  
Note: Most texture resolutions are doubled compared to the console version of the game.  
```
-- @param textureDict char*
-- @param textureName char*
-- GET_TEXTURE_RESOLUTION(textureDict, textureName)

--- GET_TIMECYCLE_MODIFIER_INDEX
-- ```
Only use for this in the PC scripts is:
if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)
For a full list, see here: pastebin.com/cnk7FTF2
```
-- GET_TIMECYCLE_MODIFIER_INDEX()

--- GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX
-- GET_TIMECYCLE_TRANSITION_MODIFIER_INDEX()

--- GET_TOGGLE_PAUSED_RENDERPHASES_STATUS
-- GET_TOGGLE_PAUSED_RENDERPHASES_STATUS()

--- GET_TV_CHANNEL
-- GET_TV_CHANNEL()

--- GET_TV_VOLUME
-- GET_TV_VOLUME()

--- GET_USINGNIGHTVISION
-- GET_USINGNIGHTVISION()

--- GET_USINGSEETHROUGH
-- GET_USINGSEETHROUGH()

--- GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE
-- @param vehicle Vehicle
-- @param p1 int
-- GET_VEHICLE_CREW_EMBLEM_REQUEST_STATE(vehicle, p1)

--- GOLF_TRAIL_GET_MAX_HEIGHT
-- GOLF_TRAIL_GET_MAX_HEIGHT()

--- GOLF_TRAIL_GET_VISUAL_CONTROL_POINT
-- @param p0 int
-- GOLF_TRAIL_GET_VISUAL_CONTROL_POINT(p0)

--- GOLF_TRAIL_SET_COLOUR
-- @param p0 int
-- @param p1 int
-- @param p2 int
-- @param p3 int
-- @param p4 int
-- @param p5 int
-- @param p6 int
-- @param p7 int
-- @param p8 int
-- @param p9 int
-- @param p10 int
-- @param p11 int
-- GOLF_TRAIL_SET_COLOUR(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)

--- GOLF_TRAIL_SET_ENABLED
-- @param toggle BOOL
-- GOLF_TRAIL_SET_ENABLED(toggle)

--- GOLF_TRAIL_SET_FACING
-- @param p0 BOOL
-- GOLF_TRAIL_SET_FACING(p0)

--- GOLF_TRAIL_SET_FIXED_CONTROL_POINT
-- ```
12 matches across 4 scripts. All 4 scripts were job creators.
type ranged from 0 - 2.
p4 was always 0.2f. Likely scale.
assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
Tested but noticed nothing.
```
-- @param type int
-- @param xPos float
-- @param yPos float
-- @param zPos float
-- @param p4 float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- GOLF_TRAIL_SET_FIXED_CONTROL_POINT(type, xPos, yPos, zPos, p4, red, green, blue, alpha)

--- GOLF_TRAIL_SET_PATH
-- ```
p8 seems to always be false.  
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 BOOL
-- GOLF_TRAIL_SET_PATH(p0, p1, p2, p3, p4, p5, p6, p7, p8)

--- GOLF_TRAIL_SET_RADIUS
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- GOLF_TRAIL_SET_RADIUS(p0, p1, p2)

--- GOLF_TRAIL_SET_SHADER_PARAMS
-- ```
Only appeared in Golf & Golf_mp. Parameters were all ptrs  
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- GOLF_TRAIL_SET_SHADER_PARAMS(p0, p1, p2, p3, p4)

--- GOLF_TRAIL_SET_TESSELLATION
-- @param p0 int
-- @param p1 int
-- GOLF_TRAIL_SET_TESSELLATION(p0, p1)

--- HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT
-- @param scaleformHandle int
-- HAS_SCALEFORM_CONTAINER_MOVIE_LOADED_INTO_PARENT(scaleformHandle)

--- HAS_SCALEFORM_MOVIE_FILENAME_LOADED
-- ```
Only values used in the scripts are:
"heist_mp"
"heistmap_mp"
"instructional_buttons"
"heist_pre"
```
-- @param scaleformName char*
-- HAS_SCALEFORM_MOVIE_FILENAME_LOADED(scaleformName)

--- HAS_SCALEFORM_MOVIE_LOADED
-- @param scaleformHandle int
-- HAS_SCALEFORM_MOVIE_LOADED(scaleformHandle)

--- HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED
-- @param hudComponent int
-- HAS_SCALEFORM_SCRIPT_HUD_MOVIE_LOADED(hudComponent)

--- HAS_STREAMED_TEXTURE_DICT_LOADED
-- @param textureDict char*
-- HAS_STREAMED_TEXTURE_DICT_LOADED(textureDict)

--- IS_DECAL_ALIVE
-- @param decal int
-- IS_DECAL_ALIVE(decal)

--- IS_SCALEFORM_MOVIE_DELETING
-- ```
NativeDB Introduced: v1290
```
-- @param scaleformIndex int - Scaleform index returned by [`REQUEST_SCALEFORM_MOVIE`](#\_0x11FE353CF9733E6F) (or similar natives).
-- IS_SCALEFORM_MOVIE_DELETING(scaleformIndex)

--- IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY
-- methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
-- @param method_return int - The return value of this native: `EndScaleformMovieMethodReturn`
-- IS_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_READY(method_return)

--- IS_SCREENBLUR_FADE_RUNNING
-- ```
Returns whether screen transition to blur/from blur is running.
```
-- IS_SCREENBLUR_FADE_RUNNING()

--- IS_TRACKED_POINT_VISIBLE
-- @param point int
-- IS_TRACKED_POINT_VISIBLE(point)

--- LOAD_MISSION_CREATOR_PHOTO
-- @param p0 char*
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 BOOL
-- LOAD_MISSION_CREATOR_PHOTO(p0, p1, p2, p3)

--- LOAD_MOVIE_MESH_SET
-- @param movieMeshSetName char*
-- LOAD_MOVIE_MESH_SET(movieMeshSetName)

--- MOVE_VEHICLE_DECALS
-- @param p0 Any
-- @param p1 Any
-- MOVE_VEHICLE_DECALS(p0, p1)

--- OVERRIDE_INTERIOR_SMOKE_END
-- OVERRIDE_INTERIOR_SMOKE_END()

--- OVERRIDE_INTERIOR_SMOKE_LEVEL
-- @param level float
-- OVERRIDE_INTERIOR_SMOKE_LEVEL(level)

--- OVERRIDE_INTERIOR_SMOKE_NAME
-- @param name char*
-- OVERRIDE_INTERIOR_SMOKE_NAME(name)

--- PASS_KEYBOARD_INPUT_TO_SCALEFORM
-- Passes keyboard input to scaleform. You must call this native every frame. Once an input occurs, this native will return true and call `SET_PC_KEY` scaleform movie method with the key that has been inputted.

The key parameter which is passed to the scaleform can also be: "BACKSPACE", "ENTER" or "\x1b" (Which is ESC).
This native is only used in `web_browser.c` as of game build 2944.
-- @param scaleformHandle int - Scaleform movie handle returned by [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F)
-- PASS_KEYBOARD_INPUT_TO_SCALEFORM(scaleformHandle)

--- PATCH_DECAL_DIFFUSE_MAP
-- ```
REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);  
*uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);  
PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");  
```
-- @param decalType int
-- @param textureDict char*
-- @param textureName char*
-- PATCH_DECAL_DIFFUSE_MAP(decalType, textureDict, textureName)

--- POP_TIMECYCLE_MODIFIER
-- POP_TIMECYCLE_MODIFIER()

--- PRESET_INTERIOR_AMBIENT_CACHE
-- ```
Only one match in the scripts:
GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");
```
-- @param timecycleModifierName char*
-- PRESET_INTERIOR_AMBIENT_CACHE(timecycleModifierName)

--- PUSH_TIMECYCLE_MODIFIER
-- PUSH_TIMECYCLE_MODIFIER()

--- QUERY_MOVIE_MESH_SET_STATE
-- @param p0 Any
-- QUERY_MOVIE_MESH_SET_STATE(p0)

--- QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS
-- Queues a scan of all gallery photos.
Also see [`GET_STATUS_OF_SORTED_LIST_OPERATION`](#\_0xF5BED327CEA362B1)
-- @param scanForSaving BOOL
-- QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS(scanForSaving)

--- RELEASE_MOVIE_MESH_SET
-- @param movieMeshSet int
-- RELEASE_MOVIE_MESH_SET(movieMeshSet)

--- REMOVE_DECAL
-- @param decal int
-- REMOVE_DECAL(decal)

--- REMOVE_DECALS_FROM_OBJECT
-- @param obj Object
-- REMOVE_DECALS_FROM_OBJECT(obj)

--- REMOVE_DECALS_FROM_OBJECT_FACING
-- @param obj Object
-- @param x float
-- @param y float
-- @param z float
-- REMOVE_DECALS_FROM_OBJECT_FACING(obj, x, y, z)

--- REMOVE_DECALS_FROM_VEHICLE
-- @param vehicle Vehicle
-- REMOVE_DECALS_FROM_VEHICLE(vehicle)

--- REMOVE_DECALS_IN_RANGE
-- ```
Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...  
```
-- @param x float
-- @param y float
-- @param z float
-- @param range float
-- REMOVE_DECALS_IN_RANGE(x, y, z, range)

--- REMOVE_PARTICLE_FX
-- @param ptfxHandle int
-- @param p1 BOOL
-- REMOVE_PARTICLE_FX(ptfxHandle, p1)

--- REMOVE_PARTICLE_FX_FROM_ENTITY
-- @param entity Entity
-- REMOVE_PARTICLE_FX_FROM_ENTITY(entity)

--- REMOVE_PARTICLE_FX_IN_RANGE
-- @param X float
-- @param Y float
-- @param Z float
-- @param radius float
-- REMOVE_PARTICLE_FX_IN_RANGE(X, Y, Z, radius)

--- REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE
-- @param hudComponent int
-- REMOVE_SCALEFORM_SCRIPT_HUD_MOVIE(hudComponent)

--- REMOVE_TCMODIFIER_OVERRIDE
-- @param p0 char*
-- REMOVE_TCMODIFIER_OVERRIDE(p0)

--- REMOVE_VEHICLE_CREW_EMBLEM
-- @param vehicle Vehicle
-- @param p1 int
-- REMOVE_VEHICLE_CREW_EMBLEM(vehicle, p1)

--- REQUEST_SCALEFORM_MOVIE
-- @param scaleformName char*
-- REQUEST_SCALEFORM_MOVIE(scaleformName)

--- REQUEST_SCALEFORM_MOVIE_INSTANCE
-- Same as [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F), except it seems to fix stretched scaleforms on ultrawide.
-- @param scaleformName char*
-- REQUEST_SCALEFORM_MOVIE_INSTANCE(scaleformName)

--- REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED
-- Requests a scaleform movie that doesn't render when the game is paused (With [`SET_GAME_PAUSED`](#\_0x577D1284D6873711)).
-- @param scaleformName char*
-- REQUEST_SCALEFORM_MOVIE_SKIP_RENDER_WHILE_PAUSED(scaleformName)

--- REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN
-- Requests a scaleform movie, which has no widescreen adjustments while rendering (Useful for when your scaleform doesn't fully draw on the screen and borders are visible).
-- @param scaleformName char*
-- REQUEST_SCALEFORM_MOVIE_WITH_IGNORE_SUPER_WIDESCREEN(scaleformName)

--- REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE
-- @param hudComponent int
-- REQUEST_SCALEFORM_SCRIPT_HUD_MOVIE(hudComponent)

--- REQUEST_STREAMED_TEXTURE_DICT
-- ```
This function can requests texture dictonaries from following RPFs:
scaleform_generic.rpf
scaleform_minigames.rpf
scaleform_minimap.rpf
scaleform_web.rpf
last param isnt a toggle
```
-- @param textureDict char*
-- @param p1 BOOL
-- REQUEST_STREAMED_TEXTURE_DICT(textureDict, p1)

--- RESET_PARTICLE_FX_OVERRIDE
-- ```
Resets the effect of SET_PARTICLE_FX_OVERRIDE
```
-- @param name char*
-- RESET_PARTICLE_FX_OVERRIDE(name)

--- RESET_PAUSED_RENDERPHASES
-- RESET_PAUSED_RENDERPHASES()

--- RESET_SCRIPT_GFX_ALIGN
-- This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
any other scripts attempting to draw.
-- RESET_SCRIPT_GFX_ALIGN()

--- SAVE_HIGH_QUALITY_PHOTO
-- @param unused int
-- SAVE_HIGH_QUALITY_PHOTO(unused)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL
-- ```
Pushes a boolean for the Scaleform function onto the stack.  
```
-- @param value BOOL
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_BOOL(value)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT
-- ```
Pushes a float for the Scaleform function onto the stack.  
```
-- @param value float
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_FLOAT(value)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT
-- ```
Pushes an integer for the Scaleform function onto the stack.  
```
-- @param value int
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_INT(value)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING
-- Values:
0 - Dialogue Brief
1 - Help Text Brief
2 - Mission Objective Brief
-- @param value int
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_LATEST_BRIEF_STRING(value)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING
-- Adds a literal string to a scaleform movie method.
There doesn't seem to be any difference between this and other `SCALEFORM_MOVIE_METHOD_ADD_PARAM_*_STRING` natives in game code.
-- @param string char*
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_LITERAL_STRING(string)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING
-- ```
This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").  
When switching with a controller, the icons update and become the controller's icons.  
```
-- @param string char*
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_PLAYER_NAME_STRING(string)

--- SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING
-- @param string char*
-- SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING(string)

--- SEETHROUGH_RESET
-- ```
NativeDB Introduced: v323
```
-- SEETHROUGH_RESET()

--- SEETHROUGH_SET_COLOR_NEAR
-- @param red int
-- @param green int
-- @param blue int
-- SEETHROUGH_SET_COLOR_NEAR(red, green, blue)

--- SEETHROUGH_SET_HEATSCALE
-- @param index int
-- @param heatScale float - min: 0.0 max: 0.75
-- SEETHROUGH_SET_HEATSCALE(index, heatScale)

--- SET_ARTIFICIAL_LIGHTS_STATE
-- Does not affect weapons, particles, fire/explosions, flashlights or the sun.

When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.

Used in Humane Labs Heist for EMP.
-- @param state BOOL - True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
-- SET_ARTIFICIAL_LIGHTS_STATE(state)

--- SET_BACKFACECULLING
-- @param toggle BOOL
-- SET_BACKFACECULLING(toggle)

--- SET_CHECKPOINT_CYLINDER_HEIGHT
-- ```
Sets the cylinder height of the checkpoint.  
Parameters:  
* nearHeight - The height of the checkpoint when inside of the radius.  
* farHeight - The height of the checkpoint when outside of the radius.  
* radius - The radius of the checkpoint.  
```
-- @param checkpoint int
-- @param nearHeight float
-- @param farHeight float
-- @param radius float
-- SET_CHECKPOINT_CYLINDER_HEIGHT(checkpoint, nearHeight, farHeight, radius)

--- SET_CHECKPOINT_RGBA
-- ```
Sets the checkpoint color.  
```
-- @param checkpoint int
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- SET_CHECKPOINT_RGBA(checkpoint, red, green, blue, alpha)

--- SET_CHECKPOINT_RGBA2
-- ```
Sets the checkpoint icon color.
```
-- @param checkpoint int
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- SET_CHECKPOINT_RGBA2(checkpoint, red, green, blue, alpha)

--- SET_CURRENT_PLAYER_TCMODIFIER
-- @param modifierName char*
-- SET_CURRENT_PLAYER_TCMODIFIER(modifierName)

--- SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
```
-- @param enabled BOOL
-- SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(enabled)

--- SET_DISABLE_DECAL_RENDERING_THIS_FRAME
-- SET_DISABLE_DECAL_RENDERING_THIS_FRAME()

--- SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME
-- Prevents gas / petrol decals (aka gas / petrol trails and puddles) to be ignited on fire during the frame in which the native is called.

**Note**: This native needs to be called every frame to prevent ignition.
-- SET_DISABLE_PETROL_DECALS_IGNITING_THIS_FRAME()

--- SET_DRAW_ORIGIN
-- Sets the on-screen drawing origin for draw-functions in world coordinates.

The effect can be reset by calling [`CLEAR_DRAW_ORIGIN`](#\_0xFF0B610F6BE0D7AF) and is limited to 32 different origins each frame.
-- @param x float
-- @param y float
-- @param z float
-- @param p3 Any
-- SET_DRAW_ORIGIN(x, y, z, p3)

--- SET_ENTITY_ICON_COLOR
-- @param entity Entity
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- SET_ENTITY_ICON_COLOR(entity, red, green, blue, alpha)

--- SET_ENTITY_ICON_VISIBILITY
-- @param entity Entity
-- @param toggle BOOL
-- SET_ENTITY_ICON_VISIBILITY(entity, toggle)

--- SET_FLASH
-- ```
Purpose of p0 and p1 unknown.  
```
-- @param p0 float
-- @param p1 float
-- @param fadeIn float
-- @param duration float
-- @param fadeOut float
-- SET_FLASH(p0, p1, fadeIn, duration, fadeOut)

--- SET_HIDOF_OVERRIDE
-- @param p0 BOOL
-- @param p1 BOOL
-- @param nearplaneOut float
-- @param nearplaneIn float
-- @param farplaneOut float
-- @param farplaneIn float
-- SET_HIDOF_OVERRIDE(p0, p1, nearplaneOut, nearplaneIn, farplaneOut, farplaneIn)

--- SET_NEXT_PLAYER_TCMODIFIER
-- @param modifierName char*
-- SET_NEXT_PLAYER_TCMODIFIER(modifierName)

--- SET_NIGHTVISION
-- ```
Enables Night Vision.  
Example:  
C#: Function.Call(Hash.SET_NIGHTVISION, true);  
C++: GRAPHICS::SET_NIGHTVISION(true);  
BOOL toggle:  
true = turns night vision on for your player.  
false = turns night vision off for your player.  
```
-- @param toggle BOOL
-- SET_NIGHTVISION(toggle)

--- SET_NOISEOVERIDE
-- @param toggle BOOL
-- SET_NOISEOVERIDE(toggle)

--- SET_NOISINESSOVERIDE
-- @param value float
-- SET_NOISINESSOVERIDE(value)

--- SET_PARTICLE_FX_BULLET_IMPACT_SCALE
-- @param scale float
-- SET_PARTICLE_FX_BULLET_IMPACT_SCALE(scale)

--- SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE
-- @param vehicle Vehicle
-- @param p1 BOOL
-- SET_PARTICLE_FX_CAM_INSIDE_NONPLAYER_VEHICLE(vehicle, p1)

--- SET_PARTICLE_FX_CAM_INSIDE_VEHICLE
-- @param p0 BOOL
-- SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(p0)

--- SET_PARTICLE_FX_LOOPED_ALPHA
-- @param ptfxHandle int
-- @param alpha float
-- SET_PARTICLE_FX_LOOPED_ALPHA(ptfxHandle, alpha)

--- SET_PARTICLE_FX_LOOPED_COLOUR
-- Sets the colour tint of a previously started looped particle effect

You can use the [inverse lerp](https://www.gamedev.net/articles/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/) method to normalize in a range from 0.0 to 1.0 an rgb
-- @param ptfxHandle int
-- @param r float - range from 0.0 to 1.0
-- @param g float - range from 0.0 to 1.0
-- @param b float - range from 0.0 to 1.0
-- @param bLocalOnly BOOL - False by default. Defines whether the effect should be sent and modified over the network or not. Set this to `true` if you don't want to send the effect over the network.
-- SET_PARTICLE_FX_LOOPED_COLOUR(ptfxHandle, r, g, b, bLocalOnly)

--- SET_PARTICLE_FX_LOOPED_EVOLUTION
-- @param ptfxHandle int
-- @param propertyName char*
-- @param amount float
-- @param noNetwork BOOL
-- SET_PARTICLE_FX_LOOPED_EVOLUTION(ptfxHandle, propertyName, amount, noNetwork)

--- SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST
-- @param ptfxHandle int
-- @param range float
-- SET_PARTICLE_FX_LOOPED_FAR_CLIP_DIST(ptfxHandle, range)

--- SET_PARTICLE_FX_LOOPED_OFFSETS
-- @param ptfxHandle int
-- @param x float
-- @param y float
-- @param z float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- SET_PARTICLE_FX_LOOPED_OFFSETS(ptfxHandle, x, y, z, rotX, rotY, rotZ)

--- SET_PARTICLE_FX_LOOPED_SCALE
-- @param ptfxHandle int
-- @param scale float
-- SET_PARTICLE_FX_LOOPED_SCALE(ptfxHandle, scale)

--- SET_PARTICLE_FX_NON_LOOPED_ALPHA
-- ```
Usage example for C#:  
Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });  
		Note: the argument alpha ranges from 0.0f-1.0f !  
```
-- @param alpha float
-- SET_PARTICLE_FX_NON_LOOPED_ALPHA(alpha)

--- SET_PARTICLE_FX_NON_LOOPED_COLOUR
-- Only works on some fx's, while on others it might SEEM to work "properly", but the colors can be "strange" or even completly different from what you've expected. Reason for this is that those fx's might already have colors "baked into them" which then start to act as a "mixing palette", resulting in a different color than expected. A hypothetical example of this would be if the fx itself is already full (bright) red (RGB: 1.0, 0.0, 0.0) and you then set the color to (bright) green (RGB: 0.0, 1.0, 0.0), that it MIGHT result in Yellow (RGB: 1.0, 1.0, 0.0).

This doc previously stated that the set color is **NOT** networked, however it does actually turns out to be networked. Tested with all fireworks effects and several other FX effects resulted in colored fx effects on all clients when used in combination with [START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD](#\_0xF56B8137DF10135D).
This might however not be the case for all types of particle fx's, so it's recommended to test this thoroughly with multiple clients before releasing your script for example.
-- @param r float - Red (0.0 - 1.0)
-- @param g float - Green (0.0 - 1.0)
-- @param b float - Blue (0.0 - 1.0)
-- SET_PARTICLE_FX_NON_LOOPED_COLOUR(r, g, b)

--- SET_PARTICLE_FX_OVERRIDE
-- @param oldAsset char*
-- @param newAsset char*
-- SET_PARTICLE_FX_OVERRIDE(oldAsset, newAsset)

--- SET_PARTICLE_FX_SHOOTOUT_BOAT
-- @param p0 Any
-- SET_PARTICLE_FX_SHOOTOUT_BOAT(p0)

--- SET_PLAYER_TCMODIFIER_TRANSITION
-- @param value float
-- SET_PLAYER_TCMODIFIER_TRANSITION(value)

--- SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED
-- @param scaleformHandle int*
-- SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(scaleformHandle)

--- SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT
-- ```
NativeDB Introduced: v573
```

Configures a Scaleform movie to render to a large render target (1280x720), which is useful for ensuring higher quality and clarity in certain display scenarios. Such as displaying the name of an organization (CEO Office) in a visually impactful way for example.
-- @param scaleformMovieId int - The handle of the Scaleform to be used.
-- @param useLargeRT BOOL - A boolean switch to enable/disable the use of the large rendertarget.
-- SET_SCALEFORM_MOVIE_TO_USE_LARGE_RT(scaleformMovieId, useLargeRT)

--- SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT
-- Adjusts a scaleform movie's dimensions to fit a large rendertarget. Mostly used in casino scripts.
-- @param scaleformHandle int
-- @param toggle BOOL
-- SET_SCALEFORM_MOVIE_TO_USE_SUPER_LARGE_RT(scaleformHandle, toggle)

--- SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME
-- @param scaleform int
-- @param toggle BOOL
-- SET_SCALEFORM_MOVIE_TO_USE_SYSTEM_TIME(scaleform, toggle)

--- SET_SCRIPT_GFX_ALIGN
-- This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
independent of the player's safe zone configuration.

These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
for default alignment.

Valid values for `horizontalAlign`, from original documentation:

*   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
    the right side of the screen.
*   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
    centered.
*   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
    from the right side of the screen, both move with the right side of the screen.

Valid values for `verticalAlign`, from original documentation:

*   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
    rather centered.
*   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
    different from 66.
*   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.

Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
canonical value for this is 'I' (73).

For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
axis.

To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
-- @param horizontalAlign int - The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
-- @param verticalAlign int - The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
-- SET_SCRIPT_GFX_ALIGN(horizontalAlign, verticalAlign)

--- SET_SCRIPT_GFX_ALIGN_PARAMS
-- Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
expects the width/height to be configured using this native in order to get a proper starting position for the draw
command.
-- @param x float - The X offset for the item to be drawn.
-- @param y float - The Y offset for the item to be drawn.
-- @param w float - The width of the item to be drawn.
-- @param h float - The height of the item to be drawn.
-- SET_SCRIPT_GFX_ALIGN_PARAMS(x, y, w, h)

--- SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU
-- Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
-- @param flag BOOL - A boolean value.
-- SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(flag)

--- SET_SCRIPT_GFX_DRAW_ORDER
-- Sets the draw order for script draw commands.
Examples from decompiled scripts:
GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);
GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);
GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);
GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);

```cpp
enum eGfxDrawOrder
{
    GFX_ORDER_BEFORE_HUD_PRIORITY_LOW = 0,
    GFX_ORDER_BEFORE_HUD = 1,
    GFX_ORDER_BEFORE_HUD_PRIORITY_HIGH = 2,
    GFX_ORDER_AFTER_HUD_PRIORITY_LOW = 3,
    GFX_ORDER_AFTER_HUD = 4,
    GFX_ORDER_AFTER_HUD_PRIORITY_HIGH = 5,
    GFX_ORDER_AFTER_FADE_PRIORITY_LOW = 6,
    GFX_ORDER_AFTER_FADE = 7,
    GFX_ORDER_AFTER_FADE_PRIORITY_HIGH = 8,
}
```
-- @param order int - The intended draw order/layer.
-- SET_SCRIPT_GFX_DRAW_ORDER(order)

--- SET_SEETHROUGH
-- ```
Toggles Heatvision on/off.  
```
-- @param toggle BOOL
-- SET_SEETHROUGH(toggle)

--- SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED
-- @param textureDict char*
-- SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(textureDict)

--- SET_TIMECYCLE_MODIFIER
-- ```
Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
Parameters:
modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
```
-- @param modifierName char*
-- SET_TIMECYCLE_MODIFIER(modifierName)

--- SET_TIMECYCLE_MODIFIER_STRENGTH
-- @param strength float
-- SET_TIMECYCLE_MODIFIER_STRENGTH(strength)

--- SET_TRACKED_POINT_INFO
-- @param point int
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- SET_TRACKED_POINT_INFO(point, x, y, z, radius)

--- SET_TRANSITION_TIMECYCLE_MODIFIER
-- This native doesn't work like [`SetWeatherTypeTransition`](#\_0x578C752848ECFA0C).
-- @param modifierName char* - The name of a timecycle
-- @param transition float - The speed to transition to `modifierName`. Appears to be half-seconds (?)
-- SET_TRANSITION_TIMECYCLE_MODIFIER(modifierName, transition)

--- SET_TV_AUDIO_FRONTEND
-- ```
Probably changes tvs from being a 3d audio to being "global" audio
```
-- @param toggle BOOL
-- SET_TV_AUDIO_FRONTEND(toggle)

--- SET_TV_CHANNEL
-- @param channel int
-- SET_TV_CHANNEL(channel)

--- SET_TV_CHANNEL_PLAYLIST
-- Loads specified video sequence into the TV Channel
TV_Channel ranges from 0-2
VideoSequence can be any of the following:
"PL_STD_CNT" CNT Standard Channel
"PL_STD_WZL" Weazel Standard Channel
"PL_LO_CNT"
"PL_LO_WZL"
"PL_SP_WORKOUT"
"PL_SP_INV" - Jay Norris Assassination Mission Fail
"PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
"PL_LO_RS" - Righteous Slaughter Ad
"PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
"PL_SP_PLSH1\_INTRO"
"PL_LES1\_FAME_OR_SHAME"
"PL_STD_WZL_FOS_EP2"
"PL_MP_WEAZEL" - Weazel Logo on loop
"PL_MP_CCTV" - Generic CCTV loop
Restart:
0=video sequence continues as normal
1=sequence restarts from beginning every time that channel is selected
The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
https://pastebin.com/zUzGB6h7
-- @param tvChannel int
-- @param playlistName char*
-- @param restart BOOL
-- SET_TV_CHANNEL_PLAYLIST(tvChannel, playlistName, restart)

--- SET_TV_CHANNEL_PLAYLIST_AT_HOUR
-- @param tvChannel int
-- @param playlistName char*
-- @param hour int
-- SET_TV_CHANNEL_PLAYLIST_AT_HOUR(tvChannel, playlistName, hour)

--- SET_TV_VOLUME
-- @param volume float
-- SET_TV_VOLUME(volume)

--- START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY
-- ```
network fx  
```

```
NativeDB Added Parameter 13: Any p12
NativeDB Added Parameter 14: Any p13
NativeDB Added Parameter 15: Any p14
NativeDB Added Parameter 16: Any p15
```
-- @param effectName char*
-- @param entity Entity
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)

--- START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
-- ```
network fx  
```

```
NativeDB Added Parameter 14: Any p13
NativeDB Added Parameter 15: Any p14
NativeDB Added Parameter 16: Any p15
NativeDB Added Parameter 17: Any p16
```
-- @param effectName char*
-- @param entity Entity
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param boneIndex int
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_NETWORKED_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)

--- START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD
-- NOTE: the [USE_PARTICLE_FX_ASSET](#\_0x6C38AF3693A69A91) needs to be called before EVERY StartNetworkedParticleFxNonLoopedAtCoord(....) call!

List with lots of particle effects: https://vespura.com/fivem/particle-list/

Note: Not all particles on this list are for non looped and vice versa, neither are all of them suited/meant to have SetParticleFxNonLoopedColour(....) called on them.

```
NativeDB Added Parameter 12: BOOL p11
```
-- @param effectName char*
-- @param xPos float
-- @param yPos float
-- @param zPos float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)

--- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY
-- @param effectName char*
-- @param entity Entity
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param scale float
-- @param axisX BOOL
-- @param axisY BOOL
-- @param axisZ BOOL
-- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)

--- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
-- @param effectName char*
-- @param ped Ped
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param boneIndex int
-- @param scale float
-- @param axisX BOOL
-- @param axisY BOOL
-- @param axisZ BOOL
-- START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)

--- START_PARTICLE_FX_LOOPED_AT_COORD
-- ```
GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)  
p11 seems to be always 0  
```
-- @param effectName char*
-- @param x float
-- @param y float
-- @param z float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- @param p11 BOOL
-- START_PARTICLE_FX_LOOPED_AT_COORD(effectName, x, y, z, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis, p11)

--- START_PARTICLE_FX_LOOPED_ON_ENTITY
-- @param effectName char*
-- @param entity Entity
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_PARTICLE_FX_LOOPED_ON_ENTITY(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)

--- START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE
-- @param effectName char*
-- @param entity Entity
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param boneIndex int
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_PARTICLE_FX_LOOPED_ON_ENTITY_BONE(effectName, entity, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)

--- START_PARTICLE_FX_LOOPED_ON_PED_BONE
-- @param effectName char*
-- @param ped Ped
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param boneIndex int
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_PARTICLE_FX_LOOPED_ON_PED_BONE(effectName, ped, xOffset, yOffset, zOffset, xRot, yRot, zRot, boneIndex, scale, xAxis, yAxis, zAxis)

--- START_PARTICLE_FX_NON_LOOPED_AT_COORD
-- ```
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);  
Axis - Invert Axis Flags  
list: pastebin.com/N9unUFWY  
-------------------------------------------------------------------  
C#  
Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.  
char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc  
float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates  
float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.  
float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f  
bool xaxis, yaxis, zaxis = To bool the axis values.  
example:  
Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);  
```
-- @param effectName char*
-- @param xPos float
-- @param yPos float
-- @param zPos float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param scale float
-- @param xAxis BOOL
-- @param yAxis BOOL
-- @param zAxis BOOL
-- START_PARTICLE_FX_NON_LOOPED_AT_COORD(effectName, xPos, yPos, zPos, xRot, yRot, zRot, scale, xAxis, yAxis, zAxis)

--- START_PARTICLE_FX_NON_LOOPED_ON_ENTITY
-- ```
Starts a particle effect on an entity for example your player.  
List: pastebin.com/N9unUFWY  
Example:  
C#:  
Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);  
Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE  
however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native  
```
-- @param effectName char*
-- @param entity Entity
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param scale float
-- @param axisX BOOL
-- @param axisY BOOL
-- @param axisZ BOOL
-- START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, scale, axisX, axisY, axisZ)

--- START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE
-- ```
GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);  
Axis - Invert Axis Flags  
list: pastebin.com/N9unUFWY  
```
-- @param effectName char*
-- @param ped Ped
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param boneIndex int
-- @param scale float
-- @param axisX BOOL
-- @param axisY BOOL
-- @param axisZ BOOL
-- START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(effectName, ped, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)

--- START_PETROL_TRAIL_DECALS
-- @param p0 float
-- START_PETROL_TRAIL_DECALS(p0)

--- STOP_PARTICLE_FX_LOOPED
-- ```
p1 is always 0 in the native scripts  
```
-- @param ptfxHandle int
-- @param p1 BOOL
-- STOP_PARTICLE_FX_LOOPED(ptfxHandle, p1)

--- TERRAINGRID_ACTIVATE
-- This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
This requires these two natives to be called as well to configure the grid: [`TERRAINGRID_SET_PARAMS`](#\_0x1C4FC5752BCD8E48) and [`TERRAINGRID_SET_COLOURS`](#\_0x5CE62918F8D703C7).
-- @param toggle BOOL - Enables or disables the golf putting grid display.
-- TERRAINGRID_ACTIVATE(toggle)

--- TERRAINGRID_SET_COLOURS
-- This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#\_0xA356990E161C9E65) and [`TERRAINGRID_SET_PARAMS`](#\_0x1C4FC5752BCD8E48).
This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png

Old description:
Only called in golf and golf_mp\
parameters used are\
GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);
-- @param lowR int - red value for the lower level
-- @param lowG int - green value for the lower level
-- @param lowB int - blue value for the lower level
-- @param lowAlpha int - alpha value for the lower level
-- @param R int - red value for the normal level
-- @param G int - green value for the normal level
-- @param B int - blue value for the normal level
-- @param Alpha int - alpha value for the normal level
-- @param highR int - red value for the upper level
-- @param highG int - green value for the upper level
-- @param highB int - blue value for the upper level
-- @param highAlpha int - alpha value for the upper level
-- TERRAINGRID_SET_COLOURS(lowR, lowG, lowB, lowAlpha, R, G, B, Alpha, highR, highG, highB, highAlpha)

--- TERRAINGRID_SET_PARAMS
-- This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#\_0xA356990E161C9E65) and [`TERRAINGRID_SET_COLOURS`](#\_0x5CE62918F8D703C7).

This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.

All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
-- @param x float - Grid center x coord.
-- @param y float - Grid center y coord.
-- @param z float - Grid center z coord.
-- @param p3 float - Not sure, but seems to be the amount of lines top/bottom there are in the grid. -1.0 works best.
-- @param rotation float - Grid rotation (keep between 0.0 and 1.0).
-- @param p5 float - Offset top/bottom (? not sure about this one, seems weird).
-- @param width float - Grid width (usually 15.0).
-- @param height float - Grid height (usually 15.0).
-- @param p8 float - Not sure, but seems to be the amount of lines left/right there are in the grid. -1.0 works best.
-- @param scale float - Zoom / scale (higher values = smaller (more) squares) (lower values = bigger (less) squares).
-- @param glowIntensity float - glow intensity / opacity (40.0 is fine for daylight, 15.0 is fine for night time).
-- @param normalHeight float - The z coord for 'normal' height (white grid lines level).
-- @param heightDiff float - This is the height difference/margin used for line color changes. 0.2 works fine (normalHeight + 0.2 = yellow, normalHeight - 0.2 = red).
-- TERRAINGRID_SET_PARAMS(x, y, z, p3, rotation, p5, width, height, p8, scale, glowIntensity, normalHeight, heightDiff)

--- TOGGLE_PAUSED_RENDERPHASES
-- Switches the rendering display to exclude everything except PostFX, resulting in a frozen screen before the UI pass.
-- @param toggle BOOL - Setting it to `false` will exclude render updates as mentioned in the description, until it's set back to `true`.
-- TOGGLE_PAUSED_RENDERPHASES(toggle)

--- TRIGGER_SCREENBLUR_FADE_IN
-- @param transitionTime float - Time in milliseconds to transition into a fully blurred screen
-- TRIGGER_SCREENBLUR_FADE_IN(transitionTime)

--- TRIGGER_SCREENBLUR_FADE_OUT
-- @param transitionTime float
-- TRIGGER_SCREENBLUR_FADE_OUT(transitionTime)

--- UI3DSCENE_IS_AVAILABLE
-- UI3DSCENE_IS_AVAILABLE()

--- UI3DSCENE_PUSH_PRESET
-- ```
All presets can be found in common\data\ui\uiscenes.meta
```
-- @param presetName char*
-- UI3DSCENE_PUSH_PRESET(presetName)

--- UNPATCH_DECAL_DIFFUSE_MAP
-- ```
GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);  
GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");  
```
-- @param decalType int
-- UNPATCH_DECAL_DIFFUSE_MAP(decalType)

--- UPDATE_LIGHTS_ON_ENTITY
-- @param entity Entity
-- UPDATE_LIGHTS_ON_ENTITY(entity)

--- USE_PARTICLE_FX_ASSET
-- ```
From the b678d decompiled scripts:
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");
 GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");
```
-- @param name char*
-- USE_PARTICLE_FX_ASSET(name)

--- WASH_DECALS_FROM_VEHICLE
-- @param vehicle Vehicle
-- @param p1 float
-- WASH_DECALS_FROM_VEHICLE(vehicle, p1)

--- WASH_DECALS_IN_RANGE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- WASH_DECALS_IN_RANGE(p0, p1, p2, p3, p4)

--- _ADD_OIL_DECAL
-- ```
NativeDB Introduced: v2699
```
-- @param x float
-- @param y float
-- @param z float
-- @param groundLvl float
-- @param width float
-- @param transparency float
-- _ADD_OIL_DECAL(x, y, z, groundLvl, width, transparency)

--- _ANIMPOSTFX_GET_UNK
-- See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724)
-- @param effectName char*
-- _ANIMPOSTFX_GET_UNK(effectName)

--- _ANIMPOSTFX_STOP_AND_DO_UNK
-- Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
-- @param effectName char*
-- _ANIMPOSTFX_STOP_AND_DO_UNK(effectName)

--- _CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE
-- _CASCADE_SHADOWS_CLEAR_SHADOW_SAMPLE_TYPE()

--- _CLEAR_EXTRA_TIMECYCLE_MODIFIER
-- Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#\_0x5096FD9CCB49056D)
-- _CLEAR_EXTRA_TIMECYCLE_MODIFIER()

--- _DISABLE_SCRIPT_AMBIENT_EFFECTS
-- @param p0 Any
-- _DISABLE_SCRIPT_AMBIENT_EFFECTS(p0)

--- _DRAW_BINK_MOVIE
-- Must be called each frame, will play at specified position on screen when called with [`_PLAY_BINK_MOVIE`](#\_0x70D2CC8A542A973C)
-- @param binkMovie int - The movie to be drawn (from [`_SET_BINK_MOVIE`](#\_0x338D9F609FD632DB)).
-- @param posX float - The centered x position of the movie (0.0 - 1.0).
-- @param posY float - The centered y position of the movie (0.0 - 1.0).
-- @param scaleX float - The x scale of the movie (0.0 - 1.0).
-- @param scaleY float - The y scale of the movie (0.0 - 1.0).
-- @param rotation float - The rotation of the movie (0.0 - 360.0).
-- @param r int - The red value of the movie (0 - 255).
-- @param g int - The green value of the movie (0 - 255).
-- @param b int - The blue value of the movie (0 - 255).
-- @param a int - The alpha value of the movie (0 - 255).
-- _DRAW_BINK_MOVIE(binkMovie, posX, posY, scaleX, scaleY, rotation, r, g, b, a)

--- _DRAW_INTERACTIVE_SPRITE
-- Similar to [\_DRAW_SPRITE](#\_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
These seem to be the only dicts ever requested by this native:

```
prop_screen_biker_laptop
Prop_Screen_GR_Disruption
Prop_Screen_TaleOfUs
prop_screen_nightclub
Prop_Screen_IE_Adhawk
prop_screen_sm_free_trade_shipping
prop_screen_hacker_truck
MPDesktop
Prop_Screen_Nightclub
And a few others
```
-- @param textureDict char* - Name of texture dictionary to load texture from
-- @param textureName char* - Name of texture to load from texture dictionary
-- @param screenX float - Screen X
-- @param screenY float - Screen Y
-- @param width float - Scale X
-- @param height float - Scale Y
-- @param heading float - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
-- @param red int - Color
-- @param green int - Color
-- @param blue int - Color
-- @param alpha int - Opacity level
-- _DRAW_INTERACTIVE_SPRITE(textureDict, textureName, screenX, screenY, width, height, heading, red, green, blue, alpha)

--- _DRAW_LIGHT_WITH_RANGE_AND_SHADOW
-- @param x float
-- @param y float
-- @param z float
-- @param r int
-- @param g int
-- @param b int
-- @param range float
-- @param intensity float
-- @param shadow float
-- _DRAW_LIGHT_WITH_RANGE_AND_SHADOW(x, y, z, r, g, b, range, intensity, shadow)

--- _DRAW_MARKER_2
-- ```
NativeDB Added Parameter 26: BOOL p25
```
-- @param type int
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param dirX float
-- @param dirY float
-- @param dirZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param scaleX float
-- @param scaleY float
-- @param scaleZ float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- @param bobUpAndDown BOOL
-- @param faceCamera BOOL
-- @param p19 int
-- @param rotate BOOL
-- @param textureDict char*
-- @param textureName char*
-- @param drawOnEnts BOOL
-- @param p24 BOOL
-- _DRAW_MARKER_2(type, posX, posY, posZ, dirX, dirY, dirZ, rotX, rotY, rotZ, scaleX, scaleY, scaleZ, red, green, blue, alpha, bobUpAndDown, faceCamera, p19, rotate, textureDict, textureName, drawOnEnts, p24)

--- _DRAW_SHOWROOM
-- ```
It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A  
p0 was always "CELEBRATION_WINNER"  
```
-- @param p0 char*
-- @param ped Ped
-- @param p2 int
-- @param posX float
-- @param posY float
-- @param posZ float
-- _DRAW_SHOWROOM(p0, ped, p2, posX, posY, posZ)

--- _DRAW_SPHERE
-- Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".

Example [image](https://imgur.com/nCbtS4H):

```lua
DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
```
-- @param x float - X coordinate of the sphere
-- @param y float - Y coordinate of the sphere
-- @param z float - Z coordinate of the sphere
-- @param radius float - Size of the sphere, `1.0` = 1 meter
-- @param r int - Color red `0`-`255`
-- @param g int - Color green `0`-`255`
-- @param b int - Color blue `0`-`255`
-- @param opacity float - Opacity from `0.0`-`1.0`
-- _DRAW_SPHERE(x, y, z, radius, r, g, b, opacity)

--- _DRAW_SPOT_LIGHT_WITH_SHADOW
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param dirX float
-- @param dirY float
-- @param dirZ float
-- @param colorR int
-- @param colorG int
-- @param colorB int
-- @param distance float
-- @param brightness float
-- @param roundness float
-- @param radius float
-- @param falloff float
-- @param shadowId int
-- _DRAW_SPOT_LIGHT_WITH_SHADOW(posX, posY, posZ, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId)

--- _DRAW_SPRITE_POLY_2
-- Used for drawling Deadline trailing lights, see deadline.ytd

Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.

For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param x3 float
-- @param y3 float
-- @param z3 float
-- @param red1 float
-- @param green1 float
-- @param blue1 float
-- @param alpha1 int
-- @param red2 float
-- @param green2 float
-- @param blue2 float
-- @param alpha2 int
-- @param red3 float
-- @param green3 float
-- @param blue3 float
-- @param alpha3 int
-- @param textureDict char*
-- @param textureName char*
-- @param u1 float
-- @param v1 float
-- @param w1 float
-- @param u2 float
-- @param v2 float
-- @param w2 float
-- @param u3 float
-- @param v3 float
-- @param w3 float
-- _DRAW_SPRITE_POLY_2(x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3)

--- _DRAW_SPRITE_UV
-- Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
u1, v1 - texture coordinates for the top-left corner
u2, v2 - texture coordinates for the bottom-right corner

```
NativeDB Introduced: v1868
```
-- @param textureDict char*
-- @param textureName char*
-- @param x float
-- @param y float
-- @param width float
-- @param height float
-- @param u1 float
-- @param v1 float
-- @param u2 float
-- @param v2 float
-- @param heading float
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- _DRAW_SPRITE_UV(textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha)

--- _GET_BINK_MOVIE_TIME
-- In percentage: 0.0 - 100.0

```
NativeDB Introduced: v1734
```
-- @param binkMovie int
-- _GET_BINK_MOVIE_TIME(binkMovie)

--- _GET_EXTRA_TIMECYCLE_MODIFIER_INDEX
-- See [`GET_TIMECYCLE_MODIFIER_INDEX`](#\_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
-- _GET_EXTRA_TIMECYCLE_MODIFIER_INDEX()

--- _GET_SCRIPT_GFX_POSITION
-- Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
`SET_SCRIPT_GFX_ALIGN_PARAMS`.
-- @param x float - The input X coordinate.
-- @param y float - The input Y coordinate.
-- @param calculatedX float* - A pointer to the calculated X value.
-- @param calculatedY float* - A pointer to the calculated Y value.
-- _GET_SCRIPT_GFX_POSITION(x, y, calculatedX, calculatedY)

--- _GRASS_LOD_RESET_SCRIPT_AREAS
-- _GRASS_LOD_RESET_SCRIPT_AREAS()

--- _GRASS_LOD_SHRINK_SCRIPT_AREAS
-- ```
Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- _GRASS_LOD_SHRINK_SCRIPT_AREAS(x, y, z, radius, p4, p5, p6)

--- _IS_PLAYLIST_UNK
-- ```
NativeDB Introduced: v1604
```
-- @param tvChannel int
-- @param p1 Any
-- _IS_PLAYLIST_UNK(tvChannel, p1)

--- _IS_TV_PLAYLIST_ITEM_PLAYING
-- ```
IS_*
```
-- @param videoCliphash Hash
-- _IS_TV_PLAYLIST_ITEM_PLAYING(videoCliphash)

--- _OVERRIDE_PED_BADGE_TEXTURE
-- ```
Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
```
-- @param ped Ped
-- @param txd char*
-- @param txn char*
-- _OVERRIDE_PED_BADGE_TEXTURE(ped, txd, txn)

--- _PLAY_BINK_MOVIE
-- ```
NativeDB Introduced: v1290
```
-- @param binkMovie int
-- _PLAY_BINK_MOVIE(binkMovie)

--- _REGISTER_NOIR_SCREEN_EFFECT_THIS_FRAME
-- Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
-- _REGISTER_NOIR_SCREEN_EFFECT_THIS_FRAME()

--- _RELEASE_BINK_MOVIE
-- ```
NativeDB Introduced: v1290
```
-- @param binkMovie int
-- _RELEASE_BINK_MOVIE(binkMovie)

--- _RETURN_TWO
-- @param p0 int
-- _RETURN_TWO(p0)

--- _SEETHROUGH_GET_MAX_THICKNESS
-- ```
NativeDB Introduced: v1290
```
-- _SEETHROUGH_GET_MAX_THICKNESS()

--- _SEETHROUGH_SET_FADE_END_DISTANCE
-- @param distance float
-- _SEETHROUGH_SET_FADE_END_DISTANCE(distance)

--- _SEETHROUGH_SET_FADE_START_DISTANCE
-- @param distance float
-- _SEETHROUGH_SET_FADE_START_DISTANCE(distance)

--- _SEETHROUGH_SET_HI_LIGHT_INTENSITY
-- @param intensity float
-- _SEETHROUGH_SET_HI_LIGHT_INTENSITY(intensity)

--- _SEETHROUGH_SET_HI_LIGHT_NOISE
-- @param noise float
-- _SEETHROUGH_SET_HI_LIGHT_NOISE(noise)

--- _SEETHROUGH_SET_MAX_THICKNESS
-- @param thickness float - min: 1.0 max: 10000.0
-- _SEETHROUGH_SET_MAX_THICKNESS(thickness)

--- _SEETHROUGH_SET_NOISE_AMOUNT_MAX
-- @param amount float
-- _SEETHROUGH_SET_NOISE_AMOUNT_MAX(amount)

--- _SEETHROUGH_SET_NOISE_AMOUNT_MIN
-- @param amount float
-- _SEETHROUGH_SET_NOISE_AMOUNT_MIN(amount)

--- _SET_ARTIFICIAL_LIGHTS_STATE_AFFECTS_VEHICLES
-- If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.

```
NativeDB Introduced: v2060
```
-- @param toggle BOOL
-- _SET_ARTIFICIAL_LIGHTS_STATE_AFFECTS_VEHICLES(toggle)

--- _SET_BINK_MOVIE
-- Creates an integer (usually 1) for a BINK movie to be called with other natives.
[List of all BINK movies (alphabetically ordered) as of b2802](https://gist.github.com/ItsJunction/8046f28c29ea8ff2821e9e4f933f595f)
-- @param name char* - The BINK movie to play (with or without file extension).
-- _SET_BINK_MOVIE(name)

--- _SET_BINK_MOVIE_TIME
-- Seeks a BINK movie to a specified position.
-- @param binkMovie int - The movie that is being played.
-- @param progress float - As a percentage (0.0 - 100.0).
-- _SET_BINK_MOVIE_TIME(binkMovie, progress)

--- _SET_BINK_MOVIE_UNK_2
-- ```
NativeDB Introduced: v1868
```
-- @param binkMovie int
-- @param p1 BOOL
-- _SET_BINK_MOVIE_UNK_2(binkMovie, p1)

--- _SET_BINK_MOVIE_VOLUME
-- ```
binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)
```

```
NativeDB Introduced: v1290
```
-- @param binkMovie int
-- @param value float
-- _SET_BINK_MOVIE_VOLUME(binkMovie, value)

--- _SET_BINK_SHOULD_SKIP
-- ```
NativeDB Introduced: v1290
```
-- @param binkMovie int
-- @param shouldSkip BOOL
-- _SET_BINK_SHOULD_SKIP(binkMovie, shouldSkip)

--- _SET_CHECKPOINT_ICON_HEIGHT
-- This multiplies the height of the icon inside a checkpoint with the default height of about 2 units above the checkpoint's coordinates.
-- @param checkpoint int - The checkpoint the multiplier should be applied to.
-- @param height_multiplier float - The multiplier for the icon height above the checkpoint's coordinates. Default is 1.0
-- _SET_CHECKPOINT_ICON_HEIGHT(checkpoint, height_multiplier)

--- _SET_CHECKPOINT_ICON_SCALE
-- @param checkpoint int
-- @param scale float
-- _SET_CHECKPOINT_ICON_SCALE(checkpoint, scale)

--- _SET_EXTRA_TIMECYCLE_MODIFIER
-- @param modifierName char*
-- _SET_EXTRA_TIMECYCLE_MODIFIER(modifierName)

--- _SET_FORCE_PED_FOOTSTEPS_TRACKS
-- ```
Forces footstep tracks on all surfaces.
USE_/USING_*
```
-- @param toggle BOOL
-- _SET_FORCE_PED_FOOTSTEPS_TRACKS(toggle)

--- _SET_FORCE_VEHICLE_TRAILS
-- ```
Forces vehicle trails on all surfaces.
USE_/USING_*
```
-- @param toggle BOOL
-- _SET_FORCE_VEHICLE_TRAILS(toggle)

--- _SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE
-- ```
NativeDB Introduced: v2699
```
-- @param p0 float
-- @param p1 float
-- @param scale float
-- _SET_PARTICLE_FX_NON_LOOPED_EMITTER_SCALE(p0, p1, scale)

--- _START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE
-- ```
NativeDB Introduced: v2189
```
-- @param effectName char*
-- @param entity Entity
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param boneIndex int
-- @param scale float
-- @param axisX BOOL
-- @param axisY BOOL
-- @param axisZ BOOL
-- _START_NETWORKED_PARTICLE_FX_NON_LOOPED_ON_ENTITY_BONE(effectName, entity, offsetX, offsetY, offsetZ, rotX, rotY, rotZ, boneIndex, scale, axisX, axisY, axisZ)

--- _STOP_BINK_MOVIE
-- ```
NativeDB Introduced: v1290
```
-- @param binkMovie int
-- _STOP_BINK_MOVIE(binkMovie)


-- ========== HUD ==========

--- 0x04655F9D075D0AE5
-- ```
SET_*
```
-- @param toggle BOOL
-- 0x04655F9D075D0AE5(toggle)

--- 0x0C698D8F099174C7
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- 0x0C698D8F099174C7(p0)

--- 0x0CF54F20DE43879C
-- @param p0 Any
-- 0x0CF54F20DE43879C(p0)

--- 0x211C4EF450086857
-- **This native does absolutely nothing, just a nullsub**
-- 0x211C4EF450086857()

--- 0x214CD562A939246A
-- ```
HAS_S*
```
-- 0x214CD562A939246A()

--- 0x243296A510B562B6
-- ```
NativeDB Introduced: v2060
```
-- 0x243296A510B562B6()

--- 0x24A49BEAF468DC90
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x24A49BEAF468DC90(p0, p1, p2, p3, p4)

--- 0x2790F4B17D098E26
-- ```
SET_F*
```
-- @param toggle BOOL
-- 0x2790F4B17D098E26(toggle)

--- 0x2C173AE2BDB9385E
-- GET_BLIP_\*
Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0.
-- @param blip Blip - The blip to check.
-- 0x2C173AE2BDB9385E(blip)

--- 0x2C9F302398E13141
-- Correct native name lies between SET_BLIP_SPRITE and SET_RADIUS_BLIP_EDGE alphabetically.
-- @param blip Blip
-- @param p1 Any
-- 0x2C9F302398E13141(blip, p1)

--- 0x2E22FEFA0100275E
-- 0x2E22FEFA0100275E()

--- 0x2F057596F2BD0061
-- ```
Appears to return whether the player is using the pause menu store. Can't be sure though.  
```
-- 0x2F057596F2BD0061()

--- 0x35A3CD97B2C0A6D2
-- ```
NativeDB Introduced: v1290
```
-- @param blip Blip
-- 0x35A3CD97B2C0A6D2(blip)

--- 0x41350B4FC28E3941
-- @param p0 BOOL
-- 0x41350B4FC28E3941(p0)

--- 0x4B5B620C9B59ED34
-- @param p0 Any
-- @param p1 Any
-- 0x4B5B620C9B59ED34(p0, p1)

--- 0x55F5A5F07134DE60
-- ```
NativeDB Introduced: v1180
```
-- 0x55F5A5F07134DE60()

--- 0x57D760D55F54E071
-- ```
FORCE_*
```
-- @param p0 int
-- 0x57D760D55F54E071(p0)

--- 0x593FEAE1F73392D4
-- 0x593FEAE1F73392D4()

--- 0x62E849B7EB28E770
-- @param p0 BOOL
-- 0x62E849B7EB28E770(p0)

--- 0x66E7CB63C97B7D20
-- 0x66E7CB63C97B7D20()

--- 0x7C226D5346D4D10A
-- @param p0 Any
-- 0x7C226D5346D4D10A(p0)

--- 0x801879A9B4F4B2FB
-- ```
IS_*
```
-- 0x801879A9B4F4B2FB()

--- 0x817B86108EB94E51
-- ```
UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0/*16*/], &g_189F36._f10CD1[1/*16*/], &g_189F36._f10CD1[2/*16*/], &g_189F36._f10CD1[3/*16*/], &g_189F36._f10CD1[4/*16*/], &g_189F36._f10CD1[5/*16*/], &g_189F36._f10CD1[6/*16*/], &g_189F36._f10CD1[7/*16*/]);  
```
-- @param p0 BOOL
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- @param p4 Any*
-- @param p5 Any*
-- @param p6 Any*
-- @param p7 Any*
-- @param p8 Any*
-- 0x817B86108EB94E51(p0, p1, p2, p3, p4, p5, p6, p7, p8)

--- 0x8410C5E0CD847B9D
-- ```
NativeDB Introduced: v1290
```
-- 0x8410C5E0CD847B9D()

--- 0x8F08017F9D7C47BD
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any
-- 0x8F08017F9D7C47BD(p0, p1, p2)

--- 0x98C3CF913D895111
-- ```
GET_F*
```
-- @param string char*
-- @param length int
-- 0x98C3CF913D895111(string, length)

--- 0x9FCB3CBFB3EAD69A
-- SET_C\*

```
NativeDB Introduced: v1734
```
-- @param p0 int
-- @param p1 float
-- 0x9FCB3CBFB3EAD69A(p0, p1)

--- 0xA17784FCA9548D15
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xA17784FCA9548D15(p0, p1, p2)

--- 0xA238192F33110615
-- @param p0 int*
-- @param p1 int*
-- @param p2 int*
-- 0xA238192F33110615(p0, p1, p2)

--- 0xB552929B85FC27EC
-- @param p0 Any
-- @param p1 Any
-- 0xB552929B85FC27EC(p0, p1)

--- 0xB7B873520C84C118
-- SET_C\*

```
NativeDB Introduced: v1734
```
-- 0xB7B873520C84C118()

--- 0xBA8D65C1C65702E5
-- ```
FORCE_*
```
-- @param toggle BOOL
-- 0xBA8D65C1C65702E5(toggle)

--- 0xBF4F34A85CA2970C
-- 0xBF4F34A85CA2970C()

--- 0xC2D2AD9EAAE265B8
-- ```
Getter for 0xCD74233600C4EA6B

GET_*
```
-- 0xC2D2AD9EAAE265B8()

--- 0xC594B315EDF2D4AF
-- @param ped Ped
-- 0xC594B315EDF2D4AF(ped)

--- 0xC8E1071177A23BE5
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any*
-- 0xC8E1071177A23BE5(p0, p1, p2)

--- 0xCA6B2F7CE32AB653
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any
-- 0xCA6B2F7CE32AB653(p0, p1, p2)

--- 0xCD74233600C4EA6B
-- ```
Setter for 0xC2D2AD9EAAE265B8

SET_*
```
-- @param toggle BOOL
-- 0xCD74233600C4EA6B(toggle)

--- 0xD1942374085C8469
-- @param p0 Any
-- 0xD1942374085C8469(p0)

--- 0xD2049635DEB9C375
-- **This native does absolutely nothing, just a nullsub**
-- 0xD2049635DEB9C375()

--- 0xDAF87174BE7454FF
-- @param p0 Any
-- 0xDAF87174BE7454FF(p0)

--- 0xDE03620F8703A9DF
-- 0xDE03620F8703A9DF()

--- 0xE4C3B169876D33D7
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- 0xE4C3B169876D33D7(p0)

--- 0xE67C6DFD386EA5E7
-- @param p0 BOOL
-- 0xE67C6DFD386EA5E7(p0)

--- 0xEB81A3DADD503187
-- ```
NativeDB Introduced: v1290
```
-- 0xEB81A3DADD503187()

--- 0xF13FE2A80C05C561
-- 0xF13FE2A80C05C561()

--- 0xF284AC67940C6812
-- 0xF284AC67940C6812()

--- 0xF83D0FEBE75E62C9
-- ```
NativeDB Added Parameter 9: int hudColour
NativeDB Introduced: v1290
```

Sets the 'data' for a cone for a blip

See [here](https://docs.fivem.net/docs/game-references/hud-colors/) for the hud colours for the cone

Name in scripts: `SETUP_FAKE_CONE_DATA()`

For people who don't know how to convert degrees to radians and the other way around:

```
degrees = radians * 180 / pi
radians = degrees * pi / 180
```
-- @param blip Blip - A blip from an entity. The entity can not be a ped. The width and length will not change if it is a ped.
-- @param p1 Any - \-1.0 in decompiled scripts (unk)
-- @param p2 Any - 1.0 in decompiled scripts (unk)
-- @param width float - Width of the cone (0.0 to ~3.0)
-- @param p4 Any - 1.0 in decompiled scripts (unk)
-- @param length float - Length of the cone. (8.2 is 'normal' sized)
-- @param heading float - This heading is in radians, this can be calculated with (heading + 180.00) \* (pi/180)
-- @param p7 Any - 1 in decompiled scripts (unk)
-- 0xF83D0FEBE75E62C9(blip, p1, p2, width, p4, length, heading, p7)

--- ACTIVATE_FRONTEND_MENU
-- Does stuff like this:\
gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617\
Example:\
int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");\
ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);\
BOOL p1 is a toggle to define the game in pause.\
int p2 is unknown but -1 always works, not sure why though.\
\[30/03/2017] ins1de :\
the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.\
Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);\
Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.

Below is a list of all known Frontend Menu Hashes.

*   FE_MENU_VERSION_SP_PAUSE
*   FE_MENU_VERSION_MP_PAUSE
*   FE_MENU_VERSION_CREATOR_PAUSE
*   FE_MENU_VERSION_CUTSCENE_PAUSE
*   FE_MENU_VERSION_SAVEGAME
*   FE_MENU_VERSION_PRE_LOBBY
*   FE_MENU_VERSION_LOBBY
*   FE_MENU_VERSION_MP_CHARACTER_SELECT
*   FE_MENU_VERSION_MP_CHARACTER_CREATION
*   FE_MENU_VERSION_EMPTY
*   FE_MENU_VERSION_EMPTY_NO_BACKGROUND
*   FE_MENU_VERSION_TEXT_SELECTION
*   FE_MENU_VERSION_CORONA
*   FE_MENU_VERSION_CORONA_LOBBY
*   FE_MENU_VERSION_CORONA_JOINED_PLAYERS
*   FE_MENU_VERSION_CORONA_INVITE_PLAYERS
*   FE_MENU_VERSION_CORONA_INVITE_FRIENDS
*   FE_MENU_VERSION_CORONA_INVITE_CREWS
*   FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
*   FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
*   FE_MENU_VERSION_CORONA_RACE
*   FE_MENU_VERSION_CORONA_BETTING
*   FE_MENU_VERSION_JOINING_SCREEN
*   FE_MENU_VERSION_LANDING_MENU
*   FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
-- @param menuhash Hash
-- @param togglePause BOOL
-- @param component int
-- ACTIVATE_FRONTEND_MENU(menuhash, togglePause, component)

--- ADD_BLIP_FOR_COORD
-- Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
-- @param x float - The X coordinate to create the blip on.
-- @param y float - The Y coordinate.
-- @param z float - The Z coordinate.
-- ADD_BLIP_FOR_COORD(x, y, z)

--- ADD_BLIP_FOR_ENTITY
-- Create a blip that by default is red (enemy), you can use [SET_BLIP_AS_FRIENDLY](#\_0xC6F43D0E) to make it blue (friend).\
Can be used for objects, vehicles and peds.

Example of enemy:
![enemy](https://i.imgur.com/fl78svv.png)
Example of friend:
![friend](https://i.imgur.com/Q16ho5d.png)
-- @param entity Entity - The entity handle to create the blip.
-- ADD_BLIP_FOR_ENTITY(entity)

--- ADD_BLIP_FOR_PICKUP
-- @param pickup Pickup
-- ADD_BLIP_FOR_PICKUP(pickup)

--- ADD_BLIP_FOR_RADIUS
-- Create a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use [AddBlipCoords](#\_0xC6F43D0E))

Example image:
![example](https://i.imgur.com/9hQl3DB.png)
-- @param posX float - The x position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param posY float - The y position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param posZ float - The z position of the blip (you can also send a vector3 instead of the bulk coordinates)
-- @param radius float - The number that defines the radius of the blip circle
-- ADD_BLIP_FOR_RADIUS(posX, posY, posZ, radius)

--- ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS
-- @param addToBrief BOOL - Toggles if the next help message will be shown in Pause Menu > Info > Help.
-- ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(addToBrief)

--- ADD_POINT_TO_GPS_CUSTOM_ROUTE
-- @param x float
-- @param y float
-- @param z float
-- ADD_POINT_TO_GPS_CUSTOM_ROUTE(x, y, z)

--- ADD_POINT_TO_GPS_MULTI_ROUTE
-- @param x float
-- @param y float
-- @param z float
-- ADD_POINT_TO_GPS_MULTI_ROUTE(x, y, z)

--- ADD_TEXT_COMPONENT_FLOAT
-- Adds a float to a text component placeholder, replacing `~1~` in the current text command's text label.

![Example output](https://i.imgur.com/jvuQ0II.png)
-- @param value float - The number to substitute in the label.
-- @param decimalPlaces int - How many decimal places to add
-- ADD_TEXT_COMPONENT_FLOAT(value, decimalPlaces)

--- ADD_TEXT_COMPONENT_FORMATTED_INTEGER
-- @param value int - The integer to add to the string
-- @param commaSeparated BOOL - Whether or not to add comma seperators. So if true 1000 would become 1,000.
-- ADD_TEXT_COMPONENT_FORMATTED_INTEGER(value, commaSeparated)

--- ADD_TEXT_COMPONENT_INTEGER
-- @param value int
-- ADD_TEXT_COMPONENT_INTEGER(value)

--- ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME
-- @param blip Blip
-- ADD_TEXT_COMPONENT_SUBSTRING_BLIP_NAME(blip)

--- ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY
-- Certain characters like `<` will have to be escaped using html entities (e.g. `&lt;`), otherwise the text wont display properly.
-- @param string char*
-- ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY(string)

--- ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER
-- ```
p1 was always -1
```
-- @param p0 char*
-- @param p1 int
-- ADD_TEXT_COMPONENT_SUBSTRING_PHONE_NUMBER(p0, p1)

--- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME
-- Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.

See the documentation on text formatting for more information.
-- @param text char* - A string to add of up to 99 characters. This can contain additional `~` formatting directives.
-- ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text)

--- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL
-- @param labelName char*
-- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL(labelName)

--- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY
-- ```
It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key  
```
-- @param gxtEntryHash Hash
-- ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(gxtEntryHash)

--- ADD_TEXT_COMPONENT_SUBSTRING_TIME
-- ```
Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.  
```
-- @param timestamp int
-- @param flags int
-- ADD_TEXT_COMPONENT_SUBSTRING_TIME(timestamp, flags)

--- ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE
-- ```
This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)  
```
-- @param website char*
-- ADD_TEXT_COMPONENT_SUBSTRING_WEBSITE(website)

--- ALLOW_SONAR_BLIPS
-- @param toggle BOOL
-- ALLOW_SONAR_BLIPS(toggle)

--- BEGIN_TEXT_COMMAND_BUSYSPINNER_ON
-- ```
Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here  
BEGIN_TEXT_COMMAND_PRINT  
e.g  
void StartLoadingMessage(char *text, int spinnerType = 3)  
	{  
_SET_LOADING_PROMPT_TEXT_ENTRY("STRING");  
ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
_SHOW_LOADING_PROMPT(spinnerType);  
	}  
/*OR*/  
	void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)  
	{  
_SET_LOADING_PROMPT_TEXT_ENTRY("STRING");  
ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
_SHOW_LOADING_PROMPT(spinnerType);  
WAIT(timeMs);  
_REMOVE_LOADING_PROMPT();  
	}  
These are some localized strings used in the loading spinner.  
"PM_WAIT"                   = Please Wait  
"CELEB_WPLYRS"              = Waiting For Players.  
"CELL_SPINNER2"             = Scanning storage.  
"ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.  
"ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.  
"FM_COR_AUTOD"                        = Just spinner no text  
"FM_IHELP_WAT2"                        = Waiting for other players  
"FM_JIP_WAITO"                            = Game options are being set  
"FMMC_DOWNLOAD"                    = Downloading  
"FMMC_PLYLOAD"                         = Loading  
"FMMC_STARTTRAN"                    = Launching session  
"HUD_QUITTING"                           =  Quiting session  
"KILL_STRIP_IDM"                         = Waiting for to accept  
"MP_SPINLOADING"                      = Loading  
```
-- @param string char*
-- BEGIN_TEXT_COMMAND_BUSYSPINNER_ON(string)

--- BEGIN_TEXT_COMMAND_CLEAR_PRINT
-- ```
clears a print text command with this text  
```
-- @param text char*
-- BEGIN_TEXT_COMMAND_CLEAR_PRINT(text)

--- BEGIN_TEXT_COMMAND_DISPLAY_HELP
-- ```
Used to be known as _SET_TEXT_COMPONENT_FORMAT  
```
-- @param inputType char*
-- BEGIN_TEXT_COMMAND_DISPLAY_HELP(inputType)

--- BEGIN_TEXT_COMMAND_DISPLAY_TEXT
-- ```
The following were found in the decompiled script files:  
STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3  
ESDOLLA   
ESMINDOLLA - cash (negative)  
Used to be known as _SET_TEXT_ENTRY  
```
-- @param text char*
-- BEGIN_TEXT_COMMAND_DISPLAY_TEXT(text)

--- BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED
-- ```
nothin doin.   
BOOL Message(char* text)  
	{  
BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");  
ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();  
	}  
```
-- @param text char*
-- BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED(text)

--- BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED
-- @param labelName char* - Text entry name. This can be created using [`AddTextEntry`](#\_0x32CA01C3).
-- BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(labelName)

--- BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT
-- @param gxtEntry char*
-- BEGIN_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(gxtEntry)

--- BEGIN_TEXT_COMMAND_PRINT
-- ```
Used to be known as _SET_TEXT_ENTRY_2  
void ShowSubtitle(char *text)  
{  
	BEGIN_TEXT_COMMAND_PRINT("STRING");  
	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
	END_TEXT_COMMAND_PRINT(2000, 1);  
}  
```
-- @param GxtEntry char*
-- BEGIN_TEXT_COMMAND_PRINT(GxtEntry)

--- BEGIN_TEXT_COMMAND_SET_BLIP_NAME
-- Starts a text command to change the name of a blip displayed in the pause menu.

This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xBC38B49BCB83BC9B), once adding all required text components.
-- @param textLabel char* - The text label to set.
-- BEGIN_TEXT_COMMAND_SET_BLIP_NAME(textLabel)

--- BEGIN_TEXT_COMMAND_THEFEED_POST
-- Declares the entry type of a notification, for example "STRING".
int ShowNotification(char \*text)
{
BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
return \_DRAW_NOTIFICATION(1, 1);
}
-- @param text char* - The text label to use.
-- BEGIN_TEXT_COMMAND_THEFEED_POST(text)

--- BUSYSPINNER_IS_DISPLAYING
-- BUSYSPINNER_IS_DISPLAYING()

--- BUSYSPINNER_IS_ON
-- BUSYSPINNER_IS_ON()

--- BUSYSPINNER_OFF
-- ```
Removes the loading prompt at the bottom right of the screen.
```
-- BUSYSPINNER_OFF()

--- CHANGE_FAKE_MP_CASH
-- ```
Displays cash change notifications on HUD.  
```
-- @param cash int
-- @param bank int
-- CHANGE_FAKE_MP_CASH(cash, bank)

--- CLEAR_ADDITIONAL_TEXT
-- @param p0 int
-- @param p1 BOOL
-- CLEAR_ADDITIONAL_TEXT(p0, p1)

--- CLEAR_ALL_HELP_MESSAGES
-- CLEAR_ALL_HELP_MESSAGES()

--- CLEAR_BRIEF
-- CLEAR_BRIEF()

--- CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE
-- CLEAR_DYNAMIC_PAUSE_MENU_ERROR_MESSAGE()

--- CLEAR_FLOATING_HELP
-- @param hudIndex int
-- @param p1 BOOL
-- CLEAR_FLOATING_HELP(hudIndex, p1)

--- CLEAR_GPS_CUSTOM_ROUTE
-- CLEAR_GPS_CUSTOM_ROUTE()

--- CLEAR_GPS_FLAGS
-- ```
Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.  
Doesn't seem like the flags are actually read by the game at all.  
```
-- CLEAR_GPS_FLAGS()

--- CLEAR_GPS_MULTI_ROUTE
-- Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](#\_0x3DDA37128DD1ACA8)
-- CLEAR_GPS_MULTI_ROUTE()

--- CLEAR_GPS_PLAYER_WAYPOINT
-- CLEAR_GPS_PLAYER_WAYPOINT()

--- CLEAR_GPS_RACE_TRACK
-- ```
Does the same as SET_RACE_TRACK_RENDER(false);
```
-- CLEAR_GPS_RACE_TRACK()

--- CLEAR_HELP
-- @param toggle BOOL
-- CLEAR_HELP(toggle)

--- CLEAR_PED_IN_PAUSE_MENU
-- CLEAR_PED_IN_PAUSE_MENU()

--- CLEAR_PRINTS
-- CLEAR_PRINTS()

--- CLEAR_REMINDER_MESSAGE
-- **This native does absolutely nothing, just a nullsub**
-- CLEAR_REMINDER_MESSAGE()

--- CLEAR_SMALL_PRINTS
-- CLEAR_SMALL_PRINTS()

--- CLEAR_THIS_PRINT
-- ```
p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z  
```
-- @param p0 char*
-- CLEAR_THIS_PRINT(p0)

--- CLOSE_SOCIAL_CLUB_MENU
-- CLOSE_SOCIAL_CLUB_MENU()

--- CREATE_FAKE_MP_GAMER_TAG
-- As per the name, this native creates a "fake" gamer tag that is attached to a specific ped.
Unlike "real" gamer tags, you cannot set the crew colour of these gamer tags.

To create gamer tags for actual players and for more gamer tag information, see [CREATE_MP_GAMER_TAG_WITH_CREW_COLOR](#\_0x6DD05E9D83EFA4C9).
-- @param ped Ped - The ped that the fake gamer tag will be attached to.
-- @param username char* - The name displayed on the gamer tag.
-- @param crewIsPrivate BOOL - If the crew is private. Public crews have a pointed end cap, private crews do not.
-- @param crewIsRockstar BOOL - If the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.
-- @param crewName char* - The name of the crew.
-- @param crewRank int - The rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.
-- CREATE_FAKE_MP_GAMER_TAG(ped, username, crewIsPrivate, crewIsRockstar, crewName, crewRank)

--- CREATE_MP_GAMER_TAG_WITH_CREW_COLOR
-- Creates a gamer tag for the specified local player ID, automatically attached to the player's current ped.
The created gamer tag will have the same ID as the player. You can use [IS_MP_GAMER_TAG_ACTIVE](#\_0x4E929E7A5796FD26) to check if a gamer tag already exists for a player.
After the gamer tag is created, all components will be set as invisible. Use [SET_MP_GAMER_TAG_VISIBILITY](#\_0x63BB75ABEDC1F6A0) to change the visibility of individual components or [\_SET_MP_GAMER_TAG_VISIBILITY_ALL](#\_0xEE76FF7E6A0166B0) to set all of them at once.

To create a gamer tag for a ped that is not a player, see [CREATE_FAKE_MP_GAMER_TAG](#\_0xBFEFE3321A3F5015).
-- @param player Player - The local player ID to assign the gamer tag to.
-- @param username char* - The name displayed on the gamer tag.
-- @param crewIsPrivate BOOL - If the crew is private. Public crews have a pointed end cap, private crews do not.
-- @param crewIsRockstar BOOL - If the crew is a Rockstar crew. Rockstar crews include a Rockstar logo before the name.
-- @param crewName char* - The name of the crew.
-- @param crewRank int - The rank from 1-5 that the player is within the crew. Use 0 if the player is the founder of the crew. Only relevant for private crews.
-- @param crewR int - Red component of the crew colour.
-- @param crewG int - Green component of the crew colour.
-- @param crewB int - Blue component of the crew colour.
-- CREATE_MP_GAMER_TAG_WITH_CREW_COLOR(player, username, crewIsPrivate, crewIsRockstar, crewName, crewRank, crewR, crewG, crewB)

--- DISABLE_FRONTEND_THIS_FRAME
-- DISABLE_FRONTEND_THIS_FRAME()

--- DISPLAY_AMMO_THIS_FRAME
-- @param display BOOL
-- DISPLAY_AMMO_THIS_FRAME(display)

--- DISPLAY_AREA_NAME
-- @param toggle BOOL
-- DISPLAY_AREA_NAME(toggle)

--- DISPLAY_CASH
-- ```
"DISPLAY_CASH(true);" makes the cash amount render on the screen when appropriate  
"DISPLAY_CASH(false);" disables cash amount rendering  
```
-- @param display BOOL
-- DISPLAY_CASH(display)

--- DISPLAY_HELP_TEXT_THIS_FRAME
-- Shows a help message for one frame.
Do note that this message doesn't get added to the Pause Menu info section.
-- @param pTextLabel char* - Text label for this message.
-- @param bCurvedWindow BOOL - Unused parameter.
-- DISPLAY_HELP_TEXT_THIS_FRAME(pTextLabel, bCurvedWindow)

--- DISPLAY_HUD
-- ```
If Hud should be displayed  
```
-- @param toggle BOOL
-- DISPLAY_HUD(toggle)

--- DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME
-- DISPLAY_HUD_WHEN_PAUSED_THIS_FRAME()

--- DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS
-- Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
Doesn't need to be called every frame.
Preview: https://i.imgur.com/DfqKWfJ.png
Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
-- @param toggle BOOL - the toggle boolean
-- DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS(toggle)

--- DISPLAY_RADAR
-- ```
If Minimap / Radar should be displayed.
```
-- @param toggle BOOL
-- DISPLAY_RADAR(toggle)

--- DISPLAY_SNIPER_SCOPE_THIS_FRAME
-- ```
Displays the crosshair for this frame.  
```
-- DISPLAY_SNIPER_SCOPE_THIS_FRAME()

--- DOES_BLIP_EXIST
-- @param blip Blip
-- DOES_BLIP_EXIST(blip)

--- DOES_BLIP_HAVE_GPS_ROUTE
-- @param blip Blip
-- DOES_BLIP_HAVE_GPS_ROUTE(blip)

--- DOES_PED_HAVE_AI_BLIP
-- ```
Returns whether the ped's blip is controlled by the game.   
It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).  
```
-- @param ped Ped
-- DOES_PED_HAVE_AI_BLIP(ped)

--- DOES_TEXT_BLOCK_EXIST
-- @param gxt char*
-- DOES_TEXT_BLOCK_EXIST(gxt)

--- DOES_TEXT_LABEL_EXIST
-- ```
Checks if the passed gxt name exists in the game files.  
```
-- @param gxt char*
-- DOES_TEXT_LABEL_EXIST(gxt)

--- DONT_TILT_MINIMAP_THIS_FRAME
-- ```
When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
```
-- DONT_TILT_MINIMAP_THIS_FRAME()

--- END_TEXT_COMMAND_BUSYSPINNER_ON
-- ```cpp
enum eBusySpinnerType
{
	BUSY_SPINNER_LEFT = 0,
	BUSY_SPINNER_LEFT_2 = 1,
	BUSY_SPINNER_LEFT_3 = 2,
	BUSY_SPINNER_SAVE = 3,
	BUSY_SPINNER_RIGHT = 4,
};
```
-- @param busySpinnerType int
-- END_TEXT_COMMAND_BUSYSPINNER_ON(busySpinnerType)

--- END_TEXT_COMMAND_CLEAR_PRINT
-- END_TEXT_COMMAND_CLEAR_PRINT()

--- END_TEXT_COMMAND_DISPLAY_HELP
-- @param shape int - 0 for a normal rectangle shape, 1 and 2 has rounded edges, and can be used for floating help text hud component `FLOATING_HELP_TEXT_1` and `FLOATING_HELP_TEXT_2`. Use 1 for `FLOATING_HELP_TEXT_1` and 2 for `FLOATING_HELP_TEXT_2`, otherwise the help text will be reset to a normal help text on the top left corner on your screen.
-- @param loop BOOL - If this is true, the message will stay forever unless you call [`CLEAR_ALL_HELP_MESSAGES`](#\_0x6178F68A87A4D3A0).
-- @param beep BOOL - If this is true, the beeping sound will play. Beeping sound name is `INFO` in sound set `HUD_FRONTEND_DEFAULT_SOUNDSET`.
-- @param duration int - Duration in ms of how long this help message should display for. -1 for default.
-- END_TEXT_COMMAND_DISPLAY_HELP(shape, loop, beep, duration)

--- END_TEXT_COMMAND_DISPLAY_TEXT
-- ```
After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.  
```

```
NativeDB Added Parameter 3: int p2
```
-- @param x float
-- @param y float
-- END_TEXT_COMMAND_DISPLAY_TEXT(x, y)

--- END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED
-- END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED()

--- END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED
-- Returns whether a specific help message is being displayed or not.

```cpp
enum HudIndexes {
    HELP_TEXT = 0,
    FLOATING_HELP_TEXT_1 = 1,
    FLOATING_HELP_TEXT_2 = 2,
}
```
-- @param hudIndex int - The hud index for help message.
-- END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(hudIndex)

--- END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT
-- @param buttonIndex int - Index of the instructional button
-- END_TEXT_COMMAND_OVERRIDE_BUTTON_TEXT(buttonIndex)

--- END_TEXT_COMMAND_PRINT
-- ```
Draws the subtitle at middle center of the screen.  
int duration = time in milliseconds to show text on screen before disappearing  
drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished  
Used to be known as _DRAW_SUBTITLE_TIMED  
```
-- @param duration int
-- @param drawImmediately BOOL
-- END_TEXT_COMMAND_PRINT(duration, drawImmediately)

--- END_TEXT_COMMAND_SET_BLIP_NAME
-- Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xF9113A30DE5C6670), setting the name
of the specified blip.
-- @param blip Blip - The blip to change the name for.
-- END_TEXT_COMMAND_SET_BLIP_NAME(blip)

--- END_TEXT_COMMAND_THEFEED_POST_AWARD
-- Shows an "award" notification above the minimap, lua example result:

![](https://i.imgur.com/e2DNaKX.png)

Old description:

```
Example:  
UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");  
UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");  
```
-- @param textureDict char* - The texture dictionary name for the icon on the left.
-- @param textureName char* - The texture name for the icon on the left.
-- @param rpBonus int - The gained "RP" amount that will be displayed on the right side of the notification.
-- @param colorOverlay int - Hudcolor overlay that gets applied on top of the notification, conflicts with text/image visibility in most cases if set to something other than 0.
-- @param titleLabel char* - The label that will be displayed at the top of the notification (title).
-- END_TEXT_COMMAND_THEFEED_POST_AWARD(textureDict, textureName, rpBonus, colorOverlay, titleLabel)

--- END_TEXT_COMMAND_THEFEED_POST_CREWTAG
-- ```
This function and the one below it are for after you receive an invite, not sending it.  
p0 = 1 or 0  
nothin doin.   
int invite(Player player)  
	{  
int iVar2, iVar3;  
networkHandleMgr handle;  
NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);  
networkClanMgr clan;  
char *playerName = GET_PLAYER_NAME(player);  
_SET_NOTIFICATION_TEXT_ENTRY("STRING");  
_SET_NOTIFACTION_COLOR_NEXT(0);  
ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  
if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))  
{  
	iVar2 = 0;  
	if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)  
	{  
iVar2 = 1;  
	}  
	if (clan.unk21 > 0)  
	{  
iVar3 = 0;  
	}  
	else  
	{  
iVar3 = 1;  
	}  
	BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);  
	return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 /*unused*/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);  
}  
	}  
```
-- @param crewTypeIsPrivate BOOL
-- @param crewTagContainsRockstar BOOL
-- @param crewTag int*
-- @param rank int
-- @param hasFounderStatus BOOL
-- @param isImportant BOOL
-- @param clanHandle int
-- @param r int
-- @param g int
-- @param b int
-- END_TEXT_COMMAND_THEFEED_POST_CREWTAG(crewTypeIsPrivate, crewTagContainsRockstar, crewTag, rank, hasFounderStatus, isImportant, clanHandle, r, g, b)

--- END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME
-- ```
p0 = 1 or 0  
crashes my game...  
this is for sending invites to network players - jobs/apartment/ect...   
return notification handle  
int invite(Player player)  
	{  
networkHandleMgr netHandle;  
networkClanMgr clan;  
char *playerName = GET_PLAYER_NAME(player);  
_SET_NOTIFICATION_TEXT_ENTRY("STRING");  
_SET_NOTIFACTION_COLOR_NEXT(1);  
ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);  
NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);  
if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))  
{  
	NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);  
	_DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);  
}  
	}  
```
-- @param crewTypeIsPrivate BOOL
-- @param crewTagContainsRockstar BOOL
-- @param crewTag int*
-- @param rank int
-- @param isLeader BOOL
-- @param isImportant BOOL
-- @param clanHandle int
-- @param gamerStr char*
-- @param r int
-- @param g int
-- @param b int
-- END_TEXT_COMMAND_THEFEED_POST_CREWTAG_WITH_GAME_NAME(crewTypeIsPrivate, crewTagContainsRockstar, crewTag, rank, isLeader, isImportant, clanHandle, gamerStr, r, g, b)

--- END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP
-- @param chTitle char*
-- @param clanTxd char*
-- @param clanTxn char*
-- @param isImportant BOOL
-- @param showSubtitle BOOL
-- END_TEXT_COMMAND_THEFEED_POST_CREW_RANKUP(chTitle, clanTxd, clanTxn, isImportant, showSubtitle)

--- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT
-- Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).

Texture dictionary and texture name parameters are usually the same exact value.

Example result:

![](https://i.imgur.com/LviutDl.png)

Old description with list of possible icons and texture names:

```
List of picNames: pastebin.com/XdpJVbHz  
flash is a bool for fading in.  
iconTypes:  
1 : Chat Box  
2 : Email  
3 : Add Friend Request  
4 : Nothing  
5 : Nothing  
6 : Nothing  
7 : Right Jumping Arrow  
8 : RP Icon  
9 : $ Icon  
"sender" is the very top header. This can be any old string.  
"subject" is the header under the sender.  
```
-- @param textureDict char* - The texture dictionary for the icon.
-- @param textureName char* - The texture name for the icon.
-- @param flash BOOL - Flash, doesn't seem to work no matter what.
-- @param iconType int - The icon type, see the list in the description below.
-- @param sender char* - The notification title.
-- @param subject char* - The notification subtitle.
-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT(textureDict, textureName, flash, iconType, sender, subject)

--- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU
-- Example, only occurrence in the scripts:

```
v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);
```

Example result:
![](https://i.imgur.com/YrN4Bcm.png)
-- @param picTxd char*
-- @param picTxn char*
-- @param flash BOOL
-- @param iconType int - The icon type, you can find those here: [`END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT`](#\_0x1CCD9A37359072CF)
-- @param nameStr char*
-- @param subtitleStr char*
-- @param durationMultiplier float - 1.0 is normal, 2.0 is twice as long, and 0.5 is half its normal display time.
-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, durationMultiplier)

--- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG
-- ```
List of picNames pastebin.com/XdpJVbHz  
flash is a bool for fading in.  
iconTypes:  
1 : Chat Box  
2 : Email  
3 : Add Friend Request  
4 : Nothing  
5 : Nothing  
6 : Nothing  
7 : Right Jumping Arrow  
8 : RP Icon  
9 : $ Icon  
"sender" is the very top header. This can be any old string.  
"subject" is the header under the sender.  
"duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.  
"clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)  
```
-- @param picTxd char*
-- @param picTxn char*
-- @param flash BOOL
-- @param iconType int
-- @param nameStr char*
-- @param subtitleStr char*
-- @param duration float
-- @param crewPackedStr char*
-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG(picTxd, picTxn, flash, iconType, nameStr, subtitleStr, duration, crewPackedStr)

--- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON
-- ```
List of picNames: pastebin.com/XdpJVbHz  
flash is a bool for fading in.  
iconTypes:  
1 : Chat Box  
2 : Email  
3 : Add Friend Request  
4 : Nothing  
5 : Nothing  
6 : Nothing  
7 : Right Jumping Arrow  
8 : RP Icon  
9 : $ Icon  
"sender" is the very top header. This can be any old string.  
"subject" is the header under the sender.  
"duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.  
"clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)  
iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.  
int IconNotification(char *text, char *text2, char *Subject)  
{  
	_SET_NOTIFICATION_TEXT_ENTRY("STRING");  
	ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
	_SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);  
	return _DRAW_NOTIFICATION(1, 1);  
}  
```
-- @param picTxd char*
-- @param picTxn char*
-- @param flash BOOL
-- @param iconType1 int
-- @param nameStr char*
-- @param subtitleStr char*
-- @param duration float
-- @param crewPackedStr char*
-- @param iconType2 int
-- @param textColor int
-- END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_WITH_CREW_TAG_AND_ADDITIONAL_ICON(picTxd, picTxn, flash, iconType1, nameStr, subtitleStr, duration, crewPackedStr, iconType2, textColor)

--- END_TEXT_COMMAND_THEFEED_POST_MPTICKER
-- @param blink BOOL
-- @param bHasTokens BOOL
-- END_TEXT_COMMAND_THEFEED_POST_MPTICKER(blink, bHasTokens)

--- END_TEXT_COMMAND_THEFEED_POST_STATS
-- [List of picture names](https://pastebin.com/XdpJVbHz)

Example result:

![](https://i.imgur.com/SdEZ22m.png)
-- @param statTitle char*
-- @param iconEnum int
-- @param stepVal BOOL
-- @param barValue int
-- @param isImportant BOOL
-- @param picTxd char*
-- @param picTxn char*
-- END_TEXT_COMMAND_THEFEED_POST_STATS(statTitle, iconEnum, stepVal, barValue, isImportant, picTxd, picTxn)

--- END_TEXT_COMMAND_THEFEED_POST_TICKER
-- Example output preview:

![](https://i.imgur.com/TJvqkYq.png)
-- @param isImportant BOOL - Makes the notification flash on the screen.
-- @param bHasTokens BOOL - Makes the notification appear in the "Pause Menu > Info/Brief > Notifications" section.
-- END_TEXT_COMMAND_THEFEED_POST_TICKER(isImportant, bHasTokens)

--- END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED
-- @param blink BOOL
-- @param bHasTokens BOOL
-- END_TEXT_COMMAND_THEFEED_POST_TICKER_FORCED(blink, bHasTokens)

--- END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS
-- @param isImportant BOOL
-- @param bHasTokens BOOL
-- END_TEXT_COMMAND_THEFEED_POST_TICKER_WITH_TOKENS(isImportant, bHasTokens)

--- END_TEXT_COMMAND_THEFEED_POST_UNLOCK
-- @param chTitle char*
-- @param iconType int
-- @param chSubtitle char*
-- END_TEXT_COMMAND_THEFEED_POST_UNLOCK(chTitle, iconType, chSubtitle)

--- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU
-- @param chTitle char*
-- @param iconType int
-- @param chSubtitle char*
-- @param isImportant BOOL
-- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU(chTitle, iconType, chSubtitle, isImportant)

--- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR
-- @param chTitle char*
-- @param iconType int
-- @param chSubtitle char*
-- @param isImportant BOOL
-- @param titleColor int
-- @param p5 BOOL
-- END_TEXT_COMMAND_THEFEED_POST_UNLOCK_TU_WITH_COLOR(chTitle, iconType, chSubtitle, isImportant, titleColor, p5)

--- END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU
-- ```
NativeDB Added Parameter 7: int hudColorIndex1
NativeDB Added Parameter 8: int hudColorIndex2
```
-- @param ch1TXD char*
-- @param ch1TXN char*
-- @param val1 int
-- @param ch2TXD char*
-- @param ch2TXN char*
-- @param val2 int
-- END_TEXT_COMMAND_THEFEED_POST_VERSUS_TU(ch1TXD, ch1TXN, val1, ch2TXD, ch2TXN, val2)

--- FLAG_PLAYER_CONTEXT_IN_TOURNAMENT
-- @param toggle BOOL
-- FLAG_PLAYER_CONTEXT_IN_TOURNAMENT(toggle)

--- FLASH_ABILITY_BAR
-- @param millisecondsToFlash int
-- FLASH_ABILITY_BAR(millisecondsToFlash)

--- FLASH_MINIMAP_DISPLAY
-- ```
adds a short flash to the Radar/Minimap  
Usage: UI.FLASH_MINIMAP_DISPLAY  
```
-- FLASH_MINIMAP_DISPLAY()

--- FLASH_MINIMAP_DISPLAY_WITH_COLOR
-- @param hudColorIndex int
-- FLASH_MINIMAP_DISPLAY_WITH_COLOR(hudColorIndex)

--- FLASH_WANTED_DISPLAY
-- @param p0 BOOL
-- FLASH_WANTED_DISPLAY(p0)

--- FORCE_CLOSE_REPORTUGC_MENU
-- FORCE_CLOSE_REPORTUGC_MENU()

--- FORCE_CLOSE_TEXT_INPUT_BOX
-- FORCE_CLOSE_TEXT_INPUT_BOX()

--- FORCE_SONAR_BLIPS_THIS_FRAME
-- ```
Doesn't actually return anything.
```
-- FORCE_SONAR_BLIPS_THIS_FRAME()

--- GET_BLIP_ALPHA
-- @param blip Blip
-- GET_BLIP_ALPHA(blip)

--- GET_BLIP_COLOUR
-- @param blip Blip
-- GET_BLIP_COLOUR(blip)

--- GET_BLIP_COORDS
-- @param blip Blip
-- GET_BLIP_COORDS(blip)

--- GET_BLIP_FROM_ENTITY
-- ```
Returns the Blip handle of given Entity.  
```
-- @param entity Entity
-- GET_BLIP_FROM_ENTITY(entity)

--- GET_BLIP_HUD_COLOUR
-- @param blip Blip
-- GET_BLIP_HUD_COLOUR(blip)

--- GET_BLIP_INFO_ID_COORD
-- @param blip Blip
-- GET_BLIP_INFO_ID_COORD(blip)

--- GET_BLIP_INFO_ID_DISPLAY
-- @param blip Blip
-- GET_BLIP_INFO_ID_DISPLAY(blip)

--- GET_BLIP_INFO_ID_ENTITY_INDEX
-- @param blip Blip
-- GET_BLIP_INFO_ID_ENTITY_INDEX(blip)

--- GET_BLIP_INFO_ID_PICKUP_INDEX
-- ```
This function is hard-coded to always return 0.  
```
-- @param blip Blip
-- GET_BLIP_INFO_ID_PICKUP_INDEX(blip)

--- GET_BLIP_INFO_ID_TYPE
-- ```
Returns a value based on what the blip is attached to
1 - Vehicle
2 - Ped
3 - Object
4 - Coord
5 - unk
6 - Pickup
7 - Radius
```
-- @param blip Blip
-- GET_BLIP_INFO_ID_TYPE(blip)

--- GET_BLIP_SPRITE
-- Gets the sprite id of the specified blip. Blip sprite ids and images can be found [here](https://docs.fivem.net/docs/game-references/blips/).
-- @param blip Blip - The blip handle.
-- GET_BLIP_SPRITE(blip)

--- GET_CURRENT_FRONTEND_MENU_VERSION
-- ```
if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))
```
-- GET_CURRENT_FRONTEND_MENU_VERSION()

--- GET_CURRENT_WEBPAGE_ID
-- GET_CURRENT_WEBPAGE_ID()

--- GET_CURRENT_WEBSITE_ID
-- GET_CURRENT_WEBSITE_ID()

--- GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID
-- ```
This function is hard-coded to always return 1.  
```
-- GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID()

--- GET_FILENAME_FOR_AUDIO_CONVERSATION
-- Gets a localized string literal from a label name. This is used to get the filename of the audio conversation associated with the provided label name.
-- @param labelName char* - The label name for which the audio conversation filename is requested.
-- GET_FILENAME_FOR_AUDIO_CONVERSATION(labelName)

--- GET_FIRST_BLIP_INFO_ID
-- Also see [`GET_NEXT_BLIP_INFO_ID`](#\_0x14F96AA50D6FBEA7) for an example.
-- @param blipSprite int - Sprite ID, see the [Blips Game Reference](https://docs.fivem.net/docs/game-references/blips/) for the full list.
-- GET_FIRST_BLIP_INFO_ID(blipSprite)

--- GET_GLOBAL_ACTIONSCRIPT_FLAG
-- ```
Returns the ActionScript flagValue.
ActionScript flags are global flags that scaleforms use
Flags found during testing
0: Returns 1 if the web_browser keyboard is open, otherwise 0
1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
9: Returns the current selection on the mobile phone scaleform
There are 20 flags in total.
```
-- @param flagIndex int
-- GET_GLOBAL_ACTIONSCRIPT_FLAG(flagIndex)

--- GET_HUD_COLOUR
-- Gets hud color RGBA parameter values by passing a hud color index (hudColorIndex).

HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
-- @param hudColorIndex int
-- @param r int*
-- @param g int*
-- @param b int*
-- @param a int*
-- GET_HUD_COLOUR(hudColorIndex, r, g, b, a)

--- GET_HUD_COMPONENT_POSITION
-- @param id int
-- GET_HUD_COMPONENT_POSITION(id)

--- GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION
-- ```
World to relative screen coords
this world to screen will keep the text on screen. it will keep it in the screen pos
```
-- @param worldX float
-- @param worldY float
-- @param worldZ float
-- @param screenX float*
-- @param screenY float*
-- GET_HUD_SCREEN_POSITION_FROM_WORLD_POSITION(worldX, worldY, worldZ, screenX, screenY)

--- GET_LENGTH_OF_LITERAL_STRING
-- ```
Returns the length of the string passed (much like strlen).  
```
-- @param string char*
-- GET_LENGTH_OF_LITERAL_STRING(string)

--- GET_LENGTH_OF_LITERAL_STRING_IN_BYTES
-- @param string char*
-- GET_LENGTH_OF_LITERAL_STRING_IN_BYTES(string)

--- GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL
-- ```
Returns the string length of the string from the gxt string .  
```
-- @param gxt char*
-- GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(gxt)

--- GET_MAIN_PLAYER_BLIP_ID
-- GET_MAIN_PLAYER_BLIP_ID()

--- GET_MENU_PED_BOOL_STAT
-- ```
p0 was always 0xAE2602A3.
```
-- @param p0 Hash
-- @param p1 Any*
-- GET_MENU_PED_BOOL_STAT(p0, p1)

--- GET_MENU_PED_FLOAT_STAT
-- @param p0 Any
-- @param p1 float*
-- GET_MENU_PED_FLOAT_STAT(p0, p1)

--- GET_MENU_PED_INT_STAT
-- @param p0 Any
-- @param p1 Any*
-- GET_MENU_PED_INT_STAT(p0, p1)

--- GET_MENU_PED_MASKED_INT_STAT
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- GET_MENU_PED_MASKED_INT_STAT(p0, p1, p2, p3)

--- GET_MINIMAP_FOW_COORDINATE_IS_REVEALED
-- @param x float
-- @param y float
-- @param z float
-- GET_MINIMAP_FOW_COORDINATE_IS_REVEALED(x, y, z)

--- GET_MINIMAP_FOW_DISCOVERY_RATIO
-- GET_MINIMAP_FOW_DISCOVERY_RATIO()

--- GET_NAMED_RENDERTARGET_RENDER_ID
-- @param name char*
-- GET_NAMED_RENDERTARGET_RENDER_ID(name)

--- GET_NEW_SELECTED_MISSION_CREATOR_BLIP
-- GET_NEW_SELECTED_MISSION_CREATOR_BLIP()

--- GET_NEXT_BLIP_INFO_ID
-- @param blipSprite int - Sprite ID, see the [Game Reference](https://docs.fivem.net/docs/game-references/blips/) for the full list.
-- GET_NEXT_BLIP_INFO_ID(blipSprite)

--- GET_NUMBER_OF_ACTIVE_BLIPS
-- GET_NUMBER_OF_ACTIVE_BLIPS()

--- GET_PAUSE_MENU_STATE
-- ```cpp
enum ePauseMenuState
{
    PM_INACTIVE 	 =  0,
    PM_STARTING_UP 	 =  5,
    PM_RESTARTING 	 = 10,
    PM_READY 		 = 15,
    PM_IN_STORE 	 = 20,
    PM_IN_SC_MENU 	 = 25,
    PM_SHUTTING_DOWN = 30,
    PM_IN_VIDEOEDITOR = 35,
}
```
-- GET_PAUSE_MENU_STATE()

--- GET_RENDERED_CHARACTER_HEIGHT
-- ```
This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
Old name: _GET_TEXT_SCALE_HEIGHT
```
-- @param size float
-- @param font int
-- GET_RENDERED_CHARACTER_HEIGHT(size, font)

--- GET_STANDARD_BLIP_ENUM_ID
-- GET_STANDARD_BLIP_ENUM_ID()

--- GET_STREET_NAME_FROM_HASH_KEY
-- Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see [`GET_STREET_NAME_AT_COORD`](#\_0x2EB41072B4C1E4C0).
-- @param hash Hash
-- GET_STREET_NAME_FROM_HASH_KEY(hash)

--- GET_WAYPOINT_BLIP_ENUM_ID
-- GET_WAYPOINT_BLIP_ENUM_ID()

--- GIVE_PED_TO_PAUSE_MENU
-- ```
p1 is either 1 or 2 in the PC scripts.  
```

This native is used to "give"/duplicate a player ped to a frontend menu as configured via the `ACTIVATE_FRONTEND_MENU` native, you first must utilize the [CLONE_PED](#\_0xEF29A16337FACADB) to clone said ped.
-- @param ped Ped
-- @param p1 int
-- GIVE_PED_TO_PAUSE_MENU(ped, p1)

--- HAS_ADDITIONAL_TEXT_LOADED
-- @param slot int
-- HAS_ADDITIONAL_TEXT_LOADED(slot)

--- HAS_THIS_ADDITIONAL_TEXT_LOADED
-- ```
Checks if the specified gxt has loaded into the passed slot.  
```
-- @param gxt char*
-- @param slot int
-- HAS_THIS_ADDITIONAL_TEXT_LOADED(gxt, slot)

--- HIDE_HELP_TEXT_THIS_FRAME
-- HIDE_HELP_TEXT_THIS_FRAME()

--- HIDE_HUD_AND_RADAR_THIS_FRAME
-- ```
I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)  
```
-- HIDE_HUD_AND_RADAR_THIS_FRAME()

--- HIDE_HUD_COMPONENT_THIS_FRAME
-- This function hides various HUD (Heads-up Display) components.

Listed below are the integers and the corresponding HUD component.

*   1 : WANTED_STARS
*   2 : WEAPON_ICON
*   3 : CASH
*   4 : MP_CASH
*   5 : MP_MESSAGE
*   6 : VEHICLE_NAME
*   7 : AREA_NAME
*   8 : VEHICLE_CLASS
*   9 : STREET_NAME
*   10 : HELP_TEXT
*   11 : FLOATING_HELP_TEXT\_1
*   12 : FLOATING_HELP_TEXT\_2
*   13 : CASH_CHANGE
*   14 : RETICLE
*   15 : SUBTITLE_TEXT
*   16 : RADIO_STATIONS
*   17 : SAVING_GAME
*   18 : GAME_STREAM
*   19 : WEAPON_WHEEL
*   20 : WEAPON_WHEEL_STATS
*   21 : HUD_COMPONENTS
*   22 : HUD_WEAPONS

These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#\_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
-- @param id int
-- HIDE_HUD_COMPONENT_THIS_FRAME(id)

--- HIDE_LOADING_ON_FADE_THIS_FRAME
-- HIDE_LOADING_ON_FADE_THIS_FRAME()

--- HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME
-- HIDE_MINIMAP_EXTERIOR_MAP_THIS_FRAME()

--- HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME
-- HIDE_MINIMAP_INTERIOR_MAP_THIS_FRAME()

--- HIDE_NUMBER_ON_BLIP
-- @param blip Blip
-- HIDE_NUMBER_ON_BLIP(blip)

--- HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME
-- @param id int
-- HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(id)

--- HUD_FORCE_WEAPON_WHEEL
-- ```
Forces the weapon wheel to show/hide.
```
-- @param show BOOL
-- HUD_FORCE_WEAPON_WHEEL(show)

--- HUD_SET_WEAPON_WHEEL_TOP_SLOT
-- ```
Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
```
-- @param weaponHash Hash
-- HUD_SET_WEAPON_WHEEL_TOP_SLOT(weaponHash)

--- IS_BLIP_FLASHING
-- @param blip Blip
-- IS_BLIP_FLASHING(blip)

--- IS_BLIP_ON_MINIMAP
-- @param blip Blip
-- IS_BLIP_ON_MINIMAP(blip)

--- IS_BLIP_SHORT_RANGE
-- @param blip Blip
-- IS_BLIP_SHORT_RANGE(blip)

--- IS_FLOATING_HELP_TEXT_ON_SCREEN
-- @param hudIndex int
-- IS_FLOATING_HELP_TEXT_ON_SCREEN(hudIndex)

--- IS_FRONTEND_READY_FOR_CONTROL
-- IS_FRONTEND_READY_FOR_CONTROL()

--- IS_HELP_MESSAGE_BEING_DISPLAYED
-- IS_HELP_MESSAGE_BEING_DISPLAYED()

--- IS_HELP_MESSAGE_FADING_OUT
-- IS_HELP_MESSAGE_FADING_OUT()

--- IS_HELP_MESSAGE_ON_SCREEN
-- IS_HELP_MESSAGE_ON_SCREEN()

--- IS_HOVERING_OVER_MISSION_CREATOR_BLIP
-- IS_HOVERING_OVER_MISSION_CREATOR_BLIP()

--- IS_HUD_COMPONENT_ACTIVE
-- ```
Full list of components below  
HUD = 0;  
HUD_WANTED_STARS = 1;  
HUD_WEAPON_ICON = 2;  
HUD_CASH = 3;  
HUD_MP_CASH = 4;  
HUD_MP_MESSAGE = 5;  
HUD_VEHICLE_NAME = 6;  
HUD_AREA_NAME = 7;  
HUD_VEHICLE_CLASS = 8;  
HUD_STREET_NAME = 9;  
HUD_HELP_TEXT = 10;  
HUD_FLOATING_HELP_TEXT_1 = 11;  
HUD_FLOATING_HELP_TEXT_2 = 12;  
HUD_CASH_CHANGE = 13;  
HUD_RETICLE = 14;  
HUD_SUBTITLE_TEXT = 15;  
HUD_RADIO_STATIONS = 16;  
HUD_SAVING_GAME = 17;  
HUD_GAME_STREAM = 18;  
HUD_WEAPON_WHEEL = 19;  
HUD_WEAPON_WHEEL_STATS = 20;  
MAX_HUD_COMPONENTS = 21;  
MAX_HUD_WEAPONS = 22;  
MAX_SCRIPTED_HUD_COMPONENTS = 141;  
```
-- @param id int
-- IS_HUD_COMPONENT_ACTIVE(id)

--- IS_HUD_HIDDEN
-- IS_HUD_HIDDEN()

--- IS_HUD_PREFERENCE_SWITCHED_ON
-- IS_HUD_PREFERENCE_SWITCHED_ON()

--- IS_MESSAGE_BEING_DISPLAYED
-- IS_MESSAGE_BEING_DISPLAYED()

--- IS_MINIMAP_RENDERING
-- IS_MINIMAP_RENDERING()

--- IS_MISSION_CREATOR_BLIP
-- @param blip Blip
-- IS_MISSION_CREATOR_BLIP(blip)

--- IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS
-- **Note:** The buttons need to support mouse (with the `TOGGLE_MOUSE_SUPPORT` scaleform movie method) for it to return `true`.
-- IS_MOUSE_ROLLED_OVER_INSTRUCTIONAL_BUTTONS()

--- IS_MP_GAMER_TAG_ACTIVE
-- @param gamerTagId int
-- IS_MP_GAMER_TAG_ACTIVE(gamerTagId)

--- IS_MP_GAMER_TAG_FREE
-- @param gamerTagId int
-- IS_MP_GAMER_TAG_FREE(gamerTagId)

--- IS_MP_GAMER_TAG_MOVIE_ACTIVE
-- IS_MP_GAMER_TAG_MOVIE_ACTIVE()

--- IS_NAMED_RENDERTARGET_LINKED
-- @param modelHash Hash
-- IS_NAMED_RENDERTARGET_LINKED(modelHash)

--- IS_NAMED_RENDERTARGET_REGISTERED
-- @param name char*
-- IS_NAMED_RENDERTARGET_REGISTERED(name)

--- IS_NAVIGATING_MENU_CONTENT
-- IS_NAVIGATING_MENU_CONTENT()

--- IS_ONLINE_POLICIES_MENU_ACTIVE
-- Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
-- IS_ONLINE_POLICIES_MENU_ACTIVE()

--- IS_PAUSEMAP_IN_INTERIOR_MODE
-- IS_PAUSEMAP_IN_INTERIOR_MODE()

--- IS_PAUSE_MENU_ACTIVE
-- IS_PAUSE_MENU_ACTIVE()

--- IS_PAUSE_MENU_RESTARTING
-- IS_PAUSE_MENU_RESTARTING()

--- IS_RADAR_HIDDEN
-- IS_RADAR_HIDDEN()

--- IS_RADAR_PREFERENCE_SWITCHED_ON
-- IS_RADAR_PREFERENCE_SWITCHED_ON()

--- IS_REPORTUGC_MENU_OPEN
-- IS_REPORTUGC_MENU_OPEN()

--- IS_SCRIPTED_HUD_COMPONENT_ACTIVE
-- @param id int
-- IS_SCRIPTED_HUD_COMPONENT_ACTIVE(id)

--- IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME
-- @param id int
-- IS_SCRIPTED_HUD_COMPONENT_HIDDEN_THIS_FRAME(id)

--- IS_SOCIAL_CLUB_ACTIVE
-- IS_SOCIAL_CLUB_ACTIVE()

--- IS_STREAMING_ADDITIONAL_TEXT
-- @param p0 int
-- IS_STREAMING_ADDITIONAL_TEXT(p0)

--- IS_SUBTITLE_PREFERENCE_SWITCHED_ON
-- IS_SUBTITLE_PREFERENCE_SWITCHED_ON()

--- IS_WARNING_MESSAGE_ACTIVE
-- Returns true if a Warning Message or ReportUGC menu is active.
-- IS_WARNING_MESSAGE_ACTIVE()

--- IS_WAYPOINT_ACTIVE
-- IS_WAYPOINT_ACTIVE()

--- LINK_NAMED_RENDERTARGET
-- @param modelHash Hash
-- LINK_NAMED_RENDERTARGET(modelHash)

--- LOCK_MINIMAP_ANGLE
-- ```
Locks the minimap to the specified angle in integer degrees.  
angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.  
```
-- @param angle int
-- LOCK_MINIMAP_ANGLE(angle)

--- LOCK_MINIMAP_POSITION
-- ```
Locks the minimap to the specified world position.  
```
-- @param x float
-- @param y float
-- LOCK_MINIMAP_POSITION(x, y)

--- OPEN_ONLINE_POLICIES_MENU
-- OPEN_ONLINE_POLICIES_MENU()

--- OPEN_REPORTUGC_MENU
-- ```
Shows a menu for reporting UGC content.
```
-- OPEN_REPORTUGC_MENU()

--- OPEN_SOCIAL_CLUB_MENU
-- Uses the `SOCIAL_CLUB2` scaleform.
-- OPEN_SOCIAL_CLUB_MENU()

--- PAUSE_MENUCEPTION_GO_DEEPER
-- Sets current pause menu page/component to the specified value.
Available page IDs: https://pastebin.com/qxuhwjPT
-- @param pageId int
-- PAUSE_MENUCEPTION_GO_DEEPER(pageId)

--- PAUSE_MENUCEPTION_THE_KICK
-- Forces the Pause Menu to back out of unique pages such as Awards, Unlocks, Key Bindings etc
-- PAUSE_MENUCEPTION_THE_KICK()

--- PAUSE_MENU_ACTIVATE_CONTEXT
-- Activates the specified frontend menu context.

pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.

The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.

The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.

This basically allows you to hide certain menu sections, or things like instructional buttons.

See the old description below for more info.

***

> Seems to add/set the current menu context (to show/hide buttons?)
> Pausemenu.xml:
> `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
> Code:
>
> ```
> if (...) {
>     sub_bbd34(a_0, 0, "FM_BET_HELP");
>     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native
>     UI::OBJECT_DECAL_TOGGLE(${bet_locked});
> } else {
>     sub_bbd34(a_0, 0, "");
>     UI::OBJECT_DECAL_TOGGLE(${bet_available});
>     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native
> }
> ```
>
> OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
> // Old
> Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
-- @param hash Hash - Context name hash.
-- PAUSE_MENU_ACTIVATE_CONTEXT(hash)

--- PAUSE_MENU_DEACTIVATE_CONTEXT
-- @param contextHash Hash
-- PAUSE_MENU_DEACTIVATE_CONTEXT(contextHash)

--- PAUSE_MENU_IS_CONTEXT_ACTIVE
-- @param contextHash Hash
-- PAUSE_MENU_IS_CONTEXT_ACTIVE(contextHash)

--- PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE
-- PAUSE_MENU_IS_CONTEXT_MENU_ACTIVE()

--- PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS
-- Updates instructional buttons in Pause Menu after menu contexts have been toggled. p0 purpose is currently unknown, only 0 is used in scripts.
-- @param p0 int
-- PAUSE_MENU_REDRAW_INSTRUCTIONAL_BUTTONS(p0)

--- PAUSE_MENU_SET_BUSY_SPINNER
-- Sets a loading icon in the pause menu.
-- @param bVisible BOOL - Sets or removes this spinner.
-- @param iColumnID int - Location of this spinner (0 - 17). Indexes can be found in `common:\data\ui\frontend.xml`, `PauseMenu\PersistentData\Spinner\Offsets`. If `bVisible` is `false`, this will be ignored.
-- @param iSpinnerIndex int - Index of this spinner. Can have a maximum of three spinners at a time.
-- PAUSE_MENU_SET_BUSY_SPINNER(bVisible, iColumnID, iSpinnerIndex)

--- PAUSE_MENU_SET_WARN_ON_TAB_CHANGE
-- Shows this warning message when trying to switch pause menu header tabs: https://i.imgur.com/8qmfztu.png
-- @param setWarn BOOL - Wether to show the message or not.
-- PAUSE_MENU_SET_WARN_ON_TAB_CHANGE(setWarn)

--- PAUSE_TOGGLE_FULLSCREEN_MAP
-- Toggles pause menu map rendering.
-- @param enabled BOOL
-- PAUSE_TOGGLE_FULLSCREEN_MAP(enabled)

--- PRELOAD_BUSYSPINNER
-- PRELOAD_BUSYSPINNER()

--- PULSE_BLIP
-- @param blip Blip
-- PULSE_BLIP(blip)

--- REFRESH_WAYPOINT
-- REFRESH_WAYPOINT()

--- REGISTER_NAMED_RENDERTARGET
-- @param name char*
-- @param p1 BOOL
-- REGISTER_NAMED_RENDERTARGET(name, p1)

--- RELEASE_CONTROL_OF_FRONTEND
-- Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.

To disable the keys, use [`0xEC9264727EEC0F28`](#\_0xEC9264727EEC0F28).
-- RELEASE_CONTROL_OF_FRONTEND()

--- RELEASE_NAMED_RENDERTARGET
-- @param name char*
-- RELEASE_NAMED_RENDERTARGET(name)

--- RELOAD_MAP_MENU
-- Forces the map menu to reload.
-- RELOAD_MAP_MENU()

--- REMOVE_BLIP
-- Removes the blip from your map.

**Note:** This function only works on the script that created the blip, if you wish to remove blips created by other scripts, see [`SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT`](#\_0x86A652570E5F25DD).
-- @param blip Blip* - Blip handle to remove.
-- REMOVE_BLIP(blip)

--- REMOVE_MP_GAMER_TAG
-- Removes the gamer tag associated with the provided ID. This does not happen instantly. Use [IS_MP_GAMER_TAG_FREE](#\_0x595B5178E412E199) to determine when the ID is free for reuse.
-- @param gamerTagId int - A player ID with a gamer tag or a fake gamer tag ID.
-- REMOVE_MP_GAMER_TAG(gamerTagId)

--- REMOVE_MULTIPLAYER_BANK_CASH
-- REMOVE_MULTIPLAYER_BANK_CASH()

--- REMOVE_MULTIPLAYER_HUD_CASH
-- ```
Removes multiplayer cash hud each frame  
```
-- REMOVE_MULTIPLAYER_HUD_CASH()

--- REMOVE_MULTIPLAYER_WALLET_CASH
-- REMOVE_MULTIPLAYER_WALLET_CASH()

--- REPLACE_HUD_COLOUR
-- Changes the hud color at a given index (hudColorIndex) by another one (hudColorIndex2).

HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
-- @param hudColorIndex int
-- @param hudColorIndex2 int
-- REPLACE_HUD_COLOUR(hudColorIndex, hudColorIndex2)

--- REPLACE_HUD_COLOUR_WITH_RGBA
-- Hud colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
-- @param hudColorIndex int
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- REPLACE_HUD_COLOUR_WITH_RGBA(hudColorIndex, r, g, b, a)

--- REQUEST_ADDITIONAL_TEXT
-- ```
Request a gxt into the passed slot.  
```
-- @param gxt char*
-- @param slot int
-- REQUEST_ADDITIONAL_TEXT(gxt, slot)

--- REQUEST_ADDITIONAL_TEXT_FOR_DLC
-- @param gxt char*
-- @param slot int
-- REQUEST_ADDITIONAL_TEXT_FOR_DLC(gxt, slot)

--- RESET_GLOBAL_ACTIONSCRIPT_FLAG
-- @param flagIndex int
-- RESET_GLOBAL_ACTIONSCRIPT_FLAG(flagIndex)

--- RESET_HUD_COMPONENT_VALUES
-- @param id int
-- RESET_HUD_COMPONENT_VALUES(id)

--- RESET_RETICULE_VALUES
-- RESET_RETICULE_VALUES()

--- RESTART_FRONTEND_MENU
-- Changes the current frontend menu to the desired frontend menu version.
-- @param menuHash Hash - Hash of the frontend menu. See [`ACTIVATE_FRONTEND_MENU`](#\_0xEF01D36B9C9D0C7B) for the list of available menus.
-- @param highlightedTab int - Menu ID (from PauseMenuLUT (in pause_menu_sp_content.gfx files), but the value - 1000) of which tab to have highlighted on the header, or -1.
-- RESTART_FRONTEND_MENU(menuHash, highlightedTab)

--- SET_ABILITY_BAR_VALUE
-- @param value float
-- @param maxValue float
-- SET_ABILITY_BAR_VALUE(value, maxValue)

--- SET_ALLOW_COMMA_ON_TEXT_INPUT
-- **NOTE:** This must be called before you open the text input box.
-- @param allow BOOL - Toggles if the comma can be used in conjuction with the `filename` text input box type.
-- SET_ALLOW_COMMA_ON_TEXT_INPUT(allow)

--- SET_BIGMAP_ACTIVE
-- Toggles the big minimap state like in GTA:Online.

To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#\_0xFFF65C63).
-- @param toggleBigMap BOOL - Enable or disable the expanded minimap.
-- @param showFullMap BOOL - Enable or disable the full map from being shown on the minimap, requires p0 to be true.
-- SET_BIGMAP_ACTIVE(toggleBigMap, showFullMap)

--- SET_BLIP_ALPHA
-- ```
Sets alpha-channel for blip color.
Example:
Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);
HUD::SET_BLIP_COLOUR(blip , 3);
HUD::SET_BLIP_ALPHA(blip , 64);
```
-- @param blip Blip
-- @param alpha int
-- SET_BLIP_ALPHA(blip, alpha)

--- SET_BLIP_AS_FRIENDLY
-- Allows the user to set a blip as friendly or enemy based on the toggle.
-- @param blip Blip - The blip handle
-- @param toggle BOOL - True for friendly, false for enemy
-- SET_BLIP_AS_FRIENDLY(blip, toggle)

--- SET_BLIP_AS_MISSION_CREATOR_BLIP
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_AS_MISSION_CREATOR_BLIP(blip, toggle)

--- SET_BLIP_AS_SHORT_RANGE
-- Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
-- @param blip Blip - The blip handle.
-- @param toggle BOOL - True to only display the blip as 'short range', false to display the blip from a longer distance.
-- SET_BLIP_AS_SHORT_RANGE(blip, toggle)

--- SET_BLIP_BRIGHT
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_BRIGHT(blip, toggle)

--- SET_BLIP_CATEGORY
-- Examples result:

![](https://i.imgur.com/skY6vAJ.png)

**index:**

```
1 = No distance shown in legend
2 = Distance shown in legend
7 = "Other Players" category, also shows distance in legend
10 = "Property" category
11 = "Owned Property" category
```

Any other value behaves like `index = 1`, `index` wraps around after 255

Blips with categories `7`, `10` or `11` will all show under the specific categories listing in the map legend, regardless of sprite or name.

**Legend entries**

| index | Legend entry | Label |
| --- | --- | --- |
| 7 | Other Players | `BLIP_OTHPLYR` |
| 10 | Property | `BLIP_PROPCAT` |
| 11 | Owned Property | `BLIP_APARTCAT` |
-- @param blip Blip - The blip to change the category index of
-- @param index int - The category index to change to
-- SET_BLIP_CATEGORY(blip, index)

--- SET_BLIP_COLOUR
-- @param blip Blip - The blip handle to set the color of
-- @param color int - This can be a hex color code, or a [blip color](https://docs.fivem.net/docs/game-references/blips/#blip-colors).
-- SET_BLIP_COLOUR(blip, color)

--- SET_BLIP_COORDS
-- @param blip Blip
-- @param posX float
-- @param posY float
-- @param posZ float
-- SET_BLIP_COORDS(blip, posX, posY, posZ)

--- SET_BLIP_DISPLAY
-- **displayId Behaviour**

| display ID 	| Behaviour                                                   	|
|------------	|-------------------------------------------------------------	|
| 0          	| Doesn't show up, ever, anywhere.                            	|
| 1          	| Doesn't show up, ever, anywhere.                            	|
| 2          	| Shows on both main map and minimap. (Selectable on map)     	|
| 3          	| Shows on main map only. (Selectable on map)                 	|
| 4          	| Shows on main map only. (Selectable on map)                 	|
| 5          	| Shows on minimap only.                                      	|
| 6          	| Shows on both main map and minimap. (Selectable on map)     	|
| 7          	| Doesn't show up, ever, anywhere.                            	|
| 8          	| Shows on both main map and minimap. (Not selectable on map) 	|
| 9          	| Shows on minimap only.                                      	|
| 10         	| Shows on both main map and minimap. (Not selectable on map) 	|

Anything higher than 10 seems to be exactly the same as 10.

Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
-- @param blip Blip
-- @param displayId int
-- SET_BLIP_DISPLAY(blip, displayId)

--- SET_BLIP_FADE
-- @param blip Blip
-- @param opacity int
-- @param duration int
-- SET_BLIP_FADE(blip, opacity, duration)

--- SET_BLIP_FLASHES
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_FLASHES(blip, toggle)

--- SET_BLIP_FLASHES_ALTERNATE
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_FLASHES_ALTERNATE(blip, toggle)

--- SET_BLIP_FLASH_INTERVAL
-- Sets the interval in milliseconds before flashing the blip.
-- @param blip Blip - The blip to change flashing interval
-- @param interval int - Interval in milliseconds before flashing the blip
-- SET_BLIP_FLASH_INTERVAL(blip, interval)

--- SET_BLIP_FLASH_TIMER
-- Flashes blip for time in milliseconds before stopping.
-- @param blip Blip - The blip to start flashing
-- @param duration int - Time in milliseconds to flash the blip before stopping
-- SET_BLIP_FLASH_TIMER(blip, duration)

--- SET_BLIP_HIDDEN_ON_LEGEND
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_HIDDEN_ON_LEGEND(blip, toggle)

--- SET_BLIP_HIGH_DETAIL
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_HIGH_DETAIL(blip, toggle)

--- SET_BLIP_NAME_FROM_TEXT_FILE
-- ```
Doesn't work if the label text of gxtEntry is >= 80.  
```
-- @param blip Blip
-- @param gxtEntry char*
-- SET_BLIP_NAME_FROM_TEXT_FILE(blip, gxtEntry)

--- SET_BLIP_NAME_TO_PLAYER_NAME
-- @param blip Blip
-- @param player Player
-- SET_BLIP_NAME_TO_PLAYER_NAME(blip, player)

--- SET_BLIP_PRIORITY
-- ```
See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935  
```
-- @param blip Blip
-- @param priority int
-- SET_BLIP_PRIORITY(blip, priority)

--- SET_BLIP_ROTATION
-- ```
After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
```
-- @param blip Blip
-- @param rotation int
-- SET_BLIP_ROTATION(blip, rotation)

--- SET_BLIP_ROUTE
-- ```
Enable / disable showing route for the Blip-object.  
```
-- @param blip Blip
-- @param enabled BOOL
-- SET_BLIP_ROUTE(blip, enabled)

--- SET_BLIP_ROUTE_COLOUR
-- @param blip Blip
-- @param colour int
-- SET_BLIP_ROUTE_COLOUR(blip, colour)

--- SET_BLIP_SCALE
-- @param blip Blip
-- @param scale float
-- SET_BLIP_SCALE(blip, scale)

--- SET_BLIP_SECONDARY_COLOUR
-- @param blip Blip
-- @param r int
-- @param g int
-- @param b int
-- SET_BLIP_SECONDARY_COLOUR(blip, r, g, b)

--- SET_BLIP_SHOW_CONE
-- ```
NativeDB Added Parameter 3: Any p2
```
-- @param blip Blip
-- @param toggle BOOL
-- SET_BLIP_SHOW_CONE(blip, toggle)

--- SET_BLIP_SPRITE
-- Sets the displayed sprite for a specific blip.

There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
-- @param blip Blip - The blip to change.
-- @param spriteId int - The sprite ID to set.
-- SET_BLIP_SPRITE(blip, spriteId)

--- SET_COLOUR_OF_NEXT_TEXT_COMPONENT
-- @param hudColor int
-- SET_COLOUR_OF_NEXT_TEXT_COMPONENT(hudColor)

--- SET_CUSTOM_MP_HUD_COLOR
-- Set a custom color for the MP HUD, providing a way to customize the HUD's appearance similar to character color changes in MP.

```cpp
enum eHudColours {
    HUD_COLOUR_PURE_WHITE = 0,
    HUD_COLOUR_WHITE = 1,
    HUD_COLOUR_BLACK = 2,
    HUD_COLOUR_GREY = 3,
    HUD_COLOUR_GREYLIGHT = 4,
    HUD_COLOUR_GREYDARK = 5,
    HUD_COLOUR_RED = 6,
    HUD_COLOUR_REDLIGHT = 7,
    HUD_COLOUR_REDDARK = 8,
    HUD_COLOUR_BLUE = 9,
    HUD_COLOUR_BLUELIGHT = 10,
    HUD_COLOUR_BLUEDARK = 11,
    HUD_COLOUR_YELLOW = 12,
    HUD_COLOUR_YELLOWLIGHT = 13,
    HUD_COLOUR_YELLOWDARK = 14,
    HUD_COLOUR_ORANGE = 15,
    HUD_COLOUR_ORANGELIGHT = 16,
    HUD_COLOUR_ORANGEDARK = 17,
    HUD_COLOUR_GREEN = 18,
    HUD_COLOUR_GREENLIGHT = 19,
    HUD_COLOUR_GREENDARK = 20,
    HUD_COLOUR_PURPLE = 21,
    HUD_COLOUR_PURPLELIGHT = 22,
    HUD_COLOUR_PURPLEDARK = 23,
    HUD_COLOUR_PINK = 24,
    HUD_COLOUR_STAR = 25,
    HUD_COLOUR_STARLIGHT = 26,
    HUD_COLOUR_STARDARK = 27,
    HUD_COLOUR_NET_PLAYER1 = 28,
    HUD_COLOUR_NET_PLAYER2 = 29,
    HUD_COLOUR_NET_PLAYER3 = 30,
    HUD_COLOUR_NET_PLAYER4 = 31,
    HUD_COLOUR_NET_PLAYER5 = 32,
    HUD_COLOUR_NET_PLAYER6 = 33,
    HUD_COLOUR_NET_PLAYER7 = 34,
    HUD_COLOUR_NET_PLAYER8 = 35,
    HUD_COLOUR_NET_PLAYER9 = 36,
    HUD_COLOUR_NET_PLAYER10 = 37,
    HUD_COLOUR_NET_PLAYER11 = 38,
    HUD_COLOUR_NET_PLAYER12 = 39,
    HUD_COLOUR_NET_PLAYER13 = 40,
    HUD_COLOUR_NET_PLAYER14 = 41,
    HUD_COLOUR_NET_PLAYER15 = 42,
    HUD_COLOUR_NET_PLAYER16 = 43,
    HUD_COLOUR_NET_PLAYER17 = 44,
    HUD_COLOUR_NET_PLAYER18 = 45,
    HUD_COLOUR_NET_PLAYER19 = 46,
    HUD_COLOUR_NET_PLAYER20 = 47,
    HUD_COLOUR_NET_PLAYER21 = 48,
    HUD_COLOUR_NET_PLAYER22 = 49,
    HUD_COLOUR_NET_PLAYER23 = 50,
    HUD_COLOUR_NET_PLAYER24 = 51,
    HUD_COLOUR_NET_PLAYER25 = 52,
    HUD_COLOUR_NET_PLAYER26 = 53,
    HUD_COLOUR_NET_PLAYER27 = 54,
    HUD_COLOUR_NET_PLAYER28 = 55,
    HUD_COLOUR_NET_PLAYER29 = 56,
    HUD_COLOUR_NET_PLAYER30 = 57,
    HUD_COLOUR_NET_PLAYER31 = 58,
    HUD_COLOUR_NET_PLAYER32 = 59,
    HUD_COLOUR_SIMPLEBLIP_DEFAULT = 60,
    HUD_COLOUR_MENU_BLUE = 61,
    HUD_COLOUR_MENU_GREY_LIGHT = 62,
    HUD_COLOUR_MENU_BLUE_EXTRA_DARK = 63,
    HUD_COLOUR_MENU_YELLOW = 64,
    HUD_COLOUR_MENU_YELLOW_DARK = 65,
    HUD_COLOUR_MENU_GREEN = 66,
    HUD_COLOUR_MENU_GREY = 67,
    HUD_COLOUR_MENU_GREY_DARK = 68,
    HUD_COLOUR_MENU_HIGHLIGHT = 69,
    HUD_COLOUR_MENU_STANDARD = 70,
    HUD_COLOUR_MENU_DIMMED = 71,
    HUD_COLOUR_MENU_EXTRA_DIMMED = 72,
    HUD_COLOUR_BRIEF_TITLE = 73,
    HUD_COLOUR_MID_GREY_MP = 74,
    HUD_COLOUR_NET_PLAYER1_DARK = 75,
    HUD_COLOUR_NET_PLAYER2_DARK = 76,
    HUD_COLOUR_NET_PLAYER3_DARK = 77,
    HUD_COLOUR_NET_PLAYER4_DARK = 78,
    HUD_COLOUR_NET_PLAYER5_DARK = 79,
    HUD_COLOUR_NET_PLAYER6_DARK = 80,
    HUD_COLOUR_NET_PLAYER7_DARK = 81,
    HUD_COLOUR_NET_PLAYER8_DARK = 82,
    HUD_COLOUR_NET_PLAYER9_DARK = 83,
    HUD_COLOUR_NET_PLAYER10_DARK = 84,
    HUD_COLOUR_NET_PLAYER11_DARK = 85,
    HUD_COLOUR_NET_PLAYER12_DARK = 86,
    HUD_COLOUR_NET_PLAYER13_DARK = 87,
    HUD_COLOUR_NET_PLAYER14_DARK = 88,
    HUD_COLOUR_NET_PLAYER15_DARK = 89,
    HUD_COLOUR_NET_PLAYER16_DARK = 90,
    HUD_COLOUR_NET_PLAYER17_DARK = 91,
    HUD_COLOUR_NET_PLAYER18_DARK = 92,
    HUD_COLOUR_NET_PLAYER19_DARK = 93,
    HUD_COLOUR_NET_PLAYER20_DARK = 94,
    HUD_COLOUR_NET_PLAYER21_DARK = 95,
    HUD_COLOUR_NET_PLAYER22_DARK = 96,
    HUD_COLOUR_NET_PLAYER23_DARK = 97,
    HUD_COLOUR_NET_PLAYER24_DARK = 98,
    HUD_COLOUR_NET_PLAYER25_DARK = 99,
    HUD_COLOUR_NET_PLAYER26_DARK = 100,
    HUD_COLOUR_NET_PLAYER27_DARK = 101,
    HUD_COLOUR_NET_PLAYER28_DARK = 102,
    HUD_COLOUR_NET_PLAYER29_DARK = 103,
    HUD_COLOUR_NET_PLAYER30_DARK = 104,
    HUD_COLOUR_NET_PLAYER31_DARK = 105,
    HUD_COLOUR_NET_PLAYER32_DARK = 106,
    HUD_COLOUR_BRONZE = 107,
    HUD_COLOUR_SILVER = 108,
    HUD_COLOUR_GOLD = 109,
    HUD_COLOUR_PLATINUM = 110,
    HUD_COLOUR_GANG1 = 111,
    HUD_COLOUR_GANG2 = 112,
    HUD_COLOUR_GANG3 = 113,
    HUD_COLOUR_GANG4 = 114,
    HUD_COLOUR_SAME_CREW = 115,
    HUD_COLOUR_FREEMODE = 116,
    HUD_COLOUR_PAUSE_BG = 117,
    HUD_COLOUR_FRIENDLY = 118,
    HUD_COLOUR_ENEMY = 119,
    HUD_COLOUR_LOCATION = 120,
    HUD_COLOUR_PICKUP = 121,
    HUD_COLOUR_PAUSE_SINGLEPLAYER = 122,
    HUD_COLOUR_FREEMODE_DARK = 123,
    HUD_COLOUR_INACTIVE_MISSION = 124,
    HUD_COLOUR_DAMAGE = 125,
    HUD_COLOUR_PINKLIGHT = 126,
    HUD_COLOUR_PM_MITEM_HIGHLIGHT = 127,
    HUD_COLOUR_SCRIPT_VARIABLE = 128,
    HUD_COLOUR_YOGA = 129,
    HUD_COLOUR_TENNIS = 130,
    HUD_COLOUR_GOLF = 131,
    HUD_COLOUR_SHOOTING_RANGE = 132,
    HUD_COLOUR_FLIGHT_SCHOOL = 133,
    HUD_COLOUR_NORTH_BLUE = 134,
    HUD_COLOUR_SOCIAL_CLUB = 135,
    HUD_COLOUR_PLATFORM_BLUE = 136,
    HUD_COLOUR_PLATFORM_GREEN = 137,
    HUD_COLOUR_PLATFORM_GREY = 138,
    HUD_COLOUR_FACEBOOK_BLUE = 139,
    HUD_COLOUR_INGAME_BG = 140,
    HUD_COLOUR_DARTS = 141,
    HUD_COLOUR_WAYPOINT = 142,
    HUD_COLOUR_MICHAEL = 143,
    HUD_COLOUR_FRANKLIN = 144,
    HUD_COLOUR_TREVOR = 145,
    HUD_COLOUR_GOLF_P1 = 146,
    HUD_COLOUR_GOLF_P2 = 147,
    HUD_COLOUR_GOLF_P3 = 148,
    HUD_COLOUR_GOLF_P4 = 149,
    HUD_COLOUR_WAYPOINTLIGHT = 150,
    HUD_COLOUR_WAYPOINTDARK = 151,
    HUD_COLOUR_PANEL_LIGHT = 152,
    HUD_COLOUR_MICHAEL_DARK = 153,
    HUD_COLOUR_FRANKLIN_DARK = 154,
    HUD_COLOUR_TREVOR_DARK = 155,
    HUD_COLOUR_OBJECTIVE_ROUTE = 156,
    HUD_COLOUR_PAUSEMAP_TINT = 157,
    HUD_COLOUR_PAUSE_DESELECT = 158,
    HUD_COLOUR_PM_WEAPONS_PURCHASABLE = 159,
    HUD_COLOUR_PM_WEAPONS_LOCKED = 160,
    HUD_COLOUR_END_SCREEN_BG = 161,
    HUD_COLOUR_CHOP = 162,
    HUD_COLOUR_PAUSEMAP_TINT_HALF = 163,
    HUD_COLOUR_NORTH_BLUE_OFFICIAL = 164,
    HUD_COLOUR_SCRIPT_VARIABLE_2 = 165,
    HUD_COLOUR_H = 166,
    HUD_COLOUR_HDARK = 167,
    HUD_COLOUR_T = 168,
    HUD_COLOUR_TDARK = 169,
    HUD_COLOUR_HSHARD = 170,
    HUD_COLOUR_CONTROLLER_MICHAEL = 171 
    HUD_COLOUR_CONTROLLER_FRANKLIN = 172 
    HUD_COLOUR_CONTROLLER_TREVOR = 173 
    HUD_COLOUR_CONTROLLER_CHOP = 174,
    HUD_COLOUR_VIDEO_EDITOR_VIDEO = 175,
    HUD_COLOUR_VIDEO_EDITOR_AUDIO = 176,
    HUD_COLOUR_VIDEO_EDITOR_TEXT = 177,
    HUD_COLOUR_HB_BLUE = 178,
    HUD_COLOUR_HB_YELLOW = 179,
    HUD_COLOUR_VIDEO_EDITOR_SCORE = 180,
    HUD_COLOUR_VIDEO_EDITOR_AUDIO_FADEOUT = 181,
    HUD_COLOUR_VIDEO_EDITOR_TEXT_FADEOUT = 182,
    HUD_COLOUR_VIDEO_EDITOR_SCORE_FADEOUT = 183,
    HUD_COLOUR_HEIST_BACKGROUND = 184,
    HUD_COLOUR_VIDEO_EDITOR_AMBIENT = 185,
    HUD_COLOUR_VIDEO_EDITOR_AMBIENT_FADEOUT = 186,
    HUD_COLOUR_GANG_BOSS = 187,
    HUD_COLOUR_GOON = 188,
    HUD_COLOUR_BOSS = 189,
    HUD_COLOUR_LOW_FLOW = 190,
    HUD_COLOUR_LOW_FLOW_DARK = 191,
    HUD_COLOUR_G1 = 192,
    HUD_COLOUR_G2 = 193,
    HUD_COLOUR_G3 = 194,
    HUD_COLOUR_G4 = 195,
    HUD_COLOUR_G5 = 196,
    HUD_COLOUR_G6 = 197,
    HUD_COLOUR_G7 = 198,
    HUD_COLOUR_G8 = 199,
    HUD_COLOUR_G9 = 200,
    HUD_COLOUR_G10 = 201,
    HUD_COLOUR_G11 = 202,
    HUD_COLOUR_G12 = 203,
    HUD_COLOUR_G13 = 204,
    HUD_COLOUR_G14 = 205,
    HUD_COLOUR_G15 = 206,
    HUD_COLOUR_ADVERSARY = 207,
    HUD_COLOUR_DEGEN_RED = 208,
    HUD_COLOUR_DEGEN_YELLOW = 209,
    HUD_COLOUR_DEGEN_GREEN = 210,
    HUD_COLOUR_DEGEN_CYAN = 211,
    HUD_COLOUR_DEGEN_BLUE = 212,
    HUD_COLOUR_DEGEN_MAGENTA = 213,
    HUD_COLOUR_STUNT_1 = 214,
    HUD_COLOUR_STUNT_2 = 215,
    HUD_COLOUR_SPECIAL_RACE_SERIES = 216 
    HUD_COLOUR_SPECIAL_RACE_SERIES_DARK = 217,
    HUD_COLOUR_CS = 218 
    HUD_COLOUR_CS_DARK = 219,
    HUD_COLOUR_TECH_GREEN = 220,
    HUD_COLOUR_TECH_GREEN_DARK = 221,
    HUD_COLOUR_TECH_RED = 222,
    HUD_COLOUR_TECH_GREEN_VERY_DARK = 223,
    HUD_COLOUR_PLACEHOLDER_01 = 224,
    HUD_COLOUR_PLACEHOLDER_02 = 225,
    HUD_COLOUR_PLACEHOLDER_03 = 226,
    HUD_COLOUR_PLACEHOLDER_04 = 227,
    HUD_COLOUR_PLACEHOLDER_05 = 228,
    HUD_COLOUR_PLACEHOLDER_06 = 229,
    HUD_COLOUR_PLACEHOLDER_07 = 230,
    HUD_COLOUR_PLACEHOLDER_08 = 231,
    HUD_COLOUR_PLACEHOLDER_09 = 232,
    HUD_COLOUR_PLACEHOLDER_10 = 233,
    HUD_COLOUR_JUNK_ENERGY = 234
};
```

```
NativeDB Introduced: 2545
```
-- @param hudColorId int - The ID of the custom HUD color. Use -1 (`HUD_COLOUR_INVALID`) to clear the custom color. Refer to the `eHudColours` enum for valid color IDs.
-- SET_CUSTOM_MP_HUD_COLOR(hudColorId)

--- SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME
-- Overrides the position of the main player blip for the current frame.
-- @param x float - X coord of the position.
-- @param y float - Y coord of the position.
-- SET_FAKE_PAUSEMAP_PLAYER_POSITION_THIS_FRAME(x, y)

--- SET_FLOATING_HELP_TEXT_SCREEN_POSITION
-- @param hudIndex int
-- @param x float
-- @param y float
-- SET_FLOATING_HELP_TEXT_SCREEN_POSITION(hudIndex, x, y)

--- SET_FLOATING_HELP_TEXT_STYLE
-- ### Arrow Positions

*   0 = Off / No arrow
*   1 = Top
*   2 = Left
*   3 = Bottom
*   4 = Right

### Note

Any numeric value greater than 4 will result in a right arrow (Index 4)

### Important

Needs to be called every frame

![Preview of the provided example code](https://forum.cfx.re/uploads/default/original/4X/7/f/3/7f319bc93c3a00b8829bd4ac8dddc235fbf3a9ef.png)
-- @param hudIndex int - The hud index for the floating help message
-- @param style int - Value 0 won't show an arrow at all. Values 1, 2 and -2 will display an arrow.
-- @param hudColor int - https://docs.fivem.net/docs/game-references/hud-colors/
-- @param alpha int - Value for the help box opacity, from 0-255. Anything greater will simply ignore the alpha value. Always 191 in R\* scripts.
-- @param arrowPosition int - Used to set the arrow positon. No value will hide the arrow
-- @param boxOffset int - Offset for the floating help box. Note: Arrow stays fixed
-- SET_FLOATING_HELP_TEXT_STYLE(hudIndex, style, hudColor, alpha, arrowPosition, boxOffset)

--- SET_FLOATING_HELP_TEXT_TO_ENTITY
-- @param hudIndex int
-- @param entity Entity
-- @param offsetX float
-- @param offsetY float
-- SET_FLOATING_HELP_TEXT_TO_ENTITY(hudIndex, entity, offsetX, offsetY)

--- SET_FLOATING_HELP_TEXT_WORLD_POSITION
-- @param hudIndex int
-- @param x float
-- @param y float
-- @param z float
-- SET_FLOATING_HELP_TEXT_WORLD_POSITION(hudIndex, x, y, z)

--- SET_FRONTEND_ACTIVE
-- @param active BOOL
-- SET_FRONTEND_ACTIVE(active)

--- SET_GPS_CUSTOM_ROUTE_RENDER
-- @param toggle BOOL
-- @param radarThickness int - The width of the GPS route on the radar
-- @param mapThickness int - The width of the GPS route on the map
-- SET_GPS_CUSTOM_ROUTE_RENDER(toggle, radarThickness, mapThickness)

--- SET_GPS_FLAGS
-- ```
Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
Doesn't seem like the flags are actually read by the game at all.
```
-- @param p0 int
-- @param p1 float
-- SET_GPS_FLAGS(p0, p1)

--- SET_GPS_FLASHES
-- @param toggle BOOL
-- SET_GPS_FLASHES(toggle)

--- SET_GPS_MULTI_ROUTE_RENDER
-- @param toggle BOOL
-- SET_GPS_MULTI_ROUTE_RENDER(toggle)

--- SET_HEALTH_HUD_DISPLAY_VALUES
-- @param health int
-- @param capacity int
-- @param wasAdded BOOL
-- SET_HEALTH_HUD_DISPLAY_VALUES(health, capacity, wasAdded)

--- SET_HUD_COMPONENT_POSITION
-- @param id int
-- @param x float
-- @param y float
-- SET_HUD_COMPONENT_POSITION(id, x, y)

--- SET_MAX_ARMOUR_HUD_DISPLAY
-- @param maximumValue int
-- SET_MAX_ARMOUR_HUD_DISPLAY(maximumValue)

--- SET_MAX_HEALTH_HUD_DISPLAY
-- @param maximumValue int
-- SET_MAX_HEALTH_HUD_DISPLAY(maximumValue)

--- SET_MINIMAP_BLOCK_WAYPOINT
-- @param toggle BOOL
-- SET_MINIMAP_BLOCK_WAYPOINT(toggle)

--- SET_MINIMAP_COMPONENT
-- This native is used to colorize/toggle certain map components like the army base.

Component IDs 6 through 14 are used by the freemode event King of the Castle in GTA Online.

### An incomplete list of component IDs:

*   **0**: Los Santos International Airport yellow runway markers
*   **1**: Sandy Shores Airfield yellow runway markers
*   **2**: McKenzie Field yellow runway markers
*   **6**: Vespucci Beach lifeguard building
*   **7**: Top level zone of Alien Camp (Hippy Camp)
*   **8**: Paleto Bay fire station drill tower
*   **9** Land Act Dam tower
*   **10** Pala Springs Aerial Tramway
*   **11** Galileo Observatory power unit
*   **12** Small zone (empty "interior") near Central Los Santos Medical Center
*   **13** Richman Mansion grotto
*   **14** 2 Alien Camp (Hippy Camp) circles
*   **15** Fort Zancudo
-- @param componentID int - The component ID to change.
-- @param toggle BOOL - True to enable/colorize, false to disable.
-- @param hudColor int - The hudcolor index, the list of hud colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/).
-- SET_MINIMAP_COMPONENT(componentID, toggle, hudColor)

--- SET_MINIMAP_FOW_REVEAL_COORDINATE
-- @param x float
-- @param y float
-- @param z float
-- SET_MINIMAP_FOW_REVEAL_COORDINATE(x, y, z)

--- SET_MINIMAP_GOLF_COURSE
-- Not much is known so far on what it does *exactly*.
All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.

You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.

Use [`SET_MINIMAP_GOLF_COURSE_OFF()`](#\_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
-- @param hole int - The ID of the hole to draw on the map. ID starts with 1 for hole 1, 2 for hole 2, etc. 0 disables the golf map behaviour.
-- SET_MINIMAP_GOLF_COURSE(hole)

--- SET_MINIMAP_GOLF_COURSE_OFF
-- SET_MINIMAP_GOLF_COURSE_OFF()

--- SET_MINIMAP_HIDE_FOW
-- ```
If true, the entire map will be revealed.
```
-- @param toggle BOOL
-- SET_MINIMAP_HIDE_FOW(toggle)

--- SET_MINIMAP_IN_PROLOGUE
-- ```
Toggles the North Yankton map
```
-- @param toggle BOOL
-- SET_MINIMAP_IN_PROLOGUE(toggle)

--- SET_MINIMAP_IN_SPECTATOR_MODE
-- @param toggle BOOL
-- @param ped Ped
-- SET_MINIMAP_IN_SPECTATOR_MODE(toggle, ped)

--- SET_MINIMAP_SONAR_SWEEP
-- Enables or disables the sonar sweep animation on the minimap.

```
NativeDB Introduced: v2189
```
-- @param toggle BOOL - A boolean value where `true` activates the sonar sweep animation on the minimap, and `false` turns it off.
-- SET_MINIMAP_SONAR_SWEEP(toggle)

--- SET_MISSION_NAME
-- @param p0 BOOL
-- @param name char*
-- SET_MISSION_NAME(p0, name)

--- SET_MOUSE_CURSOR_STYLE
-- Changes the mouse style.

```cpp
enum eMousePointerStyle {
	ARROW = 1,
	ARROW_DIMMED = 2,
	HAND_OPEN = 3,
	HAND_GRAB = 4,
	HAND_MIDDLE_FINGER = 5,
	ARROW_LEFT = 6,
	ARROW_RIGHT = 7,
	ARROW_UP = 8,
	ARROW_DOWN = 9,
	ARROW_TRIMMING = 10,
	ARROW_PLUS = 11,
	ARROW_MINUS = 12
};
```
-- @param style int - Which sprite to change to, see declared enum `eMousePointerStyle`.
-- SET_MOUSE_CURSOR_STYLE(style)

--- SET_MOUSE_CURSOR_THIS_FRAME
-- Sets the mouse pointer to be active on current frame.
-- SET_MOUSE_CURSOR_THIS_FRAME()

--- SET_MOUSE_CURSOR_VISIBLE
-- Toggles the visibility of the cursor. Do note that if the game loses focus and then regains it, the cursor will become visible again.
-- @param isVisible BOOL - If the mouse cursor is visible
-- SET_MOUSE_CURSOR_VISIBLE(isVisible)

--- SET_MP_GAMER_TAG_ALPHA
-- ```
Sets flag's sprite transparency. 0-255.  
```
-- @param gamerTagId int
-- @param component int
-- @param alpha int
-- SET_MP_GAMER_TAG_ALPHA(gamerTagId, component, alpha)

--- SET_MP_GAMER_TAG_BIG_TEXT
-- @param gamerTagId int
-- @param string char*
-- SET_MP_GAMER_TAG_BIG_TEXT(gamerTagId, string)

--- SET_MP_GAMER_TAG_COLOUR
-- Sets a gamer tag's component colour
-- @param gamerTagId int - a gamerTagId obtained using  for example: [`CREATE_FAKE_MP_GAMER_TAG`](#\_0xBFEFE3321A3F5015).
-- @param component int - a component id, see the full list here: [link](https://docs.fivem.net/docs/game-references/gamer-tags/#components-list)
-- @param hudColorIndex int - a hud color index, see the full list here: [link](https://docs.fivem.net/docs/game-references/hud-colors/)
-- SET_MP_GAMER_TAG_COLOUR(gamerTagId, component, hudColorIndex)

--- SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR
-- Should be enabled as component (2). Has 0 alpha by default.
-- @param gamerTagId int - a gamerTagId obtained using  for example: [CREATE_FAKE_MP_GAMER_TAG](https://runtime.fivem.net/doc/natives/?\_0xBFEFE3321A3F5015)
-- @param hudColorIndex int - a hud color index, see the full list here: [link](https://docs.fivem.net/docs/game-references/hud-colors/)
-- SET_MP_GAMER_TAG_HEALTH_BAR_COLOUR(gamerTagId, hudColorIndex)

--- SET_MP_GAMER_TAG_NAME
-- @param gamerTagId int
-- @param string char*
-- SET_MP_GAMER_TAG_NAME(gamerTagId, string)

--- SET_MP_GAMER_TAG_VISIBILITY
-- ```cpp
enum eMpGamerTagComponent
{
	MP_TAG_GAMER_NAME = 0,
	MP_TAG_CREW_TAG = 1,
	MP_TAG_HEALTH_ARMOUR = 2,
	MP_TAG_BIG_TEXT = 3,
	MP_TAG_AUDIO_ICON = 4,
	MP_TAG_USING_MENU = 5,
	MP_TAG_PASSIVE_MODE = 6,
	MP_TAG_WANTED_STARS = 7,
	MP_TAG_DRIVER = 8,
	MP_TAG_CO_DRIVER = 9,
	MP_TAG_TAGGED = 10,
	MP_TAG_GAMER_NAME_NEARBY = 11,
	MP_TAG_ARROW = 12,
	MP_TAG_PACKAGES = 13,
	MP_TAG_INV_IF_PED_FOLLOWING = 14,
	MP_TAG_RANK_TEXT = 15,
	MP_TAG_TYPING = 16,
	MP_TAG_BAG_LARGE = 17,
	MP_TAG_ARROW = 18,
	MP_TAG_GANG_CEO = 19,
	MP_TAG_GANG_BIKER = 20,
	MP_TAG_BIKER_ARROW = 21,
	MP_TAG_MC_ROLE_PRESIDENT = 22,
	MP_TAG_MC_ROLE_VICE_PRESIDENT = 23,
	MP_TAG_MC_ROLE_ROAD_CAPTAIN = 24,
	MP_TAG_MC_ROLE_SARGEANT = 25,
	MP_TAG_MC_ROLE_ENFORCER = 26,
	MP_TAG_MC_ROLE_PROSPECT = 27,
	MP_TAG_TRANSMITTER = 28,
	MP_TAG_BOMB = 29
};
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param gamerTagId int
-- @param component int
-- @param toggle BOOL
-- SET_MP_GAMER_TAG_VISIBILITY(gamerTagId, component, toggle)

--- SET_MP_GAMER_TAG_WANTED_LEVEL
-- ```
displays wanted star above head  
```
-- @param gamerTagId int
-- @param wantedlvl int
-- SET_MP_GAMER_TAG_WANTED_LEVEL(gamerTagId, wantedlvl)

--- SET_MULTIPLAYER_BANK_CASH
-- Preview image:

![](https://i.imgur.com/1BTmdyv.png)

To change the bank balance use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "BANK_BALANCE" to whatever value you need to.
-- SET_MULTIPLAYER_BANK_CASH()

--- SET_MULTIPLAYER_HUD_CASH
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 int
-- @param p1 int
-- SET_MULTIPLAYER_HUD_CASH(p0, p1)

--- SET_MULTIPLAYER_WALLET_CASH
-- Preview image:

![](https://i.imgur.com/1BTmdyv.png)

To change money value use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "MP0\_WALLET_BALANCE" to whatever value you need to.
-- SET_MULTIPLAYER_WALLET_CASH()

--- SET_NEW_WAYPOINT
-- @param x float
-- @param y float
-- SET_NEW_WAYPOINT(x, y)

--- SET_PAUSE_MENU_ACTIVE
-- This native is deprecated.

If you're looking to:

*   Toggle the pause menu on, use [`ACTIVATE_FRONTEND_MENU`](#\_0xEF01D36B9C9D0C7B)
*   Toggle the pause menu off, use [`SET_FRONTEND_ACTIVE`](#\_0x745711A75AB09277)
*   Disable toggling the pause menu, use [`DISABLE_FRONTEND_THIS_FRAME`](#\_0x6D3465A73092F0E6)
-- @param toggle BOOL
-- SET_PAUSE_MENU_ACTIVE(toggle)

--- SET_PAUSE_MENU_PED_LIGHTING
-- Toggles the light state for the pause menu ped in frontend menus.

This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#\_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.

Example:
On: ![lights on](https://vespura.com/hi/i/2019-04-01\_16-09\_540ee\_1015.png)
Off: ![lights off](https://vespura.com/hi/i/2019-04-01\_16-10\_8b5e7\_1016.png)
-- @param state BOOL - True enables the light, false disables the light.
-- SET_PAUSE_MENU_PED_LIGHTING(state)

--- SET_PAUSE_MENU_PED_SLEEP_STATE
-- Toggles the pause menu ped sleep state for frontend menus.

[Example GIF](https://vespura.com/hi/i/2019-04-01\_15-51\_8ed38\_1014.gif)
-- @param state BOOL - 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
-- SET_PAUSE_MENU_PED_SLEEP_STATE(state)

--- SET_PED_AI_BLIP_FORCED_ON
-- ```
if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip  
If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_AI_BLIP_FORCED_ON(ped, toggle)

--- SET_PED_AI_BLIP_GANG_ID
-- @param ped Ped
-- @param gangId int
-- SET_PED_AI_BLIP_GANG_ID(ped, gangId)

--- SET_PED_AI_BLIP_HAS_CONE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_AI_BLIP_HAS_CONE(ped, toggle)

--- SET_PED_AI_BLIP_NOTICE_RANGE
-- @param ped Ped
-- @param range float
-- SET_PED_AI_BLIP_NOTICE_RANGE(ped, range)

--- SET_PED_HAS_AI_BLIP
-- ```
This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
See gtaforums.com/topic/884370-native-research-ai-blips for further information.
```
-- @param ped Ped
-- @param hasCone BOOL
-- SET_PED_HAS_AI_BLIP(ped, hasCone)

--- SET_RACE_TRACK_RENDER
-- @param toggle BOOL
-- SET_RACE_TRACK_RENDER(toggle)

--- SET_RADAR_AS_EXTERIOR_THIS_FRAME
-- SET_RADAR_AS_EXTERIOR_THIS_FRAME()

--- SET_RADAR_AS_INTERIOR_THIS_FRAME
-- ```
List of interior hashes: pastebin.com/1FUyXNqY  
Not for every interior zoom > 0 available.  
```
-- @param interior Hash
-- @param x float
-- @param y float
-- @param heading int
-- @param zoom int
-- SET_RADAR_AS_INTERIOR_THIS_FRAME(interior, x, y, heading, zoom)

--- SET_RADAR_ZOOM
-- ```
zoomLevel ranges from 0 to 200  
```
-- @param zoomLevel int
-- SET_RADAR_ZOOM(zoomLevel)

--- SET_RADAR_ZOOM_PRECISE
-- @param zoom float
-- SET_RADAR_ZOOM_PRECISE(zoom)

--- SET_RADAR_ZOOM_TO_BLIP
-- @param blip Blip
-- @param zoom float
-- SET_RADAR_ZOOM_TO_BLIP(blip, zoom)

--- SET_RADAR_ZOOM_TO_DISTANCE
-- @param zoom float
-- SET_RADAR_ZOOM_TO_DISTANCE(zoom)

--- SET_RADIUS_BLIP_EDGE
-- Enabling this on a radius blip will make it outline only.\
Please note that this only works on a **radius** blip (i.e. one generated using [`ADD_BLIP_FOR_RADIUS`](#\_0x46818D79B1F7499A)), not a normal blip.

**Example result:**\
![example-image](https://i.imgur.com/hS6ki7p.png)
-- @param blip Blip - The blip handle
-- @param toggle BOOL - Whether to turn off or on the effect
-- SET_RADIUS_BLIP_EDGE(blip, toggle)

--- SET_SCRIPT_VARIABLE_HUD_COLOUR
-- ```
Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
```
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- SET_SCRIPT_VARIABLE_HUD_COLOUR(r, g, b, a)

--- SET_SOCIAL_CLUB_TOUR
-- ```
HUD::SET_SOCIAL_CLUB_TOUR("Gallery");
HUD::SET_SOCIAL_CLUB_TOUR("Missions");
HUD::SET_SOCIAL_CLUB_TOUR("General");
HUD::SET_SOCIAL_CLUB_TOUR("Playlists");
```
-- @param name char*
-- SET_SOCIAL_CLUB_TOUR(name)

--- SET_TEXT_CENTRE
-- @param align BOOL
-- SET_TEXT_CENTRE(align)

--- SET_TEXT_COLOUR
-- ```
colors you input not same as you think?
A: for some reason its R B G A
```
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- SET_TEXT_COLOUR(red, green, blue, alpha)

--- SET_TEXT_DROPSHADOW
-- distance - shadow distance in pixels, both horizontal and vertical
r, g, b, a - color
-- @param distance int - Shadow distance in pixels, both horizontal and vertical.
-- @param r int - Red color.
-- @param g int - Green color.
-- @param b int - Blue color.
-- @param a int - Alpha.
-- SET_TEXT_DROPSHADOW(distance, r, g, b, a)

--- SET_TEXT_DROP_SHADOW
-- SET_TEXT_DROP_SHADOW()

--- SET_TEXT_EDGE
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 int
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- SET_TEXT_EDGE(p0, r, g, b, a)

--- SET_TEXT_FONT
-- ```cpp
enum eTextFonts
{
    FONT_STANDARD = 0,
    FONT_CURSIVE = 1,
    FONT_ROCKSTAR_TAG = 2,
    FONT_LEADERBOAR0D = 3,
    FONT_CONDENSED = 4,
    FONT_STYLE_FIXED_WIDTH_NUMBERS = 5,
    FONT_CONDENSED_NOT_GAMERNAME = 6,
    FONT_STYLE_PRICEDOWN = 7,
    FONT_STYLE_TAXI = 8,
}
```
-- @param fontType int
-- SET_TEXT_FONT(fontType)

--- SET_TEXT_INPUT_BOX_ENABLED
-- Toggles if the text input box can be opened with [`DISPLAY_ONSCREEN_KEYBOARD`](#\_0x00DC833F2568DBF6).
-- @param state BOOL
-- SET_TEXT_INPUT_BOX_ENABLED(state)

--- SET_TEXT_JUSTIFICATION
-- ```
Types -  
0: Center-Justify  
1: Left-Justify  
2: Right-Justify  
Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen  
```
-- @param justifyType int
-- SET_TEXT_JUSTIFICATION(justifyType)

--- SET_TEXT_LEADING
-- @param p0 int
-- SET_TEXT_LEADING(p0)

--- SET_TEXT_OUTLINE
-- SET_TEXT_OUTLINE()

--- SET_TEXT_PROPORTIONAL
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 BOOL
-- SET_TEXT_PROPORTIONAL(p0)

--- SET_TEXT_RENDER_ID
-- @param renderId int
-- SET_TEXT_RENDER_ID(renderId)

--- SET_TEXT_RIGHT_JUSTIFY
-- @param toggle BOOL
-- SET_TEXT_RIGHT_JUSTIFY(toggle)

--- SET_TEXT_SCALE
-- ```
Size range : 0F to 1.0F
p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
```
-- @param scale float
-- @param size float
-- SET_TEXT_SCALE(scale, size)

--- SET_TEXT_WRAP
-- ```
It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.  
start - left boundry on screen position (0.0 - 1.0)  
end - right boundry on screen position (0.0 - 1.0)  
```
-- @param start float
-- @param end float
-- SET_TEXT_WRAP(start, end)

--- SET_USE_ISLAND_MAP
-- Switches the display of the in-game minimap to the Cayo Perico map. This native needs to be called every frame to maintain the toggled state effectively.

```
NativeDB Introduced: v2189
```
-- @param toggle BOOL - A boolean value where `true` switches the minimap to the Cayo Perico map, and `false` reverts it to the standard map.
-- SET_USE_ISLAND_MAP(toggle)

--- SET_WARNING_MESSAGE
-- ```cpp
enum eInstructionalButtonTypes
{
    NONE = 0,
    SELECT = 1,
    OK = 2,
    YES = 4,
    BACK = 8,
    BACK_SELECT = 9,
    BACK_OK = 10,
    BACK_YES = 12,
    CANCEL = 16,
    CANCEL_SELECT = 17,
    CANCEL_OK = 18,
    CANCEL_YES = 20,
    NO = 32,
    NO_SELECT = 33,
    NO_OK = 34,
    YES_NO = 36,
    RETRY = 64,
    RETRY_SELECT = 65,
    RETRY_OK = 66,
    RETRY_YES = 68,
    RETRY_BACK = 72,
    RETRY_BACK_SELECT = 73,
    RETRY_BACK_OK = 74,
    RETRY_BACK_YES = 76,
    RETRY_CANCEL = 80,
    RETRY_CANCEL_SELECT = 81,
    RETRY_CANCEL_OK = 82,
    RETRY_CANCEL_YES = 84,
    SKIP = 256,
    SKIP_SELECT = 257,
    SKIP_OK = 258,
    SKIP_YES = 260,
    SKIP_BACK = 264,
    SKIP_BACK_SELECT = 265,
    SKIP_BACK_OK = 266,
    SKIP_BACK_YES = 268,
    SKIP_CANCEL = 272,
    SKIP_CANCEL_SELECT = 273,
    SKIP_CANCEL_OK = 274,
    SKIP_CANCEL_YES = 276,
    CONTINUE = 16384,
    BACK_CONTINUE = 16392,
    CANCEL_CONTINUE = 16400,
    LOADING_SPINNER = 134217728,
    SELECT_LOADING_SPINNER = 134217729,
    OK_LOADING_SPINNER = 134217730,
    YES_LOADING_SPINNER = 134217732,
    BACK_LOADING_SPINNER = 134217736,
    BACK_SELECT_LOADING_SPINNER = 134217737,
    BACK_OK_LOADING_SPINNER = 134217738,
    BACK_YES_LOADING_SPINNER = 134217740,
    CANCEL_LOADING_SPINNER = 134217744,
    CANCEL_SELECT_LOADING_SPINNER = 134217745,
    CANCEL_OK_LOADING_SPINNER = 134217746,
    CANCEL_YES_LOADING_SPINNER = 134217748
}
```

Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.

**Result of the example code:**
<https://i.imgur.com/imwoimm.png>
-- @param entryLine1 char* - The text label to display as the first line of the warning message.
-- @param instructionalKey int - This is an enum, check the description for a list.
-- @param entryLine2 char* - The text label to display as the second line of the warning message.
-- @param p3 BOOL - Purpose unknown.
-- @param p4 int - Purpose unknown.
-- @param background char* - Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param p6 char* - Purpose unknown.
-- @param showBg BOOL - Purpose unknown.
-- @param errorCode int - When not 0, adds a field displaying the value as 'error code' to the warning message.
-- SET_WARNING_MESSAGE(entryLine1, instructionalKey, entryLine2, p3, p4, background, p6, showBg, errorCode)

--- SET_WARNING_MESSAGE_WITH_HEADER
-- ```
You can only use text entries. No custom text.  
C# Example :  
Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);  
you can recreate this easily with scaleforms  
---------------  
Fixed native name, from before nativedb restoration.  
```

```
NativeDB Added Parameter 10: Any p9
```
-- @param titleMsg char*
-- @param entryLine1 char*
-- @param flags int
-- @param promptMsg char*
-- @param p4 BOOL
-- @param p5 Any
-- @param background BOOL
-- @param p7 Any*
-- @param showBg BOOL
-- SET_WARNING_MESSAGE_WITH_HEADER(titleMsg, entryLine1, flags, promptMsg, p4, p5, background, p7, showBg)

--- SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS
-- ```
You can only use text entries. No custom text.  
```

```
NativeDB Added Parameter 11: Any p10
```
-- @param entryHeader char*
-- @param entryLine1 char*
-- @param instructionalKey Any
-- @param entryLine2 char*
-- @param p4 BOOL
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any*
-- @param p8 Any*
-- @param p9 BOOL
-- SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS(entryHeader, entryLine1, instructionalKey, entryLine2, p4, p5, p6, p7, p8, p9)

--- SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED
-- Sets a warning message for one frame with header and upper buttons bit field that don't fit the standard 32 bit set.
-- @param headerTextLabel char* - Text label to set on the header/title.
-- @param line1TextLabel char* - Text label to set on the first line of the body..
-- @param buttonsBitField int - Bit field of the button flags. See [`SET_WARNING_MESSAGE`](#\_0x7B1776B3B53F8D74).
-- @param buttonsBitFieldUpper int - Bit field of the upper button flags. See [`SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS_EXTENDED`](#\_0x15803FEC3B9A872B).
-- @param line2TextLabel char* - Text label to set on the second line of the body.
-- @param addNumber BOOL - If number should be inserted into `~1~` in the body.
-- @param numberToAdd int - What number to insert into `~1~` in the body.
-- @param firstSubstring char* - First substring text label to insert into `~a~` in the body.
-- @param secondSubstring char* - Second substring text label to insert into `~a~` in the body.
-- @param showBackground BOOL - Bool indicating if the message should have a black background.
-- @param errorCode int - Error number to show at the bottom of the message. `0` is the default.
-- SET_WARNING_MESSAGE_WITH_HEADER_EXTENDED(headerTextLabel, line1TextLabel, buttonsBitField, buttonsBitFieldUpper, line2TextLabel, addNumber, numberToAdd, firstSubstring, secondSubstring, showBackground, errorCode)

--- SET_WAYPOINT_OFF
-- ```
This native removes the current waypoint from the map.
Example:
C#:
Function.Call(Hash.SET_WAYPOINT_OFF);
C++:
HUD::SET_WAYPOINT_OFF();
```
-- SET_WAYPOINT_OFF()

--- SET_WIDESCREEN_FORMAT
-- @param p0 Any
-- SET_WIDESCREEN_FORMAT(p0)

--- SHOW_CONTACT_INSTRUCTIONAL_BUTTON
-- Controls the visibility of the "Contact" instructional buttons on the map screen.

```
NativeDB Introduced: 2545
```
-- @param toggle BOOL - Set to `true` to show the instructional buttons, or `false` to hide them.
-- SHOW_CONTACT_INSTRUCTIONAL_BUTTON(toggle)

--- SHOW_CREW_INDICATOR_ON_BLIP
-- Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).

To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).

Example code result:
![](https://i.imgur.com/iZ9tNWl.png)
-- @param blip Blip - The blip to toggle the half blue circle around the blip on.
-- @param toggle BOOL - Enables or disables the half blue circle around the blip (on the left side).
-- SHOW_CREW_INDICATOR_ON_BLIP(blip, toggle)

--- SHOW_FRIEND_INDICATOR_ON_BLIP
-- Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.

To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
-- @param blip Blip - The blip to toggle the half circle on.
-- @param toggle BOOL - Enables or disables the half circle around the blip (on the right side of the blip).
-- SHOW_FRIEND_INDICATOR_ON_BLIP(blip, toggle)

--- SHOW_HEADING_INDICATOR_ON_BLIP
-- ```
Adds the GTA: Online player heading indicator to a blip.  
```
-- @param blip Blip
-- @param toggle BOOL
-- SHOW_HEADING_INDICATOR_ON_BLIP(blip, toggle)

--- SHOW_HEIGHT_ON_BLIP
-- @param blip Blip
-- @param toggle BOOL
-- SHOW_HEIGHT_ON_BLIP(blip, toggle)

--- SHOW_HUD_COMPONENT_THIS_FRAME
-- This function shows various HUD (Heads-up Display) components.

Listed below are the integers and the corresponding HUD component.

*   1 : WANTED_STARS
*   2 : WEAPON_ICON
*   3 : CASH
*   4 : MP_CASH
*   5 : MP_MESSAGE
*   6 : VEHICLE_NAME
*   7 : AREA_NAME
*   8 : VEHICLE_CLASS
*   9 : STREET_NAME
*   10 : HELP_TEXT
*   11 : FLOATING_HELP_TEXT\_1
*   12 : FLOATING_HELP_TEXT\_2
*   13 : CASH_CHANGE
*   14 : RETICLE
*   15 : SUBTITLE_TEXT
*   16 : RADIO_STATIONS
*   17 : SAVING_GAME
*   18 : GAME_STREAM
*   19 : WEAPON_WHEEL
*   20 : WEAPON_WHEEL_STATS
*   21 : HUD_COMPONENTS
*   22 : HUD_WEAPONS

These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#\_0x6806C51AD12B83B8) native, but instead hides the HUD component.
-- @param id int
-- SHOW_HUD_COMPONENT_THIS_FRAME(id)

--- SHOW_NUMBER_ON_BLIP
-- @param blip Blip
-- @param number int
-- SHOW_NUMBER_ON_BLIP(blip, number)

--- SHOW_OUTLINE_INDICATOR_ON_BLIP
-- Toggles a cyan outline around the blip.

Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
-- @param blip Blip - The blip to toggle the outline on.
-- @param toggle BOOL - Enables or disables the outline.
-- SHOW_OUTLINE_INDICATOR_ON_BLIP(blip, toggle)

--- SHOW_START_MISSION_INSTRUCTIONAL_BUTTON
-- @param p0 BOOL
-- SHOW_START_MISSION_INSTRUCTIONAL_BUTTON(p0)

--- SHOW_TICK_ON_BLIP
-- ```
Adds a green checkmark on top of a blip.  
```
-- @param blip Blip
-- @param toggle BOOL
-- SHOW_TICK_ON_BLIP(blip, toggle)

--- START_GPS_CUSTOM_ROUTE
-- Starts a new GPS custom-route, allowing you to plot lines on the map.
Lines are drawn directly between points.
The GPS custom route works like the GPS multi route, except it does not follow roads.

**Example result:**

![](https://i.imgur.com/BDm5pzt.png)
-- @param hudColor int - The HUD color of the GPS path.
-- @param displayOnFoot BOOL - Draws the path regardless if the player is in a vehicle or not.
-- @param followPlayer BOOL - Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
-- START_GPS_CUSTOM_ROUTE(hudColor, displayOnFoot, followPlayer)

--- START_GPS_MULTI_ROUTE
-- Starts a new GPS multi-route, allowing you to create custom GPS paths.
GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
Once the player has passed a point, the GPS will no longer force its path through it.

Works independently from the player-placed waypoint and blip routes.

**Example result:**

![](https://i.imgur.com/ZZHQatX.png)
-- @param hudColor int - The HUD color of the GPS path.
-- @param routeFromPlayer BOOL - Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
-- @param displayOnFoot BOOL - Draws the GPS path regardless if the player is in a vehicle or not.
-- START_GPS_MULTI_ROUTE(hudColor, routeFromPlayer, displayOnFoot)

--- SUPPRESS_FRONTEND_RENDERING_THIS_FRAME
-- SUPPRESS_FRONTEND_RENDERING_THIS_FRAME()

--- TAKE_CONTROL_OF_FRONTEND
-- Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.

To enable the keys again, use [`0x14621BB1DF14E2B2`](#\_0x14621BB1DF14E2B2).
-- TAKE_CONTROL_OF_FRONTEND()

--- THEFEED_CLEAR_FROZEN_POST
-- THEFEED_CLEAR_FROZEN_POST()

--- THEFEED_COMMENT_TELEPORT_POOL_OFF
-- ```
Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
```
-- THEFEED_COMMENT_TELEPORT_POOL_OFF()

--- THEFEED_COMMENT_TELEPORT_POOL_ON
-- ```
Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
```
-- THEFEED_COMMENT_TELEPORT_POOL_ON()

--- THEFEED_FLUSH_QUEUE
-- THEFEED_FLUSH_QUEUE()

--- THEFEED_FORCE_RENDER_OFF
-- Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
-- THEFEED_FORCE_RENDER_OFF()

--- THEFEED_FORCE_RENDER_ON
-- THEFEED_FORCE_RENDER_ON()

--- THEFEED_FREEZE_NEXT_POST
-- ```
Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
```
-- THEFEED_FREEZE_NEXT_POST()

--- THEFEED_GET_FIRST_VISIBLE_DELETE_REMAINING
-- ```
Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
```
-- THEFEED_GET_FIRST_VISIBLE_DELETE_REMAINING()

--- THEFEED_HIDE_THIS_FRAME
-- Once called each frame hides all above radar notifications.
-- THEFEED_HIDE_THIS_FRAME()

--- THEFEED_IS_PAUSED
-- THEFEED_IS_PAUSED()

--- THEFEED_ONLY_SHOW_TOOLTIPS
-- @param toggle BOOL
-- THEFEED_ONLY_SHOW_TOOLTIPS(toggle)

--- THEFEED_PAUSE
-- THEFEED_PAUSE()

--- THEFEED_REMOVE_ITEM
-- ```
Removes a notification instantly instead of waiting for it to disappear  
```
-- @param notificationId int
-- THEFEED_REMOVE_ITEM(notificationId)

--- THEFEED_RESET_ALL_PARAMETERS
-- THEFEED_RESET_ALL_PARAMETERS()

--- THEFEED_RESUME
-- THEFEED_RESUME()

--- THEFEED_SET_SCRIPTED_MENU_HEIGHT
-- @param pos float
-- THEFEED_SET_SCRIPTED_MENU_HEIGHT(pos)

--- THEFEED_SPS_EXTEND_WIDESCREEN_OFF
-- THEFEED_SPS_EXTEND_WIDESCREEN_OFF()

--- THEFEED_SPS_EXTEND_WIDESCREEN_ON
-- THEFEED_SPS_EXTEND_WIDESCREEN_ON()

--- THEFEED_UPDATE_ITEM_TEXTURE
-- ```
Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".

NativeDB Introduced: v323
```
-- @param txdString1 char*
-- @param txnString1 char*
-- @param txdString2 char*
-- @param txnString2 char*
-- THEFEED_UPDATE_ITEM_TEXTURE(txdString1, txnString1, txdString2, txnString2)

--- TOGGLE_STEALTH_RADAR
-- @param toggle BOOL
-- TOGGLE_STEALTH_RADAR(toggle)

--- TRIGGER_SONAR_BLIP
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param radius float
-- @param p4 int
-- TRIGGER_SONAR_BLIP(posX, posY, posZ, radius, p4)

--- UNLOCK_MINIMAP_ANGLE
-- UNLOCK_MINIMAP_ANGLE()

--- UNLOCK_MINIMAP_POSITION
-- UNLOCK_MINIMAP_POSITION()

--- USE_FAKE_MP_CASH
-- ```
Related to displaying cash on the HUD
Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts
```
-- @param p0 BOOL
-- USE_FAKE_MP_CASH(p0)

--- _ADD_BLIP_FOR_AREA
-- Adds a rectangular blip for the specified coordinates/area.

It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.

By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.

Example image:
![minimap](https://i.imgur.com/qLbXWcQ.png)
![big map](https://i.imgur.com/0j7O7Rh.png)

(Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
-- @param x float - The X coordinate of the center of the blip.
-- @param y float - The Y coordinate of the center of the blip.
-- @param z float - The Z coordinate of the center of the blip.
-- @param width float - The width of the blip.
-- @param height float - The height of the blip.
-- _ADD_BLIP_FOR_AREA(x, y, z, width, height)

--- _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME
-- Allows opening the pause menu this frame, when the player is dead.
-- _ALLOW_PAUSE_MENU_WHEN_DEAD_THIS_FRAME()

--- _BEGIN_TEXT_COMMAND_GET_WIDTH
-- ```
BEGIN_TEXT_COMMAND_*
Example:
_BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
float width = _END_TEXT_COMMAND_GET_WIDTH(1);
```
-- @param text char*
-- _BEGIN_TEXT_COMMAND_GET_WIDTH(text)

--- _BEGIN_TEXT_COMMAND_LINE_COUNT
-- ```
get's line count  
int GetLineCount(char *text, float x, float y)  
	{  
_BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");  
                ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);  
return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);  
	}  
```
-- @param entry char*
-- _BEGIN_TEXT_COMMAND_LINE_COUNT(entry)

--- _BEGIN_TEXT_COMMAND_OBJECTIVE
-- @param p0 char*
-- _BEGIN_TEXT_COMMAND_OBJECTIVE(p0)

--- _CLEAR_ALL_BLIP_ROUTES
-- Clears all active blip routes that have been set with [`SetBlipRoute`](#\_0x3E160C90).
-- _CLEAR_ALL_BLIP_ROUTES()

--- _CLEAR_RACE_GALLERY_BLIPS
-- _CLEAR_RACE_GALLERY_BLIPS()

--- _CLOSE_MULTIPLAYER_CHAT
-- _CLOSE_MULTIPLAYER_CHAT()

--- _DELETE_WAYPOINT
-- _DELETE_WAYPOINT()

--- _DISABLE_MULTIPLAYER_CHAT
-- If true is passed, the player won't be able to open the multiplayer chat
-- @param disable BOOL
-- _DISABLE_MULTIPLAYER_CHAT(disable)

--- _DISPLAY_HUD_WHEN_DEAD_THIS_FRAME
-- Enables drawing some hud components, such as help labels, this frame, when the player is dead.
-- _DISPLAY_HUD_WHEN_DEAD_THIS_FRAME()

--- _END_TEXT_COMMAND_GET_WIDTH
-- ```
END_TEXT_COMMAND_*
In scripts font most of the time is passed as 1.
Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
param is not font from what i've tested
```
-- @param p0 BOOL
-- _END_TEXT_COMMAND_GET_WIDTH(p0)

--- _END_TEXT_COMMAND_LINE_COUNT
-- ```
END_TEXT_COMMAND_*
Determines how many lines the text string will use when drawn on screen.
Must use 0x521FB041D93DD0E4 for setting up
```
-- @param x float
-- @param y float
-- _END_TEXT_COMMAND_LINE_COUNT(x, y)

--- _END_TEXT_COMMAND_OBJECTIVE
-- @param p0 BOOL
-- _END_TEXT_COMMAND_OBJECTIVE(p0)

--- _END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_GXT_ENTRY
-- This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
Needs more research.
Only one type of usage in the scripts:
HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);
-- @param txdName char*
-- @param textureName char*
-- @param flash BOOL
-- @param iconType int
-- @param sender char*
-- @param subject char*
-- _END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_GXT_ENTRY(txdName, textureName, flash, iconType, sender, subject)

--- _END_TEXT_COMMAND_THEFEED_POST_REPLAY_ICON
-- ```
returns a notification handle, prints out a notification like below:  
type range: 0   
if you set type to 1, image goes from 0 - 39 - Xbox you can add text to  
example:   
UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");  
```
-- @param eType int
-- @param iIcon int
-- @param sTitle char*
-- _END_TEXT_COMMAND_THEFEED_POST_REPLAY_ICON(eType, iIcon, sTitle)

--- _END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT
-- ```
returns a notification handle, prints out a notification like below:
type range: 0 - 2
if you set type to 1, button accepts "~INPUT_SOMETHING~"
example:
HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");
- imgur.com/UPy0Ial
Examples from the scripts:
l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");
l_D1[1/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");
l_D1[2/*1*/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");
```
-- @param type int
-- @param button char*
-- @param text char*
-- _END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(type, button, text)

--- _GET_AI_BLIP
-- ```
Returns the current AI BLIP for the specified ped  
```
-- @param ped Ped
-- _GET_AI_BLIP(ped)

--- _GET_AI_BLIP_2
-- @param ped Ped
-- _GET_AI_BLIP_2(ped)

--- _GET_BLIP_ROTATION
-- ```
NativeDB Introduced: v2060
```
-- @param blip Blip
-- _GET_BLIP_ROTATION(blip)

--- _GET_CLOSEST_BLIP_OF_TYPE
-- ```
NativeDB Introduced: v1180
```
-- @param blipSprite int
-- _GET_CLOSEST_BLIP_OF_TYPE(blipSprite)

--- _GET_NORTH_RADAR_BLIP
-- _GET_NORTH_RADAR_BLIP()

--- _GET_PAUSE_MENU_CURSOR_POSITION
-- Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
-- _GET_PAUSE_MENU_CURSOR_POSITION()

--- _GET_PAUSE_MENU_SELECTION
-- @param lastItemMenuId int*
-- @param selectedItemUniqueId int*
-- _GET_PAUSE_MENU_SELECTION(lastItemMenuId, selectedItemUniqueId)

--- _GET_PAUSE_MENU_SELECTION_DATA
-- ```
lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
selectedItemUniqueId: this is uniqueID of the currently selected menu item
when the pausemenu is closed:
lastItemMenuId = -1
selectedItemMenuId = -1
selectedItemUniqueId = 0
when the header gains focus:
lastItemMenuId updates as normal or 0 if the pausemenu was just opened
selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
selectedItemUniqueId = -1
when focus is moved from the header to a pausemenu page:
lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
selectedItemMenuId = -1
selectedItemUniqueId updates as normal
```
-- @param lastItemMenuId int*
-- @param selectedItemMenuId int*
-- @param selectedItemUniqueId int*
-- _GET_PAUSE_MENU_SELECTION_DATA(lastItemMenuId, selectedItemMenuId, selectedItemUniqueId)

--- _GET_SCALEFORM_MOVIE_CURSOR_SELECTION
-- Gets mouse selection data from scaleforms with mouse support. Must be checked every frame.
Returns item index if using the COLOUR_SWITCHER\_02 scaleform.
Selection types, found in MOUSE_EVENTS.as:
MOUSE_DRAG_OUT = 0;
MOUSE_DRAG_OVER = 1;
MOUSE_DOWN = 2;
MOUSE_MOVE = 3;
MOUSE_UP = 4;
MOUSE_PRESS = 5;
MOUSE_RELEASE = 6;
MOUSE_RELEASE_OUTSIDE = 7;
MOUSE_ROLL_OUT = 8;
MOUSE_ROLL_OVER = 9;
MOUSE_WHEEL_UP = 10;
MOUSE_WHEEL_DOWN = 11;

Scaleforms that this works with:

*   COLOUR_SWITCHER\_02
*   MP_RESULTS_PANEL
*   MP_NEXT_JOB_SELECTION
*   SC_LEADERBOARD
    Probably works with other scaleforms, needs more research.
    In order to use this Native you MUST have controls 239, 240, 237, 238 enabled!
    This native, due to its erroneous redundancy of the returned boolean value, works differently in C#: shifting the parameters (where `received` becomes `selectionType` and so on making the fourth parameter unused and always 0).
-- @param scaleformHandle int - Handle of the scaleform
-- @param received bool* - Returns a boolean indicating if the data was received successfully (in Lua).
-- @param selectionType int* - The type of MouseEvent specified above.
-- @param context int* - Context of the slot the mouse is hovering on.
-- @param slotIndex int* - Index of the slot the mouse is hovering on.
-- _GET_SCALEFORM_MOVIE_CURSOR_SELECTION(scaleformHandle, received, selectionType, context, slotIndex)

--- _GET_TEXT_SUBSTRING
-- ```
Returns a substring of a specified length starting at a specified position.
Example:
// Get "STRING" text from "MY_STRING"
subStr = HUD::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);
```
-- @param text char*
-- @param position int
-- @param length int
-- _GET_TEXT_SUBSTRING(text, position, length)

--- _GET_TEXT_SUBSTRING_SAFE
-- ```
Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
Example:
// Condensed example of how Rockstar uses this function
strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());
subStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);
--
"fm_race_creator.ysc", line 85115:
// parameters modified for clarity
BOOL sub_8e5aa(char *text, int length) {
    for (i = 0; i <= (length - 2); i += 1) {
        if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {
            return FALSE;
        }
    }
    return TRUE;
}
```
-- @param text char*
-- @param position int
-- @param length int
-- @param maxLength int
-- _GET_TEXT_SUBSTRING_SAFE(text, position, length, maxLength)

--- _GET_TEXT_SUBSTRING_SLICE
-- ```
Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
Example:
// Get "STRING" text from "MY_STRING"
subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);
// Overflows are possibly replaced with underscores (needs verification)
subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?
```
-- @param text char*
-- @param startPosition int
-- @param endPosition int
-- _GET_TEXT_SUBSTRING_SLICE(text, startPosition, endPosition)

--- _GET_WARNING_MESSAGE_TITLE_HASH
-- ```
NativeDB Introduced: v1290
```
-- _GET_WARNING_MESSAGE_TITLE_HASH()

--- _HAS_DIRECTOR_MODE_BEEN_TRIGGERED
-- ```
HAS_*
```
-- _HAS_DIRECTOR_MODE_BEEN_TRIGGERED()

--- _HIDE_AREA_AND_VEHICLE_NAME_THIS_FRAME
-- ```
HIDE_*_THIS_FRAME

Hides area and vehicle name HUD components for one frame.
```
-- _HIDE_AREA_AND_VEHICLE_NAME_THIS_FRAME()

--- _HUD_DISPLAY_LOADING_SCREEN_TIPS
-- Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
-- _HUD_DISPLAY_LOADING_SCREEN_TIPS()

--- _HUD_WEAPON_WHEEL_GET_SELECTED_HASH
-- ```
Returns the weapon hash to the selected/highlighted weapon in the wheel
```
-- _HUD_WEAPON_WHEEL_GET_SELECTED_HASH()

--- _HUD_WEAPON_WHEEL_GET_SLOT_HASH
-- ```
Returns the weapon hash active in a specific weapon wheel slotList
```
-- @param weaponTypeIndex int
-- _HUD_WEAPON_WHEEL_GET_SLOT_HASH(weaponTypeIndex)

--- _HUD_WEAPON_WHEEL_IGNORE_CONTROL_INPUT
-- ```
Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
```
-- @param toggle BOOL
-- _HUD_WEAPON_WHEEL_IGNORE_CONTROL_INPUT(toggle)

--- _HUD_WEAPON_WHEEL_IGNORE_SELECTION
-- ```
Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
```
-- _HUD_WEAPON_WHEEL_IGNORE_SELECTION()

--- _IS_MULTIPLAYER_CHAT_ACTIVE
-- ```
Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.  
```
-- _IS_MULTIPLAYER_CHAT_ACTIVE()

--- _IS_VALID_MP_GAMER_TAG_MOVIE
-- ```
IS_*
```
-- @param gamerTagId int
-- _IS_VALID_MP_GAMER_TAG_MOVIE(gamerTagId)

--- _IS_WARNING_MESSAGE_ACTIVE_2
-- ```
IS_WARNING_MESSAGE_*
```
-- _IS_WARNING_MESSAGE_ACTIVE_2()

--- _LOG_DEBUG_INFO
-- ```
Not present in retail version of the game, actual definiton seems to be
_LOG_DEBUG_INFO(const char* category, const char* debugText);
```
-- @param p0 char*
-- _LOG_DEBUG_INFO(p0)

--- _OVERRIDE_MULTIPLAYER_CHAT_COLOUR
-- @param p0 int
-- @param hudColor int
-- _OVERRIDE_MULTIPLAYER_CHAT_COLOUR(p0, hudColor)

--- _OVERRIDE_MULTIPLAYER_CHAT_PREFIX
-- @param gxtEntryHash Hash
-- _OVERRIDE_MULTIPLAYER_CHAT_PREFIX(gxtEntryHash)

--- _PAUSE_MENU_DISABLE_BUSYSPINNER
-- Disables the loading spinner in Pause Menu when switching from one header tab to another.
-- @param toggle BOOL - true to disable and false to re-enable the loading icon.
-- _PAUSE_MENU_DISABLE_BUSYSPINNER(toggle)

--- _PAUSE_MENU_GET_INDEX_OF_MOUSE_HOVERED_SLOT
-- If mouse is hovering on a slot, it returns the slot's index, else it returns -1.
-- _PAUSE_MENU_GET_INDEX_OF_MOUSE_HOVERED_SLOT()

--- _PAUSE_MENU_GET_UNIQUE_ID_OF_MOUSE_HOVERED_SLOT
-- If mouse is hovering on a slot, it returns uniqueid of that slot, else it returns -1.
-- _PAUSE_MENU_GET_UNIQUE_ID_OF_MOUSE_HOVERED_SLOT()

--- _RACE_GALLERY_ADD_BLIP
-- ```
Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
```
-- @param x float
-- @param y float
-- @param z float
-- _RACE_GALLERY_ADD_BLIP(x, y, z)

--- _RACE_GALLERY_FULLSCREEN
-- ```
If toggle is true, the map is shown in full screen
If toggle is false, the map is shown in normal mode
```
-- @param toggle BOOL
-- _RACE_GALLERY_FULLSCREEN(toggle)

--- _RACE_GALLERY_NEXT_BLIP_SPRITE
-- ```
Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
```
-- @param spriteId int
-- _RACE_GALLERY_NEXT_BLIP_SPRITE(spriteId)

--- _REMOVE_WARNING_MESSAGE_LIST_ITEMS
-- _REMOVE_WARNING_MESSAGE_LIST_ITEMS()

--- _SET_ABILITY_BAR_VISIBILITY_IN_MULTIPLAYER
-- ```
NativeDB Introduced: v1493
```
-- @param visible BOOL
-- _SET_ABILITY_BAR_VISIBILITY_IN_MULTIPLAYER(visible)

--- _SET_ALLOW_ABILITY_BAR_IN_MULTIPLAYER
-- ```
NativeDB Introduced: v1868
```
-- @param toggle BOOL
-- _SET_ALLOW_ABILITY_BAR_IN_MULTIPLAYER(toggle)

--- _SET_BLIP_DISPLAY_INDICATOR_ON_BLIP
-- ```
Must be toggled before being queued for animation
```
-- @param blip Blip
-- @param toggle BOOL
-- _SET_BLIP_DISPLAY_INDICATOR_ON_BLIP(blip, toggle)

--- _SET_BLIP_SCALE_TRANSFORMATION
-- See https://imgur.com/a/lLkEsMN

```
NativeDB Introduced: v1734
```
-- @param blip Blip
-- @param xScale float
-- @param yScale float
-- _SET_BLIP_SCALE_TRANSFORMATION(blip, xScale, yScale)

--- _SET_BLIP_SHRINK
-- ```
Makes a blip go small when off the minimap.
SET_BLIP_AS_*
```
-- @param blip Blip
-- @param toggle BOOL
-- _SET_BLIP_SHRINK(blip, toggle)

--- _SET_BLIP_SQUARED_ROTATION
-- ```
Does not require whole number/integer rotations.
```
-- @param blip Blip
-- @param heading float
-- _SET_BLIP_SQUARED_ROTATION(blip, heading)

--- _SET_DIRECTOR_MODE_CLEAR_TRIGGERED_FLAG
-- ```
SET_*
```
-- _SET_DIRECTOR_MODE_CLEAR_TRIGGERED_FLAG()

--- _SET_HELP_MESSAGE_TEXT_STYLE
-- @param style int
-- @param hudColor int
-- @param alpha int
-- @param p3 int
-- @param p4 int
-- _SET_HELP_MESSAGE_TEXT_STYLE(style, hudColor, alpha, p3, p4)

--- _SET_INTERIOR_ZOOM_LEVEL_DECREASED
-- ```
NativeDB Introduced: v2372
```
-- @param toggle BOOL
-- _SET_INTERIOR_ZOOM_LEVEL_DECREASED(toggle)

--- _SET_INTERIOR_ZOOM_LEVEL_INCREASED
-- ```
NativeDB Introduced: v1493
```
-- @param toggle BOOL
-- _SET_INTERIOR_ZOOM_LEVEL_INCREASED(toggle)

--- _SET_MAIN_PLAYER_BLIP_COLOUR
-- @param color int
-- _SET_MAIN_PLAYER_BLIP_COLOUR(color)

--- _SET_MINIMAP_ALTITUDE_INDICATOR_LEVEL
-- ```
Argument must be 0.0f or above 38.0f, or it will be ignored.  
```

```
NativeDB Added Parameter 3: Any p2
```
-- @param altitude float
-- @param p1 BOOL
-- _SET_MINIMAP_ALTITUDE_INDICATOR_LEVEL(altitude, p1)

--- _SET_MISSION_NAME_2
-- @param p0 BOOL
-- @param name char*
-- _SET_MISSION_NAME_2(p0, name)

--- _SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC
-- By default, the player health value shown by a gamer tag's health bar is synchronised with the health of the ped it is attached to.
This native disables that behaviour, allowing [`_SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH`](#\_0x1563FE35E9928E67) to have an effect.
-- @param gamerTagId int
-- @param toggle BOOL - If player health synchronisation should be disabled.
-- _SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC(gamerTagId, toggle)

--- _SET_MP_GAMER_TAG_MP_BAG_LARGE_COUNT
-- ```
displays wanted star above head  
```
-- @param gamerTagId int
-- @param count int
-- _SET_MP_GAMER_TAG_MP_BAG_LARGE_COUNT(gamerTagId, count)

--- _SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH
-- Manually sets the player health value for a gamer tag, using the maximum health to calculate what percentage of the bar should be filled.
Has no effect unless [\_SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC](#\_0xD29EC58C2F6B5014) has been called prior to disable synchronisation with the attached ped.
-- @param gamerTagId int
-- @param health int - The amount the health the player has.
-- @param maximumHealth int - The maximum amount of health the player could have.
-- _SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH(gamerTagId, health, maximumHealth)

--- _SET_MP_GAMER_TAG_USE_VEHICLE_HEALTH
-- Sets the health bar of a gamer tag to show the health of the last (or current) vehicle of the ped the gamer tag is attached to.
The vehicle health value is stored separate from the player health and using it won't clear any player health overrides.
-- @param gamerTagId int
-- @param toggle BOOL - If vehicle health should be displayed instead of player health.
-- _SET_MP_GAMER_TAG_USE_VEHICLE_HEALTH(gamerTagId, toggle)

--- _SET_MP_GAMER_TAG_VISIBILITY_ALL
-- Sets the visibility of all components of the gamer tag to the specified value.
-- @param gamerTagId int
-- @param toggle BOOL - The new visibility state of all gamer tag components.
-- _SET_MP_GAMER_TAG_VISIBILITY_ALL(gamerTagId, toggle)

--- _SET_PED_AI_BLIP_SPRITE
-- @param ped Ped
-- @param spriteId int
-- _SET_PED_AI_BLIP_SPRITE(ped, spriteId)

--- _SET_PED_HAS_AI_BLIP_WITH_COLOR
-- @param ped Ped
-- @param hasCone BOOL
-- @param color int - See [`SET_BLIP_COLOUR`](#\_0x03D7FB09E75D6B7E).
-- _SET_PED_HAS_AI_BLIP_WITH_COLOR(ped, hasCone, color)

--- _SET_PLAYER_IS_IN_DIRECTOR_MODE
-- ```
If toggle is true, hides special ability bar / character name in the pause menu
If toggle is false, shows special ability bar / character name in the pause menu
SET_PLAYER_*
```
-- @param toggle BOOL
-- _SET_PLAYER_IS_IN_DIRECTOR_MODE(toggle)

--- _SET_SCRIPT_VARIABLE_2_HUD_COLOUR
-- ```
Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
```
-- @param r int
-- @param g int
-- @param b int
-- @param a int
-- _SET_SCRIPT_VARIABLE_2_HUD_COLOUR(r, g, b, a)

--- _SET_USE_WAYPOINT_AS_DESTINATION
-- Sets a global mode which makes the pause menu map show 'Destination' instead of 'Waypoint' in the key legend on the
bottom of the screen.

<!--

Name guess:

  - alphabetical function order, below [SET_USER_RADIO_CONTROL_ENABLED, SET_USE_HI_DOF], above SET_VARIABLE_ON_SOUND.

-->
-- @param toggle BOOL - `true` to show 'Destination', `false` to show 'Waypoint' (the default)
-- _SET_USE_WAYPOINT_AS_DESTINATION(toggle)

--- _SET_WARNING_MESSAGE_LIST_ROW
-- ```
Param names copied from the corresponding scaleform function "SET_LIST_ROW"
```
-- @param index int
-- @param name char*
-- @param cash int
-- @param rp int
-- @param lvl int
-- @param colour int
-- _SET_WARNING_MESSAGE_LIST_ROW(index, name, cash, rp, lvl, colour)

--- _SET_WARNING_MESSAGE_WITH_ALERT
-- instructionalKey enum list:

```
Buttons = {
      Empty = 0,
      Select = 1, -- (RETURN)
      Ok = 2, -- (RETURN)
      Yes = 4, -- (RETURN)
      Back = 8, -- (ESC)
      Cancel = 16, -- (ESC)
      No = 32, -- (ESC)
      RetrySpace = 64, -- (SPACE)
      Restart = 128, -- (SPACE)
      Skip = 256, -- (SPACE)
      Quit = 512, -- (ESC)
      Adjust = 1024, -- (ARROWS)
      SpaceKey = 2048, -- (SPACE)
      Share = 4096, -- (SPACE)
      SignIn = 8192, -- (SPACE)
      Continue = 16384, -- (RETURN)
      AdjustLeftRight = 32768, -- (SCROLL L/R)
      AdjustUpDown = 65536, -- (SCROLL U/D)
      Overwrite = 131072, -- (SPACE)
      SocialClubSignup = 262144, -- (RETURN)
      Confirm = 524288, -- (RETURN)
      Queue = 1048576, -- (RETURN)
      RetryReturn = 2097152, -- (RETURN)
      BackEsc = 4194304, -- (ESC)
      SocialClub = 8388608, -- (RETURN)
      Spectate = 16777216, -- (SPACE)
      OkEsc = 33554432, -- (ESC)
      CancelTransfer = 67108864, -- (ESC)
      LoadingSpinner = 134217728,
      NoReturnToGTA = 268435456, -- (ESC)
      CancelEsc = 536870912, -- (ESC)
}

Alt = {
      Empty = 0,
      No = 1, -- (SPACE)
      Host = 2, -- (ESC)
      SearchForJob = 4, -- (RETURN)
      ReturnKey = 8, -- (TURN)
      Freemode = 16, -- (ESC)
}
```

**Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
-- @param labelTitle char* - Label of the alert's title.
-- @param labelMsg char* - Label of the alert's message.
-- @param p2 int - This is an enum, check the description for a list.
-- @param p3 int - This is an enum, check the description for a list.
-- @param labelMsg2 char* - Label of another message line
-- @param p5 BOOL - usually 0
-- @param p6 int - usually -1
-- @param p7 int - usually 0
-- @param p8 char* - unknown label
-- @param p9 char* - unknown label
-- @param background BOOL - Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
-- @param errorCode int - Error code, shown at the bottom left if set to value other than 0.
-- _SET_WARNING_MESSAGE_WITH_ALERT(labelTitle, labelMsg, p2, p3, labelMsg2, p5, p6, p7, p8, p9, background, errorCode)

--- _SHOW_HAS_COMPLETED_INDICATOR_ON_BLIP
-- ```
Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
_SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
```

```
NativeDB Introduced: v2699
```
-- @param blip Blip
-- @param toggle BOOL
-- _SHOW_HAS_COMPLETED_INDICATOR_ON_BLIP(blip, toggle)

--- _SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME
-- SHOW_\*

```
NativeDB Introduced: v1734
```
-- @param id int
-- _SHOW_SCRIPTED_HUD_COMPONENT_THIS_FRAME(id)

--- _SHOW_SIGNIN_UI
-- _SHOW_SIGNIN_UI()

--- _THEFEED_DISABLE_LOADING_SCREEN_TIPS
-- Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
-- _THEFEED_DISABLE_LOADING_SCREEN_TIPS()

--- _THEFEED_DISPLAY_LOADING_SCREEN_TIPS
-- Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
-- _THEFEED_DISPLAY_LOADING_SCREEN_TIPS()

--- _THEFEED_SET_ANIMPOSTFX_COLOR
-- @param red int
-- @param green int
-- @param blue int
-- @param alpha int
-- _THEFEED_SET_ANIMPOSTFX_COLOR(red, green, blue, alpha)

--- _THEFEED_SET_ANIMPOSTFX_COUNT
-- Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
-- @param count int
-- _THEFEED_SET_ANIMPOSTFX_COUNT(count)

--- _THEFEED_SET_ANIMPOSTFX_SOUND
-- ```
Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
```
-- @param toggle BOOL
-- _THEFEED_SET_ANIMPOSTFX_SOUND(toggle)

--- _THEFEED_SET_FLUSH_ANIMPOSTFX
-- ```
If true, remove all feed components instantly. Otherwise tween/animate close each component
```
-- @param toggle BOOL
-- _THEFEED_SET_FLUSH_ANIMPOSTFX(toggle)

--- _THEFEED_SET_NEXT_POST_BACKGROUND_COLOR
-- ```
From the decompiled scripts:
HUD::_92F0DA1E27DB96DC(6);
HUD::_92F0DA1E27DB96DC(184);
HUD::_92F0DA1E27DB96DC(190);
sets background color for the next notification
6 = red
184 = green
190 = yellow
Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
```
-- @param hudColorIndex int
-- _THEFEED_SET_NEXT_POST_BACKGROUND_COLOR(hudColorIndex)


-- ========== INTERIOR ==========

--- 0x38C1CB1CB119A016
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- 0x38C1CB1CB119A016(p0, p1)

--- 0x405DC2AEF6AF95B9
-- ```
Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));  
```
-- @param roomHashKey Hash
-- 0x405DC2AEF6AF95B9(roomHashKey)

--- 0x483ACA1176CA93F1
-- 0x483ACA1176CA93F1()

--- 0x4C2330E61D3DEB56
-- ```
Only used once in the entire game scripts.
Does not actually return anything.
```
-- @param interior int
-- 0x4C2330E61D3DEB56(interior)

--- 0x7241CCB7D020DB69
-- ```
Jenkins hash _might_ be 0xFC227584.
```
-- @param entity Entity
-- @param toggle BOOL
-- 0x7241CCB7D020DB69(entity, toggle)

--- 0x7ECDF98587E92DEC
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- 0x7ECDF98587E92DEC(p0)

--- 0x82EBB79E258FA2B7
-- @param entity Entity
-- @param interiorID int
-- 0x82EBB79E258FA2B7(entity, interiorID)

--- 0x9E6542F0CE8E70A3
-- ```
DISABLE_*
```
-- @param toggle BOOL
-- 0x9E6542F0CE8E70A3(toggle)

--- 0xAF348AFCB575A441
-- ```
Exemple of use(carmod_shop.c4)  
INTERIOR::_AF348AFCB575A441("V_CarModRoom");  
```
-- @param roomName char*
-- 0xAF348AFCB575A441(roomName)

--- ACTIVATE_INTERIOR_ENTITY_SET
-- ```
More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/  
```
-- @param interior int
-- @param entitySetName char*
-- ACTIVATE_INTERIOR_ENTITY_SET(interior, entitySetName)

--- ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME
-- @param pickup Pickup
-- @param roomName char*
-- ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(pickup, roomName)

--- CAP_INTERIOR
-- ```
Does something similar to INTERIOR::DISABLE_INTERIOR  
```
-- @param interiorID int
-- @param toggle BOOL
-- CAP_INTERIOR(interiorID, toggle)

--- CLEAR_ROOM_FOR_ENTITY
-- @param entity Entity
-- CLEAR_ROOM_FOR_ENTITY(entity)

--- CLEAR_ROOM_FOR_GAME_VIEWPORT
-- CLEAR_ROOM_FOR_GAME_VIEWPORT()

--- DEACTIVATE_INTERIOR_ENTITY_SET
-- @param interior int
-- @param entitySetName char*
-- DEACTIVATE_INTERIOR_ENTITY_SET(interior, entitySetName)

--- DISABLE_INTERIOR
-- ```
Example:   
This removes the interior from the strip club and when trying to walk inside the player just falls:  
INTERIOR::DISABLE_INTERIOR(118018, true);  
```
-- @param interiorID int
-- @param toggle BOOL
-- DISABLE_INTERIOR(interiorID, toggle)

--- ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME
-- ```
This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
```
-- @param mapObjectHash Hash
-- ENABLE_EXTERIOR_CULL_MODEL_THIS_FRAME(mapObjectHash)

--- FORCE_ROOM_FOR_ENTITY
-- ```
Forces the particular room in an interior to load incase not teleporting into the portal.
```
-- @param entity Entity
-- @param interior int
-- @param roomHashKey Hash
-- FORCE_ROOM_FOR_ENTITY(entity, interior, roomHashKey)

--- FORCE_ROOM_FOR_GAME_VIEWPORT
-- @param interiorID int
-- @param roomHashKey Hash
-- FORCE_ROOM_FOR_GAME_VIEWPORT(interiorID, roomHashKey)

--- GET_INTERIOR_AT_COORDS
-- ```
Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.  
Example for VB.NET  
Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)  
```
-- @param x float
-- @param y float
-- @param z float
-- GET_INTERIOR_AT_COORDS(x, y, z)

--- GET_INTERIOR_AT_COORDS_WITH_TYPE
-- ```
Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.  
Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))  
Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.  
Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param interiorType char*
-- GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interiorType)

--- GET_INTERIOR_AT_COORDS_WITH_TYPEHASH
-- ```
Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
```
-- @param x float
-- @param y float
-- @param z float
-- @param typeHash Hash
-- GET_INTERIOR_AT_COORDS_WITH_TYPEHASH(x, y, z, typeHash)

--- GET_INTERIOR_FROM_COLLISION
-- @param x float
-- @param y float
-- @param z float
-- GET_INTERIOR_FROM_COLLISION(x, y, z)

--- GET_INTERIOR_FROM_ENTITY
-- ```
Returns the handle of the interior that the entity is in. Returns 0 if outside.  
```
-- @param entity Entity
-- GET_INTERIOR_FROM_ENTITY(entity)

--- GET_INTERIOR_FROM_PRIMARY_VIEW
-- ```
NativeDB Introduced: v1604
```
-- GET_INTERIOR_FROM_PRIMARY_VIEW()

--- GET_INTERIOR_GROUP_ID
-- ```
Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.  
```
-- @param interior int
-- GET_INTERIOR_GROUP_ID(interior)

--- GET_INTERIOR_HEADING
-- ```
NativeDB Introduced: v1493
```
-- @param interior int - ID of the interior
-- GET_INTERIOR_HEADING(interior)

--- GET_INTERIOR_LOCATION_AND_NAMEHASH
-- ```
NativeDB Introduced: v1290
```
-- @param interior int
-- @param position Vector3*
-- @param nameHash Hash*
-- GET_INTERIOR_LOCATION_AND_NAMEHASH(interior, position, nameHash)

--- GET_KEY_FOR_ENTITY_IN_ROOM
-- ```
Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY  
```
-- @param entity Entity
-- GET_KEY_FOR_ENTITY_IN_ROOM(entity)

--- GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS
-- @param interior int
-- @param x float
-- @param y float
-- @param z float
-- GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(interior, x, y, z)

--- GET_ROOM_KEY_FOR_GAME_VIEWPORT
-- GET_ROOM_KEY_FOR_GAME_VIEWPORT()

--- GET_ROOM_KEY_FROM_ENTITY
-- ```
Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.  
```
-- @param entity Entity
-- GET_ROOM_KEY_FROM_ENTITY(entity)

--- IS_COLLISION_MARKED_OUTSIDE
-- Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
-- @param x float
-- @param y float
-- @param z float
-- IS_COLLISION_MARKED_OUTSIDE(x, y, z)

--- IS_INTERIOR_CAPPED
-- @param interiorID int
-- IS_INTERIOR_CAPPED(interiorID)

--- IS_INTERIOR_DISABLED
-- @param interior int
-- IS_INTERIOR_DISABLED(interior)

--- IS_INTERIOR_ENTITY_SET_ACTIVE
-- @param interior int
-- @param entitySetName char*
-- IS_INTERIOR_ENTITY_SET_ACTIVE(interior, entitySetName)

--- IS_INTERIOR_READY
-- @param interiorID int
-- IS_INTERIOR_READY(interiorID)

--- IS_INTERIOR_SCENE
-- IS_INTERIOR_SCENE()

--- IS_VALID_INTERIOR
-- @param interior int
-- IS_VALID_INTERIOR(interior)

--- PIN_INTERIOR_IN_MEMORY
-- @param interior int
-- PIN_INTERIOR_IN_MEMORY(interior)

--- REFRESH_INTERIOR
-- @param interiorID int
-- REFRESH_INTERIOR(interiorID)

--- UNPIN_INTERIOR
-- ```
Does something similar to INTERIOR::DISABLE_INTERIOR.  
You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.  
```
-- @param interior int
-- UNPIN_INTERIOR(interior)

--- _CLEAR_INTERIOR_FOR_ENTITY
-- Immediately removes entity from an interior. Like sets entity to `limbo` room.

```
NativeDB Introduced: v2189
```
-- @param entity Entity
-- _CLEAR_INTERIOR_FOR_ENTITY(entity)

--- _ENABLE_SCRIPT_CULL_MODEL_THIS_FRAME
-- @param mapObjectHash Hash
-- _ENABLE_SCRIPT_CULL_MODEL_THIS_FRAME(mapObjectHash)

--- _SET_INTERIOR_ENTITY_SET_COLOR
-- @param interior int
-- @param entitySetName char*
-- @param color int
-- _SET_INTERIOR_ENTITY_SET_COLOR(interior, entitySetName, color)


-- ========== ITEMSET ==========

--- ADD_TO_ITEMSET
-- @param p0 Any
-- @param p1 Any
-- ADD_TO_ITEMSET(p0, p1)

--- CLEAN_ITEMSET
-- @param p0 Any
-- CLEAN_ITEMSET(p0)

--- CREATE_ITEMSET
-- @param distri BOOL
-- CREATE_ITEMSET(distri)

--- DESTROY_ITEMSET
-- @param p0 Any
-- DESTROY_ITEMSET(p0)

--- GET_INDEXED_ITEM_IN_ITEMSET
-- @param p0 Any
-- @param p1 Any
-- GET_INDEXED_ITEM_IN_ITEMSET(p0, p1)

--- GET_ITEMSET_SIZE
-- @param x ScrHandle
-- GET_ITEMSET_SIZE(x)

--- IS_IN_ITEMSET
-- @param p0 Any
-- @param p1 Any
-- IS_IN_ITEMSET(p0, p1)

--- IS_ITEMSET_VALID
-- @param p0 Any
-- IS_ITEMSET_VALID(p0)

--- REMOVE_FROM_ITEMSET
-- @param p0 Any
-- @param p1 Any
-- REMOVE_FROM_ITEMSET(p0, p1)


-- ========== LOADINGSCREEN ==========

--- 0xF2CA003F167E21D2
-- 0xF2CA003F167E21D2()

--- 0xFA1E0E893D915215
-- @param toggle BOOL
-- 0xFA1E0E893D915215(toggle)

--- _LOADINGSCREEN_GET_LOAD_FREEMODE
-- _LOADINGSCREEN_GET_LOAD_FREEMODE()

--- _LOADINGSCREEN_GET_LOAD_FREEMODE_WITH_EVENT_NAME
-- _LOADINGSCREEN_GET_LOAD_FREEMODE_WITH_EVENT_NAME()

--- _LOADINGSCREEN_IS_LOADING_FREEMODE
-- _LOADINGSCREEN_IS_LOADING_FREEMODE()

--- _LOADINGSCREEN_SET_IS_LOADING_FREEMODE
-- @param toggle BOOL
-- _LOADINGSCREEN_SET_IS_LOADING_FREEMODE(toggle)

--- _LOADINGSCREEN_SET_LOAD_FREEMODE
-- @param toggle BOOL
-- _LOADINGSCREEN_SET_LOAD_FREEMODE(toggle)

--- _LOADINGSCREEN_SET_LOAD_FREEMODE_WITH_EVENT_NAME
-- ```
Only occurrence was false, in maintransition.  
```
-- @param toggle BOOL
-- _LOADINGSCREEN_SET_LOAD_FREEMODE_WITH_EVENT_NAME(toggle)


-- ========== LOCALIZATION ==========

--- GET_CURRENT_LANGUAGE
-- ```
0 = american (en-US)
1 = french (fr-FR)
2 = german (de-DE)
3 = italian (it-IT)
4 = spanish (es-ES)
5 = brazilian (pt-BR)
6 = polish (pl-PL)
7 = russian (ru-RU)
8 = korean (ko-KR)
9 = chinesetrad (zh-TW)
10 = japanese (ja-JP)
11 = mexican (es-MX)
12 = chinesesimp (zh-CN)
```
-- GET_CURRENT_LANGUAGE()

--- _LOCALIZATION_GET_SYSTEM_DATE_FORMAT
-- ```
Possible return values: 0, 1, 2
```
-- _LOCALIZATION_GET_SYSTEM_DATE_FORMAT()

--- _LOCALIZATION_GET_SYSTEM_LANGUAGE
-- ```
Same return values as GET_CURRENT_LANGUAGE
```
-- _LOCALIZATION_GET_SYSTEM_LANGUAGE()


-- ========== MISC ==========

--- 0x06462A961E94B67C
-- ```
CLEAR_*
```
-- 0x06462A961E94B67C()

--- 0x1178E104409FE58C
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0x1178E104409FE58C(p0, p1)

--- 0x19BFED045C647C49
-- ```
GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing
```
-- @param ped Ped
-- 0x19BFED045C647C49(ped)

--- 0x2107A3773771186D
-- ```
HAS_*
```
-- 0x2107A3773771186D()

--- 0x21C235BC64831E5A
-- ```
GET_C*
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 BOOL
-- 0x21C235BC64831E5A(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- 0x23227DF0B2115469
-- **This native does absolutely nothing, just a nullsub**
-- 0x23227DF0B2115469()

--- 0x31125FD509D9043F
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any*
-- 0x31125FD509D9043F(p0)

--- 0x39455BF4F4F55186
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- @param p10 Any
-- @param p11 Any
-- @param p12 Any
-- 0x39455BF4F4F55186(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)

--- 0x397BAA01068BAA96
-- 0x397BAA01068BAA96()

--- 0x48F069265A0E4BEC
-- ```
Only found 3 times in decompiled scripts. Not a whole lot to go off of.
MISC::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");
MISC::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");
MISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A/*6*/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"
```
-- @param p0 Any*
-- @param name char*
-- 0x48F069265A0E4BEC(p0, name)

--- 0x54F157E0336A3822
-- ```
From the scripts:
MISC::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);
Related to tennis mode.
SET_*
```
-- @param ped Ped
-- @param p1 char*
-- @param p2 float
-- 0x54F157E0336A3822(ped, p1, p2)

--- 0x5B1F2E327B6B6FE1
-- 0x5B1F2E327B6B6FE1()

--- 0x65D2EBB47E1CEC21
-- ```
Sets GtaThread+0x14A

SET_S*
```
-- @param toggle BOOL
-- 0x65D2EBB47E1CEC21(toggle)

--- 0x693478ACBD7F18E7
-- 0x693478ACBD7F18E7()

--- 0x6F2135B6129620C1
-- ```
Sets bit 3 in GtaThread+0x150

SET_T*
```
-- @param toggle BOOL
-- 0x6F2135B6129620C1(toggle)

--- 0x6FDDF453C0C756EC
-- ```
HAS_*
Probably something like "has game been started for the first time".
```
-- 0x6FDDF453C0C756EC()

--- 0x703CC7F60CBB2B57
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- 0x703CC7F60CBB2B57(p0)

--- 0x7EC6F9A478A6A512
-- ```
Possibly used to clear scenario points.

CLEAR_*
```
-- 0x7EC6F9A478A6A512()

--- 0x7F8F6405F4777AF6
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 BOOL
-- 0x7F8F6405F4777AF6(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- 0x8269816F6CFD40F8
-- ```
Only found 2 times in decompiled scripts. Not a whole lot to go off of.
MISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0/*8*/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"
MISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A/*8*/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"
```
-- @param p0 Any*
-- @param name char*
-- 0x8269816F6CFD40F8(p0, name)

--- 0x8951EB9C6906D3C8
-- **This native does absolutely nothing, just a nullsub**
-- 0x8951EB9C6906D3C8()

--- 0x8D74E26F54B4E5C3
-- ```
I*
```
-- @param p0 char*
-- 0x8D74E26F54B4E5C3(p0)

--- 0x916CA67D26FD1E37
-- Does nothing (it's a nullsub). Seems to be PS4 specific.

```
NativeDB Introduced: v2060
```
-- @param p0 char*
-- 0x916CA67D26FD1E37(p0)

--- 0x97E7E2C04245115B
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- 0x97E7E2C04245115B(p0)

--- 0xA0AD167E4B39D9A2
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- @param p10 Any
-- @param p11 Any
-- @param p12 Any
-- @param p13 Any
-- 0xA0AD167E4B39D9A2(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)

--- 0xA4A0065E39C9F25C
-- ```
GET_SAVE_*

GET_SAVE_UNLESS_CUSTOM_DOT ?
```
-- @param p0 Vector3*
-- @param p1 float*
-- @param fadeInAfterLoad BOOL*
-- @param p3 BOOL*
-- 0xA4A0065E39C9F25C(p0, p1, fadeInAfterLoad, p3)

--- 0xB51B9AB9EF81868C
-- @param toggle BOOL
-- 0xB51B9AB9EF81868C(toggle)

--- 0xBA4B8D83BDC75551
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- 0xBA4B8D83BDC75551(p0)

--- 0xD10282B6E3751BA0
-- 0xD10282B6E3751BA0()

--- 0xD642319C54AADEB6
-- 0xD642319C54AADEB6()

--- 0xD9F692D349249528
-- ```
RESET_*
```
-- 0xD9F692D349249528()

--- 0xE3D969D2785FFB5E
-- ```
sets something to 1  
```
-- 0xE3D969D2785FFB5E()

--- 0xE532EC1A63231B4F
-- ```
SET_*
```
-- @param p0 int
-- @param p1 int
-- 0xE532EC1A63231B4F(p0, p1)

--- 0xE95B0C7D5BA3B96B
-- Related to tennis mode. Checks for `0x0FCED5ADF = swung`
-- @param ped Ped
-- 0xE95B0C7D5BA3B96B(ped)

--- 0xEB078CA2B5E82ADD
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- @param p1 Any
-- 0xEB078CA2B5E82ADD(p0, p1)

--- 0xEB2104E905C6F2E9
-- 0xEB2104E905C6F2E9()

--- 0xEBD3205A207939ED
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any*
-- 0xEBD3205A207939ED(p0)

--- 0xFA3FFB0EEBC288A3
-- ```
NativeDB Introduced: v2060
```
-- @param p0 BOOL
-- 0xFA3FFB0EEBC288A3(p0)

--- 0xFAA457EF263E8763
-- ```
Another unknown label type...
MISC::_FAA457EF263E8763(a_0, "Thumb_label");
MISC::_FAA457EF263E8763(&a_0._f10, "Photo_label");
MISC::_FAA457EF263E8763(a_0, "GXTlabel");
MISC::_FAA457EF263E8763(&a_0._f21, "StringComp");
MISC::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");
MISC::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");
MISC::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");
MISC::_FAA457EF263E8763(&a_0._f726[v_1A/*16*/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"
MISC::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");
MISC::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");
```
-- @param p0 Any*
-- @param name char*
-- 0xFAA457EF263E8763(p0, name)

--- 0xFB00CA71DA386228
-- 0xFB00CA71DA386228()

--- ABSF
-- @param value float
-- ABSF(value)

--- ABSI
-- @param value int
-- ABSI(value)

--- ACOS
-- @param p0 float
-- ACOS(p0)

--- ACTIVITY_FEED_CREATE
-- Creates and opens a new activity feed post to start filling in.

**Note**: This is a PS4 related native, resulting in a nullsub on the PC platform. This native won't do anything when invoked.
-- @param captionString char* - The main text or caption for the activity feed post. This is the primary message displayed in the feed entry.
-- @param condensedCaptionString char* - A shorter or condensed version of the caption, used in cases where space is limited or a brief summary is required.
-- ACTIVITY_FEED_CREATE(captionString, condensedCaptionString)

--- ADD_HOSPITAL_RESTART
-- ```
Returns the index of the newly created hospital spawn point.  
p3 might be radius?  
```
-- @param x float
-- @param y float
-- @param z float
-- @param p3 float
-- @param p4 Any
-- ADD_HOSPITAL_RESTART(x, y, z, p3, p4)

--- ADD_POLICE_RESTART
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 Any
-- ADD_POLICE_RESTART(p0, p1, p2, p3, p4)

--- ADD_POP_MULTIPLIER_AREA
-- ```
NativeDB Added Parameter 10: BOOL p9
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param p6 float
-- @param p7 float
-- @param p8 BOOL
-- ADD_POP_MULTIPLIER_AREA(x1, y1, z1, x2, y2, z2, p6, p7, p8)

--- ADD_POP_MULTIPLIER_SPHERE
-- ```
This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param pedMultiplier float
-- @param vehicleMultiplier float
-- @param p6 BOOL
-- @param p7 BOOL
-- ADD_POP_MULTIPLIER_SPHERE(x, y, z, radius, pedMultiplier, vehicleMultiplier, p6, p7)

--- ADD_REPLAY_STAT_VALUE
-- @param value Any
-- ADD_REPLAY_STAT_VALUE(value)

--- ADD_STUNT_JUMP
-- See description of [`ADD_STUNT_JUMP_ANGLED`](#\_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
-- @param x1 float - Jump entry left far bottom corner coordinate X.
-- @param y1 float - Jump entry left far bottom corner coordinate Y.
-- @param z1 float - Jump entry left far bottom corner coordinate Z.
-- @param x2 float - Jump entry right near top corner coordinate X.
-- @param y2 float - Jump entry right near top corner coordinate Y.
-- @param z2 float - Jump entry right near top corner coordinate Z.
-- @param x3 float - Landing zone end coordinate X.
-- @param y3 float - Landing zone end coordinate Y.
-- @param z3 float - Landing zone end coordinate Z.
-- @param x4 float - Landing zone start coordinate X.
-- @param y4 float - Landing zone start coordinate Y.
-- @param z4 float - Landing zone start coordinate Z.
-- @param camX float - Stuntcam (cinematic) coordinate x.
-- @param camY float - Stuntcam (cinematic) coordinate y.
-- @param camZ float - Stuntcam (cinematic) coordinate z.
-- @param unk1 int - Unknown, always 150.
-- @param unk2 int - Unknown, always 0.
-- @param unk3 int - Unknown, always 0.
-- ADD_STUNT_JUMP(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ, unk1, unk2, unk3)

--- ADD_STUNT_JUMP_ANGLED
-- Creates a new stunt jump.

The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP\_**ANGLED**.

Info about the specific 'parameter sections':

**x1, y1, z1, x2, y2, z2 and radius1:**

First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.

**x3, y3, z3, x4, y4, z4 and radius2:**

Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).

**camX, camY and camZ:**

The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.

**unk1, unk2 and unk3:**

Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.

Visualized example in-game:

![](https://d.fivem.dev/2019-03-15\_18-24\_c7802\_846.png)

Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
-- @param x1 float - Entry zone bottom left corner x.
-- @param y1 float - Entry zone bottom left corner y.
-- @param z1 float - Entry zone bottom left corner z.
-- @param x2 float - Entry zone top right corner x.
-- @param y2 float - Entry zone top right corner y.
-- @param z2 float - Entry zone top right corner z.
-- @param radius1 float - Probably a "feather" radius for entry zone, you need to enter the jump within the min/max coordinates, or within this radius of those two coordinates.
-- @param x3 float - Landing zone start corner coordinate x.
-- @param y3 float - Landing zone start corner coordinate y.
-- @param z3 float - Landing zone start corner coordinate z.
-- @param x4 float - Landing zone end corner coordinate x.
-- @param y4 float - Landing zone end corner coordinate y.
-- @param z4 float - Landing zone end corner coordinate z.
-- @param radius2 float - Probably a "feather" radius for landing zone, you need to land within the min/max coordinates, or within this radius of those two coordinates.
-- @param camX float - Stunt (cinematic) camera x position.
-- @param camY float - Stunt (cinematic) camera y position.
-- @param camZ float - Stunt (cinematic) camera z position.
-- @param unk1 int - always 150
-- @param unk2 int - always 0
-- @param unk3 int - always 0
-- ADD_STUNT_JUMP_ANGLED(x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ, unk1, unk2, unk3)

--- ALLOW_MISSION_CREATOR_WARP
-- @param toggle BOOL
-- ALLOW_MISSION_CREATOR_WARP(toggle)

--- ARE_PROFILE_SETTINGS_VALID
-- ARE_PROFILE_SETTINGS_VALID()

--- ARE_STRINGS_EQUAL
-- @param string1 char*
-- @param string2 char*
-- ARE_STRINGS_EQUAL(string1, string2)

--- ASIN
-- @param value float
-- ASIN(value)

--- ATAN
-- @param p0 float
-- ATAN(p0)

--- ATAN2
-- @param p0 float
-- @param p1 float
-- ATAN2(p0, p1)

--- BEGIN_REPLAY_STATS
-- @param p0 Any
-- @param p1 Any
-- BEGIN_REPLAY_STATS(p0, p1)

--- BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION
-- @param dispatchService int
-- @param toggle BOOL
-- BLOCK_DISPATCH_SERVICE_RESOURCE_CREATION(dispatchService, toggle)

--- CANCEL_ONSCREEN_KEYBOARD
-- Closes the onscreen keyboard on console versions of the game.

**NOTE:** Do not use this native in FiveM/PC, because [`UPDATE_ONSCREEN_KEYBOARD`](#\_0x0CF2B696BBF945AE) value doesn't get cleaned up and stays as `0`.
You should use [`FORCE_CLOSE_TEXT_INPUT_BOX`](#\_0x8817605C2BA76200) instead.
-- CANCEL_ONSCREEN_KEYBOARD()

--- CANCEL_STUNT_JUMP
-- CANCEL_STUNT_JUMP()

--- CLEAR_ANGLED_AREA_OF_VEHICLES
-- ```
NativeDB Added Parameter 13: Any p12
```
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param p7 BOOL
-- @param p8 BOOL
-- @param p9 BOOL
-- @param p10 BOOL
-- @param p11 BOOL
-- CLEAR_ANGLED_AREA_OF_VEHICLES(x1, y1, z1, x2, y2, z2, width, p7, p8, p9, p10, p11)

--- CLEAR_AREA
-- ```
Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);  
```
-- @param X float
-- @param Y float
-- @param Z float
-- @param radius float
-- @param p4 BOOL
-- @param ignoreCopCars BOOL
-- @param ignoreObjects BOOL
-- @param p7 BOOL
-- CLEAR_AREA(X, Y, Z, radius, p4, ignoreCopCars, ignoreObjects, p7)

--- CLEAR_AREA_LEAVE_VEHICLE_HEALTH
-- ```
MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p4 BOOL
-- @param p5 BOOL
-- @param p6 BOOL
-- @param p7 BOOL
-- CLEAR_AREA_LEAVE_VEHICLE_HEALTH(x, y, z, radius, p4, p5, p6, p7)

--- CLEAR_AREA_OF_COPS
-- Clears an area of cops at the given coordinates and radius.
-- @param x float - The x coordinate of where to clear cops.
-- @param y float - The y coordinate of where to clear cops.
-- @param z float - The z coordinate of where to clear cops.
-- @param radius float - The area radius to clear cops.
-- @param createNetEvent BOOL - specifies whether a `CClearAreaEvent` event of should be created for online use.
-- CLEAR_AREA_OF_COPS(x, y, z, radius, createNetEvent)

--- CLEAR_AREA_OF_OBJECTS
-- ```
I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param flags int
-- CLEAR_AREA_OF_OBJECTS(x, y, z, radius, flags)

--- CLEAR_AREA_OF_PEDS
-- Clears an area of peds at the given coordinates and radius.
-- @param x float - The x coordinate of where to clear peds.
-- @param y float - The y coordinate of where to clear peds.
-- @param z float - The z coordinate of where to clear peds.
-- @param radius float - The area radius to clear peds.
-- @param createNetEvent BOOL - specifies whether a `CClearAreaEvent` event of should be created for online use.
-- CLEAR_AREA_OF_PEDS(x, y, z, radius, createNetEvent)

--- CLEAR_AREA_OF_PROJECTILES
-- Clears an area of projectiles at the given coordinates and radius.
-- @param x float - The x coordinate of where to clear projectiles.
-- @param y float - The y coordinate of where to clear projectiles.
-- @param z float - The z coordinate of where to clear projectiles.
-- @param radius float - The area radius to clear projectiles.
-- @param createNetEvent BOOL - specifies whether a `CClearAreaEvent` event of should be created for online use.
-- CLEAR_AREA_OF_PROJECTILES(x, y, z, radius, createNetEvent)

--- CLEAR_AREA_OF_VEHICLES
-- ```
Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);  
```

```
NativeDB Added Parameter 10: BOOL p9
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p4 BOOL
-- @param p5 BOOL
-- @param p6 BOOL
-- @param p7 BOOL
-- @param p8 BOOL
-- CLEAR_AREA_OF_VEHICLES(x, y, z, radius, p4, p5, p6, p7, p8)

--- CLEAR_BIT
-- ```
This sets bit [offset] of [address] to off.
Example:
MISC::CLEAR_BIT(&bitAddress, 1);
To check if this bit has been enabled:
MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards
```
-- @param address int*
-- @param offset int
-- CLEAR_BIT(address, offset)

--- CLEAR_OVERRIDE_WEATHER
-- CLEAR_OVERRIDE_WEATHER()

--- CLEAR_REPLAY_STATS
-- CLEAR_REPLAY_STATS()

--- CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK
-- Clears the active weather type after a specific amount of time determined by `transitionTimeInMs`.
-- @param transitionTimeInMs int - Transition time in milliseconds.
-- CLEAR_WEATHER_TYPE_NOW_PERSIST_NETWORK(transitionTimeInMs)

--- CLEAR_WEATHER_TYPE_PERSIST
-- CLEAR_WEATHER_TYPE_PERSIST()

--- COMPARE_STRINGS
-- ```
Compares two strings up to a specified number of characters.
Parameters:
str1 - String to be compared.
str2 - String to be compared.
matchCase - Comparison will be case-sensitive.
maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
Returns:
A value indicating the relationship between the strings:
<0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
0 - The contents of both strings are equal.
>0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
Examples:
MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal
MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal
MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal
MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'
MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal
When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'
MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'
```
-- @param str1 char*
-- @param str2 char*
-- @param matchCase BOOL
-- @param maxLength int
-- COMPARE_STRINGS(str1, str2, matchCase, maxLength)

--- CREATE_INCIDENT
-- ```
NativeDB Added Parameter 8: Any p7
NativeDB Added Parameter 9: Any p8
```
-- @param dispatchService int - Refer to [ENABLE_DISPATCH_SERVICE](#\_0xDC0F817884CDD856) for dispatch types
-- @param x float
-- @param y float
-- @param z float
-- @param numUnits int
-- @param radius float
-- @param outIncidentID int*
-- CREATE_INCIDENT(dispatchService, x, y, z, numUnits, radius, outIncidentID)

--- CREATE_INCIDENT_WITH_ENTITY
-- ```
NativeDB Added Parameter 6: Any p5
NativeDB Added Parameter 7: Any p6
```
-- @param dispatchService int - Refer to [ENABLE_DISPATCH_SERVICE](#\_0xDC0F817884CDD856) for dispatch types
-- @param ped Ped
-- @param numUnits int
-- @param radius float
-- @param outIncidentID int*
-- CREATE_INCIDENT_WITH_ENTITY(dispatchService, ped, numUnits, radius, outIncidentID)

--- DELETE_INCIDENT
-- ```
Delete an incident with a given id.  
=======================================================  
Correction, I have change this to int, instead of int*  
as it doesn't use a pointer to the createdIncident.  
If you try it you will crash (or) freeze.  
=======================================================  
```
-- @param incidentId int
-- DELETE_INCIDENT(incidentId)

--- DELETE_STUNT_JUMP
-- @param p0 int
-- DELETE_STUNT_JUMP(p0)

--- DISABLE_HOSPITAL_RESTART
-- ```
The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
```
-- @param hospitalIndex int
-- @param toggle BOOL
-- DISABLE_HOSPITAL_RESTART(hospitalIndex, toggle)

--- DISABLE_POLICE_RESTART
-- ```
Disables the spawn point at the police house on the specified index.
policeIndex: The police house index.
toggle: true to enable the spawn point, false to disable.
- Nacorpio
```
-- @param policeIndex int
-- @param toggle BOOL
-- DISABLE_POLICE_RESTART(policeIndex, toggle)

--- DISABLE_STUNT_JUMP_SET
-- @param p0 int
-- DISABLE_STUNT_JUMP_SET(p0)

--- DISPLAY_ONSCREEN_KEYBOARD
-- Displays a text input box.

```cpp
enum eKeyboardType
{
  ONSCREEN_KEYBOARD_ENGLISH = 0,
  ONSCREEN_KEYBOARD_LOCALISED = 1,
  ONSCREEN_KEYBOARD_PASSWORD = 2,
  ONSCREEN_KEYBOARD_GAMERTAG = 3,
  ONSCREEN_KEYBOARD_EMAIL = 4,
  ONSCREEN_KEYBOARD_BASIC_ENGLISH = 5,
  ONSCREEN_KEYBOARD_FILENAME = 6
};
```
-- @param keyboardType int - See the list above. Default is `0`.
-- @param windowTitle char* - Text label for the title of the box.
-- @param description char* - Has no use on PC.
-- @param defaultText char* - Default text that is written in the input field.
-- @param defaultConcat1 char*
-- @param defaultConcat2 char*
-- @param defaultConcat3 char*
-- @param maxInputLength int - Max number of characters that can be typed (2 - 256).
-- DISPLAY_ONSCREEN_KEYBOARD(keyboardType, windowTitle, description, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength)

--- DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING
-- Displays the text input box with support for input with 500 characters.
-- @param keyboardType int - See [`DISPLAY_ONSCREEN_KEYBOARD`](#\_0x00DC833F2568DBF6)
-- @param windowTitle char* - Text label of the window title.
-- @param description char* - Unused on PC.
-- @param defaultText char* - Default text that is written in the input field.
-- @param defaultConcat1 char*
-- @param defaultConcat2 char*
-- @param defaultConcat3 char*
-- @param defaultConcat4 char*
-- @param defaultConcat5 char*
-- @param defaultConcat6 char*
-- @param defaultConcat7 char*
-- @param maxInputLength int - Value between 2 - 500.
-- DISPLAY_ONSCREEN_KEYBOARD_WITH_LONGER_INITIAL_STRING(keyboardType, windowTitle, description, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength)

--- DOES_POP_MULTIPLIER_AREA_EXIST
-- @param id int
-- DOES_POP_MULTIPLIER_AREA_EXIST(id)

--- DOES_POP_MULTIPLIER_SPHERE_EXIST
-- @param id int
-- DOES_POP_MULTIPLIER_SPHERE_EXIST(id)

--- DO_AUTO_SAVE
-- DO_AUTO_SAVE()

--- ENABLE_DISPATCH_SERVICE
-- Enables or disables the specified 'dispatch service' type. 'Dispatch services' are used for spawning AI response peds/vehicles for events such as a fire in the street (type 3 - DT_FireDepartment), or gunfire in a gang area (type 11 - DT_Gangs).

List of dispatch services:

```cpp
enum eDispatchType
{
	DT_Invalid = 0,
	DT_PoliceAutomobile = 1,
	DT_PoliceHelicopter = 2,
	DT_FireDepartment = 3,
	DT_SwatAutomobile = 4,
	DT_AmbulanceDepartment = 5,
	DT_PoliceRiders = 6,
	DT_PoliceVehicleRequest = 7,
	DT_PoliceRoadBlock = 8,
	DT_PoliceAutomobileWaitPulledOver = 9,
	DT_PoliceAutomobileWaitCruising = 10,
	DT_Gangs = 11,
	DT_SwatHelicopter = 13,
	DT_PoliceBoat = 14,
	DT_ArmyVehicle = 15,
	DT_BikerBackup = 15
};
```

Note that 'dispatch service' has nothing to do with the police scanner (audio), to toggle that, use [SET_AUDIO_FLAG](#\_0xB9EFD5C25018725A) with `'PoliceScannerDisabled'`.
-- @param dispatchService int - The ID of the dispatch service to toggle.
-- @param toggle BOOL - True to enable the dispatch service, false to disable the dispatch service.
-- ENABLE_DISPATCH_SERVICE(dispatchService, toggle)

--- ENABLE_STUNT_JUMP_SET
-- @param p0 int
-- ENABLE_STUNT_JUMP_SET(p0)

--- ENABLE_TENNIS_MODE
-- ```
Makes the ped jump around like they're in a tennis match  
```
-- @param ped Ped
-- @param toggle BOOL
-- @param p2 BOOL
-- ENABLE_TENNIS_MODE(ped, toggle, p2)

--- END_REPLAY_STATS
-- END_REPLAY_STATS()

--- FIND_SPAWN_POINT_IN_DIRECTION
-- ```
Finds a position ahead of the player by predicting the players next actions.  
The positions match path finding node positions.  
When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.  
```
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param dirX float
-- @param dirY float
-- @param dirZ float
-- @param distance float
-- @param spawnPoint Vector3*
-- FIND_SPAWN_POINT_IN_DIRECTION(posX, posY, posZ, dirX, dirY, dirZ, distance, spawnPoint)

--- FORCE_GAME_STATE_PLAYING
-- ```
Sets the localplayer playerinfo state back to playing (State 0)  
States are:  
-1: "Invalid"  
0: "Playing"  
1: "Died"  
2: "Arrested"  
3: "Failed Mission"  
4: "Left Game"  
5: "Respawn"  
6: "In MP Cutscene"  
```
-- FORCE_GAME_STATE_PLAYING()

--- FORCE_LIGHTNING_FLASH
-- ```
creates single lightning+thunder at random position  
```
-- FORCE_LIGHTNING_FLASH()

--- GET_ALLOCATED_STACK_SIZE
-- GET_ALLOCATED_STACK_SIZE()

--- GET_ANGLE_BETWEEN_2D_VECTORS
-- @param x1 float
-- @param y1 float
-- @param x2 float
-- @param y2 float
-- GET_ANGLE_BETWEEN_2D_VECTORS(x1, y1, x2, y2)

--- GET_BITS_IN_RANGE
-- @param var int
-- @param rangeStart int
-- @param rangeEnd int
-- GET_BITS_IN_RANGE(var, rangeStart, rangeEnd)

--- GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param projectileHash Hash
-- @param projectilePos Vector3*
-- @param ownedByPlayer BOOL
-- GET_COORDS_OF_PROJECTILE_TYPE_IN_AREA(x1, y1, z1, x2, y2, z2, projectileHash, projectilePos, ownedByPlayer)

--- GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE
-- @param ped Ped
-- @param weaponHash Hash
-- @param distance float
-- @param outCoords Vector3*
-- @param ownedByPlayer BOOL
-- GET_COORDS_OF_PROJECTILE_TYPE_WITHIN_DISTANCE(ped, weaponHash, distance, outCoords, ownedByPlayer)

--- GET_DISTANCE_BETWEEN_COORDS
-- Returns the distance between two three-dimensional points, optionally ignoring the Z values.
If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.
-- @param x1 float - The X coordinate of the first point.
-- @param y1 float - The Y coordinate of the first point.
-- @param z1 float - The Z coordinate of the first point.
-- @param x2 float - The X coordinate of the second point.
-- @param y2 float - The Y coordinate of the second point.
-- @param z2 float - The Z coordinate of the second point.
-- @param useZ BOOL - Whether or not to use the Z coordinate.
-- GET_DISTANCE_BETWEEN_COORDS(x1, y1, z1, x2, y2, z2, useZ)

--- GET_FAKE_WANTED_LEVEL
-- GET_FAKE_WANTED_LEVEL()

--- GET_FRAME_COUNT
-- Gets the number of the current frame being displayed.
-- GET_FRAME_COUNT()

--- GET_FRAME_TIME
-- Gets the high precision frame time of the last frame in seconds.

*note: the example above is way less precise.*
-- GET_FRAME_TIME()

--- GET_GAME_TIMER
-- GET_GAME_TIMER()

--- GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD
-- Attempts to identify the highest ground Z-coordinate and determine the corresponding surface normal directly beneath a specified 3D coordinate.

```
NativeDB Introduced: v323
```
-- @param x float - X-coordinate of the point to check.
-- @param y float - Y-coordinate of the point to check.
-- @param z float - Z-coordinate of the point to check.
-- @param groundZ float* - A pointer to a float where the ground Z-coordinate will be stored if found.
-- @param normal Vector3* - A pointer to a Vector3 structure where the surface normal at the ground point will be stored.
-- GET_GROUND_Z_AND_NORMAL_FOR_3D_COORD(x, y, z, groundZ, normal)

--- GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD
-- Determines the highest ground Z-coordinate directly below a specified 3D coordinate, excluding any objects at that point. Optionally, water can be considered as ground when determining the highest point.

```
NativeDB Added Parameter 6: BOOL ignoreDistToWaterLevelCheck - If set to true, the distance to the water level will be ignored when checking for water as ground. 
```

```
NativeDB Introduced: v505
```
-- @param x float - X-coordinate of the point to check.
-- @param y float - Y-coordinate of the point to check.
-- @param z float - Z-coordinate of the point to check.
-- @param groundZ float* - A pointer to a float where the ground Z-coordinate will be stored if found.
-- @param waterAsGround BOOL - If set to `true`, water will be included in the check, and its height will be returned if it is higher than the ground level.
-- GET_GROUND_Z_EXCLUDING_OBJECTS_FOR_3D_COORD(x, y, z, groundZ, waterAsGround)

--- GET_GROUND_Z_FOR_3D_COORD
-- This native gets the ground level (ground elevation) and returns the Z coordinate that represents it.
Note: This native can only calculate the elevation when the coordinates are within the render distance of the client.

```
NativeDB Added Parameter 6: BOOL p5
```
-- @param x float - Position on the X-axis to get ground elevation.
-- @param y float - Position on the Y-axis to get ground elevation.
-- @param z float - Position on the Z-axis to get ground elevation.
-- @param groundZ float*
-- @param includeWater BOOL - Determines if the top water level at the specified position should be considered the ground elevation. (It would only matter if the specified position is located above or under the water)
-- GET_GROUND_Z_FOR_3D_COORD(x, y, z, groundZ, includeWater)

--- GET_HASH_KEY
-- This native converts its past string to hash. It is hashed using jenkins one at a time method.
-- @param string char* - The string to hash.
-- GET_HASH_KEY(string)

--- GET_HEADING_FROM_VECTOR_2D
-- ```
dx = x1 - x2
dy = y1 - y2
```
-- @param dx float
-- @param dy float
-- GET_HEADING_FROM_VECTOR_2D(dx, dy)

--- GET_INDEX_OF_CURRENT_LEVEL
-- GET_INDEX_OF_CURRENT_LEVEL()

--- GET_IS_AUTO_SAVE_OFF
-- ```
Returns true if profile setting 208 is equal to 0.
```
-- GET_IS_AUTO_SAVE_OFF()

--- GET_LINE_PLANE_INTERSECTION
-- Determines whether a line segment intersects a plane and, if so, returns the parameter value at which this intersection occurs.

```
NativeDB Introduced: v323
```
-- @param x1 float - The X-coordinate of the first point of the line segment.
-- @param y1 float - The Y-coordinate of the first point of the line segment.
-- @param z1 float - The Z-coordinate of the first point of the line segment. Together, `x1`, `y1`, and `z1` define the starting point of the line segment.
-- @param x2 float - The X-coordinate of the second point of the line segment.
-- @param y2 float - The Y-coordinate of the second point of the line segment.
-- @param z2 float - The Z-coordinate of the second point of the line segment. Together, `x2`, `y2`, and `z2` define the ending point of the line segment.
-- @param planeX float - The X-coordinate of a point on the plane. This, along with `planeY` and `planeZ`, specifies a point that lies on the plane's surface.
-- @param planeY float - The Y-coordinate of a point on the plane.
-- @param planeZ float - The Z-coordinate of a point on the plane.
-- @param planeNormalX float - The X-component of the plane's normal vector. The normal vector is perpendicular to the plane's surface and defines its orientation.
-- @param planeNormalY float - The Y-component of the plane's normal vector.
-- @param planeNormalZ float - The Z-component of the plane's normal vector. Together, `planeNormalX`, `planeNormalY`, and `planeNormalZ` fully describe the plane's orientation in 3D space.
-- @param intersectionParameter float* - A pointer to a float. This parameter is used to return the value of `t` at which the line segment intersects the plane. The value of `t` is a scalar multiplier that can be used to calculate the exact intersection point on the line segment. If the line does not intersect the plane, the value of `t` is not meaningful.
-- GET_LINE_PLANE_INTERSECTION(x1, y1, z1, x2, y2, z2, planeX, planeY, planeZ, planeNormalX, planeNormalY, planeNormalZ, intersectionParameter)

--- GET_MISSION_FLAG
-- GET_MISSION_FLAG()

--- GET_MODEL_DIMENSIONS
-- ```
Gets the dimensions of a model.
Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);
```
-- @param modelHash Hash
-- @param minimum Vector3*
-- @param maximum Vector3*
-- GET_MODEL_DIMENSIONS(modelHash, minimum, maximum)

--- GET_NEXT_WEATHER_TYPE_HASH_NAME
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- GET_NEXT_WEATHER_TYPE_HASH_NAME()

--- GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE
-- @param stackSize int
-- GET_NUMBER_OF_FREE_STACKS_OF_THIS_SIZE(stackSize)

--- GET_NUM_SUCCESSFUL_STUNT_JUMPS
-- GET_NUM_SUCCESSFUL_STUNT_JUMPS()

--- GET_ONSCREEN_KEYBOARD_RESULT
-- ```
Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.  
```
-- GET_ONSCREEN_KEYBOARD_RESULT()

--- GET_PREV_WEATHER_TYPE_HASH_NAME
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- GET_PREV_WEATHER_TYPE_HASH_NAME()

--- GET_PROFILE_SETTING
-- @param profileSetting int
-- GET_PROFILE_SETTING(profileSetting)

--- GET_RAIN_LEVEL
-- GET_RAIN_LEVEL()

--- GET_RANDOM_EVENT_FLAG
-- GET_RANDOM_EVENT_FLAG()

--- GET_RANDOM_FLOAT_IN_RANGE
-- @param startRange float
-- @param endRange float
-- GET_RANDOM_FLOAT_IN_RANGE(startRange, endRange)

--- GET_RANDOM_INT_IN_RANGE
-- @param startRange int
-- @param endRange int
-- GET_RANDOM_INT_IN_RANGE(startRange, endRange)

--- GET_REPLAY_STAT_AT_INDEX
-- @param index int
-- GET_REPLAY_STAT_AT_INDEX(index)

--- GET_REPLAY_STAT_COUNT
-- GET_REPLAY_STAT_COUNT()

--- GET_REPLAY_STAT_MISSION_TYPE
-- GET_REPLAY_STAT_MISSION_TYPE()

--- GET_SIZE_OF_SAVE_DATA
-- @param p0 BOOL
-- GET_SIZE_OF_SAVE_DATA(p0)

--- GET_SNOW_LEVEL
-- GET_SNOW_LEVEL()

--- GET_STATUS_OF_MISSION_REPEAT_SAVE
-- GET_STATUS_OF_MISSION_REPEAT_SAVE()

--- GET_TENNIS_SWING_ANIM_COMPLETE
-- @param ped Ped
-- GET_TENNIS_SWING_ANIM_COMPLETE(ped)

--- GET_TOTAL_SUCCESSFUL_STUNT_JUMPS
-- GET_TOTAL_SUCCESSFUL_STUNT_JUMPS()

--- GET_WIND_DIRECTION
-- Used for hunting in singleplayer and for golfing in both sp and online. The [`GET_HEADING_FROM_VECTOR_2D`](#\_0x2FFB6B224F4B2926) native can be used to get the wind heading from the direction.
-- GET_WIND_DIRECTION()

--- GET_WIND_SPEED
-- GET_WIND_SPEED()

--- HAS_BULLET_IMPACTED_IN_AREA
-- ```
p3 - possibly radius?  
```
-- @param x float
-- @param y float
-- @param z float
-- @param p3 float
-- @param p4 BOOL
-- @param p5 BOOL
-- HAS_BULLET_IMPACTED_IN_AREA(x, y, z, p3, p4, p5)

--- HAS_BULLET_IMPACTED_IN_BOX
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 BOOL
-- @param p7 BOOL
-- HAS_BULLET_IMPACTED_IN_BOX(p0, p1, p2, p3, p4, p5, p6, p7)

--- HAVE_CREDITS_REACHED_END
-- HAVE_CREDITS_REACHED_END()

--- IGNORE_NEXT_RESTART
-- @param toggle BOOL
-- IGNORE_NEXT_RESTART(toggle)

--- IS_AREA_OCCUPIED
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 BOOL
-- @param p7 BOOL
-- @param p8 BOOL
-- @param p9 BOOL
-- @param p10 BOOL
-- @param p11 Any
-- @param p12 BOOL
-- IS_AREA_OCCUPIED(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)

--- IS_AUSSIE_VERSION
-- ```
if (MISC::IS_AUSSIE_VERSION()) {
    sub_127a9(&l_31, 1024); // l_31 |= 1024
    l_129 = 3;
    sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
}
Used to block some of the prostitute stuff due to laws in Australia.
```
-- IS_AUSSIE_VERSION()

--- IS_AUTO_SAVE_IN_PROGRESS
-- IS_AUTO_SAVE_IN_PROGRESS()

--- IS_BIT_SET
-- ```
Returns bit's boolean state from [offset] of [address].
Example:
MISC::IS_BIT_SET(bitAddress, 1);
To enable and disable bits, see:
MISC::SET_BIT(&bitAddress, 1);   // enable
MISC::CLEAR_BIT(&bitAddress, 1); // disable
```
-- @param address int
-- @param offset int
-- IS_BIT_SET(address, offset)

--- IS_BULLET_IN_ANGLED_AREA
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.

For projectiles, see: [`IS_PROJECTILE_TYPE_IN_ANGLED_AREA`](#\_0xF0BC12401061DEA0)
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param ownedByPlayer BOOL
-- IS_BULLET_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, ownedByPlayer)

--- IS_BULLET_IN_AREA
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param ownedByPlayer BOOL
-- IS_BULLET_IN_AREA(x, y, z, radius, ownedByPlayer)

--- IS_BULLET_IN_BOX
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param ownedByPlayer BOOL
-- IS_BULLET_IN_BOX(x1, y1, z1, x2, y2, z2, ownedByPlayer)

--- IS_DURANGO_VERSION
-- IS_DURANGO_VERSION()

--- IS_FRONTEND_FADING
-- ```
This function is hard-coded to always return 0.  
```
-- IS_FRONTEND_FADING()

--- IS_INCIDENT_VALID
-- ```
=======================================================  
Correction, I have change this to int, instead of int*  
as it doesn't use a pointer to the createdIncident.  
If you try it you will crash (or) freeze.  
=======================================================  
```
-- @param incidentId int
-- IS_INCIDENT_VALID(incidentId)

--- IS_JAPANESE_VERSION
-- ```
NativeDB Introduced: 2545
```
-- IS_JAPANESE_VERSION()

--- IS_MEMORY_CARD_IN_USE
-- IS_MEMORY_CARD_IN_USE()

--- IS_MINIGAME_IN_PROGRESS
-- IS_MINIGAME_IN_PROGRESS()

--- IS_NEXT_WEATHER_TYPE
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType char*
-- IS_NEXT_WEATHER_TYPE(weatherType)

--- IS_ORBIS_VERSION
-- IS_ORBIS_VERSION()

--- IS_PC_VERSION
-- IS_PC_VERSION()

--- IS_POINT_OBSCURED_BY_A_MISSION_ENTITY
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 Any
-- IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(p0, p1, p2, p3, p4, p5, p6)

--- IS_POSITION_OCCUPIED
-- The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
-- @param x float - X coordinate of the position to check.
-- @param y float - Y coordinate of the position to check.
-- @param z float - Z coordinate of the position to check.
-- @param range float - The range, seems to not be very accurate during testing.
-- @param p4 BOOL - Unknown, when set to true it seems to always return true no matter what I try.
-- @param checkVehicles BOOL - Check for any vehicles in that area.
-- @param checkPeds BOOL - Check for any peds in that area.
-- @param p7 BOOL - Unknown.
-- @param p8 BOOL - Unknown.
-- @param ignoreEntity Entity - This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
-- @param p10 BOOL - Unknown.
-- IS_POSITION_OCCUPIED(x, y, z, range, p4, checkVehicles, checkPeds, p7, p8, ignoreEntity, p10)

--- IS_PREV_WEATHER_TYPE
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType char*
-- IS_PREV_WEATHER_TYPE(weatherType)

--- IS_PROJECTILE_IN_AREA
-- ```
Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.  
ownedByPlayer = only projectiles fired by the player will be detected.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param ownedByPlayer BOOL
-- IS_PROJECTILE_IN_AREA(x1, y1, z1, x2, y2, z2, ownedByPlayer)

--- IS_PROJECTILE_TYPE_IN_ANGLED_AREA
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.

```
NativeDB Removed Parameter 7: float p7
```
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param p7 float
-- @param weaponHash Hash
-- @param ownedByPlayer BOOL
-- IS_PROJECTILE_TYPE_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, p7, weaponHash, ownedByPlayer)

--- IS_PROJECTILE_TYPE_IN_AREA
-- ```
Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param type int
-- @param ownedByPlayer BOOL
-- IS_PROJECTILE_TYPE_IN_AREA(x1, y1, z1, x2, y2, z2, type, ownedByPlayer)

--- IS_PROJECTILE_TYPE_WITHIN_DISTANCE
-- @param x float
-- @param y float
-- @param z float
-- @param projHash Hash
-- @param radius float
-- @param ownedByPlayer BOOL
-- IS_PROJECTILE_TYPE_WITHIN_DISTANCE(x, y, z, projHash, radius, ownedByPlayer)

--- IS_PS3_VERSION
-- IS_PS3_VERSION()

--- IS_SNIPER_BULLET_IN_AREA
-- ```
Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- IS_SNIPER_BULLET_IN_AREA(x1, y1, z1, x2, y2, z2)

--- IS_SNIPER_INVERTED
-- ```
This function is hard-coded to always return 0.  
```
-- IS_SNIPER_INVERTED()

--- IS_STEAM_VERSION
-- ```
NativeDB Introduced: 2545
```
-- IS_STEAM_VERSION()

--- IS_STRING_NULL
-- @param string char*
-- IS_STRING_NULL(string)

--- IS_STRING_NULL_OR_EMPTY
-- @param string char*
-- IS_STRING_NULL_OR_EMPTY(string)

--- IS_STUNT_JUMP_IN_PROGRESS
-- IS_STUNT_JUMP_IN_PROGRESS()

--- IS_STUNT_JUMP_MESSAGE_SHOWING
-- IS_STUNT_JUMP_MESSAGE_SHOWING()

--- IS_TENNIS_MODE
-- @param ped Ped
-- IS_TENNIS_MODE(ped)

--- IS_THIS_A_MINIGAME_SCRIPT
-- IS_THIS_A_MINIGAME_SCRIPT()

--- IS_XBOX360_VERSION
-- IS_XBOX360_VERSION()

--- LOAD_CLOUD_HAT
-- ```
The following cloudhats are useable:
altostratus
Cirrus
cirrocumulus
Clear 01
Cloudy 01
Contrails
Horizon
horizonband1
horizonband2
horizonband3
horsey
Nimbus
Puffs
RAIN
Snowy 01
Stormy 01
stratoscumulus
Stripey
shower
Wispy
```
-- @param name char*
-- @param transitionTime float
-- LOAD_CLOUD_HAT(name, transitionTime)

--- NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME
-- NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME()

--- NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS
-- ```cpp
enum eFontBitField
{
  FONT_BIT_STANDARD = 1,
  FONT_BIT_CURSIVE = 2,
  FONT_BIT_ROCKSTAR_TAG = 4
  FONT_BIT_LEADERBOARD = 8
  FONT_BIT_CONDENSED = 16
  FONT_BIT_FIXED_WIDTH_NUMBERS = 32
  FONT_BIT_CONDENSED_NOT_GAMERNAME = 64
  FONT_BIT_PRICEDOWN = 128
};
```
-- @param fontBitField int - See the list above.
-- NEXT_ONSCREEN_KEYBOARD_RESULT_WILL_DISPLAY_USING_THESE_FONTS(fontBitField)

--- OVERRIDE_SAVE_HOUSE
-- @param p0 BOOL
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 BOOL
-- @param p6 Vector3*
-- @param p7 float*
-- OVERRIDE_SAVE_HOUSE(p0, p1, p2, p3, p4, p5, p6, p7)

--- PAUSE_DEATH_ARREST_RESTART
-- @param toggle BOOL
-- PAUSE_DEATH_ARREST_RESTART(toggle)

--- PLAY_TENNIS_DIVE_ANIM
-- @param ped Ped
-- @param p1 int
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 BOOL
-- PLAY_TENNIS_DIVE_ANIM(ped, p1, p2, p3, p4, p5)

--- PLAY_TENNIS_SWING_ANIM
-- @param ped Ped
-- @param animDict char*
-- @param animName char*
-- @param p3 float
-- @param p4 float
-- @param p5 BOOL
-- PLAY_TENNIS_SWING_ANIM(ped, animDict, animName, p3, p4, p5)

--- POPULATE_NOW
-- ```
spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called  
```
-- POPULATE_NOW()

--- PRELOAD_CLOUD_HAT
-- ```
Found in the scripts:
MISC::_11B56FBBF7224868("CONTRAILS");
```
-- @param name char*
-- PRELOAD_CLOUD_HAT(name)

--- QUEUE_MISSION_REPEAT_LOAD
-- QUEUE_MISSION_REPEAT_LOAD()

--- QUEUE_MISSION_REPEAT_SAVE
-- Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
-- QUEUE_MISSION_REPEAT_SAVE()

--- QUIT_GAME
-- Quits the game.
-- QUIT_GAME()

--- REGISTER_BOOL_TO_SAVE
-- @param p0 Any*
-- @param name char*
-- REGISTER_BOOL_TO_SAVE(p0, name)

--- REGISTER_ENUM_TO_SAVE
-- @param p0 Any*
-- @param name char*
-- REGISTER_ENUM_TO_SAVE(p0, name)

--- REGISTER_FLOAT_TO_SAVE
-- @param p0 Any*
-- @param name char*
-- REGISTER_FLOAT_TO_SAVE(p0, name)

--- REGISTER_INT_TO_SAVE
-- @param p0 Any*
-- @param name char*
-- REGISTER_INT_TO_SAVE(p0, name)

--- REGISTER_SAVE_HOUSE
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 Any*
-- @param p5 Any
-- @param p6 Any
-- REGISTER_SAVE_HOUSE(p0, p1, p2, p3, p4, p5, p6)

--- REGISTER_TEXT_LABEL_TO_SAVE
-- @param p0 Any*
-- @param name char*
-- REGISTER_TEXT_LABEL_TO_SAVE(p0, name)

--- REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
-- @param p0 Any
-- REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(p0)

--- REMOVE_POP_MULTIPLIER_AREA
-- @param id int
-- @param p1 BOOL
-- REMOVE_POP_MULTIPLIER_AREA(id, p1)

--- REMOVE_POP_MULTIPLIER_SPHERE
-- @param id int
-- @param p1 BOOL
-- REMOVE_POP_MULTIPLIER_SPHERE(id, p1)

--- RESET_DISPATCH_IDEAL_SPAWN_DISTANCE
-- RESET_DISPATCH_IDEAL_SPAWN_DISTANCE()

--- RESET_DISPATCH_SPAWN_BLOCKING_AREAS
-- RESET_DISPATCH_SPAWN_BLOCKING_AREAS()

--- RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS
-- ```
NativeDB Introduced: v323
```
-- @param p0 Any
-- RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(p0)

--- RESTART_GAME
-- In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows the `Disconnecting from GTA Online` warning screen message and quits the game.
After quitting, the game process is started again (as the name implies).
-- RESTART_GAME()

--- SCRIPT_RACE_GET_PLAYER_SPLIT_TIME
-- @param player Player
-- @param p1 int*
-- @param p2 int*
-- SCRIPT_RACE_GET_PLAYER_SPLIT_TIME(player, p1, p2)

--- SCRIPT_RACE_INIT
-- Initializes a script race in GTA:Online and sets up the helper split time system.

```
NativeDB Introduced: v323
```
-- @param numCheckpoints int - The total number of checkpoints in the race
-- @param numLaps int - The total number of laps in the race.
-- @param numPlayers int - The total number of players participating in the race.
-- @param localPlayer Player - Local player in the race.
-- SCRIPT_RACE_INIT(numCheckpoints, numLaps, numPlayers, localPlayer)

--- SCRIPT_RACE_PLAYER_HIT_CHECKPOINT
-- Records that a player has successfully passed a checkpoint during a scripted race in GTA:Online. This native should be used after initializing the race with [`SCRIPT_RACE_INIT`](#\_0x0A60017F841A54F2).

```
NativeDB Introduced: v323
```
-- @param ped Ped - The index of the Ped who hit the checkpoint.
-- @param checkpoint int - The checkpoint number that the player has passed.
-- @param lap int - The current lap that the player is on.
-- @param time int - The time it took for the player to reach this checkpoint from the start of the race or the last checkpoint.
-- SCRIPT_RACE_PLAYER_HIT_CHECKPOINT(ped, checkpoint, lap, time)

--- SCRIPT_RACE_SHUTDOWN
-- SCRIPT_RACE_SHUTDOWN()

--- SET_BIT
-- ```
This sets bit [offset] of [address] to on.
The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
Example:
MISC::SET_BIT(&bitAddress, 1);
To check if this bit has been enabled:
MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards
Please note, this method may assign a value to [address] when used.
```
-- @param address int*
-- @param offset int
-- SET_BIT(address, offset)

--- SET_BITS_IN_RANGE
-- @param var int*
-- @param rangeStart int
-- @param rangeEnd int
-- @param p3 int
-- SET_BITS_IN_RANGE(var, rangeStart, rangeEnd, p3)

--- SET_CLOUDS_ALPHA
-- Allows modification of the cloud opacity. It can also be used in other contexts, such as when the player is in a switch state [`IS_PLAYER_SWITCH_IN_PROGRESS`](#\_0xD9D2CFFF49FAB35F).
-- @param opacity float - The opacity value to set for clouds.
-- SET_CLOUDS_ALPHA(opacity)

--- SET_CLOUD_SETTINGS_OVERRIDE
-- Overrides the cloud settings, which are normally controlled by the weather, with the specified named version. This native allows for custom cloud formations and behaviors that deviate from the default settings associated with the game's current weather conditions.

```
NativeDB Introduced: v323
```
-- @param overrideSettingsName char* - The name of the cloud settings to use. Use a empty string to clear the override and return to the default settings.
-- SET_CLOUD_SETTINGS_OVERRIDE(overrideSettingsName)

--- SET_CREDITS_ACTIVE
-- @param toggle BOOL
-- SET_CREDITS_ACTIVE(toggle)

--- SET_DISPATCH_IDEAL_SPAWN_DISTANCE
-- @param p0 float
-- SET_DISPATCH_IDEAL_SPAWN_DISTANCE(p0)

--- SET_DISPATCH_SPAWN_LOCATION
-- @param x float
-- @param y float
-- @param z float
-- SET_DISPATCH_SPAWN_LOCATION(x, y, z)

--- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS
-- @param p0 Any
-- @param p1 float
-- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(p0, p1)

--- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER
-- @param p0 Any
-- @param p1 float
-- SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(p0, p1)

--- SET_EXPLOSIVE_AMMO_THIS_FRAME
-- @param player Player
-- SET_EXPLOSIVE_AMMO_THIS_FRAME(player)

--- SET_EXPLOSIVE_MELEE_THIS_FRAME
-- @param player Player
-- SET_EXPLOSIVE_MELEE_THIS_FRAME(player)

--- SET_FADE_IN_AFTER_DEATH_ARREST
-- ```
Sets whether the game should fade in after the player dies or is arrested.  
```
-- @param toggle BOOL
-- SET_FADE_IN_AFTER_DEATH_ARREST(toggle)

--- SET_FADE_IN_AFTER_LOAD
-- @param toggle BOOL
-- SET_FADE_IN_AFTER_LOAD(toggle)

--- SET_FADE_OUT_AFTER_ARREST
-- ```
Sets whether the game should fade out after the player is arrested.  
```
-- @param toggle BOOL
-- SET_FADE_OUT_AFTER_ARREST(toggle)

--- SET_FADE_OUT_AFTER_DEATH
-- ```
Sets whether the game should fade out after the player dies.  
```
-- @param toggle BOOL
-- SET_FADE_OUT_AFTER_DEATH(toggle)

--- SET_FAKE_WANTED_LEVEL
-- ```
Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
```
-- @param fakeWantedLevel int
-- SET_FAKE_WANTED_LEVEL(fakeWantedLevel)

--- SET_FIRE_AMMO_THIS_FRAME
-- @param player Player
-- SET_FIRE_AMMO_THIS_FRAME(player)

--- SET_GAME_PAUSED
-- ```
Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe  
```
-- @param toggle BOOL
-- SET_GAME_PAUSED(toggle)

--- SET_GRAVITY_LEVEL
-- ```cpp
enum eGravityLevel
{
    GRAV_EARTH = 0, // earth gravity 9.8m/s2
    GRAV_MOON = 1, // moon gravity 2.4m/s2
    GRAV_LOW = 2, // very low gravity
    GRAV_ZERO = 3 // zero gravity
}
```
-- @param level int
-- SET_GRAVITY_LEVEL(level)

--- SET_INCIDENT_REQUESTED_UNITS
-- @param incidentId int
-- @param dispatchService int
-- @param numUnits int
-- SET_INCIDENT_REQUESTED_UNITS(incidentId, dispatchService, numUnits)

--- SET_INSTANCE_PRIORITY_HINT
-- ```
Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
```
-- @param flag int
-- SET_INSTANCE_PRIORITY_HINT(flag)

--- SET_INSTANCE_PRIORITY_MODE
-- Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
-- @param toggle int - toggles the instance priority mode
-- SET_INSTANCE_PRIORITY_MODE(toggle)

--- SET_MINIGAME_IN_PROGRESS
-- @param toggle BOOL
-- SET_MINIGAME_IN_PROGRESS(toggle)

--- SET_MISSION_FLAG
-- ```
If true, the player can't save the game.   
If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.  
^ also, if the mission flag is already set, the function does nothing at all  
```
-- @param toggle BOOL
-- SET_MISSION_FLAG(toggle)

--- SET_OVERRIDE_WEATHER
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType char*
-- SET_OVERRIDE_WEATHER(weatherType)

--- SET_RANDOM_EVENT_FLAG
-- ```
If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.  
Does nothing if the mission flag is set.  
```
-- @param toggle BOOL
-- SET_RANDOM_EVENT_FLAG(toggle)

--- SET_RANDOM_SEED
-- @param seed int
-- SET_RANDOM_SEED(seed)

--- SET_RANDOM_WEATHER_TYPE
-- SET_RANDOM_WEATHER_TYPE()

--- SET_RIOT_MODE_ENABLED
-- Activates riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
-- @param toggle BOOL - Turn on or off riot mode. Set to `true` to enable riot mode.
-- SET_RIOT_MODE_ENABLED(toggle)

--- SET_SAVE_HOUSE
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- SET_SAVE_HOUSE(p0, p1, p2)

--- SET_SAVE_MENU_ACTIVE
-- ```
ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
```
-- @param ignoreVehicle BOOL
-- SET_SAVE_MENU_ACTIVE(ignoreVehicle)

--- SET_STUNT_JUMPS_CAN_TRIGGER
-- @param toggle BOOL
-- SET_STUNT_JUMPS_CAN_TRIGGER(toggle)

--- SET_SUPER_JUMP_THIS_FRAME
-- Allows the player to perform super jumps. This function must be called every frame for it to work.
It basically OR's a flag for a single frame, allowing the ped to perform a super jump only when the flag is set.
-- @param player Player - The player we are setting this for.
-- SET_SUPER_JUMP_THIS_FRAME(player)

--- SET_THIS_SCRIPT_CAN_BE_PAUSED
-- @param toggle BOOL
-- SET_THIS_SCRIPT_CAN_BE_PAUSED(toggle)

--- SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT
-- Normally, blips can only be removed by the script or resource that created them. However, this native function allows a script to bypass this logic and remove blips from any script.
-- @param toggle BOOL - Bool indicating if the script that called this native can remove blips created by other scripts.
-- SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(toggle)

--- SET_TIME_SCALE
-- ```
Maximum value is 1.  
At a value of 0 the game will still run at a minimum time scale.  
Slow Motion 1: 0.6  
Slow Motion 2: 0.4  
Slow Motion 3: 0.2  
```
-- @param timeScale float
-- SET_TIME_SCALE(timeScale)

--- SET_WEATHER_TYPE_NOW
-- Immediately changes the game's weather to the specified type, which will then persist for one cycle before the game resumes its natural weather progression.

**Note:** This native is not supported in networked sessions. Please refer to [`SET_OVERRIDE_WEATHER`](#\_0xA43D5C6FE51ADBEF) or [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) if you want to override weather in networked sessions.

```
NativeDB Introduced: v323
```

**Weather Types:**

*   CLEAR
*   EXTRASUNNY
*   CLOUDS
*   OVERCAST
*   RAIN
*   CLEARING
*   THUNDER
*   SMOG
*   FOGGY
*   XMAS
*   SNOW
*   SNOWLIGHT
*   BLIZZARD
*   HALLOWEEN
*   NEUTRAL
-- @param weatherType char* - The weather type to set. This should be one of the predefined weather type strings.
-- SET_WEATHER_TYPE_NOW(weatherType)

--- SET_WEATHER_TYPE_NOW_PERSIST
-- Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
-- @param weatherType char*
-- SET_WEATHER_TYPE_NOW_PERSIST(weatherType)

--- SET_WEATHER_TYPE_OVERTIME_PERSIST
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType char* - The weather type to override to.
-- @param time float - A float on how long to take to transition (in seconds).
-- SET_WEATHER_TYPE_OVERTIME_PERSIST(weatherType, time)

--- SET_WEATHER_TYPE_PERSIST
-- Sets the current weather type to persist indefinitely until changed.

**Note:** This native is not supported in networked sessions. Please refer to [`SET_OVERRIDE_WEATHER`](#\_0xA43D5C6FE51ADBEF) or [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) if you want to override weather in networked sessions.

```
NativeDB Introduced: v323
```
-- @param weatherType char* - The weather type to be set as persistent. Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for a list of weather type strings.
-- SET_WEATHER_TYPE_PERSIST(weatherType)

--- SET_WIND
-- Sets the the raw wind speed value. The wind speed will stay persistent until it is reset (see examples).
-- @param speed float - The wind speed (clamped to between 0.0 and 1.0)
-- SET_WIND(speed)

--- SET_WIND_DIRECTION
-- Sets the wind direction. The wind direction will stay persistent until it is reset (see examples).
-- @param direction float - the [wind direction](https://en.wikipedia.org/wiki/Wind_direction) in radians
-- SET_WIND_DIRECTION(direction)

--- SET_WIND_SPEED
-- Using this native will clamp the wind speed value to a range of 0.0 - 12.0. The wind speed will stay persistent until it is reset (see examples).
-- @param speed float - wind speed in meters per second
-- SET_WIND_SPEED(speed)

--- SHOOT_SINGLE_BULLET_BETWEEN_COORDS
-- Shoots a bullet from the first vector to the second vector. The weapon used as weaponHash should already be loaded via REQUEST_WEAPON_ASSET, otherwise the bullet may fail to materialise.
-- @param x1 float - The X coordinate to start the shot at.
-- @param y1 float - The Y coordinate to start the shot at.
-- @param z1 float - The Z coordinate to start the shot at.
-- @param x2 float - The X coordinate the shot should end up at.
-- @param y2 float - The Y coordinate the shot should end up at.
-- @param z2 float - The Z coordinate the shot should end up at.
-- @param damage int - The amount of damage the bullet carries.
-- @param pureAccuracy BOOL - Whether the bullet should have pinpoint accuracy.
-- @param weaponHash Hash - Hash of the weapon the bullet is used as ammunition for.
-- @param ownerPed Ped - Owner of the bullet, e.g. if the bullet kills someone the kill feed shows 'X was shot by ownerPed.'
-- @param isAudible BOOL - Whether the bullet should be audible. Optional, defaults to true
-- @param isInvisible BOOL - Whether the bullet should be invisible. Optional, defaults to false
-- @param speed float - Speed the bullet should fly at. Optional
-- SHOOT_SINGLE_BULLET_BETWEEN_COORDS(x1, y1, z1, x2, y2, z2, damage, pureAccuracy, weaponHash, ownerPed, isAudible, isInvisible, speed)

--- SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY
-- ```
entity - entity to ignore  
```

```
NativeDB Added Parameter 15: Any p14
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param damage int
-- @param p7 BOOL
-- @param weaponHash Hash
-- @param ownerPed Ped
-- @param isAudible BOOL
-- @param isInvisible BOOL
-- @param speed float
-- @param entity Entity
-- SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity)

--- SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW
-- ```
NativeDB Added Parameter 19: Any p18
NativeDB Added Parameter 20: Any p19
NativeDB Added Parameter 21: Any p20
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param damage int
-- @param p7 BOOL
-- @param weaponHash Hash
-- @param ownerPed Ped
-- @param isAudible BOOL
-- @param isInvisible BOOL
-- @param speed float
-- @param entity Entity
-- @param p14 BOOL
-- @param p15 BOOL
-- @param p16 BOOL
-- @param p17 BOOL
-- SHOOT_SINGLE_BULLET_BETWEEN_COORDS_IGNORE_ENTITY_NEW(x1, y1, z1, x2, y2, z2, damage, p7, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, p14, p15, p16, p17)

--- SHOULD_USE_METRIC_MEASUREMENTS
-- Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
-- SHOULD_USE_METRIC_MEASUREMENTS()

--- SLERP_NEAR_QUATERNION
-- This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
-- @param t float - acceleration differenzial (am_rollercoaster.c func\_134)
-- @param x float - rotation parameter (maybe X axys)
-- @param y float - rotation parameter (maybe X axys)
-- @param z float - rotation parameter (maybe X axys)
-- @param w float - rotation parameter (maybe X axys)
-- @param x1 float - rotation parameter (maybe Y axys)
-- @param y1 float - rotation parameter (maybe Y axys)
-- @param z1 float - rotation parameter (maybe Y axys)
-- @param w1 float - rotation parameter (maybe Y axys)
-- @param outX float* - output value calculated (X)
-- @param outY float* - output value calculated (Y)
-- @param outZ float* - output value calculated (Z)
-- @param outW float* - output value calculated (W)
-- SLERP_NEAR_QUATERNION(t, x, y, z, w, x1, y1, z1, w1, outX, outY, outZ, outW)

--- START_SAVE_ARRAY_WITH_SIZE
-- @param p0 Any*
-- @param size int
-- @param arrayName char*
-- START_SAVE_ARRAY_WITH_SIZE(p0, size, arrayName)

--- START_SAVE_DATA
-- @param p0 Any*
-- @param p1 Any
-- @param p2 BOOL
-- START_SAVE_DATA(p0, p1, p2)

--- START_SAVE_STRUCT_WITH_SIZE
-- @param p0 Any*
-- @param size int
-- @param structName char*
-- START_SAVE_STRUCT_WITH_SIZE(p0, size, structName)

--- STOP_SAVE_ARRAY
-- STOP_SAVE_ARRAY()

--- STOP_SAVE_DATA
-- STOP_SAVE_DATA()

--- STOP_SAVE_STRUCT
-- STOP_SAVE_STRUCT()

--- STRING_TO_INT
-- ```
Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.  
If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.  
```
-- @param string char*
-- @param outInteger int*
-- STRING_TO_INT(string, outInteger)

--- SUPRESS_RANDOM_EVENT_THIS_FRAME
-- Suppresses or enables a specific type of random event for the current frame.

```cpp
enum eEventType {
    RC_PED_STEAL_VEHICLE = 0,
    RC_PED_JAY_WALK_LIGHT = 1,
    RC_COP_PURSUE = 2,
    RC_COP_PURSUE_VEHICLE_FLEE_SPAWNED = 3,
    RC_COP_VEHICLE_DRIVING_FAST = 4,
    RC_COP_VEHICLE_DRIVING_SLOW = 5,
    RC_DRIVER_RECKLESS = 6,
    RC_DRIVER_PRO = 7,
    RC_PED_PURSUE_WHEN_HIT_BY_CAR = 8
}
```
-- @param eventType int - The type of the event to be suppressed or enabled. Use the `eEventType` enum for specific event types.
-- @param enable BOOL - Set to `false` to suppress the event for this frame; set to `true` to enable it.
-- SUPRESS_RANDOM_EVENT_THIS_FRAME(eventType, enable)

--- TAN
-- @param p0 float
-- TAN(p0)

--- TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME
-- For a full list, see [here](https://gist.github.com/4mmonium/f76f3ecef649ed275b260b433ea84494).
-- @param scriptName char*
-- TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(scriptName)

--- TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA
-- Enable/disable optional stunt camera.

```
NativeDB Introduced: v757
```
-- @param toggle BOOL - Set to `true` to enable the optional stunt jump camera angles, or `false` to disable them and use the default camera view.
-- TOGGLE_SHOW_OPTIONAL_STUNT_JUMP_CAMERA(toggle)

--- UI_STARTED_END_USER_BENCHMARK
-- Returns whether the In-Game Pause Menu Launched the Benchmark Tests.
-- UI_STARTED_END_USER_BENCHMARK()

--- UNLOAD_CLOUD_HAT
-- ```
Called 4 times in the b617d scripts:
MISC::_A74802FB8D0B7814("CONTRAILS", 0);
```
-- @param name char*
-- @param p1 float
-- UNLOAD_CLOUD_HAT(name, p1)

--- UPDATE_ONSCREEN_KEYBOARD
-- Returns the current state of the text input box.

```cpp
enum eOSKStatus
{
  OSK_INVALID = -1,
  OSK_PENDING = 0,
  OSK_SUCCESS = 1,
  OSK_CANCELLED = 2,
  OSK_FAILED = 3
};
```
-- UPDATE_ONSCREEN_KEYBOARD()

--- USING_MISSION_CREATOR
-- @param toggle BOOL
-- USING_MISSION_CREATOR(toggle)

--- WATER_OVERRIDE_FADE_IN
-- @param p0 float
-- WATER_OVERRIDE_FADE_IN(p0)

--- WATER_OVERRIDE_FADE_OUT
-- @param p0 float
-- WATER_OVERRIDE_FADE_OUT(p0)

--- WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE
-- @param minAmplitude float
-- WATER_OVERRIDE_SET_OCEANNOISEMINAMPLITUDE(minAmplitude)

--- WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE
-- @param amplitude float
-- WATER_OVERRIDE_SET_OCEANWAVEAMPLITUDE(amplitude)

--- WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE
-- @param maxAmplitude float
-- WATER_OVERRIDE_SET_OCEANWAVEMAXAMPLITUDE(maxAmplitude)

--- WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE
-- @param minAmplitude float
-- WATER_OVERRIDE_SET_OCEANWAVEMINAMPLITUDE(minAmplitude)

--- WATER_OVERRIDE_SET_RIPPLEBUMPINESS
-- @param bumpiness float
-- WATER_OVERRIDE_SET_RIPPLEBUMPINESS(bumpiness)

--- WATER_OVERRIDE_SET_RIPPLEDISTURB
-- @param disturb float
-- WATER_OVERRIDE_SET_RIPPLEDISTURB(disturb)

--- WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS
-- @param maxBumpiness float
-- WATER_OVERRIDE_SET_RIPPLEMAXBUMPINESS(maxBumpiness)

--- WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS
-- @param minBumpiness float
-- WATER_OVERRIDE_SET_RIPPLEMINBUMPINESS(minBumpiness)

--- WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE
-- @param amplitude float
-- WATER_OVERRIDE_SET_SHOREWAVEAMPLITUDE(amplitude)

--- WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE
-- @param maxAmplitude float
-- WATER_OVERRIDE_SET_SHOREWAVEMAXAMPLITUDE(maxAmplitude)

--- WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE
-- @param minAmplitude float
-- WATER_OVERRIDE_SET_SHOREWAVEMINAMPLITUDE(minAmplitude)

--- WATER_OVERRIDE_SET_STRENGTH
-- ```
This seems to edit the water wave, intensity around your current location.  
0.0f = Normal  
1.0f = So Calm and Smooth, a boat will stay still.  
3.0f = Really Intense.  
```
-- @param strength float
-- WATER_OVERRIDE_SET_STRENGTH(strength)

--- _ADD_DISPATCH_SPAWN_BLOCKING_ANGLED_AREA
-- To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#\_0x264AC28B01B353A5).

See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- _ADD_DISPATCH_SPAWN_BLOCKING_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width)

--- _ADD_DISPATCH_SPAWN_BLOCKING_AREA
-- @param x1 float
-- @param y1 float
-- @param x2 float
-- @param y2 float
-- _ADD_DISPATCH_SPAWN_BLOCKING_AREA(x1, y1, x2, y2)

--- _ADD_TACTICAL_ANALYSIS_POINT
-- ```
Adds a point related to CTacticalAnalysis
```
-- @param x float
-- @param y float
-- @param z float
-- _ADD_TACTICAL_ANALYSIS_POINT(x, y, z)

--- _CLEANUP_ASYNC_INSTALL
-- _CLEANUP_ASYNC_INSTALL()

--- _CLEAR_CLOUD_HAT
-- _CLEAR_CLOUD_HAT()

--- _CLEAR_RESTART_CUSTOM_POSITION
-- _CLEAR_RESTART_CUSTOM_POSITION()

--- _CLEAR_TACTICAL_ANALYSIS_POINTS
-- _CLEAR_TACTICAL_ANALYSIS_POINTS()

--- _COPY_MEMORY
-- @param dst Any*
-- @param src Any
-- @param size int
-- _COPY_MEMORY(dst, src, size)

--- _GET_BASE_ELEMENT_METADATA
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any
-- @param p4 BOOL
-- _GET_BASE_ELEMENT_METADATA(p1, p2, p3, p4)

--- _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE
-- ```
Returns value of the '-benchmarkIterations' command line option.
```
-- _GET_BENCHMARK_ITERATIONS_FROM_COMMAND_LINE()

--- _GET_BENCHMARK_PASS_FROM_COMMAND_LINE
-- ```
Returns value of the '-benchmarkPass' command line option.
```
-- _GET_BENCHMARK_PASS_FROM_COMMAND_LINE()

--- _GET_BENCHMARK_TIME
-- _GET_BENCHMARK_TIME()

--- _GET_CLOUD_HAT_OPACITY
-- _GET_CLOUD_HAT_OPACITY()

--- _GET_GLOBAL_CHAR_BUFFER
-- ```
Returns pointer to an empty string.
GET_C*
```
-- _GET_GLOBAL_CHAR_BUFFER()

--- _GET_IS_PLAYER_IN_ANIMAL_FORM
-- ```
Although we don't have a jenkins hash for this one, the name is 100% confirmed.
```
-- _GET_IS_PLAYER_IN_ANIMAL_FORM()

--- _GET_NUM_DISPATCHED_UNITS_FOR_PLAYER
-- @param dispatchService int
-- _GET_NUM_DISPATCHED_UNITS_FOR_PLAYER(dispatchService)

--- _GET_POWER_SAVING_MODE_DURATION
-- ```
Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
```
-- _GET_POWER_SAVING_MODE_DURATION()

--- _GET_PROJECTILE_NEAR_PED
-- @param ped Ped
-- @param weaponHash Hash
-- @param distance float
-- @param outCoords Vector3*
-- @param outProjectile Object*
-- @param ownedByPlayer BOOL
-- _GET_PROJECTILE_NEAR_PED(ped, weaponHash, distance, outCoords, outProjectile, ownedByPlayer)

--- _GET_RANDOM_INT_IN_RANGE_2
-- ```
NativeDB Introduced: v1734
```
-- @param startRange int
-- @param endRange int
-- _GET_RANDOM_INT_IN_RANGE_2(startRange, endRange)

--- _GET_WEATHER_TYPE_TRANSITION
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.
-- @param weatherType1 Hash*
-- @param weatherType2 Hash*
-- @param percentWeather2 float*
-- _GET_WEATHER_TYPE_TRANSITION(weatherType1, weatherType2, percentWeather2)

--- _HAS_ASYNC_INSTALL_FINISHED
-- ```
Hardcoded to always return true.
```
-- _HAS_ASYNC_INSTALL_FINISHED()

--- _HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED
-- ```
This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
INT_SCORES_SCORTED was a hash collision
```
-- @param hash Hash
-- @param amount int
-- _HAS_BUTTON_COMBINATION_JUST_BEEN_ENTERED(hash, amount)

--- _HAS_CHEAT_STRING_JUST_BEEN_ENTERED
-- ```
Get inputted "Cheat code", for example:
while (TRUE)
{
    if (MISC::_557E43C447E700A8(${fugitive}))
    {
       // Do something.
    }
    SYSTEM::WAIT(0);
}
Calling this will also set the last saved string hash to zero.
```
-- @param hash Hash
-- _HAS_CHEAT_STRING_JUST_BEEN_ENTERED(hash)

--- _HAS_RESUMED_FROM_SUSPEND
-- ```
Hardcoded to return false.
```
-- _HAS_RESUMED_FROM_SUSPEND()

--- _IS_COMMAND_LINE_BENCHMARK_VALUE_SET
-- ```
Returns true if command line option '-benchmark' is set.
```
-- _IS_COMMAND_LINE_BENCHMARK_VALUE_SET()

--- _IS_IN_POWER_SAVING_MODE
-- ```
aka "constrained"
```
-- _IS_IN_POWER_SAVING_MODE()

--- _IS_POP_MULTIPLIER_AREA_UNK
-- ```
NativeDB Introduced: v1290
```
-- @param id int
-- _IS_POP_MULTIPLIER_AREA_UNK(id)

--- _LANDING_MENU_IS_ACTIVE
-- ```
Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
```
-- _LANDING_MENU_IS_ACTIVE()

--- _REGISTER_INT64_TO_SAVE
-- @param p0 Any*
-- @param name char*
-- _REGISTER_INT64_TO_SAVE(p0, name)

--- _REGISTER_TEXT_LABEL_TO_SAVE_2
-- ```
Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");
MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");
MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");
"tl" prefix sounds like "Text Label"
```
-- @param p0 Any*
-- @param name char*
-- _REGISTER_TEXT_LABEL_TO_SAVE_2(p0, name)

--- _REMOVE_STEALTH_KILL
-- ```
Appears to remove stealth kill action from memory
```
-- @param hash Hash
-- @param p1 BOOL
-- _REMOVE_STEALTH_KILL(hash, p1)

--- _RESET_BENCHMARK_RECORDING
-- ```
Begins with RESET_*. Next character in the name is either D or E.
```
-- _RESET_BENCHMARK_RECORDING()

--- _RESET_DISPATCH_SPAWN_LOCATION
-- ```
NativeDB Introduced: v1868
```
-- _RESET_DISPATCH_SPAWN_LOCATION()

--- _SAVE_BENCHMARK_RECORDING
-- ```
Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
```
-- _SAVE_BENCHMARK_RECORDING()

--- _SET_BEAST_MODE_ACTIVE
-- @param player Player
-- _SET_BEAST_MODE_ACTIVE(player)

--- _SET_FORCE_PLAYER_TO_JUMP
-- ```
NativeDB Introduced: v1180
```
-- @param player Player
-- _SET_FORCE_PLAYER_TO_JUMP(player)

--- _SET_INCIDENT_UNK
-- ```
SET_INCIDENT_*
```
-- @param incidentId int
-- @param p1 float
-- _SET_INCIDENT_UNK(incidentId, p1)

--- _SET_PLAYER_IS_IN_ANIMAL_FORM
-- ```
If toggle is true, the ped's head is shown in the pause menu
If toggle is false, the ped's head is not shown in the pause menu
```
-- @param toggle BOOL
-- _SET_PLAYER_IS_IN_ANIMAL_FORM(toggle)

--- _SET_PLAYER_ROCKSTAR_EDITOR_DISABLED
-- ```
SET_PLAYER_*
```
-- @param toggle BOOL
-- _SET_PLAYER_ROCKSTAR_EDITOR_DISABLED(toggle)

--- _SET_RAIN_LEVEL
-- Controls rain, rain sounds and the creation of puddles.

With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.

With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.

To use the rain level of the current weather, call this native with `-1f` as `level`.
-- @param level float - Strength of rain effects
-- _SET_RAIN_LEVEL(level)

--- _SET_RESTART_CUSTOM_POSITION
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- _SET_RESTART_CUSTOM_POSITION(x, y, z, heading)

--- _SET_SNOW_LEVEL
-- ```
NativeDB Introduced: v1868
```
-- @param level float
-- _SET_SNOW_LEVEL(level)

--- _SET_WEATHER_TYPE_TRANSITION
-- Refer to [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) for weather types.

```
Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:  
execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);  
```
-- @param weatherType1 Hash
-- @param weatherType2 Hash
-- @param percentWeather2 float
-- _SET_WEATHER_TYPE_TRANSITION(weatherType1, weatherType2, percentWeather2)

--- _START_BENCHMARK_RECORDING
-- ```
Begins with START_*. Next character in the name is either D or E.
```
-- _START_BENCHMARK_RECORDING()

--- _STOP_BENCHMARK_RECORDING
-- ```
Begins with STOP_*. Next character in the name is either D or E.
```
-- _STOP_BENCHMARK_RECORDING()


-- ========== MOBILE ==========

--- 0xA2CCBE62CD4C91A4
-- ```
Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
Example (XBOX 360):
// check current filter selection
if (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)
{
    MOBILE::_0xC273BB4D(0); // FALSE
}
else
{
    MOBILE::_0xC273BB4D(1); // TRUE
}
```
-- @param toggle int*
-- 0xA2CCBE62CD4C91A4(toggle)

--- 0xAC2890471901861C
-- @param p0 float
-- 0xAC2890471901861C(p0)

--- CAN_PHONE_BE_SEEN_ON_SCREEN
-- ```
This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.  
I can confirm the above. This function is hard-coded to always return 1.  
```
-- CAN_PHONE_BE_SEEN_ON_SCREEN()

--- CELL_CAM_ACTIVATE
-- Activates the cellphone camera. Make sure you have a mobile phone created with [`CREATE_MOBILE_PHONE`](#\_0xA4E8E696C532FBC7) or else the camera will not work.
-- @param active BOOL - Toggle whether the camera should be active.
-- @param bGoFirstPerson BOOL - Unused parameter.
-- CELL_CAM_ACTIVATE(active, bGoFirstPerson)

--- CELL_CAM_ACTIVATE_SELFIE_MODE
-- Toggles the selfie mode on the cellphone camera. Only visible when the cell phone camera is active.
-- @param toggle BOOL - True to activate and false to deactivate the selfie mode.
-- CELL_CAM_ACTIVATE_SELFIE_MODE(toggle)

--- CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK
-- @param entity Entity
-- CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(entity)

--- CREATE_MOBILE_PHONE
-- ```
Creates a mobile phone of the specified type.  
Possible phone types:  
0 - Default phone / Michael's phone  
1 - Trevor's phone  
2 - Franklin's phone  
4 - Prologue phone  
These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.  
```
-- @param phoneType int
-- CREATE_MOBILE_PHONE(phoneType)

--- DESTROY_MOBILE_PHONE
-- ```
Destroys the currently active mobile phone.  
```
-- DESTROY_MOBILE_PHONE()

--- GET_MOBILE_PHONE_POSITION
-- @param position Vector3*
-- GET_MOBILE_PHONE_POSITION(position)

--- GET_MOBILE_PHONE_RENDER_ID
-- @param renderId int*
-- GET_MOBILE_PHONE_RENDER_ID(renderId)

--- GET_MOBILE_PHONE_ROTATION
-- @param rotation Vector3*
-- @param p1 Vehicle
-- GET_MOBILE_PHONE_ROTATION(rotation, p1)

--- SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN
-- ```
If bool Toggle = true so the mobile is hide to screen.  
If bool Toggle = false so the mobile is show to screen.  
```
-- @param toggle BOOL
-- SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(toggle)

--- SET_MOBILE_PHONE_DOF_STATE
-- Toggles depth of field on the cellphone camera.
-- @param toggle BOOL - true/false to toggle DOF.
-- SET_MOBILE_PHONE_DOF_STATE(toggle)

--- SET_MOBILE_PHONE_POSITION
-- @param posX float
-- @param posY float
-- @param posZ float
-- SET_MOBILE_PHONE_POSITION(posX, posY, posZ)

--- SET_MOBILE_PHONE_ROTATION
-- ```
Last parameter is unknown and always zero.  
```
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param p3 Any
-- SET_MOBILE_PHONE_ROTATION(rotX, rotY, rotZ, p3)

--- SET_MOBILE_PHONE_SCALE
-- ```
The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.  
```
-- @param scale float
-- SET_MOBILE_PHONE_SCALE(scale)

--- _CELL_CAM_MOVE_FINGER
-- Moves the character's finger in a swiping motion when holding a cellphone in their hand through the use of the [CREATE_MOBILE_PHONE](#\_0xA4E8E696C532FBC7) native.

```cpp
enum eCellInput {
    CELL_INPUT_NONE = 0,
    CELL_INPUT_UP = 1,
    CELL_INPUT_DOWN = 2,
    CELL_INPUT_LEFT = 3,
    CELL_INPUT_RIGHT = 4,
    CELL_INPUT_SELECT = 5
}
```
-- @param direction int - The direction to swipe to, refer to `eCellInput` enum.
-- _CELL_CAM_MOVE_FINGER(direction)

--- _CELL_CAM_SET_DISTANCE
-- @param p0 float - Value from -1.0 to 1.0
-- _CELL_CAM_SET_DISTANCE(p0)

--- _CELL_CAM_SET_HEAD_HEIGHT
-- @param p0 float - Value from -1.0 to 0.0
-- _CELL_CAM_SET_HEAD_HEIGHT(p0)

--- _CELL_CAM_SET_HEAD_PITCH
-- @param p0 float - Value from -1.0 to 1.0
-- _CELL_CAM_SET_HEAD_PITCH(p0)

--- _CELL_CAM_SET_HEAD_ROLL
-- @param p0 float - Value from -1.0 to 1.0
-- _CELL_CAM_SET_HEAD_ROLL(p0)

--- _CELL_CAM_SET_HORIZONTAL_OFFSET
-- @param p0 float - Value from -1.0 to 1.0
-- _CELL_CAM_SET_HORIZONTAL_OFFSET(p0)

--- _CELL_CAM_SET_LEAN
-- ```
if the bool "Toggle" is "true" so the phone is lean.  
if the bool "Toggle" is "false" so the phone is not lean.  
```
-- @param toggle BOOL
-- _CELL_CAM_SET_LEAN(toggle)

--- _CELL_CAM_SET_ROLL
-- @param p0 float - Value from -1.0 to 1.0
-- _CELL_CAM_SET_ROLL(p0)

--- _CELL_CAM_SET_VERTICAL_OFFSET
-- @param p0 float - Value from 0.0 to 2.0
-- _CELL_CAM_SET_VERTICAL_OFFSET(p0)


-- ========== MONEY ==========

--- 0x08E8EEADFD0DC4A0
-- ```
Returns false if amount > wallet balance or daily transfer limit has been hit.

NativeDB Introduced: v323
```
-- @param amount int
-- 0x08E8EEADFD0DC4A0(amount)

--- 0x0D30EB83668E63C5
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x0D30EB83668E63C5(p0, p1, p2, p3)

--- 0x0DD362F14F18942A
-- ```
NativeDB Introduced: v1868
```
-- @param amount int
-- @param p1 Any
-- @param p2 Any
-- 0x0DD362F14F18942A(amount, p1, p2)

--- 0x112209CE0290C03A
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x112209CE0290C03A(p0, p1, p2, p3)

--- 0x1DC9B749E7AE282B
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x1DC9B749E7AE282B(p0, p1, p2, p3)

--- 0x226C284C830D0CA8
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x226C284C830D0CA8(p0, p1, p2, p3)

--- 0x2A7CEC72C3443BCC
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x2A7CEC72C3443BCC(p0, p1, p2)

--- 0x2A93C46AAB1EACC9
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x2A93C46AAB1EACC9(p0, p1, p2, p3)

--- 0x2AFC2D19B50797F2
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x2AFC2D19B50797F2(p0, p1, p2, p3)

--- 0x2FAB6614CE22E196
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x2FAB6614CE22E196(p0, p1, p2, p3)

--- 0x31BA138F6304FB9F
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- 0x31BA138F6304FB9F(p0, p1)

--- 0x4128464231E3CA0B
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x4128464231E3CA0B(p0, p1, p2, p3)

--- 0x4C3B75694F7E0D9C
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x4C3B75694F7E0D9C(p0, p1, p2)

--- 0x5574637681911FDA
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x5574637681911FDA(p0, p1, p2, p3)

--- 0x55A1E095DB052FA5
-- @param p0 Any
-- @param p1 Any
-- 0x55A1E095DB052FA5(p0, p1)

--- 0x5F456788B05FAEAC
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x5F456788B05FAEAC(p0, p1, p2)

--- 0x65482BFD0923C8A1
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- 0x65482BFD0923C8A1(p0, p1, p2, p3, p4, p5)

--- 0x675D19C6067CAE08
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x675D19C6067CAE08(p0, p1, p2, p3)

--- 0x69EF772B192614C1
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x69EF772B192614C1(p0, p1, p2, p3)

--- 0x6B7E4FB50D5F3D65
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x6B7E4FB50D5F3D65(p0, p1, p2, p3, p4)

--- 0x6FCF8DDEA146C45B
-- ```
This function is hard-coded to always return 1.
```
-- @param p0 Any
-- 0x6FCF8DDEA146C45B(p0)

--- 0x6FD97159FE3C971A
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x6FD97159FE3C971A(p0, p1, p2, p3)

--- 0x7C4FCCD2E4DEB394
-- 0x7C4FCCD2E4DEB394()

--- 0x870289A558348378
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x870289A558348378(p0, p1, p2, p3)

--- 0x8E243837643D9583
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x8E243837643D9583(p0, p1, p2, p3)

--- 0x90CD7C6871FBF1B4
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x90CD7C6871FBF1B4(p0, p1, p2, p3)

--- 0x998E18CEB44487FC
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x998E18CEB44487FC(p0, p1, p2, p3)

--- 0x9B5016A6433A68C5
-- ```
Hardcoded to return 0.

NativeDB Introduced: v323
```
-- 0x9B5016A6433A68C5()

--- 0xA51338E0DCCD4065
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xA51338E0DCCD4065(p0, p1, p2)

--- 0xA51B086B0B2C0F7A
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xA51B086B0B2C0F7A(p0, p1, p2, p3)

--- 0xA95CFB4E02390842
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xA95CFB4E02390842(p0, p1, p2)

--- 0xA95F667A755725DA
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xA95F667A755725DA(p0, p1, p2, p3)

--- 0xB4C2EC463672474E
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xB4C2EC463672474E(p0, p1, p2, p3)

--- 0xB4DEAE67F35E2ACD
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0xB4DEAE67F35E2ACD(p0)

--- 0xB5B58E24868CB09E
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0xB5B58E24868CB09E(p0, p1, p2, p3, p4)

--- 0xBD0EFB25CCA8F97A
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xBD0EFB25CCA8F97A(p0, p1, p2, p3)

--- 0xC6E74CF8C884C880
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0xC6E74CF8C884C880(p0, p1, p2, p3, p4, p5, p6)

--- 0xCD0F5B5D932AE473
-- ```
Does nothing (it's a nullsub).

NativeDB Introduced: v323
```
-- 0xCD0F5B5D932AE473()

--- 0xCD4D66B43B1DD28D
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xCD4D66B43B1DD28D(p0, p1, p2)

--- 0xD29334ED1A256DBF
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0xD29334ED1A256DBF(p0, p1, p2, p3, p4)

--- 0xDE68E30D89F97132
-- ```
NativeDB Introduced: v2060
```
-- @param amount int
-- @param p1 Any
-- 0xDE68E30D89F97132(amount, p1)

--- 0xE0F82D68C7039158
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0xE0F82D68C7039158(p0)

--- 0xE154B48B68EF72BC
-- ```
This function is hard-coded to always return 1.  
```
-- @param p0 Any
-- 0xE154B48B68EF72BC(p0)

--- 0xE23ADC6FCB1F29AE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xE23ADC6FCB1F29AE(p0, p1, p2)

--- 0xE2BB399D90942091
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0xE2BB399D90942091(p0, p1)

--- 0xE2E244AB823B4483
-- ```
NativeDB Introduced: v2060
```
-- @param amount int
-- @param p1 Any
-- 0xE2E244AB823B4483(amount, p1)

--- 0xED5FD7AF10F5E262
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xED5FD7AF10F5E262(p0, p1, p2, p3)

--- 0xED76D195E6E3BF7F
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xED76D195E6E3BF7F(p0, p1, p2, p3)

--- 0xFA07759E6FDDD7CF
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xFA07759E6FDDD7CF(p0, p1, p2, p3)

--- DEPOSIT_VC
-- ```
Does nothing and always returns false.
```
-- @param amount int
-- DEPOSIT_VC(amount)

--- NETWORK_BUY_AIRSTRIKE
-- ```
p1 = 0 (always)  
p2 = 1 (always)  
```
-- @param cost int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_BUY_AIRSTRIKE(cost, p1, p2)

--- NETWORK_BUY_BACKUP_GANG
-- ```
NativeDB Introduced: v323
```
-- @param p0 int
-- @param p1 int
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_BUY_BACKUP_GANG(p0, p1, p2, p3)

--- NETWORK_BUY_BOUNTY
-- ```
p1 is just an assumption. p2 was false and p3 was true.  
```
-- @param amount int
-- @param victim Player
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_BUY_BOUNTY(amount, victim, p2, p3)

--- NETWORK_BUY_FAIRGROUND_RIDE
-- ```
The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.  
The last 3 parameters are,   
2,0,1 in the am_ferriswheel.c  
1,0,1 in the am_rollercoaster.c  
```
-- @param amountSpent int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_BUY_FAIRGROUND_RIDE(amountSpent, p1, p2, p3)

--- NETWORK_BUY_HEALTHCARE
-- @param cost int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_BUY_HEALTHCARE(cost, p1, p2)

--- NETWORK_BUY_HELI_STRIKE
-- ```
p1 = 0 (always)  
p2 = 1 (always)  
```
-- @param cost int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_BUY_HELI_STRIKE(cost, p1, p2)

--- NETWORK_BUY_ITEM
-- @param amount int
-- @param item Hash
-- @param p2 Any
-- @param p3 Any
-- @param p4 BOOL
-- @param item_name char*
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 BOOL
-- NETWORK_BUY_ITEM(amount, item, p2, p3, p4, item_name, p6, p7, p8, p9)

--- NETWORK_BUY_LOTTERY_TICKET
-- ```
NativeDB Introduced: v323
```
-- @param p0 int
-- @param p1 int
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_BUY_LOTTERY_TICKET(p0, p1, p2, p3)

--- NETWORK_BUY_PROPERTY
-- @param propertyCost int
-- @param propertyName Hash
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_BUY_PROPERTY(propertyCost, propertyName, p2, p3)

--- NETWORK_BUY_SMOKES
-- ```
NativeDB Introduced: v323
```
-- @param p0 int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_BUY_SMOKES(p0, p1, p2)

--- NETWORK_CAN_BET
-- @param amount int
-- NETWORK_CAN_BET(amount)

--- NETWORK_CAN_BUY_LOTTERY_TICKET
-- ```
NativeDB Introduced: v323
```
-- @param cost int
-- NETWORK_CAN_BUY_LOTTERY_TICKET(cost)

--- NETWORK_CAN_RECEIVE_PLAYER_CASH
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- NETWORK_CAN_RECEIVE_PLAYER_CASH(p0, p1, p2, p3)

--- NETWORK_CAN_SHARE_JOB_CASH
-- NETWORK_CAN_SHARE_JOB_CASH()

--- NETWORK_CAN_SPEND_MONEY
-- ```
NativeDB Added Parameter 6: Any p5
```
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- @param p4 Any
-- NETWORK_CAN_SPEND_MONEY(p0, p1, p2, p3, p4)

--- NETWORK_CLEAR_CHARACTER_WALLET
-- @param characterSlot int
-- NETWORK_CLEAR_CHARACTER_WALLET(characterSlot)

--- NETWORK_DELETE_CHARACTER
-- ```
Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);  
```
-- @param characterSlot int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_DELETE_CHARACTER(characterSlot, p1, p2)

--- NETWORK_EARN_FROM_AI_TARGET_KILL
-- ```
DSPORT  
```
-- @param p0 Any
-- @param p1 Any
-- NETWORK_EARN_FROM_AI_TARGET_KILL(p0, p1)

--- NETWORK_EARN_FROM_AMBIENT_JOB
-- ```
Example for p1: "AM_DISTRACT_COPS"  
```
-- @param p0 int
-- @param p1 char*
-- @param p2 Any*
-- NETWORK_EARN_FROM_AMBIENT_JOB(p0, p1, p2)

--- NETWORK_EARN_FROM_BEND_JOB
-- @param amount int
-- @param heistHash char*
-- NETWORK_EARN_FROM_BEND_JOB(amount, heistHash)

--- NETWORK_EARN_FROM_BETTING
-- @param amount int
-- @param p1 char*
-- NETWORK_EARN_FROM_BETTING(amount, p1)

--- NETWORK_EARN_FROM_BOUNTY
-- @param amount int
-- @param networkHandle int*
-- @param p2 Any*
-- @param p3 Any
-- NETWORK_EARN_FROM_BOUNTY(amount, networkHandle, p2, p3)

--- NETWORK_EARN_FROM_CHALLENGE_WIN
-- @param p0 Any
-- @param p1 Any*
-- @param p2 BOOL
-- NETWORK_EARN_FROM_CHALLENGE_WIN(p0, p1, p2)

--- NETWORK_EARN_FROM_CRATE_DROP
-- @param amount int
-- NETWORK_EARN_FROM_CRATE_DROP(amount)

--- NETWORK_EARN_FROM_DAILY_OBJECTIVES
-- @param p0 int
-- @param p1 char*
-- @param p2 int
-- NETWORK_EARN_FROM_DAILY_OBJECTIVES(p0, p1, p2)

--- NETWORK_EARN_FROM_HOLDUPS
-- @param amount int
-- NETWORK_EARN_FROM_HOLDUPS(amount)

--- NETWORK_EARN_FROM_IMPORT_EXPORT
-- @param amount int
-- @param modelHash Hash
-- NETWORK_EARN_FROM_IMPORT_EXPORT(amount, modelHash)

--- NETWORK_EARN_FROM_JOB
-- @param amount int
-- @param p1 char*
-- NETWORK_EARN_FROM_JOB(amount, p1)

--- NETWORK_EARN_FROM_JOB_BONUS
-- ```
NativeDB Introduced: v323
```
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any*
-- NETWORK_EARN_FROM_JOB_BONUS(p0, p1, p2)

--- NETWORK_EARN_FROM_NOT_BADSPORT
-- @param amount int
-- NETWORK_EARN_FROM_NOT_BADSPORT(amount)

--- NETWORK_EARN_FROM_PERSONAL_VEHICLE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- NETWORK_EARN_FROM_PERSONAL_VEHICLE(p0, p1, p2, p3, p4, p5, p6, p7, p8)

--- NETWORK_EARN_FROM_PICKUP
-- @param amount int
-- NETWORK_EARN_FROM_PICKUP(amount)

--- NETWORK_EARN_FROM_PROPERTY
-- @param amount int
-- @param propertyName Hash
-- NETWORK_EARN_FROM_PROPERTY(amount, propertyName)

--- NETWORK_EARN_FROM_ROCKSTAR
-- @param amount int
-- NETWORK_EARN_FROM_ROCKSTAR(amount)

--- NETWORK_EARN_FROM_VEHICLE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- NETWORK_EARN_FROM_VEHICLE(p0, p1, p2, p3, p4, p5, p6, p7)

--- NETWORK_GET_EVC_BALANCE
-- ```
NativeDB Introduced: v323
```
-- NETWORK_GET_EVC_BALANCE()

--- NETWORK_GET_PVC_BALANCE
-- ```
NativeDB Introduced: v323
```
-- NETWORK_GET_PVC_BALANCE()

--- NETWORK_GET_PVC_TRANSFER_BALANCE
-- ```
Same as 0xEA560AC9EEB1E19B.
```

```
Same as 0xEA560AC9EEB1E19B.

NativeDB Introduced: v323
```
-- NETWORK_GET_PVC_TRANSFER_BALANCE()

--- NETWORK_GET_REMAINING_TRANSFER_BALANCE
-- ```
Same as 0x13A8DE2FD77D04F3.

NativeDB Introduced: v323
```
-- NETWORK_GET_REMAINING_TRANSFER_BALANCE()

--- NETWORK_GET_STRING_BANK_BALANCE
-- NETWORK_GET_STRING_BANK_BALANCE()

--- NETWORK_GET_STRING_BANK_WALLET_BALANCE
-- ```
NativeDB Introduced: v323
```
-- NETWORK_GET_STRING_BANK_WALLET_BALANCE()

--- NETWORK_GET_STRING_WALLET_BALANCE
-- ```
NativeDB Introduced: v323
```
-- @param characterSlot int
-- NETWORK_GET_STRING_WALLET_BALANCE(characterSlot)

--- NETWORK_GET_VC_BALANCE
-- NETWORK_GET_VC_BALANCE()

--- NETWORK_GET_VC_BANK_BALANCE
-- NETWORK_GET_VC_BANK_BALANCE()

--- NETWORK_GET_VC_WALLET_BALANCE
-- @param characterSlot int
-- NETWORK_GET_VC_WALLET_BALANCE(characterSlot)

--- NETWORK_GIVE_PLAYER_JOBSHARE_CASH
-- @param amount int
-- @param networkHandle int*
-- NETWORK_GIVE_PLAYER_JOBSHARE_CASH(amount, networkHandle)

--- NETWORK_INITIALIZE_CASH
-- @param wallet int
-- @param bank int
-- NETWORK_INITIALIZE_CASH(wallet, bank)

--- NETWORK_MONEY_CAN_BET
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_MONEY_CAN_BET(amount, p1, p2)

--- NETWORK_PAY_EMPLOYEE_WAGE
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_PAY_EMPLOYEE_WAGE(p0, p1, p2)

--- NETWORK_PAY_MATCH_ENTRY_FEE
-- @param amount int
-- @param matchId char*
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_PAY_MATCH_ENTRY_FEE(amount, matchId, p2, p3)

--- NETWORK_PAY_UTILITY_BILL
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_PAY_UTILITY_BILL(amount, p1, p2)

--- NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH
-- @param value int
-- @param networkHandle int*
-- NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(value, networkHandle)

--- NETWORK_REFUND_CASH
-- ```
index  
-------  
See function sub_1005 in am_boat_taxi.ysc  
context  
----------  
"BACKUP_VAGOS"  
"BACKUP_LOST"  
"BACKUP_FAMILIES"  
"HIRE_MUGGER"  
"HIRE_MERCENARY"  
"BUY_CARDROPOFF"  
"HELI_PICKUP"  
"BOAT_PICKUP"  
"CLEAR_WANTED"  
"HEAD_2_HEAD"  
"CHALLENGE"  
"SHARE_LAST_JOB"  
"DEFAULT"  
reason  
---------  
"NOTREACHTARGET"  
"TARGET_ESCAPE"  
"DELIVERY_FAIL"  
"NOT_USED"  
"TEAM_QUIT"  
"SERVER_ERROR"  
"RECEIVE_LJ_L"  
"CHALLENGE_PLAYER_LEFT"  
"DEFAULT"  
unk  
-----  
Unknown bool value  
```
-- @param index int
-- @param context char*
-- @param reason char*
-- @param unk BOOL
-- NETWORK_REFUND_CASH(index, context, reason, unk)

--- NETWORK_SPENT_AMMO_DROP
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_AMMO_DROP(p0, p1, p2)

--- NETWORK_SPENT_ARREST_BAIL
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_ARREST_BAIL(p0, p1, p2)

--- NETWORK_SPENT_BANK_INTEREST
-- ```
NativeDB Introduced: v323
```
-- @param p0 int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BANK_INTEREST(p0, p1, p2)

--- NETWORK_SPENT_BETTING
-- @param amount int
-- @param p1 int
-- @param matchId char*
-- @param p3 BOOL
-- @param p4 BOOL
-- NETWORK_SPENT_BETTING(amount, p1, matchId, p3, p4)

--- NETWORK_SPENT_BOAT_PICKUP
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BOAT_PICKUP(p0, p1, p2)

--- NETWORK_SPENT_BOUNTY
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BOUNTY(p0, p1, p2)

--- NETWORK_SPENT_BULL_SHARK
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BULL_SHARK(p0, p1, p2)

--- NETWORK_SPENT_BUY_OFFTHERADAR
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BUY_OFFTHERADAR(p0, p1, p2)

--- NETWORK_SPENT_BUY_PASSIVE_MODE
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BUY_PASSIVE_MODE(p0, p1, p2)

--- NETWORK_SPENT_BUY_REVEAL_PLAYERS
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_BUY_REVEAL_PLAYERS(p0, p1, p2)

--- NETWORK_SPENT_BUY_WANTEDLEVEL
-- @param p0 Any
-- @param p1 Any*
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_SPENT_BUY_WANTEDLEVEL(p0, p1, p2, p3)

--- NETWORK_SPENT_CALL_PLAYER
-- @param p0 Any
-- @param p1 Any*
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_SPENT_CALL_PLAYER(p0, p1, p2, p3)

--- NETWORK_SPENT_CARWASH
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 BOOL
-- @param p4 BOOL
-- NETWORK_SPENT_CARWASH(p0, p1, p2, p3, p4)

--- NETWORK_SPENT_CASH_DROP
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_CASH_DROP(amount, p1, p2)

--- NETWORK_SPENT_CINEMA
-- @param p0 Any
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_SPENT_CINEMA(p0, p1, p2, p3)

--- NETWORK_SPENT_FROM_ROCKSTAR
-- @param bank int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_FROM_ROCKSTAR(bank, p1, p2)

--- NETWORK_SPENT_HELI_PICKUP
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_HELI_PICKUP(p0, p1, p2)

--- NETWORK_SPENT_HIRE_MERCENARY
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_HIRE_MERCENARY(p0, p1, p2)

--- NETWORK_SPENT_HIRE_MUGGER
-- ```
Only used once in a script (am_contact_requests)  
p1 = 0  
p2 = 1  
```
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_HIRE_MUGGER(p0, p1, p2)

--- NETWORK_SPENT_HOLDUPS
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_HOLDUPS(p0, p1, p2)

--- NETWORK_SPENT_IN_STRIPCLUB
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 Any
-- @param p3 BOOL
-- NETWORK_SPENT_IN_STRIPCLUB(p0, p1, p2, p3)

--- NETWORK_SPENT_NO_COPS
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_NO_COPS(p0, p1, p2)

--- NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM
-- ```
According to how I understood this in the freemode script alone,
The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.
```
-- @param amount int
-- @param vehicleModel Hash
-- @param networkHandle int*
-- @param notBankrupt BOOL
-- @param hasTheMoney BOOL
-- NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(amount, vehicleModel, networkHandle, notBankrupt, hasTheMoney)

--- NETWORK_SPENT_PLAYER_HEALTHCARE
-- @param p0 int
-- @param p1 int
-- @param p2 BOOL
-- @param p3 BOOL
-- NETWORK_SPENT_PLAYER_HEALTHCARE(p0, p1, p2, p3)

--- NETWORK_SPENT_PROSTITUTES
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_PROSTITUTES(p0, p1, p2)

--- NETWORK_SPENT_REQUEST_HEIST
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_REQUEST_HEIST(p0, p1, p2)

--- NETWORK_SPENT_REQUEST_JOB
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_REQUEST_JOB(p0, p1, p2)

--- NETWORK_SPENT_ROBBED_BY_MUGGER
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_ROBBED_BY_MUGGER(amount, p1, p2)

--- NETWORK_SPENT_TAXI
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_TAXI(amount, p1, p2)

--- NETWORK_SPENT_TELESCOPE
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- NETWORK_SPENT_TELESCOPE(p0, p1, p2)

--- PROCESS_CASH_GIFT
-- @param p0 int*
-- @param p1 int*
-- @param p2 char*
-- PROCESS_CASH_GIFT(p0, p1, p2)

--- WITHDRAW_VC
-- ```
Does nothing and always returns 0.
```
-- @param amount int
-- WITHDRAW_VC(amount)

--- _CAN_PAY_GOON
-- ```
NativeDB Added Parameter 1: int p0
NativeDB Added Parameter 2: int p1
NativeDB Added Parameter 3: int amount
NativeDB Added Parameter 4: int* p3
```
-- _CAN_PAY_GOON()

--- _NETWORK_BUY_CONTRABAND
-- @param p0 int
-- @param p1 int
-- @param p2 Hash
-- @param p3 BOOL
-- @param p4 BOOL
-- _NETWORK_BUY_CONTRABAND(p0, p1, p2, p3, p4)

--- _NETWORK_CAN_SPEND_MONEY_2
-- ```
NETWORK_CAN_R??? or NETWORK_CAN_S???  
```

```
NativeDB Added Parameter 7: Any p6
```
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- @param p4 Any*
-- @param p5 Any
-- _NETWORK_CAN_SPEND_MONEY_2(p0, p1, p2, p3, p4, p5)

--- _NETWORK_CASINO_CAN_GAMBLE
-- NETWORK_C\*

```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _NETWORK_CASINO_CAN_GAMBLE(p0)

--- _NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC
-- Same as 0x8968D4D8C6C40C11.
NETWORK_C\*

```
NativeDB Introduced: v1734
```
-- _NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC()

--- _NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC_2
-- Same as 0x394DCDB9E836B7A9.
NETWORK_C\*

```
NativeDB Introduced: v1734
```
-- _NETWORK_CASINO_CAN_PURCHASE_CHIPS_WITH_PVC_2()

--- _NETWORK_CASINO_CAN_USE_GAMBLING_TYPE
-- GTAO_CASINO_HOUSE
GTAO_CASINO_INSIDETRACK
GTAO_CASINO_LUCKYWHEEL
GTAO_CASINO_BLACKJACK
GTAO_CASINO_ROULETTE
GTAO_CASINO_SLOTS
GTAO_CASINO_PURCHASE_CHIPS
NETWORK_C\*

```
NativeDB Introduced: v1734
```
-- @param hash Hash
-- _NETWORK_CASINO_CAN_USE_GAMBLING_TYPE(hash)

--- _NETWORK_CASINO_PURCHASE_CHIPS
-- NETWORK_C\*

```
NativeDB Introduced: v1734
```
-- @param p0 int
-- @param p1 int
-- _NETWORK_CASINO_PURCHASE_CHIPS(p0, p1)

--- _NETWORK_CASINO_SELL_CHIPS
-- NETWORK_C\*

```
NativeDB Introduced: v1734
```
-- @param p0 int
-- @param p1 int
-- _NETWORK_CASINO_SELL_CHIPS(p0, p1)

--- _NETWORK_DEDUCT_CASH
-- ```
NativeDB Introduced: v323
```
-- @param amount int
-- @param p1 char*
-- @param p2 char*
-- @param p3 BOOL
-- @param p4 BOOL
-- @param p5 BOOL
-- _NETWORK_DEDUCT_CASH(amount, p1, p2, p3, p4, p5)

--- _NETWORK_EARN_BOSS
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_BOSS(p0, p1, p2)

--- _NETWORK_EARN_BOSS_AGENCY
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_BOSS_AGENCY(p0, p1, p2, p3)

--- _NETWORK_EARN_BOUNTY_HUNTER_REWARD
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- _NETWORK_EARN_BOUNTY_HUNTER_REWARD(p0)

--- _NETWORK_EARN_CASINO_HEIST
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- _NETWORK_EARN_CASINO_HEIST(p0, p1, p2, p3, p4, p5, p6)

--- _NETWORK_EARN_CASINO_HEIST_BONUS
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_EARN_CASINO_HEIST_BONUS(p0, p1, p2, p3, p4)

--- _NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION
-- ```
NativeDB Introduced: v2060
```
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_COLLECTABLE_COMPLETED_COLLECTION(amount, p1)

--- _NETWORK_EARN_FMBB_WAGE_BONUS
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- _NETWORK_EARN_FMBB_WAGE_BONUS(p0)

--- _NETWORK_EARN_FROM_ARENA_CAREER_PROGRESSION
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_FROM_ARENA_CAREER_PROGRESSION(amount, p1)

--- _NETWORK_EARN_FROM_ARENA_SKILL_LEVEL_PROGRESSION
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_FROM_ARENA_SKILL_LEVEL_PROGRESSION(amount, p1)

--- _NETWORK_EARN_FROM_ARENA_WAR
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_FROM_ARENA_WAR(amount, p1, p2, p3)

--- _NETWORK_EARN_FROM_ARMOUR_TRUCK
-- ```
For the money bags that drop a max of $40,000. Often called 40k bags.
Most likely NETWORK_EARN_FROM_ROB***
```
-- @param amount int
-- _NETWORK_EARN_FROM_ARMOUR_TRUCK(amount)

--- _NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- _NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED(amount)

--- _NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED_2
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- _NETWORK_EARN_FROM_ASSASSINATE_TARGET_KILLED_2(amount)

--- _NETWORK_EARN_FROM_AUTOSHOP_BUSINESS
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- _NETWORK_EARN_FROM_AUTOSHOP_BUSINESS(p0, p1)

--- _NETWORK_EARN_FROM_AUTOSHOP_INCOME
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_AUTOSHOP_INCOME(p0)

--- _NETWORK_EARN_FROM_BB_EVENT_BONUS
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- _NETWORK_EARN_FROM_BB_EVENT_BONUS(amount)

--- _NETWORK_EARN_FROM_BB_EVENT_CARGO
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- _NETWORK_EARN_FROM_BB_EVENT_CARGO(amount)

--- _NETWORK_EARN_FROM_BIKER_INCOME
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_BIKER_INCOME(p0)

--- _NETWORK_EARN_FROM_BIKE_SHOP_BUSINESS
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- _NETWORK_EARN_FROM_BIKE_SHOP_BUSINESS(p0, p1)

--- _NETWORK_EARN_FROM_BUSINESS_BATTLE
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_BUSINESS_BATTLE(p0)

--- _NETWORK_EARN_FROM_BUSINESS_HUB_SELL
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_FROM_BUSINESS_HUB_SELL(p0, p1, p2)

--- _NETWORK_EARN_FROM_BUSINESS_HUB_SOURCE
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_FROM_BUSINESS_HUB_SOURCE(p0, p1, p2, p3)

--- _NETWORK_EARN_FROM_BUSINESS_PRODUCT
-- @param amount int
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_FROM_BUSINESS_PRODUCT(amount, p1, p2, p3)

--- _NETWORK_EARN_FROM_CARCLUB_MEMBERSHIP
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_CARCLUB_MEMBERSHIP(p0)

--- _NETWORK_EARN_FROM_CASHING_OUT
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- _NETWORK_EARN_FROM_CASHING_OUT(amount)

--- _NETWORK_EARN_FROM_CASINO_AWARD
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param hash Hash
-- _NETWORK_EARN_FROM_CASINO_AWARD(amount, hash)

--- _NETWORK_EARN_FROM_CASINO_MISSION_PARTICIPATION
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_CASINO_MISSION_PARTICIPATION(amount)

--- _NETWORK_EARN_FROM_CASINO_MISSION_REWARD
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_CASINO_MISSION_REWARD(amount)

--- _NETWORK_EARN_FROM_CASINO_STORY_MISSION_REWARD
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_CASINO_STORY_MISSION_REWARD(amount)

--- _NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_CLUB_MANAGEMENT_PARTICIPATION(p0)

--- _NETWORK_EARN_FROM_COLLECTABLES_ACTION_FIGURES
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_COLLECTABLES_ACTION_FIGURES(amount)

--- _NETWORK_EARN_FROM_COLLECTION_ITEM
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_FROM_COLLECTION_ITEM(amount, p1)

--- _NETWORK_EARN_FROM_COMPLETE_COLLECTION
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_COMPLETE_COLLECTION(amount)

--- _NETWORK_EARN_FROM_CONTRABAND
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_FROM_CONTRABAND(amount, p1)

--- _NETWORK_EARN_FROM_CRIMINAL_MASTERMIND_BONUS
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_FROM_CRIMINAL_MASTERMIND_BONUS(p0, p1, p2)

--- _NETWORK_EARN_FROM_DAILY_OBJECTIVE_EVENT
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_DAILY_OBJECTIVE_EVENT(amount)

--- _NETWORK_EARN_FROM_DAR_CHALLENGE
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_FROM_DAR_CHALLENGE(amount, p1)

--- _NETWORK_EARN_FROM_DESTROYING_CONTRABAND
-- @param p0 Any
-- _NETWORK_EARN_FROM_DESTROYING_CONTRABAND(p0)

--- _NETWORK_EARN_FROM_DOOMSDAY_FINALE_BONUS
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param vehicleHash Hash
-- _NETWORK_EARN_FROM_DOOMSDAY_FINALE_BONUS(amount, vehicleHash)

--- _NETWORK_EARN_FROM_FMBB_BOSS_WORK
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_FMBB_BOSS_WORK(p0)

--- _NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_FMBB_PHONECALL_MISSION(p0)

--- _NETWORK_EARN_FROM_GANGOPS_AWARDS
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param unk char*
-- @param p2 Any
-- _NETWORK_EARN_FROM_GANGOPS_AWARDS(amount, unk, p2)

--- _NETWORK_EARN_FROM_GANGOPS_ELITE
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param unk char*
-- @param actIndex int
-- _NETWORK_EARN_FROM_GANGOPS_ELITE(amount, unk, actIndex)

--- _NETWORK_EARN_FROM_GANGOPS_JOBS_FINALE
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param unk char*
-- _NETWORK_EARN_FROM_GANGOPS_JOBS_FINALE(amount, unk)

--- _NETWORK_EARN_FROM_GANGOPS_JOBS_PREP_PARTICIPATION
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- _NETWORK_EARN_FROM_GANGOPS_JOBS_PREP_PARTICIPATION(amount)

--- _NETWORK_EARN_FROM_GANGOPS_JOBS_SETUP
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param unk char*
-- _NETWORK_EARN_FROM_GANGOPS_JOBS_SETUP(amount, unk)

--- _NETWORK_EARN_FROM_GANGOPS_WAGES
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param p1 int
-- _NETWORK_EARN_FROM_GANGOPS_WAGES(amount, p1)

--- _NETWORK_EARN_FROM_GANGOPS_WAGES_BONUS
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param p1 int
-- _NETWORK_EARN_FROM_GANGOPS_WAGES_BONUS(amount, p1)

--- _NETWORK_EARN_FROM_GANG_PICKUP
-- @param amount int
-- _NETWORK_EARN_FROM_GANG_PICKUP(amount)

--- _NETWORK_EARN_FROM_HACKER_TRUCK_MISSION
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param amount int
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_FROM_HACKER_TRUCK_MISSION(p0, amount, p2, p3)

--- _NETWORK_EARN_FROM_JOB_X2
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param p1 char*
-- _NETWORK_EARN_FROM_JOB_X2(amount, p1)

--- _NETWORK_EARN_FROM_PREMIUM_JOB
-- @param amount int
-- @param p1 char*
-- _NETWORK_EARN_FROM_PREMIUM_JOB(amount, p1)

--- _NETWORK_EARN_FROM_RC_TIME_TRIAL
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_RC_TIME_TRIAL(amount)

--- _NETWORK_EARN_FROM_RDR_BONUS
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param p1 Any
-- _NETWORK_EARN_FROM_RDR_BONUS(amount, p1)

--- _NETWORK_EARN_FROM_SELLING_VEHICLE
-- ```
NativeDB Added Parameter 2: Any p1
NativeDB Added Parameter 3: Any p2
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_SELLING_VEHICLE(amount)

--- _NETWORK_EARN_FROM_SELL_BASE
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param baseNameHash Hash
-- _NETWORK_EARN_FROM_SELL_BASE(amount, baseNameHash)

--- _NETWORK_EARN_FROM_SELL_BUNKER
-- @param amount int
-- @param bunkerHash Hash
-- _NETWORK_EARN_FROM_SELL_BUNKER(amount, bunkerHash)

--- _NETWORK_EARN_FROM_SIGHTSEEING
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_FROM_SIGHTSEEING(p0, p1, p2, p3)

--- _NETWORK_EARN_FROM_SMUGGLING
-- ```
NativeDB Introduced: v1180
```
-- @param amount int
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_EARN_FROM_SMUGGLING(amount, p1, p2, p3)

--- _NETWORK_EARN_FROM_SPIN_THE_WHEEL_CASH
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- _NETWORK_EARN_FROM_SPIN_THE_WHEEL_CASH(amount)

--- _NETWORK_EARN_FROM_TARGET_REFUND
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param p1 int
-- _NETWORK_EARN_FROM_TARGET_REFUND(amount, p1)

--- _NETWORK_EARN_FROM_TIME_TRIAL_WIN
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- _NETWORK_EARN_FROM_TIME_TRIAL_WIN(amount)

--- _NETWORK_EARN_FROM_TUNER_AWARD
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_FROM_TUNER_AWARD(p0, p1, p2)

--- _NETWORK_EARN_FROM_TUNER_FINALE
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_EARN_FROM_TUNER_FINALE(p0, p1, p2, p3, p4)

--- _NETWORK_EARN_FROM_UPGRADE_AUTOSHOP_LOCATION
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- _NETWORK_EARN_FROM_UPGRADE_AUTOSHOP_LOCATION(p0, p1)

--- _NETWORK_EARN_FROM_VEHICLE_AUTOSHOP
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- _NETWORK_EARN_FROM_VEHICLE_AUTOSHOP(p0, p1)

--- _NETWORK_EARN_FROM_VEHICLE_AUTOSHOP_BONUS
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _NETWORK_EARN_FROM_VEHICLE_AUTOSHOP_BONUS(p0)

--- _NETWORK_EARN_FROM_VEHICLE_EXPORT
-- @param amount int
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_FROM_VEHICLE_EXPORT(amount, p1, p2)

--- _NETWORK_EARN_FROM_WAGE_PAYMENT
-- ```
NativeDB Introduced: v1180
```
-- @param amount int
-- _NETWORK_EARN_FROM_WAGE_PAYMENT(amount)

--- _NETWORK_EARN_FROM_WAGE_PAYMENT_BONUS
-- ```
NativeDB Introduced: v1180
```
-- @param amount int
-- _NETWORK_EARN_FROM_WAGE_PAYMENT_BONUS(amount)

--- _NETWORK_EARN_FROM_WAREHOUSE
-- ```
NativeDB Added Parameter 1: int amount
NativeDB Added Parameter 2: int id
```
-- _NETWORK_EARN_FROM_WAREHOUSE()

--- _NETWORK_EARN_GOON
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_GOON(p0, p1, p2)

--- _NETWORK_EARN_ISLAND_HEIST
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- _NETWORK_EARN_ISLAND_HEIST(p0, p1, p2, p3, p4, p5)

--- _NETWORK_EARN_JOB_BONUS_FIRST_TIME_BONUS
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_JOB_BONUS_FIRST_TIME_BONUS(p0, p1, p2)

--- _NETWORK_EARN_JOB_BONUS_HEIST_AWARD
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_EARN_JOB_BONUS_HEIST_AWARD(p0, p1, p2)

--- _NETWORK_GET_IS_HIGH_EARNER
-- ```
NativeDB Introduced: v323
```
-- _NETWORK_GET_IS_HIGH_EARNER()

--- _NETWORK_GET_VC_BANK_BALANCE_IS_NOT_LESS_THAN
-- ```
Returns true if bank balance >= amount.

NativeDB Introduced: v323
```
-- @param amount int
-- _NETWORK_GET_VC_BANK_BALANCE_IS_NOT_LESS_THAN(amount)

--- _NETWORK_GET_VC_BANK_WALLET_BALANCE_IS_NOT_LESS_THAN
-- ```
Returns true if bank balance + wallet balance >= amount.
```
-- @param amount int
-- @param characterSlot int
-- _NETWORK_GET_VC_BANK_WALLET_BALANCE_IS_NOT_LESS_THAN(amount, characterSlot)

--- _NETWORK_GET_VC_WALLET_BALANCE_IS_NOT_LESS_THAN
-- ```
Returns true if wallet balance >= amount.

NativeDB Introduced: v323
```
-- @param amount int
-- @param characterSlot int
-- _NETWORK_GET_VC_WALLET_BALANCE_IS_NOT_LESS_THAN(amount, characterSlot)

--- _NETWORK_MANUAL_DELETE_CHARACTER
-- @param characterSlot int
-- _NETWORK_MANUAL_DELETE_CHARACTER(characterSlot)

--- _NETWORK_RIVAL_DELIVERY_COMPLETED
-- ```
NativeDB Introduced: v1290
```
-- @param earnedMoney int
-- _NETWORK_RIVAL_DELIVERY_COMPLETED(earnedMoney)

--- _NETWORK_SPENT_ARCADE_GAME
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_ARCADE_GAME(p0, p1, p2, p3, p4)

--- _NETWORK_SPENT_ARCADE_GENERIC
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_ARCADE_GENERIC(p0, p1, p2, p3, p4)

--- _NETWORK_SPENT_ARENA_JOIN_SPECTATOR
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_ARENA_JOIN_SPECTATOR(amount, p1, p2, p3)

--- _NETWORK_SPENT_ARENA_PREMIUM
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_ARENA_PREMIUM(amount, p1, p2)

--- _NETWORK_SPENT_ARENA_SPECTATOR_BOX
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_ARENA_SPECTATOR_BOX(amount, p1, p2, p3)

--- _NETWORK_SPENT_AUTOSHOP_MODIFICATIONS
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_AUTOSHOP_MODIFICATIONS(p0, p1, p2, p3, p4)

--- _NETWORK_SPENT_AUTOSHOP_PROPERTY_UTILITY_FEE
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_AUTOSHOP_PROPERTY_UTILITY_FEE(p0, p1, p2, p3)

--- _NETWORK_SPENT_BALLISTIC_EQUIPMENT
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_BALLISTIC_EQUIPMENT(amount, p1, p2)

--- _NETWORK_SPENT_BA_SERVICE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_BA_SERVICE(p0, p1, p2, p3, p4)

--- _NETWORK_SPENT_BEACH_PARTY_GENERIC
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- _NETWORK_SPENT_BEACH_PARTY_GENERIC(p0)

--- _NETWORK_SPENT_BIKE_SHOP_MODIFY
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BIKE_SHOP_MODIFY(p0, p1, p2, p3)

--- _NETWORK_SPENT_BOSS
-- ```
NativeDB Added Parameter 1: int amount
NativeDB Added Parameter 2: BOOL p1
NativeDB Added Parameter 3: BOOL p2
```
-- _NETWORK_SPENT_BOSS()

--- _NETWORK_SPENT_BOUNTY_HUNTER_MISSION
-- ```
NativeDB Introduced: v1493
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_BOUNTY_HUNTER_MISSION(amount, p1, p2)

--- _NETWORK_SPENT_BUSINESS
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BUSINESS(p0, p1, p2, p3)

--- _NETWORK_SPENT_BUY_ARENA
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 char*
-- _NETWORK_SPENT_BUY_ARENA(amount, p1, p2, p3)

--- _NETWORK_SPENT_BUY_AUTOSHOP
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BUY_AUTOSHOP(p0, p1, p2, p3)

--- _NETWORK_SPENT_BUY_BASE
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BUY_BASE(p0, p1, p2, p3)

--- _NETWORK_SPENT_BUY_BUNKER
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BUY_BUNKER(p0, p1, p2, p3)

--- _NETWORK_SPENT_BUY_CASINO
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- @param data Any*
-- _NETWORK_SPENT_BUY_CASINO(amount, p1, p2, data)

--- _NETWORK_SPENT_BUY_TILTROTOR
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BUY_TILTROTOR(p0, p1, p2, p3)

--- _NETWORK_SPENT_BUY_TRUCK
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_BUY_TRUCK(p0, p1, p2, p3)

--- _NETWORK_SPENT_CARCLUB
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 Any
-- _NETWORK_SPENT_CARCLUB(p0, p1, p2, p3)

--- _NETWORK_SPENT_CARCLUB_MEMBERSHIP
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_CARCLUB_MEMBERSHIP(p0, p1, p2, p3, p4)

--- _NETWORK_SPENT_CARCLUB_TAKEOVER
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_CARCLUB_TAKEOVER(p0, p1, p2, p3)

--- _NETWORK_SPENT_CARGO_SOURCING
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- _NETWORK_SPENT_CARGO_SOURCING(p0, p1, p2, p3, p4, p5)

--- _NETWORK_SPENT_CASINO_CLUB_GENERIC
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- _NETWORK_SPENT_CASINO_CLUB_GENERIC(p0, p1, p2, p3, p4, p5, p6, p7, p8)

--- _NETWORK_SPENT_CASINO_GENERIC
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_CASINO_GENERIC(amount, p1, p2, p3, p4)

--- _NETWORK_SPENT_CASINO_HEIST
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- @param p10 Any
-- _NETWORK_SPENT_CASINO_HEIST(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)

--- _NETWORK_SPENT_CASINO_HEIST_SKIP_MISSION
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_CASINO_HEIST_SKIP_MISSION(p0, p1, p2, p3)

--- _NETWORK_SPENT_CASINO_MEMBERSHIP
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 int
-- _NETWORK_SPENT_CASINO_MEMBERSHIP(amount, p1, p2, p3)

--- _NETWORK_SPENT_EMPLOY_ASSASSINS
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_EMPLOY_ASSASSINS(p0, p1, p2, p3)

--- _NETWORK_SPENT_FROM_BANK
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 BOOL
-- _NETWORK_SPENT_FROM_BANK(p0, p1, p2, p3)

--- _NETWORK_SPENT_GANGOPS_CANNON
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_GANGOPS_CANNON(p0, p1, p2, p3)

--- _NETWORK_SPENT_GANGOPS_START_MISSION
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_GANGOPS_START_MISSION(p0, p1, p2, p3)

--- _NETWORK_SPENT_GANGOPS_START_STRAND
-- ```
NativeDB Introduced: v1290
```
-- @param type int
-- @param amount int
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_GANGOPS_START_STRAND(type, amount, p2, p3)

--- _NETWORK_SPENT_GANGOPS_TRIP_SKIP
-- ```
NativeDB Introduced: v1290
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_GANGOPS_TRIP_SKIP(amount, p1, p2)

--- _NETWORK_SPENT_GUNRUNNING_CONTACT_SERVICE
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_GUNRUNNING_CONTACT_SERVICE(p0, p1, p2, p3)

--- _NETWORK_SPENT_HANGAR_STAFF_CHARGES
-- ```
NativeDB Introduced: v1180
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_HANGAR_STAFF_CHARGES(amount, p1, p2)

--- _NETWORK_SPENT_HANGAR_UTILITY_CHARGES
-- ```
NativeDB Introduced: v1180
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_HANGAR_UTILITY_CHARGES(amount, p1, p2)

--- _NETWORK_SPENT_IMPORT_EXPORT_REPAIR
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_SPENT_IMPORT_EXPORT_REPAIR(p0, p1, p2)

--- _NETWORK_SPENT_IM_ABILITY
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_IM_ABILITY(p0, p1, p2, p3)

--- _NETWORK_SPENT_ISLAND_HEIST
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_ISLAND_HEIST(p0, p1, p2, p3)

--- _NETWORK_SPENT_JOB_SKIP
-- ```
NativeDB Introduced: v323
```
-- @param amount int
-- @param matchId char*
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_JOB_SKIP(amount, matchId, p2, p3)

--- _NETWORK_SPENT_JUKEBOX
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_JUKEBOX(p0, p1, p2, p3)

--- _NETWORK_SPENT_MAKE_IT_RAIN
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_MAKE_IT_RAIN(amount, p1, p2)

--- _NETWORK_SPENT_MOVE_YACHT
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_MOVE_YACHT(amount, p1, p2)

--- _NETWORK_SPENT_NIGHTCLUB_BAR_DRINK
-- ```
NativeDB Introduced: v1493
```
-- @param amount int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_NIGHTCLUB_BAR_DRINK(amount, p1, p2, p3)

--- _NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE
-- ```
NativeDB Introduced: v1493
```
-- @param player Player
-- @param amount int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_NIGHTCLUB_ENTRY_FEE(player, amount, p1, p2, p3)

--- _NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_ORDER_BODYGUARD_VEHICLE(p0, p1, p2, p3)

--- _NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_ORDER_WAREHOUSE_VEHICLE(p0, p1, p2, p3)

--- _NETWORK_SPENT_PAY_BOSS
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_SPENT_PAY_BOSS(p0, p1, p2)

--- _NETWORK_SPENT_PAY_GOON
-- @param p0 int
-- @param p1 int
-- @param amount int
-- _NETWORK_SPENT_PAY_GOON(p0, p1, amount)

--- _NETWORK_SPENT_PA_SERVICE_DANCER
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_PA_SERVICE_DANCER(p0, p1, p2, p3)

--- _NETWORK_SPENT_PA_SERVICE_HELI_PICKUP
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_PA_SERVICE_HELI_PICKUP(p0, p1, p2, p3)

--- _NETWORK_SPENT_PURCHASE_HANGAR
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_PURCHASE_HANGAR(p0, p1, p2, p3)

--- _NETWORK_SPENT_PURCHASE_WAREHOUSE
-- @param amount int
-- @param data Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_PURCHASE_WAREHOUSE(amount, data, p2, p3)

--- _NETWORK_SPENT_RDRHATCHET_BONUS
-- ```
NativeDB Introduced: v1493
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- _NETWORK_SPENT_RDRHATCHET_BONUS(amount, p1, p2)

--- _NETWORK_SPENT_REHIRE_DJ
-- ```
NativeDB Introduced: v1493
```
-- @param amount int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_REHIRE_DJ(amount, p1, p2, p3)

--- _NETWORK_SPENT_RENAME_ORGANIZATION
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_SPENT_RENAME_ORGANIZATION(p0, p1, p2)

--- _NETWORK_SPENT_SALES_DISPLAY
-- ```
NativeDB Introduced: v2699
```
-- @param p0 BOOL
-- _NETWORK_SPENT_SALES_DISPLAY(p0)

--- _NETWORK_SPENT_SPIN_THE_WHEEL_PAYMENT
-- ```
NativeDB Introduced: v1604

NativeDB Removed Parameter 4: BOOL p3
```
-- @param amount int
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 BOOL
-- _NETWORK_SPENT_SPIN_THE_WHEEL_PAYMENT(amount, p1, p2, p3)

--- _NETWORK_SPENT_SUBMARINE
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- _NETWORK_SPENT_SUBMARINE(p0, p1, p2, p3, p4, p5)

--- _NETWORK_SPENT_UPGRADE_ARENA
-- ```
NativeDB Introduced: v1604
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 char*
-- _NETWORK_SPENT_UPGRADE_ARENA(amount, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_AUTOSHOP
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_AUTOSHOP(p0, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_BASE
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_BASE(p0, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_BUNKER
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_BUNKER(p0, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_CASINO
-- ```
NativeDB Introduced: v1734
```
-- @param amount int
-- @param p1 BOOL
-- @param p2 BOOL
-- @param data Any*
-- _NETWORK_SPENT_UPGRADE_CASINO(amount, p1, p2, data)

--- _NETWORK_SPENT_UPGRADE_HANGAR
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_HANGAR(p0, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_SUB
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_SUB(p0, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_TILTROTOR
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_TILTROTOR(p0, p1, p2, p3)

--- _NETWORK_SPENT_UPGRADE_TRUCK
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SPENT_UPGRADE_TRUCK(p0, p1, p2, p3)

--- _NETWORK_SPENT_VEHICLE_EXPORT_MODS
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- _NETWORK_SPENT_VEHICLE_EXPORT_MODS(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- _NETWORK_SPENT_VEHICLE_REQUESTED
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _NETWORK_SPENT_VEHICLE_REQUESTED(p0, p1, p2, p3, p4)

--- _NETWORK_SPENT_VIP_UTILITY_CHARGES
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_SPENT_VIP_UTILITY_CHARGES(p0, p1, p2)

--- _NETWORK_SPENT_WAGER
-- @param p0 Any
-- @param p1 Any
-- @param amount int
-- _NETWORK_SPENT_WAGER(p0, p1, amount)


-- ========== NETSHOPPING ==========

--- 0x0395CB47B022E62C
-- @param p0 Any*
-- 0x0395CB47B022E62C(p0)

--- 0x170910093218C8B9
-- @param p0 Any*
-- 0x170910093218C8B9(p0)

--- 0x357B152EF96C30B6
-- 0x357B152EF96C30B6()

--- 0x613F125BA3BD2EB9
-- 0x613F125BA3BD2EB9()

--- 0x72EB7BA9B69BF6AB
-- 0x72EB7BA9B69BF6AB()

--- 0x74A0FD0688F1EE45
-- ```
NET_GAMESERVER_*
```
-- @param p0 int
-- 0x74A0FD0688F1EE45(p0)

--- 0x79EDAC677CA62F81
-- ```
NET_GAMESERVER_*

Checks if the transaction status is equal to 3.

NativeDB Introduced: v1365
```
-- @param transactionId int
-- 0x79EDAC677CA62F81(transactionId)

--- 0x85F6C9ABA1DE2BCF
-- 0x85F6C9ABA1DE2BCF()

--- 0xC13C38E47EA5DF31
-- @param p0 Any*
-- 0xC13C38E47EA5DF31(p0)

--- 0xC830417D630A50F9
-- ```
NET_GAMESERVER_*

Checks if the transaction status is equal to 1.

NativeDB Introduced: v1365
```
-- @param transactionId int
-- 0xC830417D630A50F9(transactionId)

--- 0xE3E5A7C64CA2C6ED
-- 0xE3E5A7C64CA2C6ED()

--- _NET_GAMESERVER_BASKET_ADD_ITEM
-- @param itemData Any*
-- @param quantity int
-- _NET_GAMESERVER_BASKET_ADD_ITEM(itemData, quantity)

--- _NET_GAMESERVER_BASKET_APPLY_SERVER_DATA
-- @param p0 Any
-- @param p1 Any*
-- _NET_GAMESERVER_BASKET_APPLY_SERVER_DATA(p0, p1)

--- _NET_GAMESERVER_BASKET_DELETE
-- ```
NativeDB Introduced: v372
```
-- _NET_GAMESERVER_BASKET_DELETE()

--- _NET_GAMESERVER_BASKET_END
-- _NET_GAMESERVER_BASKET_END()

--- _NET_GAMESERVER_BASKET_IS_FULL
-- _NET_GAMESERVER_BASKET_IS_FULL()

--- _NET_GAMESERVER_BASKET_START
-- @param transactionId int*
-- @param categoryHash Hash
-- @param actionHash Hash
-- @param flags int
-- _NET_GAMESERVER_BASKET_START(transactionId, categoryHash, actionHash, flags)

--- _NET_GAMESERVER_BEGIN_SERVICE
-- @param transactionId int*
-- @param categoryHash Hash
-- @param itemHash Hash
-- @param actionTypeHash Hash
-- @param value int
-- @param flags int
-- _NET_GAMESERVER_BEGIN_SERVICE(transactionId, categoryHash, itemHash, actionTypeHash, value, flags)

--- _NET_GAMESERVER_CATALOG_IS_READY
-- _NET_GAMESERVER_CATALOG_IS_READY()

--- _NET_GAMESERVER_CATALOG_ITEM_EXISTS
-- @param name char*
-- _NET_GAMESERVER_CATALOG_ITEM_EXISTS(name)

--- _NET_GAMESERVER_CATALOG_ITEM_EXISTS_HASH
-- @param hash Hash
-- _NET_GAMESERVER_CATALOG_ITEM_EXISTS_HASH(hash)

--- _NET_GAMESERVER_CHECKOUT_START
-- @param transactionId int
-- _NET_GAMESERVER_CHECKOUT_START(transactionId)

--- _NET_GAMESERVER_DELETE_CHARACTER_SLOT
-- @param slot int
-- @param transfer BOOL
-- @param reason Hash
-- _NET_GAMESERVER_DELETE_CHARACTER_SLOT(slot, transfer, reason)

--- _NET_GAMESERVER_DELETE_CHARACTER_SLOT_GET_STATUS
-- _NET_GAMESERVER_DELETE_CHARACTER_SLOT_GET_STATUS()

--- _NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED
-- _NET_GAMESERVER_DELETE_SET_TELEMETRY_NONCE_SEED()

--- _NET_GAMESERVER_END_SERVICE
-- @param transactionId int
-- _NET_GAMESERVER_END_SERVICE(transactionId)

--- _NET_GAMESERVER_GET_BALANCE
-- ```
Note: only one of the arguments can be set to true at a time
```
-- @param inventory BOOL
-- @param playerbalance BOOL
-- _NET_GAMESERVER_GET_BALANCE(inventory, playerbalance)

--- _NET_GAMESERVER_GET_CATALOG_STATE
-- @param state int*
-- _NET_GAMESERVER_GET_CATALOG_STATE(state)

--- _NET_GAMESERVER_GET_PRICE
-- ```
bool is always true in game scripts  
```
-- @param itemHash Hash
-- @param categoryHash Hash
-- @param p2 BOOL
-- _NET_GAMESERVER_GET_PRICE(itemHash, categoryHash, p2)

--- _NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA
-- @param p0 int*
-- @param p1 BOOL*
-- _NET_GAMESERVER_GET_TRANSACTION_MANAGER_DATA(p0, p1)

--- _NET_GAMESERVER_IS_CATALOG_VALID
-- _NET_GAMESERVER_IS_CATALOG_VALID()

--- _NET_GAMESERVER_IS_SESSION_REFRESH_PENDING
-- _NET_GAMESERVER_IS_SESSION_REFRESH_PENDING()

--- _NET_GAMESERVER_IS_SESSION_VALID
-- @param charSlot int
-- _NET_GAMESERVER_IS_SESSION_VALID(charSlot)

--- _NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA
-- @param charSlot int
-- _NET_GAMESERVER_SESSION_APPLY_RECEIVED_DATA(charSlot)

--- _NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED
-- @param p0 int
-- _NET_GAMESERVER_SET_TELEMETRY_NONCE_SEED(p0)

--- _NET_GAMESERVER_START_SESSION
-- @param charSlot int
-- _NET_GAMESERVER_START_SESSION(charSlot)

--- _NET_GAMESERVER_TRANSFER_BANK_TO_WALLET
-- @param charSlot int
-- @param amount int
-- _NET_GAMESERVER_TRANSFER_BANK_TO_WALLET(charSlot, amount)

--- _NET_GAMESERVER_TRANSFER_CASH_GET_STATUS
-- ```
Same as 0x350AA5EBC03D3BD2
```
-- _NET_GAMESERVER_TRANSFER_CASH_GET_STATUS()

--- _NET_GAMESERVER_TRANSFER_CASH_GET_STATUS_2
-- ```
Same as 0x23789E777D14CE44
```
-- _NET_GAMESERVER_TRANSFER_CASH_GET_STATUS_2()

--- _NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED
-- ```
Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
```
-- _NET_GAMESERVER_TRANSFER_CASH_SET_TELEMETRY_NONCE_SEED()

--- _NET_GAMESERVER_TRANSFER_WALLET_TO_BANK
-- @param charSlot int
-- @param amount int
-- _NET_GAMESERVER_TRANSFER_WALLET_TO_BANK(charSlot, amount)

--- _NET_GAMESERVER_USE_SERVER_TRANSACTIONS
-- ```
NativeDB Introduced: v1290
```
-- _NET_GAMESERVER_USE_SERVER_TRANSACTIONS()


-- ========== NETWORK ==========

--- 0x023ACAB2DC9DC4A4
-- ```
NativeDB Introduced: v1493
```
-- 0x023ACAB2DC9DC4A4()

--- 0x041C7F2A6C9894E6
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x041C7F2A6C9894E6(p0, p1, p2)

--- 0x04918A41BC9B8157
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x04918A41BC9B8157(p0, p1, p2)

--- 0x07EAB372C8841D99
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x07EAB372C8841D99(p0, p1, p2)

--- 0x0CF6CC51AA18F0F8
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x0CF6CC51AA18F0F8(p0, p1, p2)

--- 0x0D77A82DC2D0DA59
-- ```
NETWORK_SET_*
```
-- @param p0 Any*
-- @param p1 Any*
-- 0x0D77A82DC2D0DA59(p0, p1)

--- 0x0EDE326D47CD0F3E
-- @param ped Ped
-- @param player Player
-- 0x0EDE326D47CD0F3E(ped, player)

--- 0x0F1A4B45B7693B95
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0x0F1A4B45B7693B95(p0, p1)

--- 0x1153FA02A659051C
-- 0x1153FA02A659051C()

--- 0x1171A97A3D3981B6
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- 0x1171A97A3D3981B6(p0, p1, p2, p3)

--- 0x1398582B7F72B3ED
-- @param p0 Any
-- 0x1398582B7F72B3ED(p0)

--- 0x13F1FCB111B820B0
-- ```
SET_NETWORK_*
```
-- @param p0 BOOL
-- 0x13F1FCB111B820B0(p0)

--- 0x140E6A44870A11CE
-- 0x140E6A44870A11CE()

--- 0x144DA052257AE7D8
-- @param p0 Any
-- 0x144DA052257AE7D8(p0)

--- 0x14922ED3E38761F0
-- ```
NETWORK_IS_*
```
-- 0x14922ED3E38761F0()

--- 0x155467ACA0F55705
-- ```
Checks some commerce stuff

NativeDB Introduced: v1290
```
-- 0x155467ACA0F55705()

--- 0x162C23CA83ED0A62
-- @param p0 Any
-- 0x162C23CA83ED0A62(p0)

--- 0x17C9E241111A674D
-- ```
NativeDB Introduced: v2060
```
-- @param p0 Any
-- @param p1 Any
-- 0x17C9E241111A674D(p0, p1)

--- 0x1D4DC17C38FEAFF0
-- ```
IS_COMMERCE_*
```
-- 0x1D4DC17C38FEAFF0()

--- 0x1D610EB0FEA716D9
-- @param p0 int
-- 0x1D610EB0FEA716D9(p0)

--- 0x1F7BC3539F9E0224
-- ```
NativeDB Introduced: v1180
```
-- 0x1F7BC3539F9E0224()

--- 0x1F8E00FB18239600
-- @param p0 Any
-- 0x1F8E00FB18239600(p0)

--- 0x2302C0264EA58D31
-- 0x2302C0264EA58D31()

--- 0x24E4E51FC16305F9
-- 0x24E4E51FC16305F9()

--- 0x2555CF7DA5473794
-- ```
Does nothing (it's a nullsub).

NativeDB Introduced: v323
```
-- 0x2555CF7DA5473794()

--- 0x25D990F8E0E3F13C
-- 0x25D990F8E0E3F13C()

--- 0x261E97AD7BCF3D40
-- @param p0 BOOL
-- 0x261E97AD7BCF3D40(p0)

--- 0x265559DA40B3F327
-- @param p0 Any
-- 0x265559DA40B3F327(p0)

--- 0x265635150FB0D82E
-- 0x265635150FB0D82E()

--- 0x26F07DD83A5F7F98
-- 0x26F07DD83A5F7F98()

--- 0x283B6062A2C01E9B
-- 0x283B6062A2C01E9B()

--- 0x2B1C623823DB0D9D
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0x2B1C623823DB0D9D(p0, p1, p2, p3, p4, p5, p6)

--- 0x2B51EDBEFC301339
-- @param p0 int
-- @param p1 char*
-- 0x2B51EDBEFC301339(p0, p1)

--- 0x2BF66D2E7414F686
-- 0x2BF66D2E7414F686()

--- 0x2CE9D95E4051AECD
-- @param p0 Any
-- 0x2CE9D95E4051AECD(p0)

--- 0x2D5DC831176D0114
-- @param p0 Any
-- 0x2D5DC831176D0114(p0)

--- 0x2DA41ED6E1FCD7A5
-- @param p0 Any
-- @param TypeOfWeapon int*
-- 0x2DA41ED6E1FCD7A5(p0, TypeOfWeapon)

--- 0x2E0BF682CC778D49
-- @param p0 Any
-- 0x2E0BF682CC778D49(p0)

--- 0x2E4C123D1C8A710E
-- @param retPlayerIds int*
-- @param retNumber int*
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0x2E4C123D1C8A710E(retPlayerIds, retNumber, p2, p3, p4, p5, p6)

--- 0x32EBD154CB6B8B99
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x32EBD154CB6B8B99(p0, p1, p2)

--- 0x36391F397731595D
-- @param p0 Any
-- 0x36391F397731595D(p0)

--- 0x367EF5E2F439B4C6
-- @param p0 int
-- 0x367EF5E2F439B4C6(p0)

--- 0x37D5F739FD494675
-- I've had this return the player's ped handle sometimes, but also other random entities.

Whatever p0 is, it's at least not synced to other players.
At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
-- @param p0 Any - unknown.
-- 0x37D5F739FD494675(p0)

--- 0x3855FB5EB2C5E8B2
-- @param p0 Any
-- 0x3855FB5EB2C5E8B2(p0)

--- 0x38B7C51AB1EDC7D8
-- ```
NativeDB Introduced: v1734
```
-- @param entity Entity
-- @param toggle BOOL
-- 0x38B7C51AB1EDC7D8(entity, toggle)

--- 0x39917E1B4CB0F911
-- @param p0 BOOL
-- 0x39917E1B4CB0F911(p0)

--- 0x3C5C1E2C2FF814B1
-- ```
Sets some voice chat related value.

NETWORK_SET_*
```
-- @param toggle BOOL
-- 0x3C5C1E2C2FF814B1(toggle)

--- 0x3FA36981311FA4FF
-- @param netId int
-- @param state BOOL
-- 0x3FA36981311FA4FF(netId, state)

--- 0x3FC795691834481D
-- nullsub, doesn't do anything

```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- 0x3FC795691834481D(p0, p1)

--- 0x4237E822315D8BA9
-- 0x4237E822315D8BA9()

--- 0x4348BFDA56023A2F
-- @param p0 Any
-- @param p1 Any
-- 0x4348BFDA56023A2F(p0, p1)

--- 0x444C4525ECE0A4B9
-- ```
related to: 
NETWORK_BAIL  
NETWORK_BAIL_TRANSITION  
NETWORK_JOIN_GROUP_ACTIVITY  
NETWORK_JOIN_TRANSITION  
NETWORK_LAUNCH_TRANSITION  
NETWORK_SESSION_HOST  
NETWORK_SESSION_HOST_CLOSED  
NETWORK_SESSION_HOST_FRIENDS_ONLY  
NETWORK_SESSION_HOST_SINGLE_PLAYER  
NETWORK_SESSION_VOICE_LEAVE  
```
-- 0x444C4525ECE0A4B9()

--- 0x45E816772E93A9DB
-- 0x45E816772E93A9DB()

--- 0x4811BBAC21C5FCD5
-- @param p0 Any
-- 0x4811BBAC21C5FCD5(p0)

--- 0x4A9FDE3A5A6D0437
-- **This native does absolutely nothing, just a nullsub**
-- @param toggle BOOL
-- 0x4A9FDE3A5A6D0437(toggle)

--- 0x4AD490AE1536933B
-- @param p0 Any
-- @param p1 Any
-- 0x4AD490AE1536933B(p0, p1)

--- 0x4C2A9FDC22377075
-- 0x4C2A9FDC22377075()

--- 0x4C9034162368E206
-- ```
NativeDB Introduced: v2060
```
-- 0x4C9034162368E206()

--- 0x4D02279C83BE69FE
-- 0x4D02279C83BE69FE()

--- 0x4DF7CFFF471A7FB1
-- @param p0 Any
-- 0x4DF7CFFF471A7FB1(p0)

--- 0x5324A0E3E4CE3570
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- 0x5324A0E3E4CE3570(p0, p1, p2, p3)

--- 0x53C10C8BD774F2C9
-- 0x53C10C8BD774F2C9()

--- 0x5539C3EBF104A53A
-- @param p0 BOOL
-- 0x5539C3EBF104A53A(p0)

--- 0x559EBF901A8C68E0
-- ```
_NETWORK_CAN_VIEW_* - _NETWORK_CAN_SESSION*

NETWORK_CAN_PLAY_GAMER_USER_CONTENT?
```

```
NativeDB Introduced: v2699
```
-- @param gamerHandle Any*
-- 0x559EBF901A8C68E0(gamerHandle)

--- 0x560B423D73015E77
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- 0x560B423D73015E77(p0)

--- 0x584770794D758C18
-- @param p0 Any
-- @param p1 Any*
-- 0x584770794D758C18(p0, p1)

--- 0x59328EB08C5CEB2B
-- ```
IS_*
```
-- 0x59328EB08C5CEB2B()

--- 0x59D421683D31835A
-- @param p0 Any
-- 0x59D421683D31835A(p0)

--- 0x5A34CD9C3C5BEC44
-- @param p0 Any
-- 0x5A34CD9C3C5BEC44(p0)

--- 0x5C497525F803486B
-- **This native does absolutely nothing, just a nullsub**
-- 0x5C497525F803486B()

--- 0x5E3AA4CA2B6FB0EE
-- @param p0 Any
-- 0x5E3AA4CA2B6FB0EE(p0)

--- 0x5ECD378EE64450AB
-- @param p0 Any
-- 0x5ECD378EE64450AB(p0)

--- 0x600F8CB31C7AAB6E
-- @param p0 Any
-- 0x600F8CB31C7AAB6E(p0)

--- 0x60EDD13EB3AC1FF3
-- ```
Returns true if profile setting 901 is set to true and sets it to false.

NETWORK_C*
```
-- 0x60EDD13EB3AC1FF3()

--- 0x617F49C2668E6155
-- ```
NETWORK_GET_NUM_*
```
-- 0x617F49C2668E6155()

--- 0x63B406D7884BFA95
-- 0x63B406D7884BFA95()

--- 0x64D779659BC37B19
-- ```
NETWORK_GET_*
```
-- @param entity Entity
-- 0x64D779659BC37B19(entity)

--- 0x64E5C4CC82847B73
-- Hardcoded to return false.

```
NativeDB Introduced: v1734
```
-- 0x64E5C4CC82847B73()

--- 0x67FC09BC554A75E5
-- 0x67FC09BC554A75E5()

--- 0x68103E2247887242
-- 0x68103E2247887242()

--- 0x692D58DF40657E8C
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any*
-- @param p4 Any
-- @param p5 BOOL
-- 0x692D58DF40657E8C(p0, p1, p2, p3, p4, p5)

--- 0x6A5D89D7769A40D8
-- ```
Sets some voice chat related value.
NETWORK_SET_*
```
-- @param toggle BOOL
-- 0x6A5D89D7769A40D8(toggle)

--- 0x6BFF5F84102DF80A
-- **This native does absolutely nothing, just a nullsub**
-- @param player Player
-- 0x6BFF5F84102DF80A(player)

--- 0x6CE50E47F5543D0C
-- 0x6CE50E47F5543D0C()

--- 0x6FB7BB3607D27FA2
-- 0x6FB7BB3607D27FA2()

--- 0x6FD992C4A1C1B986
-- ```
Does nothing (it's a nullsub).

NativeDB Introduced: v323
```
-- 0x6FD992C4A1C1B986()

--- 0x702BC4D605522539
-- @param p0 Any
-- 0x702BC4D605522539(p0)

--- 0x741A3D8380319A81
-- ```
Has something to do with a host request.

NETWORK_RE*
```
-- 0x741A3D8380319A81()

--- 0x742B58F723233ED9
-- @param p0 Any
-- 0x742B58F723233ED9(p0)

--- 0x74FB3E29E6D10FA9
-- ```
Hardcoded to return zero.
==== PS4 specific info ====
Returns some sort of unavailable reason:
-1 = REASON_INVALID
 0 = REASON_OTHER
 1 = REASON_SYSTEM_UPDATE
 2 = REASON_GAME_UPDATE
 3 = REASON_SIGNED_OUT
 4 = REASON_AGE
 5 = REASON_CONNECTION
=================================
```
-- 0x74FB3E29E6D10FA9()

--- 0x754615490A029508
-- ```
Checks some commerce stuff

NativeDB Introduced: v1290
```
-- 0x754615490A029508()

--- 0x76B3F29D3F967692
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0x76B3F29D3F967692(p0, p1)

--- 0x77FADDCBE3499DF7
-- @param p0 Any
-- 0x77FADDCBE3499DF7(p0)

--- 0x7808619F31FF22DB
-- 0x7808619F31FF22DB()

--- 0x78321BEA235FD8CD
-- @param p0 Any
-- @param p1 BOOL
-- 0x78321BEA235FD8CD(p0, p1)

--- 0x793FF272D5B365F4
-- 0x793FF272D5B365F4()

--- 0x7D395EA61622E116
-- @param p0 BOOL
-- 0x7D395EA61622E116(p0)

--- 0x7DB53B37A2F211A0
-- 0x7DB53B37A2F211A0()

--- 0x7EF7649B64D7FF10
-- ```
IS_*
```
-- @param entity Entity
-- 0x7EF7649B64D7FF10(entity)

--- 0x7FCC39C46C3C03BD
-- @param p0 int
-- 0x7FCC39C46C3C03BD(p0)

--- 0x83660B734994124D
-- @param p0 Any
-- @param p1 Any
-- @param damageDealt int*
-- 0x83660B734994124D(p0, p1, damageDealt)

--- 0x83FE8D7229593017
-- 0x83FE8D7229593017()

--- 0x88B588B41FF7868E
-- 0x88B588B41FF7868E()

--- 0x8B0C2964BA471961
-- 0x8B0C2964BA471961()

--- 0x8B4FFC790CA131EF
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x8B4FFC790CA131EF(p0, p1, p2, p3)

--- 0x8C8D2739BA44AF0F
-- @param p0 Any
-- 0x8C8D2739BA44AF0F(p0)

--- 0x8EF52ACAECC51D9C
-- NETWORK_SET_\*

```
NativeDB Introduced: v1734
```
-- @param toggle BOOL
-- 0x8EF52ACAECC51D9C(toggle)

--- 0x906CA41A4B74ECA4
-- ```
NativeDB Introduced: v1493
```
-- 0x906CA41A4B74ECA4()

--- 0x94538037EE44F5CF
-- @param p0 BOOL
-- 0x94538037EE44F5CF(p0)

--- 0x9465E683B12D3F6B
-- 0x9465E683B12D3F6B()

--- 0x95BAF97C82464629
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0x95BAF97C82464629(p0, p1)

--- 0x973D76AA760A6CB6
-- @param p0 BOOL
-- 0x973D76AA760A6CB6(p0)

--- 0x9D724B400A7E8FFC
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0x9D724B400A7E8FFC(p0, p1)

--- 0x9D7AFCBF21C51712
-- ```
Sets some voice chat related value.

NETWORK_SET_*
```
-- @param toggle BOOL
-- 0x9D7AFCBF21C51712(toggle)

--- 0x9FEDF86898F100E9
-- 0x9FEDF86898F100E9()

--- 0xA0FA4EC6A05DA44E
-- 0xA0FA4EC6A05DA44E()

--- 0xA12D3A5A3753CC23
-- 0xA12D3A5A3753CC23()

--- 0xA2E9C1AB8A92E8CD
-- ```
Appears to set whether a transition should be started when the session is migrating.

NETWORK_SET_*
```
-- @param toggle BOOL
-- 0xA2E9C1AB8A92E8CD(toggle)

--- 0xA306F470D1660581
-- 0xA306F470D1660581()

--- 0xA6FCECCF4721D679
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- 0xA6FCECCF4721D679(p0)

--- 0xA7862BC5ED1DFD7E
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- 0xA7862BC5ED1DFD7E(p0, p1, p2, p3)

--- 0xA8ACB6459542A8C8
-- 0xA8ACB6459542A8C8()

--- 0xAA5FAFCD2C5F5E47
-- ```
NativeDB Added Parameter 1: Entity entity
```
-- 0xAA5FAFCD2C5F5E47()

--- 0xADB57E5B663CCA8B
-- ```
gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.  
Possibly waypoint?  
```
-- @param p0 Player
-- @param p1 float*
-- @param p2 float*
-- 0xADB57E5B663CCA8B(p0, p1, p2)

--- 0xAEAB987727C5A8A4
-- @param p0 Any
-- 0xAEAB987727C5A8A4(p0)

--- 0xAEDF1BC1C133D6E3
-- ```
Does nothing (it's a nullsub).

NativeDB Introduced: v323
```
-- 0xAEDF1BC1C133D6E3()

--- 0xB13E88E655E5A3BC
-- 0xB13E88E655E5A3BC()

--- 0xB309EBEA797E001F
-- @param p0 Any
-- 0xB309EBEA797E001F(p0)

--- 0xB37E4E6A2388CA7B
-- 0xB37E4E6A2388CA7B()

--- 0xB5D3453C98456528
-- 0xB5D3453C98456528()

--- 0xB606E6CC59664972
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- 0xB606E6CC59664972(p0)

--- 0xB746D20B17F2A229
-- @param p0 Any*
-- @param p1 Any*
-- 0xB746D20B17F2A229(p0, p1)

--- 0xB9351A07A0D458B1
-- ```
NativeDB Introduced: v2060
```
-- @param p0 Any
-- 0xB9351A07A0D458B1(p0)

--- 0xBA7F0B77D80A4EB7
-- @param p0 Any
-- @param p1 Any
-- 0xBA7F0B77D80A4EB7(p0, p1)

--- 0xBD545D44CCE70597
-- 0xBD545D44CCE70597()

--- 0xBDB6F89C729CF388
-- ```
NETWORK_SESSION_IS_*
```
-- 0xBDB6F89C729CF388()

--- 0xBF22E0F32968E967
-- @param player Player
-- @param p1 BOOL
-- 0xBF22E0F32968E967(player, p1)

--- 0xC32EA7A2F6CA7557
-- 0xC32EA7A2F6CA7557()

--- 0xC42DD763159F3461
-- 0xC42DD763159F3461()

--- 0xC434133D9BA52777
-- @param p0 Any
-- @param TypeOfWeapon int*
-- 0xC434133D9BA52777(p0, TypeOfWeapon)

--- 0xC571D0E77D8BBC29
-- ```
NETWORK_IS_TRANSITION_*
```
-- 0xC571D0E77D8BBC29()

--- 0xC87E740D9F3872CC
-- 0xC87E740D9F3872CC()

--- 0xCA575C391FEA25CC
-- @param p0 Any
-- 0xCA575C391FEA25CC(p0)

--- 0xCA59CCAE5D01E4CE
-- NETWORK_S\*

```
NativeDB Introduced: v1734
```
-- 0xCA59CCAE5D01E4CE()

--- 0xCFEB46DCD7D8D5EB
-- @param p0 BOOL
-- 0xCFEB46DCD7D8D5EB(p0)

--- 0xD313DE83394AF134
-- ```
NETWORK_SESSION_IS_*
```
-- 0xD313DE83394AF134()

--- 0xD6D7478CA62B8D41
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- 0xD6D7478CA62B8D41(p0, p1)

--- 0xD7B6C73CAD419BCF
-- @param p0 BOOL
-- 0xD7B6C73CAD419BCF(p0)

--- 0xDB663CC9FF3407A9
-- ```
NativeDB Introduced: v1734
```
-- @param player Player
-- 0xDB663CC9FF3407A9(player)

--- 0xE16AA70CE9BEEDC3
-- @param p0 Any
-- 0xE16AA70CE9BEEDC3(p0)

--- 0xE42D626EEC94E5D9
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param numReservedPeds int*
-- @param numReservedVehicles int*
-- @param numReservedObjects int*
-- 0xE42D626EEC94E5D9(p0, p1, p2, p3, numReservedPeds, numReservedVehicles, numReservedObjects)

--- 0xE6717E652B8C8D8A
-- @param p0 Any
-- @param p1 Any
-- 0xE6717E652B8C8D8A(p0, p1)

--- 0xEA8C0DDB10E2822A
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- 0xEA8C0DDB10E2822A(p0, p1)

--- 0xEBCAB9E5048434F4
-- 0xEBCAB9E5048434F4()

--- 0xEBF8284D8CADEB53
-- 0xEBF8284D8CADEB53()

--- 0xEBFA8D50ADDC54C4
-- @param p0 Any
-- 0xEBFA8D50ADDC54C4(p0)

--- 0xF083835B70BA9BFE
-- ```
NETWORK_RE*
```
-- 0xF083835B70BA9BFE()

--- 0xF287F506767CC8A9
-- 0xF287F506767CC8A9()

--- 0xF49ABC20D8552257
-- @param p0 Any
-- 0xF49ABC20D8552257(p0)

--- 0xF6F4383B7C92F11A
-- @param p0 Any
-- 0xF6F4383B7C92F11A(p0)

--- 0xF814FEC6A19FD6E0
-- 0xF814FEC6A19FD6E0()

--- 0xFA2888E3833C8E96
-- 0xFA2888E3833C8E96()

--- 0xFAC18E7356BD3210
-- ```
NativeDB Introduced: v1180
```
-- 0xFAC18E7356BD3210()

--- 0xFAE628F1E9ADB239
-- @param p0 Hash
-- @param p1 int
-- @param p2 Hash
-- 0xFAE628F1E9ADB239(p0, p1, p2)

--- 0xFB1F9381E80FA13F
-- ```
p0 is always 0. p1 is pointing to a global.  
```
-- @param p0 int
-- @param p1 Any*
-- 0xFB1F9381E80FA13F(p0, p1)

--- 0xFB680D403909DC70
-- @param p0 Any
-- @param p1 Any
-- 0xFB680D403909DC70(p0, p1)

--- 0xFD75DABC0957BF33
-- @param p0 BOOL
-- 0xFD75DABC0957BF33(p0)

--- ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID
-- @param netID int
-- @param toggle BOOL
-- ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(netID, toggle)

--- BAD_SPORT_PLAYER_LEFT_DETECTED
-- @param networkHandle int*
-- @param event int
-- @param amountReceived int
-- BAD_SPORT_PLAYER_LEFT_DETECTED(networkHandle, event, amountReceived)

--- CAN_REGISTER_MISSION_ENTITIES
-- @param ped_amt int
-- @param vehicle_amt int
-- @param object_amt int
-- @param pickup_amt int
-- CAN_REGISTER_MISSION_ENTITIES(ped_amt, vehicle_amt, object_amt, pickup_amt)

--- CAN_REGISTER_MISSION_OBJECTS
-- @param amount int
-- CAN_REGISTER_MISSION_OBJECTS(amount)

--- CAN_REGISTER_MISSION_PEDS
-- @param amount int
-- CAN_REGISTER_MISSION_PEDS(amount)

--- CAN_REGISTER_MISSION_VEHICLES
-- @param amount int
-- CAN_REGISTER_MISSION_VEHICLES(amount)

--- CLOUD_CHECK_AVAILABILITY
-- ```
Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
```
-- CLOUD_CHECK_AVAILABILITY()

--- CLOUD_DELETE_MEMBER_FILE
-- @param p0 char*
-- CLOUD_DELETE_MEMBER_FILE(p0)

--- CLOUD_DID_REQUEST_SUCCEED
-- @param handle int
-- CLOUD_DID_REQUEST_SUCCEED(handle)

--- CLOUD_GET_AVAILABILITY_CHECK_RESULT
-- CLOUD_GET_AVAILABILITY_CHECK_RESULT()

--- CLOUD_HAS_REQUEST_COMPLETED
-- @param handle int
-- CLOUD_HAS_REQUEST_COMPLETED(handle)

--- CLOUD_IS_CHECKING_AVAILABILITY
-- CLOUD_IS_CHECKING_AVAILABILITY()

--- CONVERT_POSIX_TIME
-- ```
Takes the specified time and writes it to the structure specified in the second argument.  
struct date_time  
{ 
    alignas(8) int year;  
    alignas(8) int month;  
    alignas(8) int day;  
    alignas(8) int hour;  
    alignas(8) int minute;  
    alignas(8) int second;  
};
```
-- @param posixTime int
-- @param timeStructure Any*
-- CONVERT_POSIX_TIME(posixTime, timeStructure)

--- FADE_OUT_LOCAL_PLAYER
-- ```
Hardcoded to not work in SP.  
```
-- @param p0 BOOL
-- FADE_OUT_LOCAL_PLAYER(p0)

--- FILLOUT_PM_PLAYER_LIST
-- @param networkHandle int*
-- @param p1 Any
-- @param p2 Any
-- FILLOUT_PM_PLAYER_LIST(networkHandle, p1, p2)

--- FILLOUT_PM_PLAYER_LIST_WITH_NAMES
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- FILLOUT_PM_PLAYER_LIST_WITH_NAMES(p0, p1, p2, p3)

--- GET_CLOUD_TIME_AS_INT
-- Returns POSIX timestamp.

Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#\_0xDA488F299A5B164E))
-- GET_CLOUD_TIME_AS_INT()

--- GET_COMMERCE_ITEM_CAT
-- ```
index2 is unused
```
-- @param index int
-- @param index2 int
-- GET_COMMERCE_ITEM_CAT(index, index2)

--- GET_COMMERCE_ITEM_ID
-- @param index int
-- GET_COMMERCE_ITEM_ID(index)

--- GET_COMMERCE_ITEM_NAME
-- @param index int
-- GET_COMMERCE_ITEM_NAME(index)

--- GET_COMMERCE_ITEM_NUM_CATS
-- @param index int
-- GET_COMMERCE_ITEM_NUM_CATS(index)

--- GET_COMMERCE_ITEM_TEXTURENAME
-- ```
NativeDB Added Parameter 3: int p2
```
-- @param index int
-- GET_COMMERCE_ITEM_TEXTURENAME(index)

--- GET_COMMERCE_PRODUCT_PRICE
-- @param index int
-- GET_COMMERCE_PRODUCT_PRICE(index)

--- GET_MAX_NUM_NETWORK_OBJECTS
-- GET_MAX_NUM_NETWORK_OBJECTS()

--- GET_MAX_NUM_NETWORK_PEDS
-- GET_MAX_NUM_NETWORK_PEDS()

--- GET_MAX_NUM_NETWORK_PICKUPS
-- GET_MAX_NUM_NETWORK_PICKUPS()

--- GET_MAX_NUM_NETWORK_VEHICLES
-- GET_MAX_NUM_NETWORK_VEHICLES()

--- GET_NETWORK_TIME
-- GET_NETWORK_TIME()

--- GET_NETWORK_TIME_ACCURATE
-- Returns the same value as [`GetNetworkTime`](#\_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.

Could be used for benchmarking since it can return times in ticks.
-- GET_NETWORK_TIME_ACCURATE()

--- GET_NUM_COMMERCE_ITEMS
-- GET_NUM_COMMERCE_ITEMS()

--- GET_NUM_CREATED_MISSION_OBJECTS
-- @param p0 BOOL
-- GET_NUM_CREATED_MISSION_OBJECTS(p0)

--- GET_NUM_CREATED_MISSION_PEDS
-- @param p0 BOOL
-- GET_NUM_CREATED_MISSION_PEDS(p0)

--- GET_NUM_CREATED_MISSION_VEHICLES
-- @param p0 BOOL
-- GET_NUM_CREATED_MISSION_VEHICLES(p0)

--- GET_NUM_RESERVED_MISSION_OBJECTS
-- ```
p0 appears to be for MP  
```

```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 BOOL
-- GET_NUM_RESERVED_MISSION_OBJECTS(p0)

--- GET_NUM_RESERVED_MISSION_PEDS
-- ```
p0 appears to be for MP  
```

```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 BOOL
-- GET_NUM_RESERVED_MISSION_PEDS(p0)

--- GET_NUM_RESERVED_MISSION_VEHICLES
-- ```
p0 appears to be for MP  
```

```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 BOOL
-- GET_NUM_RESERVED_MISSION_VEHICLES(p0)

--- GET_STATUS_OF_TEXTURE_DOWNLOAD
-- ```
0 = succeeded
1 = pending
2 = failed
```
-- @param p0 int
-- GET_STATUS_OF_TEXTURE_DOWNLOAD(p0)

--- GET_TIME_AS_STRING
-- @param time int
-- GET_TIME_AS_STRING(time)

--- GET_TIME_DIFFERENCE
-- ```
Subtracts the second argument from the first.  
```
-- @param timeA int
-- @param timeB int
-- GET_TIME_DIFFERENCE(timeA, timeB)

--- GET_TIME_OFFSET
-- ```
Adds the first argument to the second.  
```
-- @param timeA int
-- @param timeB int
-- GET_TIME_OFFSET(timeA, timeB)

--- HAS_NETWORK_TIME_STARTED
-- HAS_NETWORK_TIME_STARTED()

--- IS_COMMERCE_DATA_VALID
-- IS_COMMERCE_DATA_VALID()

--- IS_COMMERCE_STORE_OPEN
-- IS_COMMERCE_STORE_OPEN()

--- IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID
-- @param netID int
-- IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(netID)

--- IS_NETWORK_ID_OWNED_BY_PARTICIPANT
-- @param netId int
-- IS_NETWORK_ID_OWNED_BY_PARTICIPANT(netId)

--- IS_PLAYER_IN_CUTSCENE
-- @param player Player
-- IS_PLAYER_IN_CUTSCENE(player)

--- IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(p0, p1, p2, p3)

--- IS_SPHERE_VISIBLE_TO_PLAYER
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- IS_SPHERE_VISIBLE_TO_PLAYER(p0, p1, p2, p3, p4)

--- IS_STORE_AVAILABLE_TO_USER
-- IS_STORE_AVAILABLE_TO_USER()

--- IS_TIME_EQUAL_TO
-- ```
Returns true if the two times are equal; otherwise returns false.  
```
-- @param timeA int
-- @param timeB int
-- IS_TIME_EQUAL_TO(timeA, timeB)

--- IS_TIME_LESS_THAN
-- ```
Subtracts the second argument from the first, then returns whether the result is negative.  
```
-- @param timeA int
-- @param timeB int
-- IS_TIME_LESS_THAN(timeA, timeB)

--- IS_TIME_MORE_THAN
-- ```
Subtracts the first argument from the second, then returns whether the result is negative.  
```
-- @param timeA int
-- @param timeB int
-- IS_TIME_MORE_THAN(timeA, timeB)

--- NETWORK_ACCEPT_PRESENCE_INVITE
-- @param p0 Any
-- NETWORK_ACCEPT_PRESENCE_INVITE(p0)

--- NETWORK_ACCESS_TUNABLE_BOOL
-- @param tunableContext char*
-- @param tunableName char*
-- NETWORK_ACCESS_TUNABLE_BOOL(tunableContext, tunableName)

--- NETWORK_ACCESS_TUNABLE_BOOL_HASH
-- @param tunableContext Hash
-- @param tunableName Hash
-- NETWORK_ACCESS_TUNABLE_BOOL_HASH(tunableContext, tunableName)

--- NETWORK_ACCESS_TUNABLE_FLOAT
-- @param tunableContext char*
-- @param tunableName char*
-- @param value float*
-- NETWORK_ACCESS_TUNABLE_FLOAT(tunableContext, tunableName, value)

--- NETWORK_ACCESS_TUNABLE_FLOAT_HASH
-- @param tunableContext Hash
-- @param tunableName Hash
-- @param value float*
-- NETWORK_ACCESS_TUNABLE_FLOAT_HASH(tunableContext, tunableName, value)

--- NETWORK_ACCESS_TUNABLE_INT
-- @param tunableContext char*
-- @param tunableName char*
-- @param value int*
-- NETWORK_ACCESS_TUNABLE_INT(tunableContext, tunableName, value)

--- NETWORK_ACCESS_TUNABLE_INT_HASH
-- @param tunableContext Hash
-- @param tunableName Hash
-- @param value int*
-- NETWORK_ACCESS_TUNABLE_INT_HASH(tunableContext, tunableName, value)

--- NETWORK_ACTION_FOLLOW_INVITE
-- NETWORK_ACTION_FOLLOW_INVITE()

--- NETWORK_ADD_ENTITY_ANGLED_AREA
-- To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).

See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- NETWORK_ADD_ENTITY_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width)

--- NETWORK_ADD_ENTITY_AREA
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- NETWORK_ADD_ENTITY_AREA(p0, p1, p2, p3, p4, p5)

--- NETWORK_ADD_ENTITY_DISPLAYED_BOUNDARIES
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- NETWORK_ADD_ENTITY_DISPLAYED_BOUNDARIES(p0, p1, p2, p3, p4, p5)

--- NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE
-- Adds an entity to a network synchronised scene.
-- @param entity Entity - Entity handle to add to the scene.
-- @param netScene int - Which network scene to add this entity to (Returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526))
-- @param animDict char* - Animation dictionary to play on this entity.
-- @param animName char* - Animation clip from the dictionary to play on this entity.
-- @param blendIn float - Blend in speed of the animation. Default is `8.0`.
-- @param blendOut float - Blend out speed of the animation. Default is `-8.0`.
-- @param flag int - Synchronized scene flags. See [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9) for more info.
-- NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(entity, netScene, animDict, animName, blendIn, blendOut, flag)

--- NETWORK_ADD_FOLLOWERS
-- ```
..  
```
-- @param p0 int*
-- @param p1 int
-- NETWORK_ADD_FOLLOWERS(p0, p1)

--- NETWORK_ADD_FRIEND
-- @param networkHandle int*
-- @param message char*
-- NETWORK_ADD_FRIEND(networkHandle, message)

--- NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE
-- Adds a map entity to a network synchronized scene. This native function is utilized only once as of game build 2944 within the casino_slots script.
Please note that it's only possible to add a single map entity to synchronised scenes.

It's advisable to initially locate the object and retrieve its actual coordinates using [`GET_CLOSEST_OBJECT_OF_TYPE`](#\_0xE143FA2249364369).

```
NativeDB Introduced: v1734
```
-- @param netScene int - Net scene ID returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526)
-- @param modelHash Hash - Model hash of the object the script should look for.
-- @param x float - Object X coord.
-- @param y float - Object Y coord.
-- @param z float - Object Z coord.
-- @param animDict char* - Anim dictionary to play on this object.
-- @param animName char* - Anim name to play on this object.
-- @param blendInSpeed float - Float representing how quickly the animation should be blended into. Default is `8.0`.
-- @param blendOutSpeed float - Float representing how quickly the animation should be blended out of. Default is `-8.0`
-- @param flags int - See [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).
-- NETWORK_ADD_MAP_ENTITY_TO_SYNCHRONISED_SCENE(netScene, modelHash, x, y, z, animDict, animName, blendInSpeed, blendOutSpeed, flags)

--- NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE
-- Adds a ped to a networked synchronised scene.

Synchronized scene playback flags (Also works in other `NETWORK_ADD_*_TO_SYNCHRONISED_SCENE` natives):
| Value     |                  Name                     |                                                             Notes                                                                |
| :-------: | :---------------------------------------: | :------------------------------------------------------------------------------------------------------------------------------: |
| `0`       |  None                                     | No flag set.                                                                                                                     |
| `1`       | USE_PHYSICS                               | Allows the ped to have physics during the scene.                                                                                 |
| `2`       | TAG_SYNC_OUT                              | The task will do a tag synchronized blend out with the movement behaviour of the ped.                                            |
| `4`       | DONT_INTERRUPT                            | The scene will not be interrupted by external events.                                                                            |
| `8`       | ON_ABORT_STOP_SCENE                       | The scene will be stopped if the scripted task is aborted.                                                                       |
| `16`      | ABORT_ON_WEAPON_DAMAGE                    | The scene will be stopped if the ped is damaged by a weapon.                                                                     |
| `32`      | BLOCK_MOVER_UPDATE                        | The task will not update the mover.                                                                                              |
| `64`      | LOOP_WITHIN_SCENE                         | Animations within this scene will be looped until the scene is finished.                                                         |
| `128`     | PRESERVE_VELOCITY                         | The task will keep it's velocity when the scene is cleaned up/stopped. Do note that the `USE_PHYSICS` flag must also be present. |
| `256`     | EXPAND_PED_CAPSULE_FROM_SKELETON          | The task will apply the `ExpandPedCapsuleFromSkeleton` reset flag to the ped (See [`SET_PED_RESET_FLAG`](#\_0xC1E8A365BF3B29F2)). |
| `512`     | ACTIVATE_RAGDOLL_ON_COLLISION             | The ped will be ragdoll if it comes in contact with an object.                                                                   |
| `1024`    | HIDE_WEAPON                               | The ped's current weapon will be hidden during the scene.                                                                        |
| `2048`    | ABORT_ON_DEATH                            | The synchronised scene will be aborted if the ped dies.                                                                          |
| `4096`    | VEHICLE_ABORT_ON_LARGE_IMPACT             | If the scene is running on a vehicle, then it will be aborted if the vehicle takes a heavy collision with another vehicle.       |
| `8192`    | VEHICLE_ALLOW_PLAYER_ENTRY                | If the scene is on a vehicle, it allows players to enter it.                                                                     |
| `16384`   | PROCESS_ATTACHMENTS_ON_START              | Attachments will be processed at the start of the scene.                                                                         |
| `32768`   | NET_ON_EARLY_NON_PED_STOP_RETURN_TO_START | A non-ped entity will be returned to their starting position if the scene finishes early.                                        |
| `65536`   | SET_PED_OUT_OF_VEHICLE_AT_START           | If the ped is in a vehicle when the scene starts, it will be set out of the vehicle.                                             |
| `131072`  | NET_DISREGARD_ATTACHMENT_CHECKS           | Attachment checks will be disregarded when the scene is running.                                                                 |

These flags can be combined with the `|` operator.
-- @param ped Ped - Ped handle to add.
-- @param netScene int - Network scene handle (Returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526))
-- @param animDict char* - Dictionary of the animation that the ped will play. Network synchronised scenes don't require the animation dictionary to be loaded, unlike [`TASK_SYNCHRONIZED_SCENE`](#\_0xEEA929141F699854).
-- @param animClip char* - Clip name from the anim dictionary that the ped will play.
-- @param blendInSpeed float - Blend in speed. The lower the value, the slower the blend in speed is. Default is `8.0`.
-- @param blendOutSpeed float - Blend out speed. This should be the negative value of `blendInSpeed`. Default is `-8.0`.
-- @param syncedSceneFlags int - Synchronized scene flags bit field from the above table.
-- @param ragdollFlags int - Ragdoll blocking flags. Default is `0`.
-- @param moverBlendInDelta float - Determines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is `1000.0`.
-- @param ikFlags int - Inverse kinematics flags. Default is `0`.
-- NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(ped, netScene, animDict, animClip, blendInSpeed, blendOutSpeed, syncedSceneFlags, ragdollFlags, moverBlendInDelta, ikFlags)

--- NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK
-- Adds a ped to a networked synchronized scene but extends [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9) to support IK flags.
There is barely any difference between this and [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).

```
NativeDB Introduced: v1290
```
-- @param ped Ped - Index of the ped to add to the scene.
-- @param netSceneID int - Network scene ID returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526).
-- @param animDict char* - Which anim dictionary to use on this ped.
-- @param animClip char* - Which clip from the anim dictionary to use on this ped.
-- @param blendIn float - Blend in speed of the animation. Default is `8.0`.
-- @param blendOut float - Blend out speed of the animation. Default is `-8.0`.
-- @param sceneFlags int - Synchronized scene flags. See [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).
-- @param ragdollFlags int - Ragdoll blocking flags. Default is 0.
-- @param moverBlendInDelta float - Determines the rate at which the mover blends in to the scene. Useful for ensuring a seamless entry onto a synchronized scene. Default is `1000.0`.
-- @param ikFlags int - Inverse kinematics flags. Default is `0`.
-- NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE_WITH_IK(ped, netSceneID, animDict, animClip, blendIn, blendOut, sceneFlags, ragdollFlags, moverBlendInDelta, ikFlags)

--- NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA
-- @param netScene int
-- @param animDict char*
-- @param animName char*
-- NETWORK_ADD_SYNCHRONISED_SCENE_CAMERA(netScene, animDict, animName)

--- NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION
-- Allows scripts to use attachment commands on entities (eg. [`ATTACH_ENTITY_TO_ENTITY`](#\_0x6B9BBD38AB0796DF)) that are not controlled by the client.

**Note:** This is only local and does not affect entities on other machines. This is used by the ferris wheel script to sync players on carts.
-- @param entity Entity - Entity handle to allow remote attachment for.
-- @param toggle BOOL - true/false.
-- NETWORK_ALLOW_REMOTE_ATTACHMENT_MODIFICATION(entity, toggle)

--- NETWORK_AM_I_BLOCKED_BY_GAMER
-- @param networkHandle Any*
-- NETWORK_AM_I_BLOCKED_BY_GAMER(networkHandle)

--- NETWORK_AM_I_BLOCKED_BY_PLAYER
-- @param player Player
-- NETWORK_AM_I_BLOCKED_BY_PLAYER(player)

--- NETWORK_AM_I_MUTED_BY_GAMER
-- @param networkHandle Any*
-- NETWORK_AM_I_MUTED_BY_GAMER(networkHandle)

--- NETWORK_AM_I_MUTED_BY_PLAYER
-- @param player Player
-- NETWORK_AM_I_MUTED_BY_PLAYER(player)

--- NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA
-- @param ped Ped
-- @param player Player
-- NETWORK_APPLY_CACHED_PLAYER_HEAD_BLEND_DATA(ped, player)

--- NETWORK_APPLY_PED_SCAR_DATA
-- @param ped Ped
-- @param p1 int
-- NETWORK_APPLY_PED_SCAR_DATA(ped, p1)

--- NETWORK_APPLY_TRANSITION_PARAMETER
-- @param p0 int
-- @param p1 int
-- NETWORK_APPLY_TRANSITION_PARAMETER(p0, p1)

--- NETWORK_APPLY_TRANSITION_PARAMETER_STRING
-- @param p0 int
-- @param string char*
-- @param p2 BOOL
-- NETWORK_APPLY_TRANSITION_PARAMETER_STRING(p0, string, p2)

--- NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE
-- @param x float
-- @param y float
-- @param z float
-- NETWORK_APPLY_VOICE_PROXIMITY_OVERRIDE(x, y, z)

--- NETWORK_ARE_HANDLES_THE_SAME
-- @param netHandle1 int*
-- @param netHandle2 int*
-- NETWORK_ARE_HANDLES_THE_SAME(netHandle1, netHandle2)

--- NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT
-- NETWORK_ARE_SOCIAL_CLUB_POLICIES_CURRENT()

--- NETWORK_ARE_TRANSITION_DETAILS_VALID
-- @param p0 Any
-- NETWORK_ARE_TRANSITION_DETAILS_VALID(p0)

--- NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY
-- @param netScene int
-- @param entity Entity
-- @param bone int
-- NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(netScene, entity, bone)

--- NETWORK_BAIL
-- ```
NativeDB Added Parameter 1: int p0
NativeDB Added Parameter 2: int p1
NativeDB Added Parameter 3: int p2
```
-- NETWORK_BAIL()

--- NETWORK_BAIL_TRANSITION
-- ```
NativeDB Added Parameter 1: int p0
NativeDB Added Parameter 2: int p1
NativeDB Added Parameter 3: int p2
```
-- NETWORK_BAIL_TRANSITION()

--- NETWORK_BLOCK_INVITES
-- @param toggle BOOL
-- NETWORK_BLOCK_INVITES(toggle)

--- NETWORK_BLOCK_JOIN_QUEUE_INVITES
-- @param toggle BOOL
-- NETWORK_BLOCK_JOIN_QUEUE_INVITES(toggle)

--- NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA
-- NETWORK_CACHE_LOCAL_PLAYER_HEAD_BLEND_DATA()

--- NETWORK_CANCEL_RESPAWN_SEARCH
-- NETWORK_CANCEL_RESPAWN_SEARCH()

--- NETWORK_CAN_ACCESS_MULTIPLAYER
-- ```
11 - Need to download tunables.  
12 - Need to download background script.  
Returns 1 if the multiplayer is loaded, otherwhise 0.  
```
-- @param loadingState int*
-- NETWORK_CAN_ACCESS_MULTIPLAYER(loadingState)

--- NETWORK_CAN_BAIL
-- NETWORK_CAN_BAIL()

--- NETWORK_CAN_COMMUNICATE_WITH_GAMER
-- @param networkHandle int*
-- NETWORK_CAN_COMMUNICATE_WITH_GAMER(networkHandle)

--- NETWORK_CAN_ENTER_MULTIPLAYER
-- NETWORK_CAN_ENTER_MULTIPLAYER()

--- NETWORK_CAN_SESSION_END
-- NETWORK_CAN_SESSION_END()

--- NETWORK_CAN_SET_WAYPOINT
-- NETWORK_CAN_SET_WAYPOINT()

--- NETWORK_CHANGE_TRANSITION_SLOTS
-- @param p0 Any
-- @param p1 Any
-- NETWORK_CHANGE_TRANSITION_SLOTS(p0, p1)

--- NETWORK_CHECK_COMMUNICATION_PRIVILEGES
-- @param p0 int
-- @param p1 int
-- @param p2 BOOL
-- NETWORK_CHECK_COMMUNICATION_PRIVILEGES(p0, p1, p2)

--- NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE
-- Checks if the friendDataIndex in the friend data manager contains the data for the specified networkHandle
-- @param friendDataIndex int
-- @param networkHandle int*
-- NETWORK_CHECK_DATA_MANAGER_SUCCEEDED_FOR_HANDLE(friendDataIndex, networkHandle)

--- NETWORK_CHECK_USER_CONTENT_PRIVILEGES
-- @param p0 int
-- @param p1 int
-- @param p2 BOOL
-- NETWORK_CHECK_USER_CONTENT_PRIVILEGES(p0, p1, p2)

--- NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING
-- NETWORK_CLAN_ANY_DOWNLOAD_MEMBERSHIP_PENDING()

--- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP
-- @param networkHandle int*
-- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(networkHandle)

--- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING
-- @param p0 Any*
-- NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(p0)

--- NETWORK_CLAN_GET_EMBLEM_TXD_NAME
-- @param netHandle Any*
-- @param txdName char*
-- NETWORK_CLAN_GET_EMBLEM_TXD_NAME(netHandle, txdName)

--- NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT
-- NETWORK_CLAN_GET_LOCAL_MEMBERSHIPS_COUNT()

--- NETWORK_CLAN_GET_MEMBERSHIP
-- Retrieves a membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP).

Test C++ code:
https://pastebin.com/CD8wni4C
-- @param networkHandle int* - A player network handle.
-- @param clanMembership int* - Output buffer for the membership data. Also known as "desc".
-- @param membershipIndex int - If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
-- NETWORK_CLAN_GET_MEMBERSHIP(networkHandle, clanMembership, membershipIndex)

--- NETWORK_CLAN_GET_MEMBERSHIP_COUNT
-- @param p0 int*
-- NETWORK_CLAN_GET_MEMBERSHIP_COUNT(p0)

--- NETWORK_CLAN_GET_MEMBERSHIP_DESC
-- @param memberDesc int*
-- @param p1 int
-- NETWORK_CLAN_GET_MEMBERSHIP_DESC(memberDesc, p1)

--- NETWORK_CLAN_GET_MEMBERSHIP_VALID
-- Checks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid.
-- @param networkHandle int* - A player network handle.
-- @param membershipIndex int - If the player has multiple crews/memberships, use \[0-9], or -1 to get the active crew/membership.
-- NETWORK_CLAN_GET_MEMBERSHIP_VALID(networkHandle, membershipIndex)

--- NETWORK_CLAN_GET_UI_FORMATTED_TAG
-- ```
bufferSize is 35 in the scripts.
```
-- @param clanDesc int*
-- @param bufferSize int
-- @param formattedTag char*
-- NETWORK_CLAN_GET_UI_FORMATTED_TAG(clanDesc, bufferSize, formattedTag)

--- NETWORK_CLAN_IS_EMBLEM_READY
-- @param p0 Any
-- @param p1 Any*
-- NETWORK_CLAN_IS_EMBLEM_READY(p0, p1)

--- NETWORK_CLAN_IS_ROCKSTAR_CLAN
-- ```
bufferSize is 35 in the scripts.  
```
-- @param clanDesc int*
-- @param bufferSize int
-- NETWORK_CLAN_IS_ROCKSTAR_CLAN(clanDesc, bufferSize)

--- NETWORK_CLAN_JOIN
-- @param clanDesc int
-- NETWORK_CLAN_JOIN(clanDesc)

--- NETWORK_CLAN_PLAYER_GET_DESC
-- ```
bufferSize is 35 in the scripts.  
bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.  
the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]  
pastebin.com/cSZniHak  
```
-- @param clanDesc int*
-- @param bufferSize int
-- @param networkHandle int*
-- NETWORK_CLAN_PLAYER_GET_DESC(clanDesc, bufferSize, networkHandle)

--- NETWORK_CLAN_PLAYER_IS_ACTIVE
-- @param networkHandle int*
-- NETWORK_CLAN_PLAYER_IS_ACTIVE(networkHandle)

--- NETWORK_CLAN_RELEASE_EMBLEM
-- @param p0 Any
-- NETWORK_CLAN_RELEASE_EMBLEM(p0)

--- NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE
-- @param p0 int*
-- NETWORK_CLAN_REMOTE_MEMBERSHIPS_ARE_IN_CACHE(p0)

--- NETWORK_CLAN_REQUEST_EMBLEM
-- @param p0 Any
-- NETWORK_CLAN_REQUEST_EMBLEM(p0)

--- NETWORK_CLAN_SERVICE_IS_VALID
-- NETWORK_CLAN_SERVICE_IS_VALID()

--- NETWORK_CLEAR_CLOCK_TIME_OVERRIDE
-- NETWORK_CLEAR_CLOCK_TIME_OVERRIDE()

--- NETWORK_CLEAR_FOLLOWERS
-- NETWORK_CLEAR_FOLLOWERS()

--- NETWORK_CLEAR_FOLLOW_INVITE
-- NETWORK_CLEAR_FOLLOW_INVITE()

--- NETWORK_CLEAR_FOUND_GAMERS
-- NETWORK_CLEAR_FOUND_GAMERS()

--- NETWORK_CLEAR_GET_GAMER_STATUS
-- NETWORK_CLEAR_GET_GAMER_STATUS()

--- NETWORK_CLEAR_GROUP_ACTIVITY
-- NETWORK_CLEAR_GROUP_ACTIVITY()

--- NETWORK_CLEAR_PROPERTY_ID
-- NETWORK_CLEAR_PROPERTY_ID()

--- NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE
-- NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE()

--- NETWORK_CLEAR_VOICE_CHANNEL
-- NETWORK_CLEAR_VOICE_CHANNEL()

--- NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE
-- NETWORK_CLEAR_VOICE_PROXIMITY_OVERRIDE()

--- NETWORK_CLOSE_TRANSITION_MATCHMAKING
-- NETWORK_CLOSE_TRANSITION_MATCHMAKING()

--- NETWORK_CONCEAL_PLAYER
-- This is what R\* uses to hide players in MP interiors.

To manage player visibility with NetworkConcealPlayer, here’s a solid approach:

**General Population (players not in any instance):**

*   Use NetworkConcealPlayer to hide players who are in any instance. This way, general population players won’t see or interact with instance players.

**Instance Players (players in a specific instance):**

*   Use NetworkConcealPlayer to hide players who aren’t in the same instance. Instance players can still see and interact with the general population but not with players in other instances.

This setup keeps instance players separate from each other while allowing interaction with the general population.
-- @param player Player
-- @param toggle BOOL
-- @param bAllowDamagingWhileConcealed BOOL
-- NETWORK_CONCEAL_PLAYER(player, toggle, bAllowDamagingWhileConcealed)

--- NETWORK_CREATE_SYNCHRONISED_SCENE
-- Creates a networked synchronized scene.
Be sure to actually start the scene with [`NETWORK_START_SYNCHRONISED_SCENE`](#\_0x9A1B3FCDB36C8697) after you're done adding peds or entities to the scene.
-- @param x float - X coord of the scene position (If the scene is for an object, the position should be of the object's coordinates most of the time)
-- @param y float - Y coord of the scene position.
-- @param z float - Z coord of the scene position.
-- @param xRot float - Value x of the scene rotation.
-- @param yRot float - Value y of the scene rotation.
-- @param zRot float - Value z of the scene rotation (It's heading).
-- @param rotationOrder int - Rotation order. Default is 2.
-- @param holdLastFrame BOOL - If true, the scene stays on the last frame once it finishes, making `GetSynchronizedScenePhase` keep returning `1.0`. Script is expected to clean up it's memory and stop the animation if this is passed as true and the phase reaches `1.0`.
-- @param looped BOOL - If true, the scene will be looped and `holdLastFrame` will be disregarded.
-- @param phaseToStopScene float - Which phase (from `0.0` to `1.0` to stop the scene. Default is `1.0`)
-- @param phaseToStartScene float - Which phase (from `0.0` to `1.0` to start the scene. Default is `0.0`)
-- @param animSpeed float - Speed of the animation. Default is `1.0`
-- NETWORK_CREATE_SYNCHRONISED_SCENE(x, y, z, xRot, yRot, zRot, rotationOrder, holdLastFrame, looped, phaseToStopScene, phaseToStartScene, animSpeed)

--- NETWORK_DID_FIND_GAMERS_SUCCEED
-- NETWORK_DID_FIND_GAMERS_SUCCEED()

--- NETWORK_DID_GET_GAMER_STATUS_SUCCEED
-- NETWORK_DID_GET_GAMER_STATUS_SUCCEED()

--- NETWORK_DISABLE_INVINCIBLE_FLASHING
-- @param player Player
-- @param toggle BOOL
-- NETWORK_DISABLE_INVINCIBLE_FLASHING(player, toggle)

--- NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND
-- @param toggle BOOL
-- NETWORK_DISABLE_LEAVE_REMOTE_PED_BEHIND(toggle)

--- NETWORK_DISABLE_PROXIMITY_MIGRATION
-- @param netID int
-- NETWORK_DISABLE_PROXIMITY_MIGRATION(netID)

--- NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID
-- @param netId int
-- NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(netId)

--- NETWORK_DOES_NETWORK_ID_EXIST
-- @param netId int
-- NETWORK_DOES_NETWORK_ID_EXIST(netId)

--- NETWORK_DOES_TUNABLE_EXIST
-- @param tunableContext char*
-- @param tunableName char*
-- NETWORK_DOES_TUNABLE_EXIST(tunableContext, tunableName)

--- NETWORK_DOES_TUNABLE_EXIST_HASH
-- @param tunableContext Hash
-- @param tunableName Hash
-- NETWORK_DOES_TUNABLE_EXIST_HASH(tunableContext, tunableName)

--- NETWORK_DO_TRANSITION_QUICKMATCH
-- ```
NativeDB Added Parameter 5: Any p4
NativeDB Added Parameter 6: Any p5
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- NETWORK_DO_TRANSITION_QUICKMATCH(p0, p1, p2, p3)

--- NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC
-- ```
NativeDB Added Parameter 5: Any p4
NativeDB Added Parameter 6: Any p5
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- NETWORK_DO_TRANSITION_QUICKMATCH_ASYNC(p0, p1, p2, p3)

--- NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP
-- ```
NativeDB Added Parameter 7: Any p6
NativeDB Added Parameter 8: Any p7
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any*
-- @param p5 Any
-- NETWORK_DO_TRANSITION_QUICKMATCH_WITH_GROUP(p0, p1, p2, p3, p4, p5)

--- NETWORK_DO_TRANSITION_TO_FREEMODE
-- ```
p2 is true 3/4 of the occurrences I found.  
'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.  
```
-- @param p0 Any*
-- @param p1 Any
-- @param p2 BOOL
-- @param players int
-- @param p4 BOOL
-- NETWORK_DO_TRANSITION_TO_FREEMODE(p0, p1, p2, players, p4)

--- NETWORK_DO_TRANSITION_TO_GAME
-- @param p0 BOOL
-- @param maxPlayers int
-- NETWORK_DO_TRANSITION_TO_GAME(p0, maxPlayers)

--- NETWORK_DO_TRANSITION_TO_NEW_FREEMODE
-- @param p0 Any*
-- @param p1 Any*
-- @param players int
-- @param p3 BOOL
-- @param p4 BOOL
-- @param p5 BOOL
-- NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(p0, p1, players, p3, p4, p5)

--- NETWORK_DO_TRANSITION_TO_NEW_GAME
-- @param p0 BOOL
-- @param maxPlayers int
-- @param p2 BOOL
-- NETWORK_DO_TRANSITION_TO_NEW_GAME(p0, maxPlayers, p2)

--- NETWORK_END_TUTORIAL_SESSION
-- NETWORK_END_TUTORIAL_SESSION()

--- NETWORK_ENTITY_AREA_DOES_EXIST
-- @param areaHandle int
-- NETWORK_ENTITY_AREA_DOES_EXIST(areaHandle)

--- NETWORK_ENTITY_AREA_IS_OCCUPIED
-- @param areaHandle int
-- NETWORK_ENTITY_AREA_IS_OCCUPIED(areaHandle)

--- NETWORK_EXPLODE_HELI
-- @param heli Vehicle - Heli to explode
-- @param isAudible BOOL
-- @param isInvisible BOOL
-- @param netScriptEntityId int
-- NETWORK_EXPLODE_HELI(heli, isAudible, isInvisible, netScriptEntityId)

--- NETWORK_EXPLODE_VEHICLE
-- ```
In the console script dumps, this is only referenced once.   
NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);  
^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.  
Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?  
am_plane_takedown.c   
network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);  
armenian2.c   
network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);  
fm_horde_controler.c  
network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);  
fm_mission_controller.c, has 6 hits so not going to list them.  
Side note, setting the first parameter to 0 seems to mute sound or so?  
Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.  
```
-- @param vehicle Vehicle
-- @param isAudible BOOL
-- @param isInvisible BOOL
-- @param p3 BOOL
-- NETWORK_EXPLODE_VEHICLE(vehicle, isAudible, isInvisible, p3)

--- NETWORK_FADE_IN_ENTITY
-- Fade the given entity back in, usually used after the entity has been faded out with [NETWORK_FADE_OUT_ENTITY](#\_0xDE564951F95E09ED)

When used on a entity which isn't invisible or faded out then the native will still work, it will just instanly make the ped invisible before fading in.

**Additional Parameters**:

*   **flash**: If set to true the entity will flash while fading in.
-- @param entity Entity - The entity to fade in
-- @param bNetwork BOOL - When set to true the fade in will be networked.
-- NETWORK_FADE_IN_ENTITY(entity, bNetwork)

--- NETWORK_FADE_OUT_ENTITY
-- ```
normal - transition like when your coming out of LSC  
slow - transition like when you walk into a mission  
```
-- @param entity Entity
-- @param normal BOOL
-- @param slow BOOL
-- NETWORK_FADE_OUT_ENTITY(entity, normal, slow)

--- NETWORK_FIND_GAMERS_IN_CREW
-- @param p0 Any
-- NETWORK_FIND_GAMERS_IN_CREW(p0)

--- NETWORK_FIND_MATCHED_GAMERS
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- NETWORK_FIND_MATCHED_GAMERS(p0, p1, p2, p3)

--- NETWORK_FINISH_BROADCASTING_DATA
-- NETWORK_FINISH_BROADCASTING_DATA()

--- NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA
-- @param sceneId int
-- NETWORK_FORCE_LOCAL_USE_OF_SYNCED_SCENE_CAMERA(sceneId)

--- NETWORK_GAMERTAG_FROM_HANDLE_PENDING
-- NETWORK_GAMERTAG_FROM_HANDLE_PENDING()

--- NETWORK_GAMERTAG_FROM_HANDLE_START
-- @param networkHandle int*
-- NETWORK_GAMERTAG_FROM_HANDLE_START(networkHandle)

--- NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED
-- NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED()

--- NETWORK_GAMER_HAS_HEADSET
-- @param networkHandle Any*
-- NETWORK_GAMER_HAS_HEADSET(networkHandle)

--- NETWORK_GET_ACTIVITY_PLAYER_NUM
-- @param p0 BOOL
-- NETWORK_GET_ACTIVITY_PLAYER_NUM(p0)

--- NETWORK_GET_AGE_GROUP
-- NETWORK_GET_AGE_GROUP()

--- NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- NETWORK_GET_BACKGROUND_LOADING_RECIPIENTS(p0, p1, p2, p3)

--- NETWORK_GET_CONTENT_MODIFIER_LIST_ID
-- ```
Return the content modifier id (the tunables context if you want) of a specific content.  
It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.  
The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'  
'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.  
```
-- @param contentHash Hash
-- NETWORK_GET_CONTENT_MODIFIER_LIST_ID(contentHash)

--- NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU
-- @param p0 Any*
-- NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(p0)

--- NETWORK_GET_DESTROYER_OF_NETWORK_ID
-- @param netId int
-- @param weaponHash Hash*
-- NETWORK_GET_DESTROYER_OF_NETWORK_ID(netId, weaponHash)

--- NETWORK_GET_ENTITY_FROM_NETWORK_ID
-- Get the local entity handle of the given network id

Through this native you can get back the entity that you previously converted to netid with [NetworkGetNetworkIdFromEntity](#\_0x9E35DAB6) or with the `ToNet` natives
-- @param netId int - the network id of the entity
-- NETWORK_GET_ENTITY_FROM_NETWORK_ID(netId)

--- NETWORK_GET_ENTITY_IS_LOCAL
-- @param entity Entity
-- NETWORK_GET_ENTITY_IS_LOCAL(entity)

--- NETWORK_GET_ENTITY_IS_NETWORKED
-- @param entity Entity
-- NETWORK_GET_ENTITY_IS_NETWORKED(entity)

--- NETWORK_GET_ENTITY_KILLER_OF_PLAYER
-- @param player Player
-- @param weaponHash Hash*
-- NETWORK_GET_ENTITY_KILLER_OF_PLAYER(player, weaponHash)

--- NETWORK_GET_FOUND_GAMER
-- @param p0 Any*
-- @param p1 Any
-- NETWORK_GET_FOUND_GAMER(p0, p1)

--- NETWORK_GET_FRIEND_COUNT
-- NETWORK_GET_FRIEND_COUNT()

--- NETWORK_GET_FRIEND_NAME
-- @param friendIndex int
-- NETWORK_GET_FRIEND_NAME(friendIndex)

--- NETWORK_GET_GAMERTAG_FROM_HANDLE
-- @param networkHandle int*
-- NETWORK_GET_GAMERTAG_FROM_HANDLE(networkHandle)

--- NETWORK_GET_GAMER_STATUS_FROM_QUEUE
-- NETWORK_GET_GAMER_STATUS_FROM_QUEUE()

--- NETWORK_GET_GAMER_STATUS_RESULT
-- @param p0 Any*
-- @param p1 Any
-- NETWORK_GET_GAMER_STATUS_RESULT(p0, p1)

--- NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK
-- @param hours int*
-- @param minutes int*
-- @param seconds int*
-- NETWORK_GET_GLOBAL_MULTIPLAYER_CLOCK(hours, minutes, seconds)

--- NETWORK_GET_HOST_OF_SCRIPT
-- ```
scriptName examples:  
"freemode", "AM_CR_SecurityVan", ...  
Most of the time, these values are used:  
p1 = -1  
p2 = 0  
```
-- @param scriptName char*
-- @param p1 int
-- @param p2 int
-- NETWORK_GET_HOST_OF_SCRIPT(scriptName, p1, p2)

--- NETWORK_GET_HOST_OF_THIS_SCRIPT
-- NETWORK_GET_HOST_OF_THIS_SCRIPT()

--- NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT
-- NETWORK_GET_INSTANCE_ID_OF_THIS_SCRIPT()

--- NETWORK_GET_LOCAL_HANDLE
-- ```
Retrieves the local player's NetworkHandle* and stores it in the given buffer.  
* Currently unknown struct  
```
-- @param networkHandle int*
-- @param bufferSize int
-- NETWORK_GET_LOCAL_HANDLE(networkHandle, bufferSize)

--- NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID
-- Returns a local synchronized scene handle of a networked synchronised scene.
-- @param netSceneId int - Network synchronised scene ID (returned by [`NETWORK_CREATE_SYNCHRONISED_SCENE`](#\_0x7CD6BC4C2BBDD526)).
-- NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(netSceneId)

--- NETWORK_GET_MAX_FRIENDS
-- NETWORK_GET_MAX_FRIENDS()

--- NETWORK_GET_MAX_NUM_PARTICIPANTS
-- ```
Seems to always return 0, but it's used in quite a few loops.
for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)
    {
        if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)
        {
            var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));
```
-- NETWORK_GET_MAX_NUM_PARTICIPANTS()

--- NETWORK_GET_NETWORK_ID_FROM_ENTITY
-- Get the network id of the given entity

An entity network id represents a given entity for other clients, it's a handle shared between clients, can be reconverted to a client entity handle.\
These (entity network IDs) can and will be reused, the network id will not change.
If you need to refer to an entity across machines (clients, or the server), you should use its network id.

Read more at [Network and local IDs](https://docs.fivem.net/docs/scripting-manual/networking/ids/)
-- @param entity Entity - the handle of the entity from which the network id should be taken
-- NETWORK_GET_NETWORK_ID_FROM_ENTITY(entity)

--- NETWORK_GET_NUM_CONNECTED_PLAYERS
-- ```
Returns the amount of players connected in the current session. Only works when connected to a session/server.  
```
-- NETWORK_GET_NUM_CONNECTED_PLAYERS()

--- NETWORK_GET_NUM_FOUND_GAMERS
-- NETWORK_GET_NUM_FOUND_GAMERS()

--- NETWORK_GET_NUM_PARTICIPANTS
-- NETWORK_GET_NUM_PARTICIPANTS()

--- NETWORK_GET_NUM_PRESENCE_INVITES
-- NETWORK_GET_NUM_PRESENCE_INVITES()

--- NETWORK_GET_NUM_SCRIPT_PARTICIPANTS
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- NETWORK_GET_NUM_SCRIPT_PARTICIPANTS(p0, p1, p2)

--- NETWORK_GET_PARTICIPANT_INDEX
-- @param index int
-- NETWORK_GET_PARTICIPANT_INDEX(index)

--- NETWORK_GET_PLATFORM_PARTY_MEMBERS
-- @param data Any*
-- @param dataSize int
-- NETWORK_GET_PLATFORM_PARTY_MEMBERS(data, dataSize)

--- NETWORK_GET_PLAYER_FROM_GAMER_HANDLE
-- @param networkHandle int*
-- NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(networkHandle)

--- NETWORK_GET_PLAYER_INDEX
-- @param player Player
-- NETWORK_GET_PLAYER_INDEX(player)

--- NETWORK_GET_PLAYER_INDEX_FROM_PED
-- ```
Returns the Player associated to a given Ped when in an online session.  
```
-- @param ped Ped
-- NETWORK_GET_PLAYER_INDEX_FROM_PED(ped)

--- NETWORK_GET_PLAYER_LOUDNESS
-- @param player Player
-- NETWORK_GET_PLAYER_LOUDNESS(player)

--- NETWORK_GET_PLAYER_OWNS_WAYPOINT
-- @param player Player
-- NETWORK_GET_PLAYER_OWNS_WAYPOINT(player)

--- NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE
-- @param player Player
-- NETWORK_GET_PLAYER_TUTORIAL_SESSION_INSTANCE(player)

--- NETWORK_GET_PRESENCE_INVITE_CONTENT_ID
-- @param p0 Any
-- NETWORK_GET_PRESENCE_INVITE_CONTENT_ID(p0)

--- NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN
-- @param p0 Any
-- NETWORK_GET_PRESENCE_INVITE_FROM_ADMIN(p0)

--- NETWORK_GET_PRESENCE_INVITE_HANDLE
-- @param p0 Any
-- @param p1 Any*
-- NETWORK_GET_PRESENCE_INVITE_HANDLE(p0, p1)

--- NETWORK_GET_PRESENCE_INVITE_ID
-- @param p0 Any
-- NETWORK_GET_PRESENCE_INVITE_ID(p0)

--- NETWORK_GET_PRESENCE_INVITE_INVITER
-- Returns the Name of the inviter of the specific selected Invite.
-- @param inviteIndex int
-- NETWORK_GET_PRESENCE_INVITE_INVITER(inviteIndex)

--- NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT
-- @param p0 Any
-- NETWORK_GET_PRESENCE_INVITE_IS_TOURNAMENT(p0)

--- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT
-- @param p0 Any
-- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_CURRENT(p0)

--- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH
-- @param p0 Any
-- NETWORK_GET_PRESENCE_INVITE_PLAYLIST_LENGTH(p0)

--- NETWORK_GET_PRESENCE_INVITE_SESSION_ID
-- The Native returns a hash of the session id as string from the specific invite index!
-- @param inviteIndex int
-- NETWORK_GET_PRESENCE_INVITE_SESSION_ID(inviteIndex)

--- NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL
-- NETWORK_GET_PRIMARY_CLAN_DATA_CANCEL()

--- NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR
-- NETWORK_GET_PRIMARY_CLAN_DATA_CLEAR()

--- NETWORK_GET_PRIMARY_CLAN_DATA_NEW
-- @param p0 Any*
-- @param p1 Any*
-- NETWORK_GET_PRIMARY_CLAN_DATA_NEW(p0, p1)

--- NETWORK_GET_PRIMARY_CLAN_DATA_PENDING
-- NETWORK_GET_PRIMARY_CLAN_DATA_PENDING()

--- NETWORK_GET_PRIMARY_CLAN_DATA_START
-- @param p0 Any*
-- @param p1 Any
-- NETWORK_GET_PRIMARY_CLAN_DATA_START(p0, p1)

--- NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS
-- NETWORK_GET_PRIMARY_CLAN_DATA_SUCCESS()

--- NETWORK_GET_RANDOM_INT
-- NETWORK_GET_RANDOM_INT()

--- NETWORK_GET_RANDOM_INT_RANGED
-- ```
Same as GET_RANDOM_INT_IN_RANGE
```
-- @param rangeStart int
-- @param rangeEnd int
-- NETWORK_GET_RANDOM_INT_RANGED(rangeStart, rangeEnd)

--- NETWORK_GET_RESPAWN_RESULT
-- ```
Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..  
```
-- @param randomInt int
-- @param coordinates Vector3*
-- @param heading float*
-- NETWORK_GET_RESPAWN_RESULT(randomInt, coordinates, heading)

--- NETWORK_GET_RESPAWN_RESULT_FLAGS
-- @param p0 Any
-- NETWORK_GET_RESPAWN_RESULT_FLAGS(p0)

--- NETWORK_GET_SCRIPT_STATUS
-- NETWORK_GET_SCRIPT_STATUS()

--- NETWORK_GET_TALKER_PROXIMITY
-- NETWORK_GET_TALKER_PROXIMITY()

--- NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT
-- NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT()

--- NETWORK_GET_TIMEOUT_TIME
-- NETWORK_GET_TIMEOUT_TIME()

--- NETWORK_GET_TOTAL_NUM_PLAYERS
-- NETWORK_GET_TOTAL_NUM_PLAYERS()

--- NETWORK_GET_TRANSITION_HOST
-- @param networkHandle int*
-- NETWORK_GET_TRANSITION_HOST(networkHandle)

--- NETWORK_GET_TRANSITION_MEMBERS
-- ```
Returns count.
```
-- @param data Any*
-- @param dataCount int
-- NETWORK_GET_TRANSITION_MEMBERS(data, dataCount)

--- NETWORK_GET_TUNABLE_CLOUD_CRC
-- ```
Actually returns the version (TUNABLE_VERSION)
```
-- NETWORK_GET_TUNABLE_CLOUD_CRC()

--- NETWORK_HANDLE_FROM_FRIEND
-- @param friendIndex int
-- @param networkHandle int*
-- @param bufferSize int
-- NETWORK_HANDLE_FROM_FRIEND(friendIndex, networkHandle, bufferSize)

--- NETWORK_HANDLE_FROM_MEMBER_ID
-- ```
Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.  
* Currently unknown struct  
```
-- @param memberId char*
-- @param networkHandle int*
-- @param bufferSize int
-- NETWORK_HANDLE_FROM_MEMBER_ID(memberId, networkHandle, bufferSize)

--- NETWORK_HANDLE_FROM_PLAYER
-- ```
Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.  
* Currently unknown struct  
Example:  
std::vector<UINT64> GetPlayerNetworkHandle(Player player) {  
    const int size = 13;  
    uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();  
    NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);  
    for (int i = 0; i < size; i++) {  
        Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);  
    }  
    std::vector<UINT64> result(buffer, buffer + sizeof(buffer));  
    return result;  
}  
```
-- @param player Player
-- @param networkHandle int*
-- @param bufferSize int
-- NETWORK_HANDLE_FROM_PLAYER(player, networkHandle, bufferSize)

--- NETWORK_HANDLE_FROM_USER_ID
-- ```
Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.  
* Currently unknown struct  
```
-- @param userId char*
-- @param networkHandle int*
-- @param bufferSize int
-- NETWORK_HANDLE_FROM_USER_ID(userId, networkHandle, bufferSize)

--- NETWORK_HASH_FROM_GAMER_HANDLE
-- @param networkHandle int*
-- NETWORK_HASH_FROM_GAMER_HANDLE(networkHandle)

--- NETWORK_HASH_FROM_PLAYER_HANDLE
-- @param player Player
-- NETWORK_HASH_FROM_PLAYER_HANDLE(player)

--- NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA
-- @param player Player
-- NETWORK_HAS_CACHED_PLAYER_HEAD_BLEND_DATA(player)

--- NETWORK_HAS_CONTROL_OF_DOOR
-- @param doorHash Hash
-- NETWORK_HAS_CONTROL_OF_DOOR(doorHash)

--- NETWORK_HAS_CONTROL_OF_ENTITY
-- @param entity Entity
-- NETWORK_HAS_CONTROL_OF_ENTITY(entity)

--- NETWORK_HAS_CONTROL_OF_NETWORK_ID
-- @param netId int
-- NETWORK_HAS_CONTROL_OF_NETWORK_ID(netId)

--- NETWORK_HAS_CONTROL_OF_PICKUP
-- @param pickup Pickup
-- NETWORK_HAS_CONTROL_OF_PICKUP(pickup)

--- NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD
-- @param entity Entity
-- NETWORK_HAS_ENTITY_BEEN_REGISTERED_WITH_THIS_THREAD(entity)

--- NETWORK_HAS_FOLLOW_INVITE
-- NETWORK_HAS_FOLLOW_INVITE()

--- NETWORK_HAS_HEADSET
-- NETWORK_HAS_HEADSET()

--- NETWORK_HAS_INVITED_GAMER
-- @param p0 Any*
-- NETWORK_HAS_INVITED_GAMER(p0)

--- NETWORK_HAS_INVITED_GAMER_TO_TRANSITION
-- @param p0 Any*
-- NETWORK_HAS_INVITED_GAMER_TO_TRANSITION(p0)

--- NETWORK_HAS_INVITE_BEEN_ACKED
-- @param networkHandle int*
-- NETWORK_HAS_INVITE_BEEN_ACKED(networkHandle)

--- NETWORK_HAS_PENDING_INVITE
-- NETWORK_HAS_PENDING_INVITE()

--- NETWORK_HAS_PLAYER_STARTED_TRANSITION
-- @param player Player
-- NETWORK_HAS_PLAYER_STARTED_TRANSITION(player)

--- NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA
-- NETWORK_HAS_RECEIVED_HOST_BROADCAST_DATA()

--- NETWORK_HAS_ROS_PRIVILEGE
-- ```
index is always 18 in scripts
```
-- @param index int
-- NETWORK_HAS_ROS_PRIVILEGE(index)

--- NETWORK_HAS_ROS_PRIVILEGE_END_DATE
-- @param privilege int
-- @param banType int*
-- @param timeData Vector3*
-- NETWORK_HAS_ROS_PRIVILEGE_END_DATE(privilege, banType, timeData)

--- NETWORK_HAS_SOCIAL_CLUB_ACCOUNT
-- NETWORK_HAS_SOCIAL_CLUB_ACCOUNT()

--- NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV
-- NETWORK_HAS_SOCIAL_NETWORKING_SHARING_PRIV()

--- NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED
-- @param networkHandle int*
-- NETWORK_HAS_TRANSITION_INVITE_BEEN_ACKED(networkHandle)

--- NETWORK_HAS_VALID_ROS_CREDENTIALS
-- ```
Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
```
-- NETWORK_HAS_VALID_ROS_CREDENTIALS()

--- NETWORK_HAVE_COMMUNICATION_PRIVILEGES
-- @param p0 int
-- @param player Player
-- NETWORK_HAVE_COMMUNICATION_PRIVILEGES(p0, player)

--- NETWORK_HAVE_ONLINE_PRIVILEGES
-- NETWORK_HAVE_ONLINE_PRIVILEGES()

--- NETWORK_HAVE_ROS_BANNED_PRIV
-- NETWORK_HAVE_ROS_BANNED_PRIV()

--- NETWORK_HAVE_ROS_CREATE_TICKET_PRIV
-- NETWORK_HAVE_ROS_CREATE_TICKET_PRIV()

--- NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV
-- NETWORK_HAVE_ROS_LEADERBOARD_WRITE_PRIV()

--- NETWORK_HAVE_ROS_MULTIPLAYER_PRIV
-- NETWORK_HAVE_ROS_MULTIPLAYER_PRIV()

--- NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV
-- NETWORK_HAVE_ROS_SOCIAL_CLUB_PRIV()

--- NETWORK_HAVE_USER_CONTENT_PRIVILEGES
-- @param p0 int
-- NETWORK_HAVE_USER_CONTENT_PRIVILEGES(p0)

--- NETWORK_HOST_TRANSITION
-- From what I can tell it looks like it does the following:

Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.

You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
-- @param p0 int - Unknown int
-- @param p1 int - Unknown int
-- @param p2 int - Unknown int
-- @param p3 int - Unknown int
-- @param p4 Any - Unknown always 0 in decompiled scripts
-- @param p5 BOOL - BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p6 BOOL - BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
-- @param p7 int - Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p8 Any - Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
-- @param p9 int - Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
-- NETWORK_HOST_TRANSITION(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- NETWORK_INVITE_GAMERS
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- NETWORK_INVITE_GAMERS(p0, p1, p2, p3)

--- NETWORK_INVITE_GAMERS_TO_TRANSITION
-- @param p0 Any*
-- @param p1 Any
-- NETWORK_INVITE_GAMERS_TO_TRANSITION(p0, p1)

--- NETWORK_IS_ACTIVITY_SESSION
-- NETWORK_IS_ACTIVITY_SESSION()

--- NETWORK_IS_ACTIVITY_SPECTATOR
-- NETWORK_IS_ACTIVITY_SPECTATOR()

--- NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE
-- @param networkHandle int*
-- NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(networkHandle)

--- NETWORK_IS_ADDING_FRIEND
-- NETWORK_IS_ADDING_FRIEND()

--- NETWORK_IS_CABLE_CONNECTED
-- NETWORK_IS_CABLE_CONNECTED()

--- NETWORK_IS_CHATTING_IN_PLATFORM_PARTY
-- ```
This would be nice to see if someone is in party chat, but 2 sad notes.  
1) It only becomes true if said person is speaking in that party at the time.  
2) It will never, become true unless you are in that party with said person.  
```
-- @param networkHandle int*
-- NETWORK_IS_CHATTING_IN_PLATFORM_PARTY(networkHandle)

--- NETWORK_IS_CLOCK_TIME_OVERRIDDEN
-- NETWORK_IS_CLOCK_TIME_OVERRIDDEN()

--- NETWORK_IS_CLOUD_AVAILABLE
-- NETWORK_IS_CLOUD_AVAILABLE()

--- NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING
-- NETWORK_IS_CLOUD_BACKGROUND_SCRIPT_REQUEST_PENDING()

--- NETWORK_IS_DOOR_NETWORKED
-- @param doorHash Hash
-- NETWORK_IS_DOOR_NETWORKED(doorHash)

--- NETWORK_IS_ENTITY_FADING
-- @param entity Entity
-- NETWORK_IS_ENTITY_FADING(entity)

--- NETWORK_IS_FINDING_GAMERS
-- NETWORK_IS_FINDING_GAMERS()

--- NETWORK_IS_FRIEND
-- @param networkHandle int*
-- NETWORK_IS_FRIEND(networkHandle)

--- NETWORK_IS_FRIEND_INDEX_ONLINE
-- @param friendIndex int
-- NETWORK_IS_FRIEND_INDEX_ONLINE(friendIndex)

--- NETWORK_IS_FRIEND_IN_MULTIPLAYER
-- @param friendName char*
-- NETWORK_IS_FRIEND_IN_MULTIPLAYER(friendName)

--- NETWORK_IS_FRIEND_IN_SAME_TITLE
-- ```
In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.  
```
-- @param friendName char*
-- NETWORK_IS_FRIEND_IN_SAME_TITLE(friendName)

--- NETWORK_IS_FRIEND_ONLINE
-- @param name char*
-- NETWORK_IS_FRIEND_ONLINE(name)

--- NETWORK_IS_GAMER_BLOCKED_BY_ME
-- @param networkHandle Any*
-- NETWORK_IS_GAMER_BLOCKED_BY_ME(networkHandle)

--- NETWORK_IS_GAMER_IN_MY_SESSION
-- @param networkHandle int*
-- NETWORK_IS_GAMER_IN_MY_SESSION(networkHandle)

--- NETWORK_IS_GAMER_MUTED_BY_ME
-- @param networkHandle int*
-- NETWORK_IS_GAMER_MUTED_BY_ME(networkHandle)

--- NETWORK_IS_GAMER_TALKING
-- @param networkHandle int*
-- NETWORK_IS_GAMER_TALKING(networkHandle)

--- NETWORK_IS_GAME_IN_PROGRESS
-- NETWORK_IS_GAME_IN_PROGRESS()

--- NETWORK_IS_GETTING_GAMER_STATUS
-- NETWORK_IS_GETTING_GAMER_STATUS()

--- NETWORK_IS_HANDLE_VALID
-- @param networkHandle int*
-- @param bufferSize int
-- NETWORK_IS_HANDLE_VALID(networkHandle, bufferSize)

--- NETWORK_IS_HOST
-- ```
If you are host, returns true else returns false.
```
-- NETWORK_IS_HOST()

--- NETWORK_IS_HOST_OF_THIS_SCRIPT
-- NETWORK_IS_HOST_OF_THIS_SCRIPT()

--- NETWORK_IS_INACTIVE_PROFILE
-- Checks if the networkHandle is the same as any other user that is signed in on the local machine.
For example, if your console has two or more users signed in (on different controllers), the profile that is not controlling the game would be "inactive".
-- @param networkHandle int*
-- NETWORK_IS_INACTIVE_PROFILE(networkHandle)

--- NETWORK_IS_IN_MP_CUTSCENE
-- NETWORK_IS_IN_MP_CUTSCENE()

--- NETWORK_IS_IN_PARTY
-- ```
Note according to IDA TU27 X360(Console),  
This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.  
Side note: This location just stops where it's at once jumped to.  
Screenshot for side note,   
h t t p ://i.imgur.com/m2ci1mF.png  
h t t p://i.imgur.com/Z0Wx2B6.png  
```
-- NETWORK_IS_IN_PARTY()

--- NETWORK_IS_IN_PLATFORM_PARTY
-- ```
Hardcoded to return false.
```
-- NETWORK_IS_IN_PLATFORM_PARTY()

--- NETWORK_IS_IN_PLATFORM_PARTY_CHAT
-- ```
Hardcoded to return false.
```
-- NETWORK_IS_IN_PLATFORM_PARTY_CHAT()

--- NETWORK_IS_IN_SESSION
-- NETWORK_IS_IN_SESSION()

--- NETWORK_IS_IN_SPECTATOR_MODE
-- NETWORK_IS_IN_SPECTATOR_MODE()

--- NETWORK_IS_IN_TRANSITION
-- NETWORK_IS_IN_TRANSITION()

--- NETWORK_IS_IN_TUTORIAL_SESSION
-- NETWORK_IS_IN_TUTORIAL_SESSION()

--- NETWORK_IS_LOCAL_PLAYER_INVINCIBLE
-- NETWORK_IS_LOCAL_PLAYER_INVINCIBLE()

--- NETWORK_IS_LOCAL_TALKING
-- NETWORK_IS_LOCAL_TALKING()

--- NETWORK_IS_MULTIPLAYER_DISABLED
-- NETWORK_IS_MULTIPLAYER_DISABLED()

--- NETWORK_IS_OFFLINE_INVITE_PENDING
-- NETWORK_IS_OFFLINE_INVITE_PENDING()

--- NETWORK_IS_PARTICIPANT_ACTIVE
-- @param p0 int
-- NETWORK_IS_PARTICIPANT_ACTIVE(p0)

--- NETWORK_IS_PARTY_MEMBER
-- ```
Note according to IDA TU27 X360(Console),  
This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.  
Side note: This location just stops where it's at once jumped to.  
Screenshot for side note,   
h t t p ://i.imgur.com/m2ci1mF.png  
h t t p://i.imgur.com/Z0Wx2B6.png  
```
-- @param networkHandle int*
-- NETWORK_IS_PARTY_MEMBER(networkHandle)

--- NETWORK_IS_PENDING_FRIEND
-- ```
This function is hard-coded to always return 0.
```
-- @param p0 Any
-- NETWORK_IS_PENDING_FRIEND(p0)

--- NETWORK_IS_PLAYER_ACTIVE
-- @param player Player
-- NETWORK_IS_PLAYER_ACTIVE(player)

--- NETWORK_IS_PLAYER_A_PARTICIPANT
-- @param player Player
-- NETWORK_IS_PLAYER_A_PARTICIPANT(player)

--- NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT
-- @param player1 Player
-- @param script char*
-- @param player2 Player
-- NETWORK_IS_PLAYER_A_PARTICIPANT_ON_SCRIPT(player1, script, player2)

--- NETWORK_IS_PLAYER_BLOCKED_BY_ME
-- @param player Player
-- NETWORK_IS_PLAYER_BLOCKED_BY_ME(player)

--- NETWORK_IS_PLAYER_CONCEALED
-- @param player Player
-- NETWORK_IS_PLAYER_CONCEALED(player)

--- NETWORK_IS_PLAYER_CONNECTED
-- @param player Player
-- NETWORK_IS_PLAYER_CONNECTED(player)

--- NETWORK_IS_PLAYER_FADING
-- @param player Player
-- NETWORK_IS_PLAYER_FADING(player)

--- NETWORK_IS_PLAYER_IN_MP_CUTSCENE
-- @param player Player
-- NETWORK_IS_PLAYER_IN_MP_CUTSCENE(player)

--- NETWORK_IS_PLAYER_MUTED_BY_ME
-- @param player Player
-- NETWORK_IS_PLAYER_MUTED_BY_ME(player)

--- NETWORK_IS_PLAYER_TALKING
-- ```
returns true if someone is screaming or talking in a microphone  
```
-- @param player Player
-- NETWORK_IS_PLAYER_TALKING(player)

--- NETWORK_IS_SCRIPT_ACTIVE
-- @param scriptName char*
-- @param player Player
-- @param p2 BOOL
-- @param p3 Any
-- NETWORK_IS_SCRIPT_ACTIVE(scriptName, player, p2, p3)

--- NETWORK_IS_SESSION_ACTIVE
-- NETWORK_IS_SESSION_ACTIVE()

--- NETWORK_IS_SESSION_BUSY
-- NETWORK_IS_SESSION_BUSY()

--- NETWORK_IS_SESSION_STARTED
-- ```
This checks if player is playing on gta online or not.  
Please add an if and block your mod if this is "true".  
```
-- NETWORK_IS_SESSION_STARTED()

--- NETWORK_IS_SIGNED_IN
-- ```
Returns whether the player is signed into Social Club.  
```
-- NETWORK_IS_SIGNED_IN()

--- NETWORK_IS_SIGNED_ONLINE
-- ```
Returns whether the game is not in offline mode.  
seemed not to work for some ppl  
```
-- NETWORK_IS_SIGNED_ONLINE()

--- NETWORK_IS_TRANSITION_BUSY
-- NETWORK_IS_TRANSITION_BUSY()

--- NETWORK_IS_TRANSITION_CLOSED_CREW
-- NETWORK_IS_TRANSITION_CLOSED_CREW()

--- NETWORK_IS_TRANSITION_CLOSED_FRIENDS
-- NETWORK_IS_TRANSITION_CLOSED_FRIENDS()

--- NETWORK_IS_TRANSITION_HOST
-- NETWORK_IS_TRANSITION_HOST()

--- NETWORK_IS_TRANSITION_HOST_FROM_HANDLE
-- @param networkHandle int*
-- NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(networkHandle)

--- NETWORK_IS_TRANSITION_MATCHMAKING
-- NETWORK_IS_TRANSITION_MATCHMAKING()

--- NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING
-- NETWORK_IS_TRANSITION_OPEN_TO_MATCHMAKING()

--- NETWORK_IS_TRANSITION_PRIVATE
-- NETWORK_IS_TRANSITION_PRIVATE()

--- NETWORK_IS_TRANSITION_SOLO
-- NETWORK_IS_TRANSITION_SOLO()

--- NETWORK_IS_TRANSITION_STARTED
-- NETWORK_IS_TRANSITION_STARTED()

--- NETWORK_IS_TRANSITION_TO_GAME
-- NETWORK_IS_TRANSITION_TO_GAME()

--- NETWORK_IS_TRANSITION_VISIBILITY_LOCKED
-- NETWORK_IS_TRANSITION_VISIBILITY_LOCKED()

--- NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING
-- NETWORK_IS_TUNABLE_CLOUD_REQUEST_PENDING()

--- NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING
-- NETWORK_IS_TUTORIAL_SESSION_CHANGE_PENDING()

--- NETWORK_JOIN_GROUP_ACTIVITY
-- NETWORK_JOIN_GROUP_ACTIVITY()

--- NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION
-- NETWORK_JOIN_PREVIOUSLY_FAILED_SESSION()

--- NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION
-- NETWORK_JOIN_PREVIOUSLY_FAILED_TRANSITION()

--- NETWORK_JOIN_TRANSITION
-- ```
int handle[76];  
NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);  
Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);  
NETWORK_JOIN_TRANSITION(uVar2);  
		nothing doin.  
```
-- @param player Player
-- NETWORK_JOIN_TRANSITION(player)

--- NETWORK_LAUNCH_TRANSITION
-- NETWORK_LAUNCH_TRANSITION()

--- NETWORK_LEAVE_TRANSITION
-- NETWORK_LEAVE_TRANSITION()

--- NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED
-- @param p0 Any*
-- NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(p0)

--- NETWORK_MEMBER_ID_FROM_GAMER_HANDLE
-- @param networkHandle int*
-- NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(networkHandle)

--- NETWORK_OPEN_TRANSITION_MATCHMAKING
-- NETWORK_OPEN_TRANSITION_MATCHMAKING()

--- NETWORK_OVERRIDE_CHAT_RESTRICTIONS
-- ```
Could possibly bypass being muted or automatically muted  
```
-- @param player Player
-- @param toggle BOOL
-- NETWORK_OVERRIDE_CHAT_RESTRICTIONS(player, toggle)

--- NETWORK_OVERRIDE_CLOCK_TIME
-- Overrides the game clock time for the local player, allowing for manipulation of the in-game time. This native is effective in both multiplayer and singleplayer modes.

**Note:** Passing wrong data (e.g. hours above 23) will cause the game to crash.
-- @param hours int - The hour to set (0-23).
-- @param minutes int - The minute to set (0-59).
-- @param seconds int - The second to set (0-59).
-- NETWORK_OVERRIDE_CLOCK_TIME(hours, minutes, seconds)

--- NETWORK_OVERRIDE_COORDS_AND_HEADING
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- NETWORK_OVERRIDE_COORDS_AND_HEADING(entity, x, y, z, heading)

--- NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS
-- ```
R* uses this to hear all player when spectating.   
It allows you to hear other online players when their chat is on none, crew and or friends  
```
-- @param player Player
-- @param toggle BOOL
-- NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS(player, toggle)

--- NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL
-- ```
p0 is always false in scripts.
```
-- @param toggle BOOL
-- NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS_ALL(toggle)

--- NETWORK_OVERRIDE_SEND_RESTRICTIONS
-- ```
This is used alongside the native,
'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
```
-- @param player Player
-- @param toggle BOOL
-- NETWORK_OVERRIDE_SEND_RESTRICTIONS(player, toggle)

--- NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL
-- @param toggle BOOL
-- NETWORK_OVERRIDE_SEND_RESTRICTIONS_ALL(toggle)

--- NETWORK_OVERRIDE_TEAM_RESTRICTIONS
-- @param team int
-- @param toggle BOOL
-- NETWORK_OVERRIDE_TEAM_RESTRICTIONS(team, toggle)

--- NETWORK_OVERRIDE_TRANSITION_CHAT
-- @param p0 BOOL
-- NETWORK_OVERRIDE_TRANSITION_CHAT(p0)

--- NETWORK_PLAYER_GET_CHEATER_REASON
-- NETWORK_PLAYER_GET_CHEATER_REASON()

--- NETWORK_PLAYER_GET_NAME
-- ```
Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
```
-- @param player Player
-- NETWORK_PLAYER_GET_NAME(player)

--- NETWORK_PLAYER_GET_USERID
-- ```
Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
```
-- @param player Player
-- @param userID int*
-- NETWORK_PLAYER_GET_USERID(player, userID)

--- NETWORK_PLAYER_HAS_HEADSET
-- @param player Player
-- NETWORK_PLAYER_HAS_HEADSET(player)

--- NETWORK_PLAYER_INDEX_IS_CHEATER
-- @param player Player
-- NETWORK_PLAYER_INDEX_IS_CHEATER(player)

--- NETWORK_PLAYER_IS_BADSPORT
-- NETWORK_PLAYER_IS_BADSPORT()

--- NETWORK_PLAYER_IS_CHEATER
-- NETWORK_PLAYER_IS_CHEATER()

--- NETWORK_PLAYER_IS_ROCKSTAR_DEV
-- ```
Checks if a specific value (BYTE) in CPlayerInfo is nonzero.  
Returns always false in Singleplayer.  
No longer used for dev checks since first mods were released on PS3 & 360.  
R* now checks with the is_dlc_present native for the dlc hash 2532323046,  
if that is present it will unlock dev stuff.  
```
-- @param player Player
-- NETWORK_PLAYER_IS_ROCKSTAR_DEV(player)

--- NETWORK_QUERY_RESPAWN_RESULTS
-- @param p0 Any*
-- NETWORK_QUERY_RESPAWN_RESULTS(p0)

--- NETWORK_QUEUE_GAMER_FOR_STATUS
-- @param p0 Any*
-- NETWORK_QUEUE_GAMER_FOR_STATUS(p0)

--- NETWORK_QUIT_MP_TO_DESKTOP
-- Forces the "Are you sure you want to quit Grand Theft Auto V?" warning message (Same as when you Alt+F4) to show.
Doesn't work in singleplayer.
-- NETWORK_QUIT_MP_TO_DESKTOP()

--- NETWORK_REGISTER_ENTITY_AS_NETWORKED
-- @param entity Entity
-- NETWORK_REGISTER_ENTITY_AS_NETWORKED(entity)

--- NETWORK_REGISTER_HOST_BROADCAST_VARIABLES
-- @param vars int*
-- @param numVars int
-- NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(vars, numVars)

--- NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES
-- @param vars int*
-- @param numVars int
-- NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(vars, numVars)

--- NETWORK_REMOVE_ALL_TRANSITION_INVITE
-- NETWORK_REMOVE_ALL_TRANSITION_INVITE()

--- NETWORK_REMOVE_ENTITY_AREA
-- @param p0 Any
-- NETWORK_REMOVE_ENTITY_AREA(p0)

--- NETWORK_REMOVE_PRESENCE_INVITE
-- @param p0 Any
-- NETWORK_REMOVE_PRESENCE_INVITE(p0)

--- NETWORK_REMOVE_TRANSITION_INVITE
-- @param p0 Any*
-- NETWORK_REMOVE_TRANSITION_INVITE(p0)

--- NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS
-- NETWORK_REQUEST_CLOUD_BACKGROUND_SCRIPTS()

--- NETWORK_REQUEST_CLOUD_TUNABLES
-- NETWORK_REQUEST_CLOUD_TUNABLES()

--- NETWORK_REQUEST_CONTROL_OF_DOOR
-- @param doorID int
-- NETWORK_REQUEST_CONTROL_OF_DOOR(doorID)

--- NETWORK_REQUEST_CONTROL_OF_ENTITY
-- @param entity Entity
-- NETWORK_REQUEST_CONTROL_OF_ENTITY(entity)

--- NETWORK_REQUEST_CONTROL_OF_NETWORK_ID
-- @param netId int
-- NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(netId)

--- NETWORK_RESET_BODY_TRACKER
-- NETWORK_RESET_BODY_TRACKER()

--- NETWORK_RESURRECT_LOCAL_PLAYER
-- Revives our local player who was previously dead.

**Note:** Call this once you resurrect the player (this does not need to be called every frame).

```cpp
enum ePlayerSpawnLocation {
  // system will decide
  SPAWN_LOCATION_AUTOMATIC = 0,
  SPAWN_LOCATION_NEAR_DEATH = 1,
  SPAWN_LOCATION_NEAR_TEAM_MATES = 2,
  // script defined area
  SPAWN_LOCATION_MISSION_AREA = 3,
  SPAWN_LOCATION_NEAR_OTHER_PLAYERS = 4,
  SPAWN_LOCATION_NEAR_CURRENT_POSITION = 5,
  SPAWN_LOCATION_AT_CURRENT_POSITION = 6,
  SPAWN_LOCATION_NET_TEST_BED = 7,
  SPAWN_LOCATION_CUSTOM_SPAWN_POINTS = 8,
  SPAWN_LOCATION_OUTSIDE_SIMEON_GARAGE = 9,
  SPAWN_LOCATION_NEAR_SPECIFIC_COORDS = 10,
  SPAWN_LOCATION_AT_SPECIFIC_COORDS = 11,
  SPAWN_LOCATION_AT_AIRPORT_ARRIVALS = 12,
  SPAWN_LOCATION_AT_SPECIFIC_COORDS_IF_POSSIBLE = 13,
  SPAWN_LOCATION_IN_SPECIFIC_ANGLED_AREA = 14,
  SPAWN_LOCATION_NEAREST_RESPAWN_POINT = 15,
  SPAWN_LOCATION_AT_SPECIFIC_COORDS_RACE_CORONA = 16,
  SPAWN_LOCATION_INSIDE_GARAGE = 17,
  SPAWN_LOCATION_INSIDE_PROPERTY = 18,
  SPAWN_LOCATION_INSIDE_PROPERTY_OR_GARAGE = 19,
  SPAWN_LOCATION_NEAR_DEATH_IMPROMPTU = 20,
  SPAWN_LOCATION_NEAR_CURRENT_POSITION_SPREAD_OUT = 21,
  SPAWN_LOCATION_NEAREST_RESPAWN_POINT_TO_SPECIFIC_COORDS = 22,
  SPAWN_LOCATION_NEAREST_HOSPITAL = 23,
  SPAWN_LOCATION_NEAREST_POLICE_STATION = 24,
  SPAWN_LOCATION_NEAREST_HOTEL_TO_SPECIFIC_COORDS = 25,
  SPAWN_LOCATION_MISSION_AREA_NEAR_CURRENT_POSITION = 26,
  SPAWN_LOCATION_PRIVATE_YACHT = 27,
  SPAWN_LOCATION_PRIVATE_YACHT_APARTMENT = 28,
  SPAWN_LOCATION_PRIVATE_FRIEND_YACHT = 29,
  SPAWN_LOCATION_PRIVATE_YACHT_NEAR_SHORE = 30,
  SPAWN_LOCATION_NEAR_GANG_BOSS = 31,
  SPAWN_LOCATION_NEAR_SPECIFIC_COORDS_WITH_GANG = 32,
  SPAWN_LOCATION_GANG_DM = 33,
  SPAWN_LOCATION_GANG_BOSS_PRIVATE_YACHT = 34,
  SPAWN_LOCATION_OFFICE = 35,
  SPAWN_LOCATION_CLUBHOUSE = 36,
  SPAWN_LOCATION_NEAR_CURRENT_POSITION_AS_POSSIBLE = 37,
  SPAWN_LOCATION_NEAR_CURRENT_PERCEIVED_POSITION = 38,
  SPAWN_LOCATION_IE_WAREHOUSE = 39,
  SPAWN_LOCATION_BUNKER = 40,
  SPAWN_LOCATION_HANGAR = 41,
  SPAWN_LOCATION_DEFUNCT_BASE = 42,
  SPAWN_LOCATION_NIGHTCLUB = 43,
  SPAWN_LOCATION_ARENA_GARAGE = 44,
  SPAWN_LOCATION_CASINO = 45,
  SPAWN_LOCATION_CASINO_APARTMENT = 46,
  SPAWN_LOCATION_CASINO_OUTSIDE = 47,
  SPAWN_LOCATION_ARCADE = 48,
  SPAWN_LOCATION_CASINO_NIGHTCLUB = 49,
  SPAWN_LOCATION_SUBMARINE = 50,
  SPAWN_LOCATION_HEIST_ISLAND_NEAR_DEATH = 51,
  SPAWN_LOCATION_HEIST_ISLAND_BEACH_PARTY = 52,
  SPAWN_LOCATION_LAND_NEAR_SUBMARINE = 53,
  SPAWN_LOCATION_CAR_MEET = 54,
  SPAWN_LOCATION_AUTO_SHOP = 55,
  SPAWN_LOCATION_FIXER_HQ = 56,
  SPAWN_LOCATION_SITTING_SMOKING = 57,
  SPAWN_LOCATION_DRUNK_WAKE_UP_MUSIC_STUDIO = 58,
  SPAWN_LOCATION_MUSIC_STUDIO = 59,
  TOTAL_SPAWN_LOCATIONS = 60
};
```

```cpp
enum eSpawnReason {
  SPAWN_REASON_DEATH = 0,
  SPAWN_REASON_TRANSITION,
  SPAWN_REASON_MANUAL,
  SPAWN_REASON_RESTORE_CHARACTER,
  SPAWN_REASON_IN_VEHICLE
};
```

### Added parameters

*   **bUnpauseRenderPhases**: This boolean parameter will unpause the render phases when set to `true`.
*   **iSpawnLocation**: This integer parameter sets the player's spawn location metric for telemetry. See `ePlayerSpawnLocation` enum.
*   **iSpawnReason**: This integer parameter sets the player's spawn reason metric for telemetry. See `eSpawnReason` enum.
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param nInvincibilityTime int - This is the length of time in milliseconds that the player will be invincible for after resurrection.
-- @param bLeaveDeadPed BOOL - Leaves the dead ped behind when resurrecting.
-- NETWORK_RESURRECT_LOCAL_PLAYER(x, y, z, heading, nInvincibilityTime, bLeaveDeadPed)

--- NETWORK_SEED_RANDOM_NUMBER_GENERATOR
-- @param seed int
-- NETWORK_SEED_RANDOM_NUMBER_GENERATOR(seed)

--- NETWORK_SEND_INVITE_VIA_PRESENCE
-- @param networkHandle int*
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- NETWORK_SEND_INVITE_VIA_PRESENCE(networkHandle, p1, p2, p3)

--- NETWORK_SEND_TEXT_MESSAGE
-- ```
Message is limited to 64 characters.
```
-- @param message char*
-- @param networkHandle int*
-- NETWORK_SEND_TEXT_MESSAGE(message, networkHandle)

--- NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION
-- ```
the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1  
does this send an invite to a player?  
```
-- @param networkHandle int*
-- @param p1 char*
-- @param p2 int
-- @param p3 int
-- @param p4 BOOL
-- NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(networkHandle, p1, p2, p3, p4)

--- NETWORK_SESSION_ACTIVITY_QUICKMATCH
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- NETWORK_SESSION_ACTIVITY_QUICKMATCH(p0, p1, p2, p3)

--- NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP
-- @param groupId int - An identifier value between zero and four
-- NETWORK_SESSION_ADD_ACTIVE_MATCHMAKING_GROUP(groupId)

--- NETWORK_SESSION_BLOCK_JOIN_REQUESTS
-- @param toggle BOOL
-- NETWORK_SESSION_BLOCK_JOIN_REQUESTS(toggle)

--- NETWORK_SESSION_CANCEL_INVITE
-- NETWORK_SESSION_CANCEL_INVITE()

--- NETWORK_SESSION_CHANGE_SLOTS
-- @param p0 int
-- @param p1 BOOL
-- NETWORK_SESSION_CHANGE_SLOTS(p0, p1)

--- NETWORK_SESSION_CREW_MATCHMAKING
-- @param p0 int
-- @param p1 int
-- @param p2 int
-- @param maxPlayers int
-- @param p4 BOOL
-- NETWORK_SESSION_CREW_MATCHMAKING(p0, p1, p2, maxPlayers, p4)

--- NETWORK_SESSION_END
-- ```
p0 is always false and p1 varies.  
NETWORK_SESSION_END(0, 1)  
NETWORK_SESSION_END(0, 0)  
Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."  
```
-- @param p0 BOOL
-- @param p1 BOOL
-- NETWORK_SESSION_END(p0, p1)

--- NETWORK_SESSION_ENTER
-- ```
unknown params  
p0 = 0, 2, or 999 (The global is 999 by default.)  
p1 = 0 (Always in every script it's found in atleast.)  
p2 = 0, 3, or 4 (Based on a var that is determined by a function.)  
p3 = maxPlayers (It's obvious in x360 scripts it's always 18)  
p4 = 0 (Always in every script it's found in atleast.)  
p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)  
p5 is reset to 0 if,  
Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.  
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param maxPlayers int
-- @param p4 Any
-- @param p5 Any
-- NETWORK_SESSION_ENTER(p0, p1, p2, maxPlayers, p4, p5)

--- NETWORK_SESSION_FORCE_CANCEL_INVITE
-- NETWORK_SESSION_FORCE_CANCEL_INVITE()

--- NETWORK_SESSION_FRIEND_MATCHMAKING
-- @param p0 int
-- @param p1 int
-- @param maxPlayers int
-- @param p3 BOOL
-- NETWORK_SESSION_FRIEND_MATCHMAKING(p0, p1, maxPlayers, p3)

--- NETWORK_SESSION_GET_INVITER
-- @param networkHandle int*
-- NETWORK_SESSION_GET_INVITER(networkHandle)

--- NETWORK_SESSION_GET_KICK_VOTE
-- @param player Player
-- NETWORK_SESSION_GET_KICK_VOTE(player)

--- NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE
-- @param p0 int
-- NETWORK_SESSION_GET_MATCHMAKING_GROUP_FREE(p0)

--- NETWORK_SESSION_GET_PRIVATE_SLOTS
-- NETWORK_SESSION_GET_PRIVATE_SLOTS()

--- NETWORK_SESSION_HOST
-- ```
Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.  
```
-- @param p0 int
-- @param maxPlayers int
-- @param p2 BOOL
-- NETWORK_SESSION_HOST(p0, maxPlayers, p2)

--- NETWORK_SESSION_HOST_CLOSED
-- @param p0 int
-- @param maxPlayers int
-- NETWORK_SESSION_HOST_CLOSED(p0, maxPlayers)

--- NETWORK_SESSION_HOST_FRIENDS_ONLY
-- ```
Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.  
```
-- @param p0 int
-- @param maxPlayers int
-- NETWORK_SESSION_HOST_FRIENDS_ONLY(p0, maxPlayers)

--- NETWORK_SESSION_HOST_SINGLE_PLAYER
-- ```
Loads up the map that is loaded when beeing in mission creator  
Player gets placed in a mix between online/offline mode  
p0 is always 2 in R* scripts.  
Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812  
```
-- @param p0 int
-- NETWORK_SESSION_HOST_SINGLE_PLAYER(p0)

--- NETWORK_SESSION_IS_CLOSED_CREW
-- NETWORK_SESSION_IS_CLOSED_CREW()

--- NETWORK_SESSION_IS_CLOSED_FRIENDS
-- NETWORK_SESSION_IS_CLOSED_FRIENDS()

--- NETWORK_SESSION_IS_IN_VOICE_SESSION
-- NETWORK_SESSION_IS_IN_VOICE_SESSION()

--- NETWORK_SESSION_IS_PRIVATE
-- NETWORK_SESSION_IS_PRIVATE()

--- NETWORK_SESSION_IS_SOLO
-- NETWORK_SESSION_IS_SOLO()

--- NETWORK_SESSION_IS_VISIBLE
-- NETWORK_SESSION_IS_VISIBLE()

--- NETWORK_SESSION_IS_VOICE_SESSION_BUSY
-- NETWORK_SESSION_IS_VOICE_SESSION_BUSY()

--- NETWORK_SESSION_JOIN_INVITE
-- NETWORK_SESSION_JOIN_INVITE()

--- NETWORK_SESSION_KICK_PLAYER
-- ```
Only works as host.
```
-- @param player Player
-- NETWORK_SESSION_KICK_PLAYER(player)

--- NETWORK_SESSION_LEAVE_SINGLE_PLAYER
-- NETWORK_SESSION_LEAVE_SINGLE_PLAYER()

--- NETWORK_SESSION_MARK_VISIBLE
-- @param toggle BOOL
-- NETWORK_SESSION_MARK_VISIBLE(toggle)

--- NETWORK_SESSION_SET_MATCHMAKING_GROUP
-- @param matchmakingGroup int
-- NETWORK_SESSION_SET_MATCHMAKING_GROUP(matchmakingGroup)

--- NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX
-- ```
playerTypes:
0 = regular joiner
4 = spectator
8 = unknown
```
-- @param playerType int
-- @param playerCount int
-- NETWORK_SESSION_SET_MATCHMAKING_GROUP_MAX(playerType, playerCount)

--- NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE
-- @param p0 Any
-- NETWORK_SESSION_SET_MATCHMAKING_MENTAL_STATE(p0)

--- NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID
-- @param p0 BOOL
-- NETWORK_SESSION_SET_MATCHMAKING_PROPERTY_ID(p0)

--- NETWORK_SESSION_VALIDATE_JOIN
-- @param p0 BOOL
-- NETWORK_SESSION_VALIDATE_JOIN(p0)

--- NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER
-- ```
Only one occurence in the scripts:
auto sub_cb43(auto a_0, auto a_1) {
    if (g_2594CB._f1) {
        if (NETWORK::_855BC38818F6F684()) {
            NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);
            g_2594CB._f14/*{13}*/ = a_0._fB93;
            g_2594CB._f4/*"64"*/ = a_1;
            return 1;
        }
    }
    return 0;
}
other:
looks like it passes a player in the paramater
Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
```
-- @param globalPtr Any*
-- NETWORK_SESSION_VOICE_CONNECT_TO_PLAYER(globalPtr)

--- NETWORK_SESSION_VOICE_HOST
-- NETWORK_SESSION_VOICE_HOST()

--- NETWORK_SESSION_VOICE_LEAVE
-- NETWORK_SESSION_VOICE_LEAVE()

--- NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST
-- @param p0 BOOL
-- @param p1 int
-- NETWORK_SESSION_VOICE_RESPOND_TO_REQUEST(p0, p1)

--- NETWORK_SESSION_VOICE_SET_TIMEOUT
-- @param timeout int
-- NETWORK_SESSION_VOICE_SET_TIMEOUT(timeout)

--- NETWORK_SESSION_WAS_INVITED
-- NETWORK_SESSION_WAS_INVITED()

--- NETWORK_SET_ACTIVITY_PLAYER_MAX
-- @param playerCount int
-- NETWORK_SET_ACTIVITY_PLAYER_MAX(playerCount)

--- NETWORK_SET_ACTIVITY_SPECTATOR
-- @param toggle BOOL
-- NETWORK_SET_ACTIVITY_SPECTATOR(toggle)

--- NETWORK_SET_ACTIVITY_SPECTATOR_MAX
-- @param maxSpectators int
-- NETWORK_SET_ACTIVITY_SPECTATOR_MAX(maxSpectators)

--- NETWORK_SET_CHOICE_MIGRATE_OPTIONS
-- @param toggle BOOL
-- @param player Player
-- NETWORK_SET_CHOICE_MIGRATE_OPTIONS(toggle, player)

--- NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU
-- @param p0 Any*
-- NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(p0)

--- NETWORK_SET_ENTITY_CAN_BLEND
-- @param entity Entity
-- @param toggle BOOL
-- NETWORK_SET_ENTITY_CAN_BLEND(entity, toggle)

--- NETWORK_SET_FRIENDLY_FIRE_OPTION
-- @param toggle BOOL
-- NETWORK_SET_FRIENDLY_FIRE_OPTION(toggle)

--- NETWORK_SET_GAMER_INVITED_TO_TRANSITION
-- @param networkHandle int*
-- NETWORK_SET_GAMER_INVITED_TO_TRANSITION(networkHandle)

--- NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU
-- @param networkHandle int*
-- NETWORK_SET_INVITE_ON_CALL_FOR_INVITE_MENU(networkHandle)

--- NETWORK_SET_IN_FREE_CAM_MODE
-- @param toggle BOOL
-- NETWORK_SET_IN_FREE_CAM_MODE(toggle)

--- NETWORK_SET_IN_MP_CUTSCENE
-- @param p0 BOOL
-- @param p1 BOOL
-- NETWORK_SET_IN_MP_CUTSCENE(p0, p1)

--- NETWORK_SET_IN_SPECTATOR_MODE
-- @param toggle BOOL
-- @param playerPed Ped
-- NETWORK_SET_IN_SPECTATOR_MODE(toggle, playerPed)

--- NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED
-- @param toggle BOOL
-- @param playerPed Ped
-- @param p2 BOOL
-- NETWORK_SET_IN_SPECTATOR_MODE_EXTENDED(toggle, playerPed, p2)

--- NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME
-- @param time int
-- NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(time)

--- NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT
-- @param toggle BOOL
-- NETWORK_SET_LOCAL_PLAYER_SYNC_LOOK_AT(toggle)

--- NETWORK_SET_MISSION_FINISHED
-- NETWORK_SET_MISSION_FINISHED()

--- NETWORK_SET_NO_SPECTATOR_CHAT
-- @param toggle BOOL
-- NETWORK_SET_NO_SPECTATOR_CHAT(toggle)

--- NETWORK_SET_OVERRIDE_SPECTATOR_MODE
-- @param toggle BOOL
-- NETWORK_SET_OVERRIDE_SPECTATOR_MODE(toggle)

--- NETWORK_SET_PLAYER_IS_PASSIVE
-- @param toggle BOOL
-- NETWORK_SET_PLAYER_IS_PASSIVE(toggle)

--- NETWORK_SET_PROPERTY_ID
-- ```
value must be < 255
```
-- @param id int
-- NETWORK_SET_PROPERTY_ID(id)

--- NETWORK_SET_RICH_PRESENCE
-- ```
On PC it's a nullsub which means it does absolutely nothing.  
Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...  
```
-- @param p0 int
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- NETWORK_SET_RICH_PRESENCE(p0, p1, p2, p3)

--- NETWORK_SET_RICH_PRESENCE_STRING
-- This native does absolutely nothing, just a nullsub
-- @param p0 int
-- @param textLabel char*
-- NETWORK_SET_RICH_PRESENCE_STRING(p0, textLabel)

--- NETWORK_SET_SCRIPT_READY_FOR_EVENTS
-- @param toggle BOOL
-- NETWORK_SET_SCRIPT_READY_FOR_EVENTS(toggle)

--- NETWORK_SET_TALKER_PROXIMITY
-- @param value float
-- NETWORK_SET_TALKER_PROXIMITY(value)

--- NETWORK_SET_TEAM_ONLY_CHAT
-- @param toggle BOOL
-- NETWORK_SET_TEAM_ONLY_CHAT(toggle)

--- NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT
-- @param maxNumMissionParticipants int
-- @param p1 BOOL
-- @param instanceId int
-- NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(maxNumMissionParticipants, p1, instanceId)

--- NETWORK_SET_TRANSITION_ACTIVITY_ID
-- @param p0 Any
-- NETWORK_SET_TRANSITION_ACTIVITY_ID(p0)

--- NETWORK_SET_TRANSITION_CREATOR_HANDLE
-- @param p0 Any*
-- NETWORK_SET_TRANSITION_CREATOR_HANDLE(p0)

--- NETWORK_SET_TRANSITION_VISIBILITY_LOCK
-- @param p0 BOOL
-- @param p1 BOOL
-- NETWORK_SET_TRANSITION_VISIBILITY_LOCK(p0, p1)

--- NETWORK_SET_VOICE_ACTIVE
-- @param toggle BOOL
-- NETWORK_SET_VOICE_ACTIVE(toggle)

--- NETWORK_SET_VOICE_CHANNEL
-- @param channel int
-- NETWORK_SET_VOICE_CHANNEL(channel)

--- NETWORK_SHOW_PROFILE_UI
-- ```
Example:  
int playerHandle;	  
NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);  
NETWORK_SHOW_PROFILE_UI(&playerHandle);  
```
-- @param networkHandle int*
-- NETWORK_SHOW_PROFILE_UI(networkHandle)

--- NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER
-- ```
One of the first things it does is get the players ped.  
Then it calls a function that is used in some tasks and ped based functions.  
```

p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS`, in the decompiled scripts.
-- @param player Player
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param flags int
-- NETWORK_START_RESPAWN_SEARCH_FOR_PLAYER(player, x, y, z, radius, p5, p6, p7, flags)

--- NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER
-- p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS` in the decompiled scripts.
-- @param player Player
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param p8 float
-- @param p9 float
-- @param p10 float
-- @param flags int
-- NETWORK_START_RESPAWN_SEARCH_IN_ANGLED_AREA_FOR_PLAYER(player, x1, y1, z1, x2, y2, z2, width, p8, p9, p10, flags)

--- NETWORK_START_SOLO_TUTORIAL_SESSION
-- NETWORK_START_SOLO_TUTORIAL_SESSION()

--- NETWORK_START_SYNCHRONISED_SCENE
-- @param netScene int
-- NETWORK_START_SYNCHRONISED_SCENE(netScene)

--- NETWORK_STOP_SYNCHRONISED_SCENE
-- @param netScene int
-- NETWORK_STOP_SYNCHRONISED_SCENE(netScene)

--- NETWORK_SUPPRESS_INVITE
-- @param toggle BOOL
-- NETWORK_SUPPRESS_INVITE(toggle)

--- NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH
-- ```
Returns defaultValue if the tunable doesn't exist.
```
-- @param tunableContext Hash
-- @param tunableName Hash
-- @param defaultValue BOOL
-- NETWORK_TRY_ACCESS_TUNABLE_BOOL_HASH(tunableContext, tunableName, defaultValue)

--- NETWORK_UNREGISTER_NETWORKED_ENTITY
-- @param entity Entity
-- NETWORK_UNREGISTER_NETWORKED_ENTITY(entity)

--- NETWORK_USE_HIGH_PRECISION_BLENDING
-- ```
Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
```
-- @param netID int
-- @param toggle BOOL
-- NETWORK_USE_HIGH_PRECISION_BLENDING(netID, toggle)

--- NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME
-- @param entity Entity
-- NETWORK_USE_LOGARITHMIC_BLENDING_THIS_FRAME(entity)

--- NET_TO_ENT
-- ```
gets the entity id of a network id  
```
-- @param netHandle int
-- NET_TO_ENT(netHandle)

--- NET_TO_OBJ
-- ```
gets the object id of a network id  
```
-- @param netHandle int
-- NET_TO_OBJ(netHandle)

--- NET_TO_PED
-- ```
gets the ped id of a network id  
```
-- @param netHandle int
-- NET_TO_PED(netHandle)

--- NET_TO_VEH
-- @param netHandle int
-- NET_TO_VEH(netHandle)

--- OBJ_TO_NET
-- ```
Lets objects spawn online simply do it like this:  
int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));  
```
-- @param object Object
-- OBJ_TO_NET(object)

--- OPEN_COMMERCE_STORE
-- ```
Has a 3rd param (int) since patch [???].  
```

```
NativeDB Added Parameter 3: int p2
```
-- @param p0 char*
-- @param p1 char*
-- OPEN_COMMERCE_STORE(p0, p1)

--- PARTICIPANT_ID
-- ```
Return the local Participant ID  
```
-- PARTICIPANT_ID()

--- PARTICIPANT_ID_TO_INT
-- ```
Return the local Participant ID.  
This native is exactly the same as 'PARTICIPANT_ID' native.  
```
-- PARTICIPANT_ID_TO_INT()

--- PED_TO_NET
-- ```
gets the network id of a ped  
```
-- @param ped Ped
-- PED_TO_NET(ped)

--- REFRESH_PLAYER_LIST_STATS
-- @param p0 int
-- REFRESH_PLAYER_LIST_STATS(p0)

--- RELEASE_ALL_COMMERCE_ITEM_IMAGES
-- RELEASE_ALL_COMMERCE_ITEM_IMAGES()

--- REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY
-- ```
Used in am_mp_property_ext and am_mp_property_int  
```

```
NativeDB Added Parameter 2: Ped ped
```
-- @param entity Entity
-- REMOVE_ALL_STICKY_BOMBS_FROM_ENTITY(entity)

--- REQUEST_COMMERCE_ITEM_IMAGE
-- @param index int
-- REQUEST_COMMERCE_ITEM_IMAGE(index)

--- RESERVE_NETWORK_MISSION_OBJECTS
-- @param amount int
-- RESERVE_NETWORK_MISSION_OBJECTS(amount)

--- RESERVE_NETWORK_MISSION_PEDS
-- @param amount int
-- RESERVE_NETWORK_MISSION_PEDS(amount)

--- RESERVE_NETWORK_MISSION_VEHICLES
-- @param amount int
-- RESERVE_NETWORK_MISSION_VEHICLES(amount)

--- SET_BALANCE_ADD_MACHINE
-- @param contentId char*
-- @param contentTypeName char*
-- SET_BALANCE_ADD_MACHINE(contentId, contentTypeName)

--- SET_BALANCE_ADD_MACHINES
-- @param data Any*
-- @param dataCount int
-- @param contentTypeName char*
-- SET_BALANCE_ADD_MACHINES(data, dataCount, contentTypeName)

--- SET_ENTITY_LOCALLY_INVISIBLE
-- Sets the provided entity not visible for yourself for the current frame.
-- @param entity Entity
-- SET_ENTITY_LOCALLY_INVISIBLE(entity)

--- SET_ENTITY_LOCALLY_VISIBLE
-- Sets the provided entity visible for yourself for the current frame.
-- @param entity Entity - The entity to set locally visible.
-- SET_ENTITY_LOCALLY_VISIBLE(entity)

--- SET_ENTITY_VISIBLE_IN_CUTSCENE
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- SET_ENTITY_VISIBLE_IN_CUTSCENE(p0, p1, p2)

--- SET_LOCAL_PLAYER_INVISIBLE_LOCALLY
-- @param p0 BOOL
-- SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(p0)

--- SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE
-- @param p0 BOOL
-- @param p1 BOOL
-- SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(p0, p1)

--- SET_LOCAL_PLAYER_VISIBLE_LOCALLY
-- @param p0 BOOL
-- SET_LOCAL_PLAYER_VISIBLE_LOCALLY(p0)

--- SET_NETWORK_CUTSCENE_ENTITIES
-- @param toggle BOOL
-- SET_NETWORK_CUTSCENE_ENTITIES(toggle)

--- SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER
-- @param netId int
-- @param player Player
-- @param toggle BOOL
-- SET_NETWORK_ID_ALWAYS_EXISTS_FOR_PLAYER(netId, player, toggle)

--- SET_NETWORK_ID_CAN_MIGRATE
-- ```
Whether or not another player is allowed to take control of the entity  
```
-- @param netId int
-- @param toggle BOOL
-- SET_NETWORK_ID_CAN_MIGRATE(netId, toggle)

--- SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES
-- @param netId int
-- @param toggle BOOL
-- SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(netId, toggle)

--- SET_NETWORK_ID_VISIBLE_IN_CUTSCENE
-- @param netId int
-- @param p1 BOOL
-- @param p2 BOOL
-- SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(netId, p1, p2)

--- SET_NETWORK_VEHICLE_AS_GHOST
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_NETWORK_VEHICLE_AS_GHOST(vehicle, toggle)

--- SET_NETWORK_VEHICLE_RESPOT_TIMER
-- ```
NativeDB Added Parameter 3: Any p2
NativeDB Added Parameter 4: Any p3
```
-- @param netId int
-- @param time int
-- SET_NETWORK_VEHICLE_RESPOT_TIMER(netId, time)

--- SET_PLAYER_INVISIBLE_LOCALLY
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_INVISIBLE_LOCALLY(player, toggle)

--- SET_PLAYER_VISIBLE_LOCALLY
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_VISIBLE_LOCALLY(player, toggle)

--- SET_STORE_ENABLED
-- ```
Access to the store for shark cards etc...  
```
-- @param toggle BOOL
-- SET_STORE_ENABLED(toggle)

--- SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME
-- ```
Starts a new singleplayer game (at the prologue).  
```
-- SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME()

--- TEXTURE_DOWNLOAD_GET_NAME
-- @param p0 int
-- TEXTURE_DOWNLOAD_GET_NAME(p0)

--- TEXTURE_DOWNLOAD_HAS_FAILED
-- @param p0 int
-- TEXTURE_DOWNLOAD_HAS_FAILED(p0)

--- TEXTURE_DOWNLOAD_RELEASE
-- @param p0 int
-- TEXTURE_DOWNLOAD_RELEASE(p0)

--- TEXTURE_DOWNLOAD_REQUEST
-- @param PlayerHandle int*
-- @param FilePath char*
-- @param Name char*
-- @param p3 BOOL
-- TEXTURE_DOWNLOAD_REQUEST(PlayerHandle, FilePath, Name, p3)

--- TITLE_TEXTURE_DOWNLOAD_REQUEST
-- @param FilePath char*
-- @param Name char*
-- @param p2 BOOL
-- TITLE_TEXTURE_DOWNLOAD_REQUEST(FilePath, Name, p2)

--- UGC_CANCEL_QUERY
-- UGC_CANCEL_QUERY()

--- UGC_CLEAR_CREATE_RESULT
-- UGC_CLEAR_CREATE_RESULT()

--- UGC_CLEAR_MODIFY_RESULT
-- UGC_CLEAR_MODIFY_RESULT()

--- UGC_CLEAR_OFFLINE_QUERY
-- UGC_CLEAR_OFFLINE_QUERY()

--- UGC_CLEAR_QUERY_RESULTS
-- UGC_CLEAR_QUERY_RESULTS()

--- UGC_COPY_CONTENT
-- @param p0 Any*
-- @param p1 Any*
-- UGC_COPY_CONTENT(p0, p1)

--- UGC_DID_GET_SUCCEED
-- UGC_DID_GET_SUCCEED()

--- UGC_GET_BOOKMARKED_CONTENT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- UGC_GET_BOOKMARKED_CONTENT(p0, p1, p2, p3)

--- UGC_GET_CACHED_DESCRIPTION
-- @param p0 Any
-- @param p1 Any
-- UGC_GET_CACHED_DESCRIPTION(p0, p1)

--- UGC_GET_CONTENT_CATEGORY
-- @param p0 int
-- UGC_GET_CONTENT_CATEGORY(p0)

--- UGC_GET_CONTENT_DESCRIPTION_HASH
-- @param p0 Any
-- UGC_GET_CONTENT_DESCRIPTION_HASH(p0)

--- UGC_GET_CONTENT_FILE_VERSION
-- @param p0 Any
-- @param p1 Any
-- UGC_GET_CONTENT_FILE_VERSION(p0, p1)

--- UGC_GET_CONTENT_HASH
-- UGC_GET_CONTENT_HASH()

--- UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED
-- @param p0 Any
-- UGC_GET_CONTENT_HAS_PLAYER_BOOKMARKED(p0)

--- UGC_GET_CONTENT_HAS_PLAYER_RECORD
-- @param p0 Any
-- UGC_GET_CONTENT_HAS_PLAYER_RECORD(p0)

--- UGC_GET_CONTENT_ID
-- ```
Return the mission id of a job.
```
-- @param p0 int
-- UGC_GET_CONTENT_ID(p0)

--- UGC_GET_CONTENT_IS_PUBLISHED
-- @param p0 Any
-- UGC_GET_CONTENT_IS_PUBLISHED(p0)

--- UGC_GET_CONTENT_IS_VERIFIED
-- @param p0 Any
-- UGC_GET_CONTENT_IS_VERIFIED(p0)

--- UGC_GET_CONTENT_LANGUAGE
-- @param p0 Any
-- UGC_GET_CONTENT_LANGUAGE(p0)

--- UGC_GET_CONTENT_NAME
-- @param p0 Any
-- UGC_GET_CONTENT_NAME(p0)

--- UGC_GET_CONTENT_NUM
-- UGC_GET_CONTENT_NUM()

--- UGC_GET_CONTENT_PATH
-- @param p0 int
-- @param p1 int
-- UGC_GET_CONTENT_PATH(p0, p1)

--- UGC_GET_CONTENT_RATING
-- @param p0 Any
-- @param p1 Any
-- UGC_GET_CONTENT_RATING(p0, p1)

--- UGC_GET_CONTENT_RATING_COUNT
-- @param p0 Any
-- @param p1 Any
-- UGC_GET_CONTENT_RATING_COUNT(p0, p1)

--- UGC_GET_CONTENT_RATING_NEGATIVE_COUNT
-- @param p0 Any
-- @param p1 Any
-- UGC_GET_CONTENT_RATING_NEGATIVE_COUNT(p0, p1)

--- UGC_GET_CONTENT_RATING_POSITIVE_COUNT
-- @param p0 Any
-- @param p1 Any
-- UGC_GET_CONTENT_RATING_POSITIVE_COUNT(p0, p1)

--- UGC_GET_CONTENT_TOTAL
-- UGC_GET_CONTENT_TOTAL()

--- UGC_GET_CONTENT_UPDATED_DATE
-- @param p0 Any
-- @param p1 Any*
-- UGC_GET_CONTENT_UPDATED_DATE(p0, p1)

--- UGC_GET_CONTENT_USER_ID
-- @param p0 int
-- UGC_GET_CONTENT_USER_ID(p0)

--- UGC_GET_CONTENT_USER_NAME
-- @param p0 Any
-- UGC_GET_CONTENT_USER_NAME(p0)

--- UGC_GET_CREATE_CONTENT_ID
-- UGC_GET_CREATE_CONTENT_ID()

--- UGC_GET_CREATE_RESULT
-- UGC_GET_CREATE_RESULT()

--- UGC_GET_CREATOR_NUM
-- UGC_GET_CREATOR_NUM()

--- UGC_GET_CREW_CONTENT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any*
-- @param p4 Any*
-- UGC_GET_CREW_CONTENT(p0, p1, p2, p3, p4)

--- UGC_GET_FRIEND_CONTENT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- UGC_GET_FRIEND_CONTENT(p0, p1, p2, p3)

--- UGC_GET_GET_BY_CATEGORY
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any*
-- @param p4 Any*
-- UGC_GET_GET_BY_CATEGORY(p0, p1, p2, p3, p4)

--- UGC_GET_MODIFY_RESULT
-- UGC_GET_MODIFY_RESULT()

--- UGC_GET_MY_CONTENT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any*
-- UGC_GET_MY_CONTENT(p0, p1, p2, p3)

--- UGC_GET_QUERY_RESULT
-- UGC_GET_QUERY_RESULT()

--- UGC_GET_ROOT_CONTENT_ID
-- ```
Return the root content id of a job.
```
-- @param p0 int
-- UGC_GET_ROOT_CONTENT_ID(p0)

--- UGC_HAS_CREATE_FINISHED
-- UGC_HAS_CREATE_FINISHED()

--- UGC_HAS_GET_FINISHED
-- UGC_HAS_GET_FINISHED()

--- UGC_HAS_MODIFY_FINISHED
-- UGC_HAS_MODIFY_FINISHED()

--- UGC_IS_GETTING
-- UGC_IS_GETTING()

--- UGC_IS_LANGUAGE_SUPPORTED
-- @param p0 Any
-- UGC_IS_LANGUAGE_SUPPORTED(p0)

--- UGC_POLICIES_MAKE_PRIVATE
-- @param p0 Any
-- UGC_POLICIES_MAKE_PRIVATE(p0)

--- UGC_PUBLISH
-- @param contentId char*
-- @param baseContentId char*
-- @param contentTypeName char*
-- UGC_PUBLISH(contentId, baseContentId, contentTypeName)

--- UGC_QUERY_BY_CONTENT_ID
-- @param contentId char*
-- @param latestVersion BOOL
-- @param contentTypeName char*
-- UGC_QUERY_BY_CONTENT_ID(contentId, latestVersion, contentTypeName)

--- UGC_QUERY_BY_CONTENT_IDS
-- @param data Any*
-- @param count int
-- @param latestVersion BOOL
-- @param contentTypeName char*
-- UGC_QUERY_BY_CONTENT_IDS(data, count, latestVersion, contentTypeName)

--- UGC_QUERY_MY_CONTENT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- UGC_QUERY_MY_CONTENT(p0, p1, p2, p3, p4, p5)

--- UGC_REQUEST_CACHED_DESCRIPTION
-- @param p0 int
-- UGC_REQUEST_CACHED_DESCRIPTION(p0)

--- UGC_REQUEST_CONTENT_DATA_FROM_INDEX
-- @param p0 int
-- @param p1 int
-- UGC_REQUEST_CONTENT_DATA_FROM_INDEX(p0, p1)

--- UGC_REQUEST_CONTENT_DATA_FROM_PARAMS
-- @param contentTypeName char*
-- @param contentId char*
-- @param p2 int
-- @param p3 int
-- @param p4 int
-- UGC_REQUEST_CONTENT_DATA_FROM_PARAMS(contentTypeName, contentId, p2, p3, p4)

--- UGC_SET_BOOKMARKED
-- @param contentId char*
-- @param bookmarked BOOL
-- @param contentTypeName char*
-- UGC_SET_BOOKMARKED(contentId, bookmarked, contentTypeName)

--- UGC_SET_DELETED
-- @param p0 Any*
-- @param p1 BOOL
-- @param p2 Any*
-- UGC_SET_DELETED(p0, p1, p2)

--- UGC_SET_QUERY_DATA_FROM_OFFLINE
-- @param p0 BOOL
-- UGC_SET_QUERY_DATA_FROM_OFFLINE(p0)

--- UGC_TEXTURE_DOWNLOAD_REQUEST
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any*
-- @param p5 BOOL
-- UGC_TEXTURE_DOWNLOAD_REQUEST(p0, p1, p2, p3, p4, p5)

--- USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR
-- @param toggle BOOL
-- USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(toggle)

--- VEH_TO_NET
-- ```
calls from vehicle to net.  
```
-- @param vehicle Vehicle
-- VEH_TO_NET(vehicle)

--- _ACTIVATE_DAMAGE_TRACKER_ON_PLAYER
-- @param player Player
-- @param toggle BOOL
-- _ACTIVATE_DAMAGE_TRACKER_ON_PLAYER(player, toggle)

--- _CAN_REGISTER_MISSION_PICKUPS
-- @param amount int
-- _CAN_REGISTER_MISSION_PICKUPS(amount)

--- _CLEAR_LAUNCH_PARAMS
-- **This native does absolutely nothing, just a nullsub**
-- _CLEAR_LAUNCH_PARAMS()

--- _FACEBOOK_DO_UNK_CHECK
-- _FACEBOOK_DO_UNK_CHECK()

--- _FACEBOOK_IS_AVAILABLE
-- _FACEBOOK_IS_AVAILABLE()

--- _FACEBOOK_IS_SENDING_DATA
-- _FACEBOOK_IS_SENDING_DATA()

--- _FACEBOOK_SET_CREATE_CHARACTER_COMPLETE
-- _FACEBOOK_SET_CREATE_CHARACTER_COMPLETE()

--- _FACEBOOK_SET_HEIST_COMPLETE
-- @param heistName char*
-- @param cashEarned int
-- @param xpEarned int
-- _FACEBOOK_SET_HEIST_COMPLETE(heistName, cashEarned, xpEarned)

--- _FACEBOOK_SET_MILESTONE_COMPLETE
-- ```
milestoneId:  
0 = "percentcomplete"  
1 = "storycomplete"  
2 = "vehicles"  
3 = "properties"  
4 = "psych"  
5 = "mapreveal"  
6 = "prologue"  
```
-- @param milestoneId int
-- _FACEBOOK_SET_MILESTONE_COMPLETE(milestoneId)

--- _GET_CLOUD_TIME_AS_STRING
-- ```
Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
```
-- _GET_CLOUD_TIME_AS_STRING()

--- _GET_ONLINE_VERSION
-- ```
Online version is defined here: update\update.rpf\common\data\version.txt
Example:
[ONLINE_VERSION_NUMBER]
1.33
_GET_ONLINE_VERSION() will return "1.33"
```
-- _GET_ONLINE_VERSION()

--- _IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER
-- @param player Player
-- _IS_DAMAGE_TRACKER_ACTIVE_ON_PLAYER(player)

--- _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER
-- @param entity Entity
-- _IS_ENTITY_GHOSTED_TO_LOCAL_PLAYER(entity)

--- _NETWORK_ACCEPT_INVITE
-- ```
NETWORK_RE*

Triggers a CEventNetworkInviteConfirmed event
```
-- _NETWORK_ACCEPT_INVITE()

--- _NETWORK_ALLOCATE_TUNABLES_REGISTRATION_DATA_MAP
-- _NETWORK_ALLOCATE_TUNABLES_REGISTRATION_DATA_MAP()

--- _NETWORK_ARE_CUTSCENE_ENTITIES
-- ```
Getter for SET_NETWORK_CUTSCENE_ENTITIES.
```

```
NativeDB Introduced: v2699
```
-- _NETWORK_ARE_CUTSCENE_ENTITIES()

--- _NETWORK_BAIL_TRANSITION_QUICKMATCH
-- ```
NativeDB Introduced: v2699
```
-- _NETWORK_BAIL_TRANSITION_QUICKMATCH()

--- _NETWORK_BLOCK_KICKED_PLAYERS
-- @param p0 BOOL
-- _NETWORK_BLOCK_KICKED_PLAYERS(p0)

--- _NETWORK_CAN_COMMUNICATE_WITH_GAMER_2
-- ```
Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER

NETWORK_CAN_*
```
-- @param networkHandle Any*
-- _NETWORK_CAN_COMMUNICATE_WITH_GAMER_2(networkHandle)

--- _NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME
-- @param networkHandle Any*
-- _NETWORK_CAN_GAMER_PLAY_MULTIPLAYER_WITH_ME(networkHandle)

--- _NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER
-- @param networkHandle Any*
-- _NETWORK_CAN_PLAY_MULTIPLAYER_WITH_GAMER(networkHandle)

--- _NETWORK_CAN_VIEW_GAMER_USER_CONTENT
-- @param networkHandle Any*
-- _NETWORK_CAN_VIEW_GAMER_USER_CONTENT(networkHandle)

--- _NETWORK_CLAN_ANIMATION
-- ```
Only documented...  
```
-- @param animDict char*
-- @param animName char*
-- _NETWORK_CLAN_ANIMATION(animDict, animName)

--- _NETWORK_CONCEAL_ENTITY
-- @param entity Entity
-- @param toggle BOOL
-- _NETWORK_CONCEAL_ENTITY(entity, toggle)

--- _NETWORK_DISPLAYNAMES_FROM_HANDLES_START
-- ```
Hardcoded to return -1.
```
-- @param p0 Any*
-- @param p1 Any
-- _NETWORK_DISPLAYNAMES_FROM_HANDLES_START(p0, p1)

--- _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER
-- ```
NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER(player)

--- _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2
-- ```
Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
```

```
NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER_2(player)

--- _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER
-- ```
NETWORK_GET_*

NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_GET_AVERAGE_PACKET_LOSS_FOR_PLAYER(player)

--- _NETWORK_GET_DESTROYER_OF_ENTITY
-- @param p0 Any
-- @param p1 Any
-- @param weaponHash Hash*
-- _NETWORK_GET_DESTROYER_OF_ENTITY(p0, p1, weaponHash)

--- _NETWORK_GET_DISPLAYNAMES_FROM_HANDLES
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- _NETWORK_GET_DISPLAYNAMES_FROM_HANDLES(p0, p1, p2)

--- _NETWORK_GET_ENTITY_NET_SCRIPT_ID
-- @param entity Entity
-- _NETWORK_GET_ENTITY_NET_SCRIPT_ID(entity)

--- _NETWORK_GET_FRIEND_NAME_FROM_INDEX
-- @param friendIndex int
-- _NETWORK_GET_FRIEND_NAME_FROM_INDEX(friendIndex)

--- _NETWORK_GET_LAST_VELOCITY_RECEIVED
-- ```
Used by NetBlender
```
-- @param entity Entity
-- _NETWORK_GET_LAST_VELOCITY_RECEIVED(entity)

--- _NETWORK_GET_NUM_BODY_TRACKERS
-- _NETWORK_GET_NUM_BODY_TRACKERS()

--- _NETWORK_GET_NUM_UNACKED_FOR_PLAYER
-- ```
NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_GET_NUM_UNACKED_FOR_PLAYER(player)

--- _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER
-- ```
NETWORK_GET_*

NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_GET_OLDEST_RESEND_COUNT_FOR_PLAYER(player)

--- _NETWORK_GET_PLATFORM_PARTY_UNK
-- _NETWORK_GET_PLATFORM_PARTY_UNK()

--- _NETWORK_GET_PLAYER_COORDS
-- Returns the coordinates of another player.

Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
-- @param player Player - The player id, MUST be another player.
-- _NETWORK_GET_PLAYER_COORDS(player)

--- _NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT
-- ```
NativeDB Introduced: v2372
```
-- _NETWORK_GET_POSITION_HASH_OF_THIS_SCRIPT()

--- _NETWORK_GET_ROS_PRIVILEGE_24
-- _NETWORK_GET_ROS_PRIVILEGE_24()

--- _NETWORK_GET_ROS_PRIVILEGE_25
-- _NETWORK_GET_ROS_PRIVILEGE_25()

--- _NETWORK_GET_ROS_PRIVILEGE_9
-- _NETWORK_GET_ROS_PRIVILEGE_9()

--- _NETWORK_GET_TARGETING_MODE
-- _NETWORK_GET_TARGETING_MODE()

--- _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER
-- ```
NETWORK_*

NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_GET_UNRELIABLE_RESEND_COUNT_FOR_PLAYER(player)

--- _NETWORK_HAS_AGE_RESTRICTED_PROFILE
-- _NETWORK_HAS_AGE_RESTRICTED_PROFILE()

--- _NETWORK_HAS_GAME_BEEN_ALTERED
-- ```
Returns true if dinput8.dll is present in the game directory.
You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
```
-- _NETWORK_HAS_GAME_BEEN_ALTERED()

--- _NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT
-- @param networkHandle Any*
-- _NETWORK_HAS_VIEW_GAMER_USER_CONTENT_RESULT(networkHandle)

--- _NETWORK_HAVE_ONLINE_PRIVILEGE_2
-- _NETWORK_HAVE_ONLINE_PRIVILEGE_2()

--- _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER
-- ```
NETWORK_IS_*

NativeDB Introduced: v323
```
-- @param player Player
-- _NETWORK_IS_CONNECTION_ENDPOINT_RELAY_SERVER(player)

--- _NETWORK_IS_ENTITY_CONCEALED
-- Note: This only works for vehicles, which appears to be a bug (since the setter *does* work for every entity type and the name is 99% correct).
-- @param entity Entity
-- _NETWORK_IS_ENTITY_CONCEALED(entity)

--- _NETWORK_IS_FRIEND_HANDLE_ONLINE
-- @param networkHandle int*
-- _NETWORK_IS_FRIEND_HANDLE_ONLINE(networkHandle)

--- _NETWORK_IS_NETWORK_ID_A_CLONE
-- Returns true if the specified network id is controlled by someone else.
-- @param netId int - The network id for an object or entity.
-- _NETWORK_IS_NETWORK_ID_A_CLONE(netId)

--- _NETWORK_IS_PLAYER_EQUAL_TO_INDEX
-- ```
NETWORK_ARE_*  
```
-- @param player Player
-- @param index int
-- _NETWORK_IS_PLAYER_EQUAL_TO_INDEX(player, index)

--- _NETWORK_IS_PSN_AVAILABLE
-- _NETWORK_IS_PSN_AVAILABLE()

--- _NETWORK_IS_SCRIPT_ACTIVE_BY_HASH
-- ```
NativeDB Introduced: v2245
```
-- @param scriptHash Hash
-- @param p1 int
-- @param p2 BOOL
-- @param p3 int
-- _NETWORK_IS_SCRIPT_ACTIVE_BY_HASH(scriptHash, p1, p2, p3)

--- _NETWORK_IS_TEXT_CHAT_ACTIVE
-- ```
Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.  
```
-- _NETWORK_IS_TEXT_CHAT_ACTIVE()

--- _NETWORK_IS_THIS_SCRIPT_MARKED
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 Any
-- _NETWORK_IS_THIS_SCRIPT_MARKED(p0, p1, p2)

--- _NETWORK_OVERRIDE_CLOCK_MILLISECONDS_PER_GAME_MINUTE
-- ```
NativeDB Introduced: v2189
```
-- @param ms int
-- _NETWORK_OVERRIDE_CLOCK_MILLISECONDS_PER_GAME_MINUTE(ms)

--- _NETWORK_PED_FORCE_GAME_STATE_UPDATE
-- ```
NativeDB Introduced: v2372
```
-- @param ped Ped
-- _NETWORK_PED_FORCE_GAME_STATE_UPDATE(ped)

--- _NETWORK_REGISTER_TUNABLE_BOOL_HASH
-- @param contextHash Hash
-- @param nameHash Hash
-- @param value BOOL*
-- _NETWORK_REGISTER_TUNABLE_BOOL_HASH(contextHash, nameHash, value)

--- _NETWORK_REGISTER_TUNABLE_FLOAT_HASH
-- @param contextHash Hash
-- @param nameHash Hash
-- @param value float*
-- _NETWORK_REGISTER_TUNABLE_FLOAT_HASH(contextHash, nameHash, value)

--- _NETWORK_REGISTER_TUNABLE_INT_HASH
-- @param contextHash Hash
-- @param nameHash Hash
-- @param value int*
-- _NETWORK_REGISTER_TUNABLE_INT_HASH(contextHash, nameHash, value)

--- _NETWORK_REPORT_MYSELF
-- _NETWORK_REPORT_MYSELF()

--- _NETWORK_RESPAWN_COORDS
-- ```
p4 and p5 are always 0 in scripts  
```
-- @param player Player
-- @param x float
-- @param y float
-- @param z float
-- @param p4 BOOL
-- @param p5 BOOL
-- _NETWORK_RESPAWN_COORDS(player, x, y, z, p4, p5)

--- _NETWORK_SEND_PRESENCE_TRANSITION_INVITE
-- ```
String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.  
```
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- _NETWORK_SEND_PRESENCE_TRANSITION_INVITE(p0, p1, p2, p3)

--- _NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE
-- @param p0 Any*
-- _NETWORK_SET_CURRENT_DATA_MANAGER_HANDLE(p0)

--- _NETWORK_SET_CURRENT_MISSION_ID
-- ```
NativeDB Introduced: v2699
```
-- @param missionId char*
-- _NETWORK_SET_CURRENT_MISSION_ID(missionId)

--- _NETWORK_SET_CURRENT_SPAWN_SETTING
-- ```cpp
enum eMpSettingSpawn
{
	MP_SETTING_SPAWN_NULL = 0,
	MP_SETTING_SPAWN_PROPERTY = 1,
	MP_SETTING_SPAWN_LAST_POSITION = 2,
	MP_SETTING_SPAWN_GARAGE = 3,
	MP_SETTING_SPAWN_RANDOM = 4,
	MP_SETTING_SPAWN_PRIVATE_YACHT = 5,
	MP_SETTING_SPAWN_OFFICE = 6,
	MP_SETTING_SPAWN_CLUBHOUSE = 7,
	MP_SETTING_SPAWN_IE_WAREHOUSE = 8,
	MP_SETTING_SPAWN_BUNKER = 9,
	MP_SETTING_SPAWN_HANGAR = 10,
	MP_SETTING_SPAWN_DEFUNCT_BASE = 11,
	MP_SETTING_SPAWN_NIGHTCLUB = 12,
	MP_SETTING_SPAWN_ARENA_GARAGE = 13,
	MP_SETTING_SPAWN_CASINO_APARTMENT = 14,
	MP_SETTING_SPAWN_ARCADE = 15,
	MP_SETTING_SPAWN_SUBMARINE = 16,
	MP_SETTING_SPAWN_CAR_MEET = 17,
	MP_SETTING_SPAWN_AUTO_SHOP = 18,
	MP_SETTING_SPAWN_FIXER_HQ = 19,
	MP_SETTING_SPAWN_MAX = 20,
};
```

```
NativeDB Introduced: v2699
```
-- @param mpSettingSpawn Hash
-- _NETWORK_SET_CURRENT_SPAWN_SETTING(mpSettingSpawn)

--- _NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER
-- @param entity Entity
-- @param p1 BOOL
-- _NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER(entity, p1)

--- _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK
-- ```
if set to true other network players can't see it  
if set to false other network player can see it  
=========================================  
^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.  
pc or last gen?  
^^ last-gen  
```
-- @param entity Entity
-- @param toggle BOOL
-- _NETWORK_SET_ENTITY_INVISIBLE_TO_NETWORK(entity, toggle)

--- _NETWORK_SET_OBJECT_FORCE_STATIC_BLEND
-- Sets whether or not an object (created using `CREATE_OBJECT`, or similar) should have its position/rotation synchronized,
even if it is a 'static' object (for example, having flag 32 - Static - set in its archetype definition).

This has to be called during the same frame the object is created/registered for network, as otherwise it may already
have a remote clone created.

Once a remote clone is created, changing this value will not have any effect on said clone.
-- @param object Object - The object to set forced blending state for.
-- @param enabled BOOL - `true` to enable forced blending.
-- _NETWORK_SET_OBJECT_FORCE_STATIC_BLEND(object, enabled)

--- _NETWORK_SET_VEHICLE_TEST_DRIVE
-- ```
Used by Metric VEHICLE_DIST_DRIVEN
```

```
NativeDB Introduced: v2699
```
-- @param toggle BOOL
-- _NETWORK_SET_VEHICLE_TEST_DRIVE(toggle)

--- _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE
-- ```
Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
```

```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _NETWORK_SET_VEHICLE_WHEELS_DESTRUCTIBLE(vehicle, toggle)

--- _NETWORK_SHOULD_SHOW_CONNECTIVITY_TROUBLESHOOTING
-- ```
Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
```
-- _NETWORK_SHOULD_SHOW_CONNECTIVITY_TROUBLESHOOTING()

--- _NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK
-- ```
Always returns -1. Seems to be XB1 specific.
```
-- @param netHandle Any
-- _NETWORK_START_USER_CONTENT_PERMISSIONS_CHECK(netHandle)

--- _NETWORK_TRANSITION_TRACK
-- @param hash Hash
-- @param p1 int
-- @param p2 int
-- @param state int
-- @param p4 int
-- _NETWORK_TRANSITION_TRACK(hash, p1, p2, state, p4)

--- _NETWORK_UGC_NAV
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- _NETWORK_UGC_NAV(p0, p1)

--- _NETWORK_UPDATE_PLAYER_SCARS
-- _NETWORK_UPDATE_PLAYER_SCARS()

--- _REMOTE_CHEAT_DETECTED
-- ```
NativeDB Added Parameter 1: Player player
NativeDB Added Parameter 2: int a
NativeDB Added Parameter 3: int b
```
-- _REMOTE_CHEAT_DETECTED()

--- _RESERVE_NETWORK_LOCAL_OBJECTS
-- ```
Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
```

```
NativeDB Introduced: v1290
```
-- @param amount int
-- _RESERVE_NETWORK_LOCAL_OBJECTS(amount)

--- _RESERVE_NETWORK_LOCAL_PEDS
-- ```
Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
```

```
NativeDB Introduced: v1493
```
-- @param amount int
-- _RESERVE_NETWORK_LOCAL_PEDS(amount)

--- _RESERVE_NETWORK_LOCAL_VEHICLES
-- @param amount int
-- _RESERVE_NETWORK_LOCAL_VEHICLES(amount)

--- _RESET_GHOSTED_ENTITY_ALPHA
-- Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
-- _RESET_GHOSTED_ENTITY_ALPHA()

--- _SET_GHOSTED_ENTITY_ALPHA
-- Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).

'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
-- @param alpha int - A value between 1 and 254. Default: 128
-- _SET_GHOSTED_ENTITY_ALPHA(alpha)

--- _SET_LOCAL_PLAYER_AS_GHOST
-- Formerly incorrectly named `USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR` due to incorrect treatment of console vs. PC native registration.

Native name guessed through ordering.

```
NativeDB Added Parameter 2: BOOL p1
```
-- @param toggle BOOL
-- _SET_LOCAL_PLAYER_AS_GHOST(toggle)

--- _SET_NETWORK_ENABLE_VEHICLE_POSITION_CORRECTION
-- ```
Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_NETWORK_ENABLE_VEHICLE_POSITION_CORRECTION(vehicle, toggle)

--- _SET_NETWORK_VEHICLE_POSITION_UPDATE_MULTIPLIER
-- ```
rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel
```
-- @param vehicle Vehicle
-- @param multiplier float
-- _SET_NETWORK_VEHICLE_POSITION_UPDATE_MULTIPLIER(vehicle, multiplier)

--- _SET_RELATIONSHIP_TO_PLAYER
-- Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
-- @param player Player
-- @param p1 BOOL
-- _SET_RELATIONSHIP_TO_PLAYER(player, p1)

--- _SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE
-- Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.

If you're already in SP then it'll re-load singleplayer.

You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.

Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
-- _SHUTDOWN_AND_LOAD_MOST_RECENT_SAVE()

--- _TRIGGER_SCRIPT_CRC_CHECK_ON_PLAYER
-- ```
p1 = 6
```
-- @param player Player
-- @param p1 int
-- @param scriptHash Hash
-- _TRIGGER_SCRIPT_CRC_CHECK_ON_PLAYER(player, p1, scriptHash)

--- _UGC_QUERY_RECENTLY_CREATED_CONTENT
-- @param offset int
-- @param count int
-- @param contentTypeName char*
-- @param p3 int
-- _UGC_QUERY_RECENTLY_CREATED_CONTENT(offset, count, contentTypeName, p3)


-- ========== OBJECT ==========

--- 0x006E4B040ED37EC3
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0x006E4B040ED37EC3(p0)

--- 0x0596843B34B95CE5
-- @param p0 Any
-- @param p1 Any
-- 0x0596843B34B95CE5(p0, p1)

--- 0x1A6CBB06E2D0D79D
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0x1A6CBB06E2D0D79D(p0, p1)

--- 0x1C57C94A6446492A
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0x1C57C94A6446492A(p0, p1)

--- 0x1E3F1B1B891A2AAA
-- @param p0 Any
-- @param p1 Any
-- 0x1E3F1B1B891A2AAA(p0, p1)

--- 0x2542269291C6AC84
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- 0x2542269291C6AC84(p0)

--- 0x27F248C3FEBFAAD3
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- 0x27F248C3FEBFAAD3(p0, p1)

--- 0x31574B1B41268673
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0x31574B1B41268673(p0, p1)

--- 0x31F924B53EADDF65
-- @param p0 BOOL
-- 0x31F924B53EADDF65(p0)

--- 0x394CD08E31313C28
-- 0x394CD08E31313C28()

--- 0x39A5FB7EAF150840
-- @param p0 Any
-- @param p1 Any
-- 0x39A5FB7EAF150840(p0, p1)

--- 0x3B2FD68DB5F8331C
-- ```
NativeDB Removed Parameter 3: int R
NativeDB Removed Parameter 4: int G
NativeDB Removed Parameter 5: int B
NativeDB Introduced: v757
```
-- @param object Object
-- @param toggle BOOL
-- @param R int
-- @param G int
-- @param B int
-- 0x3B2FD68DB5F8331C(object, toggle, R, G, B)

--- 0x3BD770D281982DB5
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0x3BD770D281982DB5(p0, p1)

--- 0x46F3ADD1E2D5BAF2
-- @param p0 Any
-- @param p1 Any
-- 0x46F3ADD1E2D5BAF2(p0, p1)

--- 0x4C134B4DF76025D0
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- 0x4C134B4DF76025D0(p0, p1)

--- 0x62454A641B41F3C5
-- @param p0 Any
-- 0x62454A641B41F3C5(p0)

--- 0x63ECF581BC70E363
-- ```
NativeDB Introduced: v1365
```
-- @param p0 Any
-- @param p1 Any
-- 0x63ECF581BC70E363(p0, p1)

--- 0x641F272B52E2F0F8
-- @param p0 Any
-- @param p1 Any
-- 0x641F272B52E2F0F8(p0, p1)

--- 0x659F9D71F52843F8
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- 0x659F9D71F52843F8(p0, p1)

--- 0x66A49D021870FE88
-- 0x66A49D021870FE88()

--- 0x701FDA1E82076BA4
-- Clears the fields sets by [N\_0xc7f29ca00f46350e](#\_0xC7F29CA00F46350E) (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.

Related to its "Pre-networked state"?
-- 0x701FDA1E82076BA4()

--- 0x734E1714D077DA9A
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0x734E1714D077DA9A(p0, p1)

--- 0x762DB2D380B48D04
-- @param p0 Any
-- 0x762DB2D380B48D04(p0)

--- 0x7813E8B8C4AE4799
-- SET_PICKUP_\*

```
NativeDB Introduced: v1734
```
-- @param pickup Pickup
-- 0x7813E8B8C4AE4799(pickup)

--- 0x826D1EE4D1CAFC78
-- @param p0 Any
-- @param p1 Any
-- 0x826D1EE4D1CAFC78(p0, p1)

--- 0x834344A414C7C85D
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- 0x834344A414C7C85D(p0, p1)

--- 0x858EC9FD25DE04AA
-- @param p0 Any
-- @param p1 Any
-- 0x858EC9FD25DE04AA(p0, p1)

--- 0x8881C98A31117998
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 Any
-- 0x8881C98A31117998(p0)

--- 0x8CAAB2BD3EA58BD4
-- @param p0 Any
-- 0x8CAAB2BD3EA58BD4(p0)

--- 0x8CFF648FBD7330F1
-- ```
NativeDB Introduced: v757
```
-- @param p0 Any
-- 0x8CFF648FBD7330F1(p0)

--- 0x8DCA505A5C196F05
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- 0x8DCA505A5C196F05(p0, p1)

--- 0xA08FE5E49BDC39DD
-- @param p0 Any
-- @param p1 float
-- @param p2 BOOL
-- 0xA08FE5E49BDC39DD(p0, p1, p2)

--- 0xA2C1F5E92AFE49ED
-- ```
CLEAR_*
```
-- 0xA2C1F5E92AFE49ED()

--- 0xA85A21582451E951
-- Some property related to gates. Native name between `DOOR_SYSTEM_SET_AUTOMATIC_RATE` and `DOOR_SYSTEM_SET_DOOR_STATE`.
-- @param doorHash Hash
-- @param p1 BOOL
-- 0xA85A21582451E951(doorHash, p1)

--- 0xAA059C615DE9DD03
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- 0xAA059C615DE9DD03(p0, p1)

--- 0xADF084FB8F075D06
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Object
-- 0xADF084FB8F075D06(p0)

--- 0xAFE24E4D29249E4A
-- ```
NativeDB Introduced: v1734
```
-- @param object Object
-- @param p1 float
-- @param p2 float
-- @param p3 BOOL
-- 0xAFE24E4D29249E4A(object, p1, p2, p3)

--- 0xB2D0BDE54F0E8E5A
-- @param object Object
-- @param toggle BOOL
-- 0xB2D0BDE54F0E8E5A(object, toggle)

--- 0xB5B7742424BD4445
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- @param p1 Any
-- 0xB5B7742424BD4445(p0, p1)

--- 0xB7C6D80FB371659A
-- ```
Clears all areas created by 0xD4A7A435B3710D05

CLEAR_*

NativeDB Introduced: v1290
```
-- 0xB7C6D80FB371659A()

--- 0xBFFE53AE7E67FCDC
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- 0xBFFE53AE7E67FCDC(p0, p1)

--- 0xC6033D32241F6FB5
-- @param object Object
-- @param toggle BOOL
-- 0xC6033D32241F6FB5(object, toggle)

--- 0xC7F29CA00F46350E
-- See [`N_0x701fda1e82076ba4`](#\_0x701FDA1E82076BA4).
-- @param p0 BOOL
-- 0xC7F29CA00F46350E(p0)

--- 0xD05A3241B9A86F19
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- 0xD05A3241B9A86F19(p0, p1)

--- 0xD4A7A435B3710D05
-- ```
Adds an area that seems to be related to pickup physics behavior.
Max amount of areas is 10. Only works in multiplayer.

ADD_*

NativeDB Introduced: v1290
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- 0xD4A7A435B3710D05(x, y, z, radius)

--- 0xDB41D07A45A6D4B7
-- @param p0 Any
-- 0xDB41D07A45A6D4B7(p0)

--- 0xE05F6AEEFEB0BB02
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xE05F6AEEFEB0BB02(p0, p1, p2)

--- 0xEB6F1A9B5510A5D2
-- @param p0 Any
-- @param p1 BOOL
-- 0xEB6F1A9B5510A5D2(p0, p1)

--- 0xF92099527DB8E2A7
-- @param p0 Any
-- @param p1 Any
-- 0xF92099527DB8E2A7(p0, p1)

--- 0xFDC07C58E8AAB715
-- A\*

```
NativeDB Introduced: v1734
```
-- @param pickupHash Hash
-- 0xFDC07C58E8AAB715(pickupHash)

--- ADD_DOOR_TO_SYSTEM
-- p5 only set to true in single player native scripts. Door hashes normally look like `PROP_[int]_DOOR_[int]` for interior doors and `PROP_BUILDING_[int]_DOOR_[int]` exterior doors but you can just make up your own hash if you want.

If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.

A simple "localized" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53), [DOOR_SYSTEM_SET_OPEN_RATIO](#\_0xB6E6FBA95C7324AC), [DOOR_SYSTEM_SET_HOLD_OPEN](#\_0xD9B71952F78A2640), etc.
-- @param doorHash Hash - A (unique) door system identifier
-- @param modelHash Hash - Entity model hash
-- @param x float - The X coordinate of the door object
-- @param y float - The Y coordinate of the door object
-- @param z float - The Z coordinate of the door object
-- @param p5 BOOL
-- @param scriptDoor BOOL - false; relies upon getNetworkGameScriptHandler.
-- @param isLocal BOOL - On true disables the creation `CRequestDoorEvent's` in [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53).
-- ADD_DOOR_TO_SYSTEM(doorHash, modelHash, x, y, z, p5, scriptDoor, isLocal)

--- ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE
-- @param garageHash Hash
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- @param p4 Any
-- ARE_ENTITIES_ENTIRELY_INSIDE_GARAGE(garageHash, p1, p2, p3, p4)

--- ATTACH_PORTABLE_PICKUP_TO_PED
-- @param pickupObject Object
-- @param ped Ped
-- ATTACH_PORTABLE_PICKUP_TO_PED(pickupObject, ped)

--- BREAK_OBJECT_FRAGMENT_CHILD
-- @param p0 Object
-- @param p1 Any
-- @param p2 BOOL
-- BREAK_OBJECT_FRAGMENT_CHILD(p0, p1, p2)

--- CLEAR_OBJECTS_INSIDE_GARAGE
-- @param garageHash Hash
-- @param vehicles BOOL
-- @param peds BOOL
-- @param objects BOOL
-- @param isNetwork BOOL
-- CLEAR_OBJECTS_INSIDE_GARAGE(garageHash, vehicles, peds, objects, isNetwork)

--- CREATE_AMBIENT_PICKUP
-- Creates an ambient pickup given the hash. Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
-- @param pickupHash Hash
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param flags int
-- @param value int
-- @param modelHash Hash
-- @param returnHandle BOOL
-- @param p8 BOOL
-- CREATE_AMBIENT_PICKUP(pickupHash, posX, posY, posZ, flags, value, modelHash, returnHandle, p8)

--- CREATE_MONEY_PICKUPS
-- ```
Spawns one or more money pickups.  
x: The X-component of the world position to spawn the money pickups at.  
y: The Y-component of the world position to spawn the money pickups at.  
z: The Z-component of the world position to spawn the money pickups at.  
value: The combined value of the pickups (in dollars).  
amount: The number of pickups to spawn.  
model: The model to use, or 0 for default money model.  
Example:  
CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);  
Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).  
==============================================  
Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000  
```
-- @param x float
-- @param y float
-- @param z float
-- @param value int
-- @param amount int
-- @param model Hash
-- CREATE_MONEY_PICKUPS(x, y, z, value, amount, model)

--- CREATE_NON_NETWORKED_PORTABLE_PICKUP
-- @param pickupHash Hash
-- @param x float
-- @param y float
-- @param z float
-- @param placeOnGround BOOL
-- @param modelHash Hash
-- CREATE_NON_NETWORKED_PORTABLE_PICKUP(pickupHash, x, y, z, placeOnGround, modelHash)

--- CREATE_OBJECT
-- Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- @param modelHash Hash - The model to spawn.
-- @param x float - Spawn coordinate X component.
-- @param y float - Spawn coordinate Y component.
-- @param z float - Spawn coordinate Z component, 'ground level'.
-- @param isNetwork BOOL - Whether to create a network object for the object. If false, the object exists only locally.
-- @param netMissionEntity BOOL - Whether to register the object as pinned to the script host in the R\* network model.
-- @param doorFlag BOOL - False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
-- CREATE_OBJECT(modelHash, x, y, z, isNetwork, netMissionEntity, doorFlag)

--- CREATE_OBJECT_NO_OFFSET
-- Creates an object (prop) with the specified model centered at the specified position.
This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
-- @param modelHash Hash - The model to spawn.
-- @param x float - Spawn coordinate X component.
-- @param y float - Spawn coordinate Y component.
-- @param z float - Spawn coordinate Z component.
-- @param isNetwork BOOL - Whether to create a network object for the object. If false, the object exists only locally.
-- @param netMissionEntity BOOL - Whether to register the object as pinned to the script host in the R\* network model.
-- @param doorFlag BOOL - False to create a door archetype (archetype flag bit 26 set) as a door. Required to be set to true to create door models in network mode.
-- CREATE_OBJECT_NO_OFFSET(modelHash, x, y, z, isNetwork, netMissionEntity, doorFlag)

--- CREATE_PICKUP
-- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
-- @param pickupHash Hash
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param p4 int
-- @param value int
-- @param p6 BOOL
-- @param modelHash Hash
-- CREATE_PICKUP(pickupHash, posX, posY, posZ, p4, value, p6, modelHash)

--- CREATE_PICKUP_ROTATE
-- ```
Pickup hashes: pastebin.com/8EuSv2r1  
flags:  
8 (1 << 3): place on ground  
512 (1 << 9): spin around  
```
-- @param pickupHash Hash
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param flag int
-- @param amount int
-- @param p9 Any
-- @param p10 BOOL
-- @param modelHash Hash
-- CREATE_PICKUP_ROTATE(pickupHash, posX, posY, posZ, rotX, rotY, rotZ, flag, amount, p9, p10, modelHash)

--- CREATE_PORTABLE_PICKUP
-- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
-- @param pickupHash Hash
-- @param x float
-- @param y float
-- @param z float
-- @param placeOnGround BOOL
-- @param modelHash Hash
-- CREATE_PORTABLE_PICKUP(pickupHash, x, y, z, placeOnGround, modelHash)

--- DELETE_OBJECT
-- Deletes the specified object.

**Note**: If for some reason the entity won't delete, you might want to check if the object is a mission entity.

```
NativeDB Introduced: v323
```
-- @param object Object* - The object you want to delete.
-- DELETE_OBJECT(object)

--- DETACH_PORTABLE_PICKUP_FROM_PED
-- @param pickupObject Object
-- DETACH_PORTABLE_PICKUP_FROM_PED(pickupObject)

--- DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS
-- ```
p5 is usually 0.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param hash Hash
-- @param p5 BOOL
-- DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(x, y, z, radius, hash, p5)

--- DOES_PICKUP_EXIST
-- @param pickup Pickup
-- DOES_PICKUP_EXIST(pickup)

--- DOES_PICKUP_OBJECT_EXIST
-- @param pickupObject Object
-- DOES_PICKUP_OBJECT_EXIST(pickupObject)

--- DOES_PICKUP_OF_TYPE_EXIST_IN_AREA
-- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
-- @param pickupHash Hash
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- DOES_PICKUP_OF_TYPE_EXIST_IN_AREA(pickupHash, x, y, z, radius)

--- DOES_RAYFIRE_MAP_OBJECT_EXIST
-- ```
Returns true if a destructible object with this handle exists, false otherwise.  
```
-- @param object Object
-- DOES_RAYFIRE_MAP_OBJECT_EXIST(object)

--- DOOR_SYSTEM_FIND_EXISTING_DOOR
-- Search radius: 0.5
-- @param x float - The X coordinate of the door object
-- @param y float - The Y coordinate of the door object
-- @param z float - The Z coordinate of the door object
-- @param modelHash Hash - Entity model hash
-- @param doorOutPointer Hash*
-- DOOR_SYSTEM_FIND_EXISTING_DOOR(x, y, z, modelHash, doorOutPointer)

--- DOOR_SYSTEM_GET_DOOR_PENDING_STATE
-- @param doorHash Hash
-- DOOR_SYSTEM_GET_DOOR_PENDING_STATE(doorHash)

--- DOOR_SYSTEM_GET_DOOR_STATE
-- @param doorHash Hash
-- DOOR_SYSTEM_GET_DOOR_STATE(doorHash)

--- DOOR_SYSTEM_GET_IS_PHYSICS_LOADED
-- @param doorHash Hash
-- DOOR_SYSTEM_GET_IS_PHYSICS_LOADED(doorHash)

--- DOOR_SYSTEM_GET_OPEN_RATIO
-- @param doorHash Hash
-- DOOR_SYSTEM_GET_OPEN_RATIO(doorHash)

--- DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE
-- @param doorHash Hash - Door system identifier
-- @param distance float
-- @param requestDoor BOOL
-- @param forceUpdate BOOL - On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
-- DOOR_SYSTEM_SET_AUTOMATIC_DISTANCE(doorHash, distance, requestDoor, forceUpdate)

--- DOOR_SYSTEM_SET_AUTOMATIC_RATE
-- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Hash - Door system identifier
-- @param rate float
-- @param requestDoor BOOL
-- @param forceUpdate BOOL - On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
-- DOOR_SYSTEM_SET_AUTOMATIC_RATE(doorHash, rate, requestDoor, forceUpdate)

--- DOOR_SYSTEM_SET_DOOR_STATE
-- Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.

### Door lock states: (v323)

*   **0**: UNLOCKED
*   **1**: LOCKED
*   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
*   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
*   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
*   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
*   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
-- @param doorHash Hash
-- @param state int
-- @param requestDoor BOOL - On true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
-- @param forceUpdate BOOL - On true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
-- DOOR_SYSTEM_SET_DOOR_STATE(doorHash, state, requestDoor, forceUpdate)

--- DOOR_SYSTEM_SET_HOLD_OPEN
-- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Hash - Door system identifier
-- @param toggle BOOL
-- DOOR_SYSTEM_SET_HOLD_OPEN(doorHash, toggle)

--- DOOR_SYSTEM_SET_OPEN_RATIO
-- ```
Sets the ajar angle of a door.
Ranges from -1.0 to 1.0, and 0.0 is closed / default.
```
-- @param doorHash Hash - Door system identifier
-- @param ajar float
-- @param requestDoor BOOL
-- @param forceUpdate BOOL - On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
-- DOOR_SYSTEM_SET_OPEN_RATIO(doorHash, ajar, requestDoor, forceUpdate)

--- DOOR_SYSTEM_SET_SPRING_REMOVED
-- Includes networking check: ownership vs. or the door itself **isn't** networked.
-- @param doorHash Hash - Door system identifier
-- @param removed BOOL
-- @param requestDoor BOOL
-- @param forceUpdate BOOL - On true invokes [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53); otherwise requestDoor is unused.
-- DOOR_SYSTEM_SET_SPRING_REMOVED(doorHash, removed, requestDoor, forceUpdate)

--- ENABLE_SAVING_IN_GARAGE
-- @param garageHash Hash
-- @param toggle BOOL
-- ENABLE_SAVING_IN_GARAGE(garageHash, toggle)

--- FIX_OBJECT_FRAGMENT
-- Resets and brings back all the children of a fragment based object.
This should be used when attaching or detaching an object from another entity, especially when the object being detached consists of multiple fragments.

Attempting to teleport a fragment-based object using [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B) such as a flag object, will result in it remaining in place and failing to teleport, given the condition mentioned in the preceding statement.

The native should be executed after detaching the object from its parent entity and before calling [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B).

Example given down below.
-- @param object Object - The object to fix fragments for (a handle should be passed).
-- FIX_OBJECT_FRAGMENT(object)

--- GET_CLOSEST_OBJECT_OF_TYPE
-- ```
Has 8 params in the latest patches.  
isMission - if true doesn't return mission objects  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param modelHash Hash
-- @param isMission BOOL
-- @param p6 BOOL
-- @param p7 BOOL
-- GET_CLOSEST_OBJECT_OF_TYPE(x, y, z, radius, modelHash, isMission, p6, p7)

--- GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param modelHash Hash
-- @param outPosition Vector3*
-- @param outRotation Vector3*
-- @param rotationOrder int
-- GET_COORDS_AND_ROTATION_OF_CLOSEST_OBJECT_OF_TYPE(x, y, z, radius, modelHash, outPosition, outRotation, rotationOrder)

--- GET_OBJECT_FRAGMENT_DAMAGE_HEALTH
-- @param p0 Any
-- @param p1 BOOL
-- GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(p0, p1)

--- GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS
-- Calculates the world coordinates after applying the specified offsets to the given position, relative to a certain heading.
This native is similar to [`GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS`](#\_0x1899F328B0E12848), but uses a world position and heading as the reference point.
-- @param xPos float - The X coordinate of the original position.
-- @param yPos float - The Y coordinate of the original position.
-- @param zPos float - The Z coordinate of the original position.
-- @param heading float - The heading (in degrees) relative to which the offsets are applied.
-- @param xOffset float - Left/right offset from the coord.
-- @param yOffset float - Forward/backward offset from the coord.
-- @param zOffset float - Upward/downward offset from the coord.
-- GET_OFFSET_FROM_COORD_AND_HEADING_IN_WORLD_COORDS(xPos, yPos, zPos, heading, xOffset, yOffset, zOffset)

--- GET_PICKUP_COORDS
-- @param pickup Pickup
-- GET_PICKUP_COORDS(pickup)

--- GET_PICKUP_OBJECT
-- @param pickup Pickup
-- GET_PICKUP_OBJECT(pickup)

--- GET_RAYFIRE_MAP_OBJECT
-- ```
Example:
OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param name char*
-- GET_RAYFIRE_MAP_OBJECT(x, y, z, radius, name)

--- GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE
-- ```
`object`: The des-object handle to get the animation progress from.
Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
```
-- @param object Object - The des-object handle to get the animation progress from.
-- GET_RAYFIRE_MAP_OBJECT_ANIM_PHASE(object)

--- GET_SAFE_PICKUP_COORDS
-- @param x float
-- @param y float
-- @param z float
-- @param p3 float
-- @param p4 float
-- GET_SAFE_PICKUP_COORDS(x, y, z, p3, p4)

--- GET_STATE_OF_CLOSEST_DOOR_OF_TYPE
-- ```
locked is 0 if no door is found  
locked is 0 if door is unlocked  
locked is 1 if door is found and unlocked.  
-------------  
the locked bool is either 0(unlocked)(false) or 1(locked)(true)  
```
-- @param type Hash
-- @param x float
-- @param y float
-- @param z float
-- @param locked BOOL*
-- @param heading float*
-- GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(type, x, y, z, locked, heading)

--- GET_STATE_OF_RAYFIRE_MAP_OBJECT
-- See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states

Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
-- @param object Object
-- GET_STATE_OF_RAYFIRE_MAP_OBJECT(object)

--- GET_WEAPON_TYPE_FROM_PICKUP_TYPE
-- @param pickupHash Hash
-- GET_WEAPON_TYPE_FROM_PICKUP_TYPE(pickupHash)

--- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param modelHash Hash
-- @param p5 Any
-- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(p0, p1, p2, p3, modelHash, p5)

--- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param modelHash Hash
-- @param p5 BOOL
-- HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_COMPLETELY_DESTROYED(x, y, z, radius, modelHash, p5)

--- HAS_OBJECT_BEEN_BROKEN
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param object Object
-- HAS_OBJECT_BEEN_BROKEN(object)

--- HAS_PICKUP_BEEN_COLLECTED
-- @param pickup Pickup
-- HAS_PICKUP_BEEN_COLLECTED(pickup)

--- HIDE_PORTABLE_PICKUP_WHEN_DETACHED
-- @param pickup Pickup
-- @param toggle BOOL
-- HIDE_PORTABLE_PICKUP_WHEN_DETACHED(pickup, toggle)

--- IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE
-- @param garageHash Hash
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- @param p4 Any
-- IS_ANY_ENTITY_ENTIRELY_INSIDE_GARAGE(garageHash, p1, p2, p3, p4)

--- IS_ANY_OBJECT_NEAR_POINT
-- @param x float
-- @param y float
-- @param z float
-- @param range float
-- @param p4 BOOL
-- IS_ANY_OBJECT_NEAR_POINT(x, y, z, range, p4)

--- IS_DOOR_CLOSED
-- @param doorHash Hash
-- IS_DOOR_CLOSED(doorHash)

--- IS_DOOR_REGISTERED_WITH_SYSTEM
-- ```
if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))
{
    OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);
}
```
-- @param doorHash Hash
-- IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash)

--- IS_GARAGE_EMPTY
-- @param garageHash Hash
-- @param p1 BOOL
-- @param p2 int
-- IS_GARAGE_EMPTY(garageHash, p1, p2)

--- IS_OBJECT_A_PICKUP
-- @param object Object
-- IS_OBJECT_A_PICKUP(object)

--- IS_OBJECT_A_PORTABLE_PICKUP
-- ```
NativeDB Introduced: v1365
```
-- @param object Object
-- IS_OBJECT_A_PORTABLE_PICKUP(object)

--- IS_OBJECT_ENTIRELY_INSIDE_GARAGE
-- @param garageHash Hash
-- @param entity Entity
-- @param p2 float
-- @param p3 int
-- IS_OBJECT_ENTIRELY_INSIDE_GARAGE(garageHash, entity, p2, p3)

--- IS_OBJECT_NEAR_POINT
-- @param objectHash Hash
-- @param x float
-- @param y float
-- @param z float
-- @param range float
-- IS_OBJECT_NEAR_POINT(objectHash, x, y, z, range)

--- IS_OBJECT_PARTIALLY_INSIDE_GARAGE
-- @param garageHash Hash
-- @param entity Entity
-- @param p2 int
-- IS_OBJECT_PARTIALLY_INSIDE_GARAGE(garageHash, entity, p2)

--- IS_OBJECT_VISIBLE
-- @param object Object
-- IS_OBJECT_VISIBLE(object)

--- IS_PICKUP_WEAPON_OBJECT_VALID
-- @param object Object
-- IS_PICKUP_WEAPON_OBJECT_VALID(object)

--- IS_PLAYER_ENTIRELY_INSIDE_GARAGE
-- @param garageHash Hash
-- @param player Player
-- @param p2 float
-- @param p3 int
-- IS_PLAYER_ENTIRELY_INSIDE_GARAGE(garageHash, player, p2, p3)

--- IS_PLAYER_PARTIALLY_INSIDE_GARAGE
-- @param garageHash Hash
-- @param player Player
-- @param p2 int
-- IS_PLAYER_PARTIALLY_INSIDE_GARAGE(garageHash, player, p2)

--- IS_POINT_IN_ANGLED_AREA
-- An **angled area** is an X-Z oriented rectangle with three parameters:

1.  **origin**: the mid-point along a base edge of the rectangle;
2.  **extent**: the mid-point of opposite base edge on the other Z;
3.  **width**: the length of the base edge; (named derived from logging strings `CNetworkRoadNodeWorldStateData`).

The oriented rectangle can then be derived from the direction of the two points (`norm(origin - extent)`), its orthonormal, and the width, e.g:

1.  [golf_mp](https://i.imgur.com/JhsQAK9.png)
2.  [am_taxi](https://i.imgur.com/TJWCZaT.jpg)
-- @param xPos float - The x coordinate.
-- @param yPos float - The y coordinate.
-- @param zPos float - The z coordinate.
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param p10 BOOL - a debug flag invoking functions in the same path as `DRAW_MARKER`
-- @param includez BOOL - If true, include the Z dimension when doing the height check; otherwise the query becomes two-dimensional
-- IS_POINT_IN_ANGLED_AREA(xPos, yPos, zPos, x1, y1, z1, x2, y2, z2, width, p10, includez)

--- PLACE_OBJECT_ON_GROUND_PROPERLY
-- @param object Object
-- PLACE_OBJECT_ON_GROUND_PROPERLY(object)

--- PREVENT_COLLECTION_OF_PORTABLE_PICKUP
-- @param object Object
-- @param p1 BOOL
-- @param p2 BOOL
-- PREVENT_COLLECTION_OF_PORTABLE_PICKUP(object, p1, p2)

--- REMOVE_ALL_PICKUPS_OF_TYPE
-- Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
-- @param pickupHash Hash
-- REMOVE_ALL_PICKUPS_OF_TYPE(pickupHash)

--- REMOVE_DOOR_FROM_SYSTEM
-- CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).

Only its NetObj removed and flag `*(v2 + 192) |= 8u` (1604 retail) toggled.
-- @param doorHash Hash
-- REMOVE_DOOR_FROM_SYSTEM(doorHash)

--- REMOVE_OBJECT_HIGH_DETAIL_MODEL
-- @param object Object
-- REMOVE_OBJECT_HIGH_DETAIL_MODEL(object)

--- REMOVE_PICKUP
-- @param pickup Pickup
-- REMOVE_PICKUP(pickup)

--- RENDER_FAKE_PICKUP_GLOW
-- ```
draws circular marker at pos
-1 = none
0 = red
1 = green
2 = blue
3 = green larger
4 = nothing
5 = green small
```
-- @param x float
-- @param y float
-- @param z float
-- @param colorIndex int
-- RENDER_FAKE_PICKUP_GLOW(x, y, z, colorIndex)

--- SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN
-- @param object Object
-- @param toggle BOOL
-- SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(object, toggle)

--- SET_FORCE_OBJECT_THIS_FRAME
-- @param x float
-- @param y float
-- @param z float
-- @param p3 float
-- SET_FORCE_OBJECT_THIS_FRAME(x, y, z, p3)

--- SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS
-- @param p0 BOOL
-- SET_LOCAL_PLAYER_CAN_COLLECT_PORTABLE_PICKUPS(p0)

--- SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER
-- @param modelHash Hash
-- @param p1 int
-- SET_MAX_NUM_PORTABLE_PICKUPS_CARRIED_BY_PLAYER(modelHash, p1)

--- SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY
-- ```
Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
```
-- @param object Object
-- @param toggle BOOL
-- SET_OBJECT_ALLOW_LOW_LOD_BUOYANCY(object, toggle)

--- SET_OBJECT_FORCE_VEHICLES_TO_AVOID
-- Overrides a flag on the object which determines if the object should be avoided by a vehicle in task: CTaskVehicleGoToPointWithAvoidanceAutomobile.
Tested on vehicles that were created by the vehicle generators.
-- @param object Object
-- @param toggle BOOL
-- SET_OBJECT_FORCE_VEHICLES_TO_AVOID(object, toggle)

--- SET_OBJECT_PHYSICS_PARAMS
-- ```
rage::phArchetypeDamp
p9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive.
```
-- @param object Object
-- @param mass float
-- @param gravityFactor float
-- @param linearC float
-- @param linearV float
-- @param linearV2 float
-- @param angularC float
-- @param angularV float
-- @param angularV2 float
-- @param p9 float
-- @param maxAngSpeed float
-- @param buoyancyFactor float
-- SET_OBJECT_PHYSICS_PARAMS(object, mass, gravityFactor, linearC, linearV, linearV2, angularC, angularV, angularV2, p9, maxAngSpeed, buoyancyFactor)

--- SET_OBJECT_TARGETTABLE
-- @param object Object
-- @param targettable BOOL
-- SET_OBJECT_TARGETTABLE(object, targettable)

--- SET_PICKUP_GENERATION_RANGE_MULTIPLIER
-- @param multiplier float
-- SET_PICKUP_GENERATION_RANGE_MULTIPLIER(multiplier)

--- SET_PICKUP_REGENERATION_TIME
-- @param pickup Pickup
-- @param duration int
-- SET_PICKUP_REGENERATION_TIME(pickup, duration)

--- SET_STATE_OF_CLOSEST_DOOR_OF_TYPE
-- ```
Hardcoded to not work in multiplayer.  
Used to lock/unlock doors to interior areas of the game.  
(Possible) Door Types:  
pastebin.com/9S2m3qA4  
Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.  
Locked means that the heading is locked.    
p6 is always 0.   
225 door types, model names and coords found in stripclub.c4:  
pastebin.com/gywnbzsH  
get door info: pastebin.com/i14rbekD  
```
-- @param type Hash
-- @param x float
-- @param y float
-- @param z float
-- @param locked BOOL
-- @param heading float
-- @param p6 BOOL
-- SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(type, x, y, z, locked, heading, p6)

--- SET_STATE_OF_RAYFIRE_MAP_OBJECT
-- ```
Defines the state of a destructible object.
Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
State 2 == object just spawned
State 4 == Beginning of the animation
State 6 == Start animation
State 9 == End of the animation
```
-- @param object Object
-- @param state int
-- SET_STATE_OF_RAYFIRE_MAP_OBJECT(object, state)

--- SET_TEAM_PICKUP_OBJECT
-- @param object Object
-- @param p1 Any
-- @param p2 BOOL
-- SET_TEAM_PICKUP_OBJECT(object, p1, p2)

--- SLIDE_OBJECT
-- ```
Returns true if the object has finished moving.  
If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.  
See also: https://gtagmodding.com/opcode-database/opcode/034E/
Has to be looped until it returns true.   
```
-- @param object Object
-- @param toX float
-- @param toY float
-- @param toZ float
-- @param speedX float
-- @param speedY float
-- @param speedZ float
-- @param collision BOOL
-- SLIDE_OBJECT(object, toX, toY, toZ, speedX, speedY, speedZ, collision)

--- TRACK_OBJECT_VISIBILITY
-- @param object Object
-- TRACK_OBJECT_VISIBILITY(object)

--- _CLEAR_GARAGE_AREA
-- @param garageHash Hash
-- @param isNetwork BOOL
-- _CLEAR_GARAGE_AREA(garageHash, isNetwork)

--- _CREATE_NON_NETWORKED_AMBIENT_PICKUP
-- ```
NativeDB Introduced: v2372
```
-- @param pickupHash Any
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param flags int
-- @param value int
-- @param modelHash Any
-- @param p7 BOOL
-- @param p8 BOOL
-- _CREATE_NON_NETWORKED_AMBIENT_PICKUP(pickupHash, posX, posY, posZ, flags, value, modelHash, p7, p8)

--- _DOOR_CONTROL
-- Hardcoded not to work in multiplayer environments.
Native name between `SET_LOCAL_PLAYER_VISIBLE_LOCALLY` & `SET_MAX_WANTED_LEVEL`.

```
OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked
OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked
```
-- @param modelHash Hash
-- @param x float
-- @param y float
-- @param z float
-- @param locked BOOL - tells the game whether or not the door is locked
-- @param xRotMult float - multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- @param yRotMult float - multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- @param zRotMult float - multiplier that specifies how fast the door/gate will rotate in degrees per second.
-- _DOOR_CONTROL(modelHash, x, y, z, locked, xRotMult, yRotMult, zRotMult)

--- _DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE
-- ```
NativeDB Introduced: v1868
```
-- @param doorHash Hash
-- _DOOR_SYSTEM_GET_AUTOMATIC_DISTANCE(doorHash)

--- _FORCE_PICKUP_REGENERATE
-- @param p0 Any
-- _FORCE_PICKUP_REGENERATE(p0)

--- _GET_IS_ARENA_PROP_PHYSICS_DISABLED
-- ```
NativeDB Introduced: v1604
```
-- @param entity Object
-- @param p1 Any
-- _GET_IS_ARENA_PROP_PHYSICS_DISABLED(entity, p1)

--- _GET_OBJECT_TEXTURE_VARIATION
-- @param object Object
-- _GET_OBJECT_TEXTURE_VARIATION(object)

--- _GET_PICKUP_GENERATION_RANGE_MULTIPLIER
-- _GET_PICKUP_GENERATION_RANGE_MULTIPLIER()

--- _GET_PICKUP_HASH
-- ```
returns pickup hash.
```
-- @param pickupHash Hash
-- _GET_PICKUP_HASH(pickupHash)

--- _GET_PICKUP_HASH_FROM_WEAPON
-- ```
NativeDB Introduced: v1290
```
-- @param weapon Hash
-- _GET_PICKUP_HASH_FROM_WEAPON(weapon)

--- _MARK_OBJECT_FOR_DELETION
-- ```
is this like setting is as no longer needed?  
```
-- @param object Object
-- _MARK_OBJECT_FOR_DELETION(object)

--- _PLACE_OBJECT_ON_GROUND_PROPERLY_2
-- @param object Object
-- _PLACE_OBJECT_ON_GROUND_PROPERLY_2(object)

--- _SET_CREATE_WEAPON_OBJECT_LIGHT_SOURCE
-- ```
Requires a component_at_*_flsh to be attached to the weapon object
```
-- @param object Object
-- @param toggle BOOL
-- _SET_CREATE_WEAPON_OBJECT_LIGHT_SOURCE(object, toggle)

--- _SET_ENABLE_ARENA_PROP_PHYSICS
-- ```
Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
```

```
NativeDB Introduced: v1604
```
-- @param entity Object
-- @param toggle BOOL
-- @param p2 int
-- _SET_ENABLE_ARENA_PROP_PHYSICS(entity, toggle, p2)

--- _SET_ENABLE_ARENA_PROP_PHYSICS_ON_PED
-- ```
NativeDB Introduced: v1604
```
-- @param entity Object
-- @param toggle BOOL
-- @param p2 int
-- @param ped Ped
-- _SET_ENABLE_ARENA_PROP_PHYSICS_ON_PED(entity, toggle, p2, ped)

--- _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL
-- ```
Maximum amount of pickup models that can be disallowed is 30.
SET_LOCAL_PLAYER_*
```
-- @param modelHash Hash
-- @param toggle BOOL
-- _SET_LOCAL_PLAYER_CAN_USE_PICKUPS_WITH_THIS_MODEL(modelHash, toggle)

--- _SET_OBJECT_LIGHT_COLOR
-- Sets color of embedded light source.
Only appears in am_mp_nightclub.c for the nightclub dancefloor.

Not sure what p1 does, seems to only ever be '1' in scripts.

```
NativeDB Introduced: v1493
```
-- @param object Object
-- @param p1 BOOL
-- @param r int
-- @param g int
-- @param b int
-- _SET_OBJECT_LIGHT_COLOR(object, p1, r, g, b)

--- _SET_OBJECT_STUNT_PROP_DURATION
-- @param object Object
-- @param duration float
-- _SET_OBJECT_STUNT_PROP_DURATION(object, duration)

--- _SET_OBJECT_STUNT_PROP_SPEEDUP
-- Sets the intensity of Speed Boost and Slow Down props.

The corresponding values for Speed Boosts in the Creator are:\
Weak: `15`\
Normal: `25`\
Strong: `35`\
Extra Strong: `45`\
Ultra Strong: `100`

For Slow Downs:\
Weak: `44`\
Normal: `30`\
Strong: `16`
-- @param object Object - A Speed Boost or Slow Down prop
-- @param intensity int - Ranges from `1`-`254`, other values are ignored. Higher values will increase the effect of Speed Boosts and decrease the effect of Slow Downs.
-- _SET_OBJECT_STUNT_PROP_SPEEDUP(object, intensity)

--- _SET_OBJECT_TARGETTABLE_BY_PLAYER
-- @param object Object
-- @param setFlag34 BOOL
-- @param setFlag35 BOOL
-- _SET_OBJECT_TARGETTABLE_BY_PLAYER(object, setFlag34, setFlag35)

--- _SET_OBJECT_TEXTURE_VARIATION
-- ```cpp
enum eObjectPaintVariants
{  
	Pacific = 0,  
	Azure = 1,  
	Nautical = 2,  
	Continental = 3,  
	Battleship = 4,  
	Intrepid = 5,  
	Uniform = 6,  
	Classico = 7,  
	Mediterranean = 8,  
	Command = 9,  
	Mariner = 10,  
	Ruby = 11,  
	Vintage = 12,  
	Pristine = 13,  
	Merchant = 14,  
	Voyager = 15  
};  
```
-- @param object Object
-- @param textureVariation int
-- _SET_OBJECT_TEXTURE_VARIATION(object, textureVariation)

--- _SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE
-- @param p0 Any
-- @param p1 Any
-- _SET_PICKUP_HIDDEN_WHEN_UNCOLLECTABLE(p0, p1)

--- _SET_PICKUP_UNCOLLECTABLE
-- @param p0 Any
-- @param p1 Any
-- _SET_PICKUP_UNCOLLECTABLE(p0, p1)

--- _SET_TEXTURE_VARIATION_OF_CLOSEST_OBJECT_OF_TYPE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param modelHash Hash
-- @param textureVariation int
-- _SET_TEXTURE_VARIATION_OF_CLOSEST_OBJECT_OF_TYPE(x, y, z, radius, modelHash, textureVariation)

--- _SET_UNK_GLOBAL_BOOL_RELATED_TO_DAMAGE
-- ```
NativeDB Introduced: v1365
```
-- @param value BOOL
-- _SET_UNK_GLOBAL_BOOL_RELATED_TO_DAMAGE(value)

--- _TOGGLE_USE_PICKUPS_FOR_PLAYER
-- ```
Disabling/enabling a player from getting pickups. From the scripts:
OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);
OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);
OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);
OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);
SET_PLAYER_*
```
-- @param player Player
-- @param pickupHash Hash
-- @param toggle BOOL
-- _TOGGLE_USE_PICKUPS_FOR_PLAYER(player, pickupHash, toggle)


-- ========== PAD ==========

--- 0x14D29BB12D47F68C
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x14D29BB12D47F68C(p0, p1, p2, p3, p4)

--- 0x23F09EADC01449D6
-- Hardcoded to return false.
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- 0x23F09EADC01449D6(padIndex)

--- 0x25AAA32BDC98F2A3
-- ```
NativeDB Introduced: v1365
```
-- 0x25AAA32BDC98F2A3()

--- 0x5B73C77D9EB66E24
-- @param p0 BOOL
-- 0x5B73C77D9EB66E24(p0)

--- 0x6CD79468A1E595C6
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- 0x6CD79468A1E595C6(padIndex)

--- 0xA0CEFCEA390AAB9B
-- @param p0 Any
-- 0xA0CEFCEA390AAB9B(p0)

--- 0xCB0360EFEFB2580D
-- @param padIndex int
-- 0xCB0360EFEFB2580D(padIndex)

--- 0xE1615EC03B3BB4FD
-- ```
Used with IS_LOOK_INVERTED() and negates its affect.
--
Not sure how the person above got that description, but here's an actual example:
if (PAD::_GET_LAST_INPUT_METHOD(2)) {
    if (a_5) {
        if (PAD::IS_LOOK_INVERTED()) {
            a_3 *= -1;
        }
        if (PAD::_E1615EC03B3BB4FD()) {
            a_3 *= -1;
        }
    }
}
```
-- 0xE1615EC03B3BB4FD()

--- 0xF239400E16C23E08
-- @param padIndex int
-- @param p1 int
-- 0xF239400E16C23E08(padIndex, p1)

--- DISABLE_ALL_CONTROL_ACTIONS
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- DISABLE_ALL_CONTROL_ACTIONS(padIndex)

--- DISABLE_CONTROL_ACTION
-- [Control values and meaning](https://docs.fivem.net/docs/game-references/controls/#controls)

Example: `CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true)` disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.
Control group 1 and 0 gives the same results as 2. Same results for all players.
-- @param padIndex int
-- @param control int
-- @param disable BOOL
-- DISABLE_CONTROL_ACTION(padIndex, control, disable)

--- ENABLE_ALL_CONTROL_ACTIONS
-- ```cpp
enum ePadType {
  PLAYER_CONTROL = 0,
  CAMERA_CONTROL = 1,
  FRONTEND_CONTRO = 2
};
```
-- @param padIndex int - The control system instance to use.
-- ENABLE_ALL_CONTROL_ACTIONS(padIndex)

--- ENABLE_CONTROL_ACTION
-- ```
control values and meaning: github.com/crosire/scripthookvdotnet/blob/dev_v3/source/scripting/Control.cs  
and  
https://docs.fivem.net/game-references/controls/
0, 1 and 2 used in the scripts.  
Control values from the decompiled scripts:   
0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,  
37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100  
,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19  
0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2  
20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,  
261,262,263,264,286,287,288,289,337,338,339,340,341,342,343  
INPUTGROUP_MOVE  
INPUTGROUP_LOOK  
INPUTGROUP_WHEEL  
INPUTGROUP_CELLPHONE_NAVIGATE  
INPUTGROUP_CELLPHONE_NAVIGATE_UD  
INPUTGROUP_CELLPHONE_NAVIGATE_LR  
INPUTGROUP_FRONTEND_DPAD_ALL  
INPUTGROUP_FRONTEND_DPAD_UD  
INPUTGROUP_FRONTEND_DPAD_LR  
INPUTGROUP_FRONTEND_LSTICK_ALL  
INPUTGROUP_FRONTEND_RSTICK_ALL  
INPUTGROUP_FRONTEND_GENERIC_UD  
INPUTGROUP_FRONTEND_GENERIC_LR  
INPUTGROUP_FRONTEND_GENERIC_ALL  
INPUTGROUP_FRONTEND_BUMPERS  
INPUTGROUP_FRONTEND_TRIGGERS  
INPUTGROUP_FRONTEND_STICKS  
INPUTGROUP_SCRIPT_DPAD_ALL  
INPUTGROUP_SCRIPT_DPAD_UD  
INPUTGROUP_SCRIPT_DPAD_LR  
INPUTGROUP_SCRIPT_LSTICK_ALL  
INPUTGROUP_SCRIPT_RSTICK_ALL  
INPUTGROUP_SCRIPT_BUMPERS  
INPUTGROUP_SCRIPT_TRIGGERS  
INPUTGROUP_WEAPON_WHEEL_CYCLE  
INPUTGROUP_FLY  
INPUTGROUP_SUB  
INPUTGROUP_VEH_MOVE_ALL  
INPUTGROUP_CURSOR  
INPUTGROUP_CURSOR_SCROLL  
INPUTGROUP_SNIPER_ZOOM_SECONDARY  
INPUTGROUP_VEH_HYDRAULICS_CONTROL  
Took those in IDA Pro.Not sure in which order they go  
```
-- @param padIndex int
-- @param control int
-- @param enable BOOL
-- ENABLE_CONTROL_ACTION(padIndex, control, enable)

--- GET_ALLOW_MOVEMENT_WHILE_ZOOMED
-- ```
Returns profile setting 17.
```
-- GET_ALLOW_MOVEMENT_WHILE_ZOOMED()

--- GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTON
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param controlGroup int
-- @param p2 BOOL
-- GET_CONTROL_GROUP_INSTRUCTIONAL_BUTTON(padIndex, controlGroup, p2)

--- GET_CONTROL_INSTRUCTIONAL_BUTTON
-- ```
formerly called _GET_CONTROL_ACTION_NAME incorrectly  
p2 appears to always be true.  
p2 is unused variable in function.  
EG:  
GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) /*INPUT_FRONTEND_ACCEPT (e.g. Enter button)*/  
GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) /*INPUT_FRONTEND_CANCEL (e.g. ESC button)*/  
GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) /*INPUT_CONTEXT (e.g. E button)*/  
gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378  
0, 1 and 2 used in the scripts. 0 is by far the most common of them.  
```
-- @param padIndex int
-- @param control int
-- @param p2 BOOL
-- GET_CONTROL_INSTRUCTIONAL_BUTTON(padIndex, control, p2)

--- GET_CONTROL_NORMAL
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- GET_CONTROL_NORMAL(padIndex, control)

--- GET_CONTROL_UNBOUND_NORMAL
-- ```
Seems to return values between -1 and 1 for controls like gas and steering.
```
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- GET_CONTROL_UNBOUND_NORMAL(padIndex, control)

--- GET_CONTROL_VALUE
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- GET_CONTROL_VALUE(padIndex, control)

--- GET_DISABLED_CONTROL_NORMAL
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- GET_DISABLED_CONTROL_NORMAL(padIndex, control)

--- GET_DISABLED_CONTROL_UNBOUND_NORMAL
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- GET_DISABLED_CONTROL_UNBOUND_NORMAL(padIndex, control)

--- GET_IS_USING_ALTERNATE_DRIVEBY
-- ```
Returns profile setting 225.
```
-- GET_IS_USING_ALTERNATE_DRIVEBY()

--- GET_LOCAL_PLAYER_AIM_STATE
-- Returns the local player's targeting mode. See [`SET_PLAYER_TARGETING_MODE`](#\_0xB1906895227793F3).
-- GET_LOCAL_PLAYER_AIM_STATE()

--- IS_CONTROL_ENABLED
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_CONTROL_ENABLED(padIndex, control)

--- IS_CONTROL_JUST_PRESSED
-- Returns whether a control was newly pressed since the last check.
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_CONTROL_JUST_PRESSED(padIndex, control)

--- IS_CONTROL_JUST_RELEASED
-- Returns whether a control was newly released since the last check.
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_CONTROL_JUST_RELEASED(padIndex, control)

--- IS_CONTROL_PRESSED
-- Returns whether a control is currently pressed.
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_CONTROL_PRESSED(padIndex, control)

--- IS_CONTROL_RELEASED
-- Returns whether a control is currently *not* pressed.
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_CONTROL_RELEASED(padIndex, control)

--- IS_DISABLED_CONTROL_JUST_PRESSED
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_DISABLED_CONTROL_JUST_PRESSED(padIndex, control)

--- IS_DISABLED_CONTROL_JUST_RELEASED
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_DISABLED_CONTROL_JUST_RELEASED(padIndex, control)

--- IS_DISABLED_CONTROL_PRESSED
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- IS_DISABLED_CONTROL_PRESSED(padIndex, control)

--- IS_LOOK_INVERTED
-- IS_LOOK_INVERTED()

--- SET_INPUT_EXCLUSIVE
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- SET_INPUT_EXCLUSIVE(padIndex, control)

--- SET_PAD_SHAKE
-- ```
p0 always seems to be 0  
duration in milliseconds   
frequency should range from about 10 (slow vibration) to 255 (very fast)  
example:  
SET_PAD_SHAKE(0, 100, 200);  
```
-- @param padIndex int
-- @param duration int
-- @param frequency int
-- SET_PAD_SHAKE(padIndex, duration, frequency)

--- SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED
-- @param toggle BOOL
-- SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(toggle)

--- STOP_PAD_SHAKE
-- @param padIndex int
-- STOP_PAD_SHAKE(padIndex)

--- _DISABLE_INPUT_GROUP
-- @param padIndex int
-- _DISABLE_INPUT_GROUP(padIndex)

--- _GET_LOCAL_PLAYER_AIM_STATE_2
-- ```
Same behavior as GET_LOCAL_PLAYER_AIM_STATE but only used on the PC version.  
```
-- _GET_LOCAL_PLAYER_AIM_STATE_2()

--- _GET_TIME_SINCE_LAST_INPUT
-- ```
The number of milliseconds since last padIndex registered pressed
```
-- @param padIndex int
-- _GET_TIME_SINCE_LAST_INPUT(padIndex)

--- _IS_DISABLED_CONTROL_RELEASED
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- _IS_DISABLED_CONTROL_RELEASED(padIndex, control)

--- _IS_USING_KEYBOARD
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- _IS_USING_KEYBOARD(padIndex)

--- _IS_USING_KEYBOARD_2
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- _IS_USING_KEYBOARD_2(padIndex)

--- _RESET_INPUT_MAPPING_SCHEME
-- ```
S*
```
-- _RESET_INPUT_MAPPING_SCHEME()

--- _SET_CONTROL_LIGHT_EFFECT_COLOR
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param red int
-- @param green int
-- @param blue int
-- _SET_CONTROL_LIGHT_EFFECT_COLOR(padIndex, red, green, blue)

--- _SET_CONTROL_NORMAL
-- This is for simulating player input.
-- @param padIndex int - The control system instance to use. See [`ENABLE_ALL_CONTROL_ACTIONS`](#\_0xA5FFE9B05F199DE7).
-- @param control int - The [control ID](https://docs.fivem.net/docs/game-references/controls/#controls) to check.
-- @param amount float - An unbounded normal value.
-- _SET_CONTROL_NORMAL(padIndex, control, amount)

--- _SET_CURSOR_LOCATION
-- @param x float
-- @param y float
-- _SET_CURSOR_LOCATION(x, y)

--- _SWITCH_TO_INPUT_MAPPING_SCHEME
-- ```
Used in carsteal3 script with p0 = "Carsteal4_spycar".
S*
```
-- @param name char*
-- _SWITCH_TO_INPUT_MAPPING_SCHEME(name)

--- _SWITCH_TO_INPUT_MAPPING_SCHEME_2
-- ```
Same as 0x3D42B92563939375

S*
```
-- @param name char*
-- _SWITCH_TO_INPUT_MAPPING_SCHEME_2(name)


-- ========== PATHFIND ==========

--- 0xAA76052DDA9BFC3E
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0xAA76052DDA9BFC3E(p0, p1, p2, p3, p4, p5, p6)

--- ADD_NAVMESH_BLOCKING_OBJECT
-- Creates a navmesh blocking object, vehicles will avoid driving through this area.

Only 32 blocking objects may exist at a given time and must be manually managed. See [`REMOVE_NAVMESH_BLOCKING_OBJECT`](#\_0x46399A7895957C0E) and [`onResourceStop`](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/)

```cpp
enum eBlockingObjectFlags {
    // Default Flag
    BLOCKING_OBJECT_DEFAULT = 0,
    // Blocking object will block wander paths
    BLOCKING_OBJECT_WANDERPATH = 1,
    // Blocking object will block (regular) shortest-paths
    BLOCKING_OBJECT_SHORTESTPATH = 2,
    // Blocking object will block flee paths
    BLOCKING_OBJECT_FLEEPATH = 4,
    // Blocking object will block all paths
    BLOCKING_OBJECT_ALLPATHS = 7,
}
```
-- @param x float - The x coordinate to create the block on.
-- @param y float - The y coordinate.
-- @param z float - The z coordinate.
-- @param width float - The width of the block.
-- @param length float - The length of the block.
-- @param height float - The height of the block.
-- @param heading float - The heading of object in degrees.
-- @param bPermanent BOOL - A boolean indicating if the blocking object is permanent (`true`/`false`).
-- @param flags int - Flag for the blocking object, refer to `eBlockingObjectFlags`.
-- ADD_NAVMESH_BLOCKING_OBJECT(x, y, z, width, length, height, heading, bPermanent, flags)

--- ADD_NAVMESH_REQUIRED_REGION
-- @param x float
-- @param y float
-- @param radius float
-- ADD_NAVMESH_REQUIRED_REGION(x, y, radius)

--- ARE_ALL_NAVMESH_REGIONS_LOADED
-- ARE_ALL_NAVMESH_REGIONS_LOADED()

--- ARE_NODES_LOADED_FOR_AREA
-- @param x1 float
-- @param y1 float
-- @param x2 float
-- @param y2 float
-- ARE_NODES_LOADED_FOR_AREA(x1, y1, x2, y2)

--- CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS
-- Calculates the travel distance between a set of points.
Doesn't seem to correlate with distance on gps sometimes.

This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(x1, y1, z1, x2, y2, z2)

--- CLEAR_GPS_DISABLED_ZONE_AT_INDEX
-- Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
-- @param index int - Index of disabled zone.
-- CLEAR_GPS_DISABLED_ZONE_AT_INDEX(index)

--- DISABLE_NAVMESH_IN_AREA
-- Use this if you want to completely disable a large area of navmesh.
For smaller areas, use [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A) instead.
-- @param posMinX float - X Min Coordinate.
-- @param posMinY float - Y Min Coordinate.
-- @param posMinZ float - Z Min Coordinate.
-- @param posMaxX float - X Max Coordinate.
-- @param posMaxY float - Y Max Coordinate.
-- @param posMaxZ float - Z Max Coordinate.
-- @param bDisable bool - Whether to disable the navmesh or not.
-- DISABLE_NAVMESH_IN_AREA(posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, bDisable)

--- DOES_NAVMESH_BLOCKING_OBJECT_EXIST
-- @param p0 Any
-- DOES_NAVMESH_BLOCKING_OBJECT_EXIST(p0)

--- GENERATE_DIRECTIONS_TO_COORD
-- ```
p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
distToNxJunction seems to be the distance in metres * 10.0f
direction:
0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
1 = Route is being calculated or the player is going in the wrong direction
2 = Please Proceed the Highlighted Route
3 = In (distToNxJunction) Turn Left
4 = In (distToNxJunction) Turn Right
5 = In (distToNxJunction) Keep Straight
6 = In (distToNxJunction) Turn Sharply To The Left
7 = In (distToNxJunction) Turn Sharply To The Right
8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
return value set to 0 always
```
-- @param x float
-- @param y float
-- @param z float
-- @param p3 BOOL
-- @param direction int*
-- @param vehicle float*
-- @param distToNxJunction float*
-- GENERATE_DIRECTIONS_TO_COORD(x, y, z, p3, direction, vehicle, distToNxJunction)

--- GET_CLOSEST_MAJOR_VEHICLE_NODE
-- ```
Get the closest vehicle node to a given position, unknown1 = 3.0, unknown2 = 0  
```
-- @param x float
-- @param y float
-- @param z float
-- @param outPosition Vector3*
-- @param unknown1 float
-- @param unknown2 int
-- GET_CLOSEST_MAJOR_VEHICLE_NODE(x, y, z, outPosition, unknown1, unknown2)

--- GET_CLOSEST_ROAD
-- Finds an edge (node connection to another node) that satisfies the specified criteria.
-- @param x float - x position
-- @param y float - y position
-- @param z float - z position
-- @param minimumEdgeLength float - Minimum distance the srcNode must be from the targetNode.
-- @param minimumLaneCount int - Minimum number of lanes the connection must have.
-- @param srcNode Vector3* - Position of the edge source
-- @param targetNode Vector3* - Position of the edge target
-- @param laneCountForward int* - Lane count forward
-- @param laneCountBackward int* - Lane count backwards
-- @param width float* - Width of gap in middle of road between forward and backward lanes.
-- @param onlyMajorRoads BOOL - Return major roads only.
-- GET_CLOSEST_ROAD(x, y, z, minimumEdgeLength, minimumLaneCount, srcNode, targetNode, laneCountForward, laneCountBackward, width, onlyMajorRoads)

--- GET_CLOSEST_VEHICLE_NODE
-- ```
FYI: When falling through the map (or however you got under it) you will respawn when your player ped's height is <= -200.0 meters (I think you all know this) and when in a vehicle you will actually respawn at the closest vehicle node.
----------
Vector3 nodePos;
GET_CLOSEST_VEHICLE_NODE(x,y,z,&nodePos,...)
p4 is either 0, 1 or 8. 1 means any path/road. 0 means node in the middle of the closest main (asphalt) road.
p5, p6 are always the same:
0x40400000 (3.0), 0
p5 can also be 100.0 and p6 can be 2.5:
PATHFIND::GET_CLOSEST_VEHICLE_NODE(a_0, &v_5, v_9, 100.0, 2.5)
Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.
The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.
Starting at 2, every fourth node is under the map, always same coords.
Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).
gtaforums.com/topic/843561-pathfind-node-types
```
-- @param x float
-- @param y float
-- @param z float
-- @param outPosition Vector3*
-- @param nodeType int
-- @param p5 float
-- @param p6 float
-- GET_CLOSEST_VEHICLE_NODE(x, y, z, outPosition, nodeType, p5, p6)

--- GET_CLOSEST_VEHICLE_NODE_WITH_HEADING
-- ```
p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.  
p5 is either 1 or 12. 1 means any path/road. 12, 8, 0 means node in the middle of the closest main (asphalt) road.  
p6 is always 3.0  
p7 is always 0.  
Known node types: simple path/asphalt road, only asphalt road, water, under the map at always the same coords.   
The node types follows a pattern. For example, every fourth node is of the type water i.e. 3, 7, 11, 15, 19, 23, 27, 31, 35, 39... 239. Could not see any difference between nodes within certain types.   
Starting at 2, every fourth node is under the map, always same coords.  
Same with only asphalt road (0, 4, 8, etc) and simple path/asphalt road (1, 5, 9, etc).  
gtaforums.com/topic/843561-pathfind-node-types  
Example of usage, moving vehicle to closest path/road:  
Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);  
Vector3 closestVehicleNodeCoords;   
float roadHeading;   
PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);   
ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);  
ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);  
VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);  
------------------------------------------------------------------  
C# Example (ins1de) : pastebin.com/fxtMWAHD  
```
-- @param x float
-- @param y float
-- @param z float
-- @param outPosition Vector3*
-- @param outHeading float*
-- @param nodeType int
-- @param p6 float
-- @param p7 int
-- GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(x, y, z, outPosition, outHeading, nodeType, p6, p7)

--- GET_GPS_BLIP_ROUTE_FOUND
-- GET_GPS_BLIP_ROUTE_FOUND()

--- GET_GPS_BLIP_ROUTE_LENGTH
-- GET_GPS_BLIP_ROUTE_LENGTH()

--- GET_NEXT_GPS_DISABLED_ZONE_INDEX
-- Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.

```
NativeDB Removed Parameter 1: int index
```
-- @param index int
-- GET_NEXT_GPS_DISABLED_ZONE_INDEX(index)

--- GET_NTH_CLOSEST_VEHICLE_NODE
-- @param x float
-- @param y float
-- @param z float
-- @param nthClosest int
-- @param outPosition Vector3*
-- @param unknown1 Any
-- @param unknown2 Any
-- @param unknown3 Any
-- GET_NTH_CLOSEST_VEHICLE_NODE(x, y, z, nthClosest, outPosition, unknown1, unknown2, unknown3)

--- GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION
-- ```
See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water  
p10 always equal 0x40400000  
p11 always equal 0  
```
-- @param x float
-- @param y float
-- @param z float
-- @param desiredX float
-- @param desiredY float
-- @param desiredZ float
-- @param nthClosest int
-- @param outPosition Vector3*
-- @param outHeading float*
-- @param nodetype int
-- @param p10 float
-- @param p11 Any
-- GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(x, y, z, desiredX, desiredY, desiredZ, nthClosest, outPosition, outHeading, nodetype, p10, p11)

--- GET_NTH_CLOSEST_VEHICLE_NODE_ID
-- ```
Returns the id.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param nth int
-- @param nodetype int
-- @param p5 float
-- @param p6 float
-- GET_NTH_CLOSEST_VEHICLE_NODE_ID(x, y, z, nth, nodetype, p5, p6)

--- GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING
-- @param x float
-- @param y float
-- @param z float
-- @param nthClosest int
-- @param outPosition Vector3*
-- @param outHeading float*
-- @param p6 Any
-- @param p7 float
-- @param p8 float
-- GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(x, y, z, nthClosest, outPosition, outHeading, p6, p7, p8)

--- GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING
-- Get the nth closest vehicle node with its heading and total lane count.
If you need specific forward and backward lane counts use [GET_CLOSEST_ROAD](#\_0x132F52BBA570FE92)

```cpp
enum eNodeFlags {
	NONE = 0,
	INCLUDE_SWITCHED_OFF_NODES = 1,
	INCLUDE_BOAT_NODES = 2,
	IGNORE_SLIPLANES = 4,
	IGNORE_SWITCHED_OFF_DEAD_ENDS = 8,
}
```
-- @param x float - x position
-- @param y float - y position
-- @param z float - z position
-- @param nthClosest int - nth closest node
-- @param outPosition Vector3* - returned position of the found node
-- @param heading float* - returned heading of the found node
-- @param totalLanes int* - total lanes (forward + backward) of the found node
-- @param searchFlags int - Flags used when searching for a node, see `eNodeFlags`
-- @param zMeasureMult float - How strongly the difference in z direction should be weighted (defaults to 3.0)
-- @param zTolerance float - How far apart the Z coords have to be before the zMeasureMult kicks in
-- GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(x, y, z, nthClosest, outPosition, heading, totalLanes, searchFlags, zMeasureMult, zTolerance)

--- GET_NUM_NAVMESHES_EXISTING_IN_AREA
-- @param posMinX float - Min X Coordinate.
-- @param posMinY float - Min Y Coordinate.
-- @param posMinZ float - Min Z Coordinate.
-- @param posMaxX float - Max X Coordinate.
-- @param posMaxY float - Max Y Coordinate.
-- @param posMaxZ float - Max Z Coordinate.
-- GET_NUM_NAVMESHES_EXISTING_IN_AREA(posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ)

--- GET_POS_ALONG_GPS_TYPE_ROUTE
-- Native to get a position along current player GPS route using supplied slot.
This native was previously named `GET_GPS_WAYPOINT_ROUTE_END`, but its named changed.

```cpp
enum eGpsSlotType {
	GPS_SLOT_WAYPOINT = 0,
	GPS_SLOT_RADAR_BLIP = 1,
	GPS_SLOT_DISCRETE = 2
}
```
-- @param result Vector3* - Coordinates of waypoint marker
-- @param bStartAtPlayerPos BOOL - Should we project distance from the player position or from next node.
-- @param fDistanceAlongRoute float - Distance we want to get the position along the route.
-- @param slotType int - Type of gps route to check against. See `eGpsSlotType`.
-- GET_POS_ALONG_GPS_TYPE_ROUTE(result, bStartAtPlayerPos, fDistanceAlongRoute, slotType)

--- GET_RANDOM_VEHICLE_NODE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p4 BOOL
-- @param p5 BOOL
-- @param p6 BOOL
-- @param outPosition Vector3*
-- @param nodeId int*
-- GET_RANDOM_VEHICLE_NODE(x, y, z, radius, p4, p5, p6, outPosition, nodeId)

--- GET_ROAD_BOUNDARY_USING_HEADING
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param outPosition Vector3*
-- GET_ROAD_BOUNDARY_USING_HEADING(x, y, z, heading, outPosition)

--- GET_SAFE_COORD_FOR_PED
-- ```
Flags are:
1 = 1 = B02_IsFootpath
2 = 4 = !B15_InteractionUnk
4 = 0x20 = !B14_IsInterior
8 = 0x40 = !B07_IsWater
16 = 0x200 = B17_IsFlatGround
When onGround == true outPosition is a position located on the nearest pavement.
When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
16 works for me, 0 crashed the script.
```
-- @param x float
-- @param y float
-- @param z float
-- @param onGround BOOL
-- @param outPosition Vector3*
-- @param flags int
-- GET_SAFE_COORD_FOR_PED(x, y, z, onGround, outPosition, flags)

--- GET_STREET_NAME_AT_COORD
-- ```
Determines the name of the street which is the closest to the given coordinates.
x,y,z - the coordinates of the street
streetName - returns a hash to the name of the street the coords are on
crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.
```
-- @param x float
-- @param y float
-- @param z float
-- @param streetName Hash*
-- @param crossingRoad Hash*
-- GET_STREET_NAME_AT_COORD(x, y, z, streetName, crossingRoad)

--- GET_VEHICLE_NODE_IS_GPS_ALLOWED
-- ```
Returns false for nodes that aren't used for GPS routes.
Example:
Nodes in Fort Zancudo and LSIA are false
```
-- @param nodeID int
-- GET_VEHICLE_NODE_IS_GPS_ALLOWED(nodeID)

--- GET_VEHICLE_NODE_IS_SWITCHED_OFF
-- ```
Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
Normal roads where plenty of Peds spawn will return false
```
-- @param nodeID int
-- GET_VEHICLE_NODE_IS_SWITCHED_OFF(nodeID)

--- GET_VEHICLE_NODE_POSITION
-- ```
Calling this with an invalid node id, will crash the game.
Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
```
-- @param nodeId int
-- @param outPosition Vector3*
-- GET_VEHICLE_NODE_POSITION(nodeId, outPosition)

--- GET_VEHICLE_NODE_PROPERTIES
-- Gets the density and flags of the closest node to the specified position.\
Density is a value between 0 and 15, indicating how busy the road is.

```cpp
enum eVehicleNodeProperties {
	OFF_ROAD = 1 << 0,
	ON_PLAYERS_ROAD =  1 << 1,
	NO_BIG_VEHICLES = 1 << 2,
	SWITCHED_OFF = 1 << 3,
	TUNNEL_OR_INTERIOR = 1 << 4,
	LEADS_TO_DEAD_END = 1 << 5,
	HIGHWAY = 1 << 6,
	JUNCTION = 1 << 7,
	TRAFFIC_LIGHT = 1 << 8,
	GIVE_WAY = 1 << 9,
	WATER = 1 << 10,
}
```
-- @param x float - x position of search
-- @param y float - y position of search
-- @param z float - z position of search
-- @param density int* - The traffic density the current node will spawn in a range of 0-15.
-- @param flags int* - The vehicle node flags, see `eVehicleNodeProperties`.
-- GET_VEHICLE_NODE_PROPERTIES(x, y, z, density, flags)

--- IS_NAVMESH_LOADED_IN_AREA
-- ```
Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.  
If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- IS_NAVMESH_LOADED_IN_AREA(x1, y1, z1, x2, y2, z2)

--- IS_POINT_ON_ROAD
-- ```
Gets a value indicating whether the specified position is on a road.  
The vehicle parameter is not implemented (ignored).  
```
-- @param x float
-- @param y float
-- @param z float
-- @param vehicle Vehicle
-- IS_POINT_ON_ROAD(x, y, z, vehicle)

--- IS_VEHICLE_NODE_ID_VALID
-- ```
Returns true if the id is non zero.  
```
-- @param vehicleNodeId int
-- IS_VEHICLE_NODE_ID_VALID(vehicleNodeId)

--- LOAD_ALL_PATH_NODES
-- ```
This native has been removed in v1180.  
```
-- @param keepInMemory BOOL - if true, all path nodes will be loaded and be kept in memory; otherwise, all path nodes will be loaded, but unloaded as the game sees fit.
-- LOAD_ALL_PATH_NODES(keepInMemory)

--- REMOVE_NAVMESH_BLOCKING_OBJECT
-- @param p0 Any
-- REMOVE_NAVMESH_BLOCKING_OBJECT(p0)

--- REMOVE_NAVMESH_REQUIRED_REGIONS
-- REMOVE_NAVMESH_REQUIRED_REGIONS()

--- SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME
-- @param multiplier float
-- SET_AMBIENT_PED_RANGE_MULTIPLIER_THIS_FRAME(multiplier)

--- SET_GPS_DISABLED_ZONE
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- SET_GPS_DISABLED_ZONE(x1, y1, z1, x2, y2, z2)

--- SET_GPS_DISABLED_ZONE_AT_INDEX
-- Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.

You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.

**Setting a waypoint at the same coordinate:**

Disabled Zone: <https://i.imgur.com/P9VUuxM.png>

Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
-- @param x1 float - X coordinate of first vector.
-- @param y1 float - Y coordinate of first vector.
-- @param z1 float - Z coordinate of first vector.
-- @param x2 float - X coordinate of second vector.
-- @param y2 float - Y coordinate of second vector.
-- @param z2 float - Z coordinate of second vector.
-- @param index int - Index of zone.
-- SET_GPS_DISABLED_ZONE_AT_INDEX(x1, y1, z1, x2, y2, z2, index)

--- SET_IGNORE_NO_GPS_FLAG
-- @param toggle BOOL
-- SET_IGNORE_NO_GPS_FLAG(toggle)

--- SET_PED_PATHS_BACK_TO_ORIGINAL
-- ```
NativeDB Added Parameter 7: Any p6
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- SET_PED_PATHS_BACK_TO_ORIGINAL(p0, p1, p2, p3, p4, p5)

--- SET_PED_PATHS_IN_AREA
-- ```
NativeDB Added Parameter 8: Any p7
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param unknown BOOL
-- SET_PED_PATHS_IN_AREA(x1, y1, z1, x2, y2, z2, unknown)

--- SET_ROADS_BACK_TO_ORIGINAL
-- ```
missing a last parameter int p6  
```

```
NativeDB Added Parameter 7: Any p6
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- SET_ROADS_BACK_TO_ORIGINAL(p0, p1, p2, p3, p4, p5)

--- SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA
-- See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.

```
NativeDB Added Parameter 8: Any p7

bool p7 - always 1  
```
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width)

--- SET_ROADS_IN_ANGLED_AREA
-- unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.

See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
-- @param x1 float - X dimension of the angled area 'origin'
-- @param y1 float - Y dimension of the angled area 'origin'
-- @param z1 float - Z dimension of the angled area 'origin'
-- @param x2 float - X dimension of the angled area 'extent'
-- @param y2 float - Y dimension of the angled area 'extent'
-- @param z2 float - Z dimension of the angled area 'extent'
-- @param width float - Width of the angled area
-- @param unknown1 BOOL
-- @param unknown2 BOOL
-- @param unknown3 BOOL
-- SET_ROADS_IN_ANGLED_AREA(x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3)

--- SET_ROADS_IN_AREA
-- When this is set to false, all nodes in the area get disabled.

`GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.

If it's true,

`GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param nodeEnabled BOOL
-- @param unknown2 BOOL
-- SET_ROADS_IN_AREA(x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2)

--- UPDATE_NAVMESH_BLOCKING_OBJECT
-- @param object Object - Navmesh Blocking Object by ID. must be returned by [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A).
-- @param posX float - X position coordinate.
-- @param posY float - Y position coordinate.
-- @param posZ float - Z position coordinate.
-- @param scaleX float - X Scale.
-- @param scaleY float - Y Scale.
-- @param scaleZ float - Z Scale.
-- @param heading float - Heading of the blocking object.
-- @param flags int - Flags for the blocking object, see [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A) for list of blocking object flags.
-- UPDATE_NAVMESH_BLOCKING_OBJECT(object, posX, posY, posZ, scaleX, scaleY, scaleZ, heading, flags)

--- _GET_HEIGHTMAP_BOTTOM_Z_FOR_AREA
-- ```
Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
```
-- @param x1 float
-- @param y1 float
-- @param x2 float
-- @param y2 float
-- _GET_HEIGHTMAP_BOTTOM_Z_FOR_AREA(x1, y1, x2, y2)

--- _GET_HEIGHTMAP_BOTTOM_Z_FOR_POSITION
-- ```
Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
```
-- @param x float
-- @param y float
-- _GET_HEIGHTMAP_BOTTOM_Z_FOR_POSITION(x, y)

--- _GET_HEIGHTMAP_TOP_Z_FOR_AREA
-- ```
Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
```
-- @param x1 float
-- @param y1 float
-- @param x2 float
-- @param y2 float
-- _GET_HEIGHTMAP_TOP_Z_FOR_AREA(x1, y1, x2, y2)

--- _GET_HEIGHTMAP_TOP_Z_FOR_POSITION
-- ```
Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
```
-- @param x float
-- @param y float
-- _GET_HEIGHTMAP_TOP_Z_FOR_POSITION(x, y)

--- _GET_POINT_ON_ROAD_SIDE
-- @param x float
-- @param y float
-- @param z float
-- @param p3 int
-- @param outPosition Vector3*
-- _GET_POINT_ON_ROAD_SIDE(x, y, z, p3, outPosition)

--- _IS_NAVMESH_REQUIRED_REGION_OWNED_BY_ANY_THREAD
-- ```
IS_*
```
-- _IS_NAVMESH_REQUIRED_REGION_OWNED_BY_ANY_THREAD()

--- _REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT
-- ```
Used internally for long range tasks
```
-- @param x1 float
-- @param y1 float
-- @param x2 float
-- @param y2 float
-- _REQUEST_PATHS_PREFER_ACCURATE_BOUNDINGSTRUCT(x1, y1, x2, y2)

--- _SET_AI_GLOBAL_PATH_NODES_TYPE
-- Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.

```
NativeDB Introduced: v2189
```
-- @param type int
-- _SET_AI_GLOBAL_PATH_NODES_TYPE(type)

--- _SET_ALL_PATHS_CACHE_BOUNDINGSTRUCT
-- ```
Toggles a global boolean, name is probably a hash collision but describes its functionality.
```
-- @param toggle BOOL
-- _SET_ALL_PATHS_CACHE_BOUNDINGSTRUCT(toggle)

--- _SET_IGNORE_SECONDARY_ROUTE_NODES
-- ```
See: SET_BLIP_ROUTE
```
-- @param toggle BOOL
-- _SET_IGNORE_SECONDARY_ROUTE_NODES(toggle)


-- ========== PED ==========

--- 0x03EA03AF85A85CB7
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- @param p4 BOOL
-- @param p5 BOOL
-- @param p6 BOOL
-- @param p7 BOOL
-- @param p8 Any
-- 0x03EA03AF85A85CB7(ped, p1, p2, p3, p4, p5, p6, p7, p8)

--- 0x06087579E7AA85A9
-- @param p0 Any
-- @param p1 Any
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- 0x06087579E7AA85A9(p0, p1, p2, p3, p4, p5)

--- 0x061CB768363D6424
-- @param ped Ped
-- @param toggle BOOL
-- 0x061CB768363D6424(ped, toggle)

--- 0x0B3E35AC043707D9
-- @param p0 Any
-- @param p1 Any
-- 0x0B3E35AC043707D9(p0, p1)

--- 0x0F62619393661D6E
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x0F62619393661D6E(p0, p1, p2)

--- 0x110F526AB784111F
-- ```
In agency_heist3b.c4, its like this 90% of the time:  
PED::_110F526AB784111F(ped, 0.099);  
PED::SET_PED_ENVEFF_SCALE(ped, 1.0);  
PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);  
PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  
and its like this 10% of the time:  
PED::_110F526AB784111F(ped, 0.2);  
PED::SET_PED_ENVEFF_SCALE(ped, 0.65);  
PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);  
PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);  
```
-- @param ped Ped
-- @param p1 float
-- 0x110F526AB784111F(ped, p1)

--- 0x1216E0BFA72CC703
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- @param p1 Any
-- 0x1216E0BFA72CC703(p0, p1)

--- 0x1A330D297AAC6BC1
-- ```
Only appears in lamar1 script.  
```
-- @param ped Ped
-- @param p1 int
-- 0x1A330D297AAC6BC1(ped, p1)

--- 0x1E77FA7A62EE6C4C
-- ```
GET_*
```
-- @param p0 Any
-- 0x1E77FA7A62EE6C4C(p0)

--- 0x2016C603D6B8987C
-- ```
SET_PED_STE*
```
-- @param ped Ped
-- @param toggle BOOL
-- 0x2016C603D6B8987C(ped, toggle)

--- 0x25361A96E0F7E419
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x25361A96E0F7E419(p0, p1, p2, p3)

--- 0x2735233A786B1BEF
-- @param ped Ped
-- @param p1 float
-- 0x2735233A786B1BEF(ped, p1)

--- 0x288DF530C92DAD6F
-- [`SET_VEHICLE_STEER_BIAS`](#\_0x42A8EC77D5150CBE) for peds, e.g., `_SET_PED_STEER_BIAS`.
-- @param ped Ped
-- @param value float
-- 0x288DF530C92DAD6F(ped, value)

--- 0x2B694AFCF64E6994
-- @param ped Ped
-- @param p1 BOOL
-- 0x2B694AFCF64E6994(ped, p1)

--- 0x2DFC81C9B9608549
-- @param ped Ped
-- @param p1 int*
-- 0x2DFC81C9B9608549(ped, p1)

--- 0x2F074C904D85129E
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- 0x2F074C904D85129E(p0, p1, p2, p3, p4, p5, p6)

--- 0x2F3C3D9F50681DE4
-- @param p0 Any
-- @param p1 BOOL
-- 0x2F3C3D9F50681DE4(p0, p1)

--- 0x336B3D200AB007CB
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- 0x336B3D200AB007CB(p0, p1, p2, p3, p4)

--- 0x3E9679C1DFCF422C
-- @param p0 Any
-- @param p1 Any
-- 0x3E9679C1DFCF422C(p0, p1)

--- 0x412F1364FA066CFB
-- @param p0 Any
-- 0x412F1364FA066CFB(p0)

--- 0x425AECF167663F48
-- @param ped Ped
-- @param p1 BOOL
-- 0x425AECF167663F48(ped, p1)

--- 0x46B05BCAE43856B0
-- ```
Checks if the specified unknown flag is set in the ped's model.  
The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).  
Game scripts exclusively check for flags 1 and 4.  
```
-- @param ped Ped
-- @param flag int
-- 0x46B05BCAE43856B0(ped, flag)

--- 0x49E50BDB8BA4DAB2
-- ```
SET_PED_ALLOW*
```
-- @param ped Ped
-- @param toggle BOOL
-- 0x49E50BDB8BA4DAB2(ped, toggle)

--- 0x511F1A683387C7E2
-- ```
GET_*
```
-- @param ped Ped
-- 0x511F1A683387C7E2(ped)

--- 0x5407B7288D0478B7
-- @param p0 Any
-- 0x5407B7288D0478B7(p0)

--- 0x5A7F62FDA59759BD
-- 0x5A7F62FDA59759BD()

--- 0x5B6010B3CBC29095
-- @param p0 Any
-- @param p1 BOOL
-- 0x5B6010B3CBC29095(p0, p1)

--- 0x711794453CFD692B
-- @param p0 Any
-- @param p1 Any
-- 0x711794453CFD692B(p0, p1)

--- 0x733C87D4CE22BEA2
-- @param ped Ped
-- 0x733C87D4CE22BEA2(ped)

--- 0x75BA1CB3B7D40CAF
-- ```
REQUEST_*
```
-- @param ped Ped
-- @param p1 BOOL
-- 0x75BA1CB3B7D40CAF(ped, p1)

--- 0x80054D7FCC70EEC6
-- ```
CLEAR_PED_*
```
-- @param ped Ped
-- 0x80054D7FCC70EEC6(ped)

--- 0x820E9892A77E97CD
-- @param p0 Any
-- @param p1 Any
-- 0x820E9892A77E97CD(p0, p1)

--- 0x87DDEB611B329A9C
-- ```
SET_A*
```
-- @param multiplier float
-- 0x87DDEB611B329A9C(multiplier)

--- 0x9911F4A24485F653
-- @param p0 BOOL
-- 0x9911F4A24485F653(p0)

--- 0x9A77DFD295E29B09
-- @param ped Ped
-- @param toggle BOOL
-- 0x9A77DFD295E29B09(ped, toggle)

--- 0x9C6A6C19B6C0C496
-- @param ped Ped
-- @param p1 int*
-- 0x9C6A6C19B6C0C496(ped, p1)

--- 0x9E30E91FB03A2CAF
-- @param p0 Any*
-- @param p1 Any*
-- 0x9E30E91FB03A2CAF(p0, p1)

--- 0xA3F3564A5B3646C0
-- ```
Only called once in the scripts:
if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {
    if (sub_52e3("RESNA_CELLR", 0)) {
        PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);
        PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);
        PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);
        l_184 += 1;
    }
}
Checks something related to the mobile phone task.
IS_*
```
-- @param ped Ped
-- 0xA3F3564A5B3646C0(ped)

--- 0xA52D5247A4227E14
-- @param p0 Any
-- 0xA52D5247A4227E14(p0)

--- 0xA660FAF550EB37E5
-- @param p0 Any
-- @param p1 BOOL
-- 0xA660FAF550EB37E5(p0, p1)

--- 0xA9B61A329BFDCBEA
-- @param p0 Any
-- @param p1 BOOL
-- 0xA9B61A329BFDCBEA(p0, p1)

--- 0xAAA6A3698A69E048
-- @param p0 Any
-- 0xAAA6A3698A69E048(p0)

--- 0xAD27D957598E49E9
-- ```
NativeDB Introduced: v1290
```
-- @param ped Ped
-- @param p1 Any
-- @param p2 float
-- @param hash Hash
-- @param p4 Any
-- @param p5 Any
-- 0xAD27D957598E49E9(ped, p1, p2, hash, p4, p5)

--- 0xAFC976FD0580C7B3
-- ```
SET_PED_*
```
-- @param ped Ped
-- @param toggle BOOL
-- 0xAFC976FD0580C7B3(ped, toggle)

--- 0xB282749D5E028163
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- @param p1 Any
-- 0xB282749D5E028163(p0, p1)

--- 0xB3352E018D6F89DF
-- ```
_SET_PED_HEAD_* - _SET_PED_HEARING_*

_SET_PED_HEALTH_...
```

```
NativeDB Introduced: v2699
```
-- @param toggle BOOL
-- 0xB3352E018D6F89DF(toggle)

--- 0xB8B52E498014F5B0
-- @param ped Ped
-- 0xB8B52E498014F5B0(ped)

--- 0xC2EE020F5FB4DB53
-- @param ped Ped
-- 0xC2EE020F5FB4DB53(ped)

--- 0xC30BDAEE47256C13
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0xC30BDAEE47256C13(p0)

--- 0xC56FBF2F228E1DAC
-- @param modelHash Hash
-- @param p1 Any
-- @param p2 Any
-- 0xC56FBF2F228E1DAC(modelHash, p1, p2)

--- 0xCD018C591F94CB43
-- ```
REQUEST_*
```
-- @param ped Ped
-- @param p1 BOOL
-- 0xCD018C591F94CB43(ped, p1)

--- 0xCEDA60A74219D064
-- @param p0 Any
-- @param p1 BOOL
-- 0xCEDA60A74219D064(p0, p1)

--- 0xD33DAA36272177C4
-- @param ped Ped
-- 0xD33DAA36272177C4(ped)

--- 0xDFE68C4B787E1BFB
-- ```
NativeDB Introduced: v1180
```
-- @param ped Ped
-- 0xDFE68C4B787E1BFB(ped)

--- 0xE906EC930F5FE7C8
-- @param p0 Any
-- @param p1 Any
-- 0xE906EC930F5FE7C8(p0, p1)

--- 0xEA9960D07DADCF10
-- @param p0 Any
-- 0xEA9960D07DADCF10(p0)

--- 0xEC4B4B3B9908052A
-- ```
SET_PED_*  
Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.  
```
-- @param ped Ped
-- @param unk float
-- 0xEC4B4B3B9908052A(ped, unk)

--- 0xED3C76ADFA6D07C4
-- ```
FORCE_*
```
-- @param ped Ped
-- 0xED3C76ADFA6D07C4(ped)

--- 0xF033419D1B81FAE8
-- ```
GET_*
```
-- @param p0 Any
-- 0xF033419D1B81FAE8(p0)

--- 0xF2385935BFFD4D92
-- Initial guess of native: `_IS_PED_WEARING_MOTORCYCLE_HELMET`.
-- @param ped Ped
-- 0xF2385935BFFD4D92(ped)

--- 0xF2BEBCDFAFDAA19E
-- ```
SET_PED_ALLOW*
toggle was always false except in one instance (b678).
The one time this is set to true seems to do with when you fail the mission.
```
-- @param toggle BOOL
-- 0xF2BEBCDFAFDAA19E(toggle)

--- 0xFAB944D4D481ACCB
-- SET_A\*

```
NativeDB Introduced: v1734
```
-- @param ped Ped
-- @param toggle BOOL
-- 0xFAB944D4D481ACCB(ped, toggle)

--- 0xFD325494792302D7
-- @param ped Ped
-- @param toggle BOOL
-- 0xFD325494792302D7(ped, toggle)

--- 0xFEC9A3B1820F3331
-- Native to check whether [`_SET_PED_SCUBA_GEAR_VARIATION`](#\_0x36c6984c3ed0c911) is enabled/actived.
-- @param ped Ped
-- 0xFEC9A3B1820F3331(ped)

--- 0xFF4803BC019852D9
-- ```
Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
```
-- @param p0 float
-- @param p1 Any
-- 0xFF4803BC019852D9(p0, p1)

--- ADD_ARMOUR_TO_PED
-- ```
Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.  
```
-- @param ped Ped
-- @param amount int
-- ADD_ARMOUR_TO_PED(ped, amount)

--- ADD_PED_DECORATION_FROM_HASHES
-- ```
Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
collection - PedDecorationCollection filename hash
overlay - Item name hash
Example:
Entry inside "mpbeach_overlays.xml" -
<Item>
  <uvPos x="0.500000" y="0.500000" />
  <scale x="0.600000" y="0.500000" />
  <rotation value="0.000000" />
  <nameHash>FM_Hair_Fuzz</nameHash>
  <txdHash>mp_hair_fuzz</txdHash>
  <txtHash>mp_hair_fuzz</txtHash>
  <zone>ZONE_HEAD</zone>
  <type>TYPE_TATTOO</type>
  <faction>FM</faction>
  <garment>All</garment>
  <gender>GENDER_DONTCARE</gender>
  <award />
  <awardLevel />
</Item>
Code:
PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))
```
-- @param ped Ped
-- @param collection Hash
-- @param overlay Hash
-- ADD_PED_DECORATION_FROM_HASHES(ped, collection, overlay)

--- ADD_PED_DECORATION_FROM_HASHES_IN_CORONA
-- @param ped Ped
-- @param collection Hash
-- @param overlay Hash
-- ADD_PED_DECORATION_FROM_HASHES_IN_CORONA(ped, collection, overlay)

--- ADD_RELATIONSHIP_GROUP
-- ```
Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.  
```
-- @param name char*
-- @param groupHash Hash*
-- ADD_RELATIONSHIP_GROUP(name, groupHash)

--- ADD_SCENARIO_BLOCKING_AREA
-- Sets an area where scenarios are blocked
-- @param posMinX float - Min X Coordinate.
-- @param posMinY float - Min Y Coordinate.
-- @param posMinZ float - Min Z Coordinate.
-- @param posMaxX float - Max X Coordinate.
-- @param posMaxY float - Max Y Coordinate.
-- @param posMaxZ float - Max Z Coordinate.
-- @param network BOOL - Optionally networked to all other players
-- @param cancelActive BOOL - Should this cause peds already in active scenario points in the area specified to leave
-- @param blockPeds BOOL - if this area effects scenarios with peds
-- @param blockVehicles BOOL - if this area effects scenarios with vehicles
-- ADD_SCENARIO_BLOCKING_AREA(posMinX, posMinY, posMinZ, posMaxX, posMaxY, posMaxZ, network, cancelActive, blockPeds, blockVehicles)

--- APPLY_DAMAGE_TO_PED
-- ```
damages a ped with the given amount  
----  
armorFirst means it will damage/lower the armor first before damaging the player.  
setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.  
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param ped Ped
-- @param damageAmount int
-- @param armorFirst BOOL
-- APPLY_DAMAGE_TO_PED(ped, damageAmount, armorFirst)

--- APPLY_PED_BLOOD
-- ```
Found one occurence in re_crashrescue.c4  
PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");  
```
-- @param ped Ped
-- @param boneIndex int
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param woundType char*
-- APPLY_PED_BLOOD(ped, boneIndex, xRot, yRot, zRot, woundType)

--- APPLY_PED_BLOOD_BY_ZONE
-- @param ped Ped
-- @param p1 Any
-- @param p2 float
-- @param p3 float
-- @param p4 Any*
-- APPLY_PED_BLOOD_BY_ZONE(ped, p1, p2, p3, p4)

--- APPLY_PED_BLOOD_DAMAGE_BY_ZONE
-- @param ped Ped
-- @param p1 Any
-- @param p2 float
-- @param p3 float
-- @param p4 Any
-- APPLY_PED_BLOOD_DAMAGE_BY_ZONE(ped, p1, p2, p3, p4)

--- APPLY_PED_BLOOD_SPECIFIC
-- Applies blood damage to a ped with specific parameters for zone, UV offsets, rotation, scale, and initial aging.

```
NativeDB Introduced: v323
```
-- @param ped Ped - The Ped to which blood damage is applied.
-- @param component int - Specific component or body part.
-- @param u float - UV texture coordinates for placing the decal in the specified zone.
-- @param v float - UV texture coordinates for placing the decal in the specified zone.
-- @param rotation float - Angle in degrees for the rotation of the blood decal.
-- @param scale float - Scale factor for the damage, ranging from 0.0 to 1.0.
-- @param forcedFrame int - Allows a specific frame of damage to be chosen (-1 for random selection).
-- @param preAge float - Number of seconds to pre-age the damage for an "old wound" effect (0.0 for fresh wound).
-- @param bloodName char* - Name of the blood type, matching an entry in peddamage.xml.
-- APPLY_PED_BLOOD_SPECIFIC(ped, component, u, v, rotation, scale, forcedFrame, preAge, bloodName)

--- APPLY_PED_DAMAGE_DECAL
-- ```
scar
blushing
cs_flush_anger
cs_flush_anger_face
bruise
bruise_large
herpes
ArmorBullet
basic_dirt_cloth
basic_dirt_skin
cs_trev1_dirt
```
-- @param ped Ped
-- @param damageZone int - Refer to `ePedDecorationZone` in [GET_PED_DECORATION_ZONE_FROM_HASHES](#\_0x9FD452BFBE7A7A8B)
-- @param xOffset float
-- @param yOffset float
-- @param heading float
-- @param scale float
-- @param alpha float
-- @param variation int
-- @param fadeIn BOOL
-- @param decalName char*
-- APPLY_PED_DAMAGE_DECAL(ped, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName)

--- APPLY_PED_DAMAGE_PACK
-- ```
Damage Packs:  
"SCR_TrevorTreeBang"  
"HOSPITAL_0"  
"HOSPITAL_1"  
"HOSPITAL_2"  
"HOSPITAL_3"  
"HOSPITAL_4"  
"HOSPITAL_5"  
"HOSPITAL_6"  
"HOSPITAL_7"  
"HOSPITAL_8"  
"HOSPITAL_9"  
"SCR_Dumpster"  
"BigHitByVehicle"  
"SCR_Finale_Michael_Face"  
"SCR_Franklin_finb"  
"SCR_Finale_Michael"  
"SCR_Franklin_finb2"  
"Explosion_Med"  
"SCR_Torture"  
"SCR_TracySplash"  
"Skin_Melee_0"  
Additional damage packs:  
gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227  
```
-- @param ped Ped
-- @param damagePack char*
-- @param damage float
-- @param mult float
-- APPLY_PED_DAMAGE_PACK(ped, damagePack, damage, mult)

--- ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY
-- @param sceneID int
-- @param entity Entity
-- @param boneIndex int
-- ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(sceneID, entity, boneIndex)

--- CAN_CREATE_RANDOM_BIKE_RIDER
-- CAN_CREATE_RANDOM_BIKE_RIDER()

--- CAN_CREATE_RANDOM_COPS
-- CAN_CREATE_RANDOM_COPS()

--- CAN_CREATE_RANDOM_DRIVER
-- CAN_CREATE_RANDOM_DRIVER()

--- CAN_CREATE_RANDOM_PED
-- @param unk BOOL
-- CAN_CREATE_RANDOM_PED(unk)

--- CAN_KNOCK_PED_OFF_VEHICLE
-- @param ped Ped
-- CAN_KNOCK_PED_OFF_VEHICLE(ped)

--- CAN_PED_IN_COMBAT_SEE_TARGET
-- @param ped Ped
-- @param target Ped
-- CAN_PED_IN_COMBAT_SEE_TARGET(ped, target)

--- CAN_PED_RAGDOLL
-- ```
Prevents the ped from going limp.  
[Example: Can prevent peds from falling when standing on moving vehicles.]  
```
-- @param ped Ped
-- CAN_PED_RAGDOLL(ped)

--- CAN_PED_SEE_HATED_PED
-- @param ped1 Ped
-- @param ped2 Ped
-- CAN_PED_SEE_HATED_PED(ped1, ped2)

--- CLEAR_ALL_PED_PROPS
-- @param ped Ped - The ped handle.
-- CLEAR_ALL_PED_PROPS(ped)

--- CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE
-- @param ped Ped
-- CLEAR_ALL_PED_VEHICLE_FORCED_SEAT_USAGE(ped)

--- CLEAR_FACIAL_IDLE_ANIM_OVERRIDE
-- @param ped Ped
-- CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(ped)

--- CLEAR_PED_ALTERNATE_MOVEMENT_ANIM
-- @param ped Ped
-- @param stance int
-- @param p2 float
-- CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(ped, stance, p2)

--- CLEAR_PED_ALTERNATE_WALK_ANIM
-- @param ped Ped
-- @param p1 float
-- CLEAR_PED_ALTERNATE_WALK_ANIM(ped, p1)

--- CLEAR_PED_BLOOD_DAMAGE
-- Clears the blood on a ped.
-- @param ped Ped - Ped id.
-- CLEAR_PED_BLOOD_DAMAGE(ped)

--- CLEAR_PED_BLOOD_DAMAGE_BY_ZONE
-- ```
Somehow related to changing ped's clothes.  
```
-- @param ped Ped
-- @param p1 int
-- CLEAR_PED_BLOOD_DAMAGE_BY_ZONE(ped, p1)

--- CLEAR_PED_DAMAGE_DECAL_BY_ZONE
-- ```
p1: from 0 to 5 in the b617d scripts.  
p2: "blushing" and "ALL" found in the b617d scripts.  
```
-- @param ped Ped
-- @param p1 int
-- @param p2 char*
-- CLEAR_PED_DAMAGE_DECAL_BY_ZONE(ped, p1, p2)

--- CLEAR_PED_DECORATIONS
-- @param ped Ped
-- CLEAR_PED_DECORATIONS(ped)

--- CLEAR_PED_DECORATIONS_LEAVE_SCARS
-- @param ped Ped
-- CLEAR_PED_DECORATIONS_LEAVE_SCARS(ped)

--- CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE
-- @param ped Ped
-- CLEAR_PED_DRIVE_BY_CLIPSET_OVERRIDE(ped)

--- CLEAR_PED_ENV_DIRT
-- @param ped Ped
-- CLEAR_PED_ENV_DIRT(ped)

--- CLEAR_PED_LAST_DAMAGE_BONE
-- @param ped Ped
-- CLEAR_PED_LAST_DAMAGE_BONE(ped)

--- CLEAR_PED_NON_CREATION_AREA
-- CLEAR_PED_NON_CREATION_AREA()

--- CLEAR_PED_PARACHUTE_PACK_VARIATION
-- @param ped Ped
-- CLEAR_PED_PARACHUTE_PACK_VARIATION(ped)

--- CLEAR_PED_PROP
-- @param ped Ped - The ped handle.
-- @param propId int - The prop id you want to clear from the ped. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F).
-- CLEAR_PED_PROP(ped, propId)

--- CLEAR_PED_SCUBA_GEAR_VARIATION
-- Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
-- @param ped Ped - The ped to remove the scuba gear from.
-- CLEAR_PED_SCUBA_GEAR_VARIATION(ped)

--- CLEAR_PED_STORED_HAT_PROP
-- @param ped Ped
-- CLEAR_PED_STORED_HAT_PROP(ped)

--- CLEAR_PED_WETNESS
-- ```
It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.  
```
-- @param ped Ped
-- CLEAR_PED_WETNESS(ped)

--- CLEAR_RAGDOLL_BLOCKING_FLAGS
-- ```
There seem to be 26 flags  
```
-- @param ped Ped
-- @param flags int
-- CLEAR_RAGDOLL_BLOCKING_FLAGS(ped, flags)

--- CLEAR_RELATIONSHIP_BETWEEN_GROUPS
-- ```
Clears the relationship between two groups. This should be called twice (once for each group).  
Relationship types:  
0 = Companion  
1 = Respect  
2 = Like  
3 = Neutral  
4 = Dislike  
5 = Hate  
255 = Pedestrians  
(Credits: Inco)  
Example:  
PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  
PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);  
```
-- @param relationship int
-- @param group1 Hash
-- @param group2 Hash
-- CLEAR_RELATIONSHIP_BETWEEN_GROUPS(relationship, group1, group2)

--- CLONE_PED
-- Creates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data.
-- @param ped Ped - The input ped.
-- @param isNetwork BOOL - Whether or not the ped should be registered as a network object.
-- @param bScriptHostPed BOOL - Script host flag.
-- @param copyHeadBlendFlag BOOL - If true, head blend data is referenced, not copied.
-- CLONE_PED(ped, isNetwork, bScriptHostPed, copyHeadBlendFlag)

--- CLONE_PED_TO_TARGET
-- ```
Copies ped's components and props to targetPed.
```
-- @param ped Ped
-- @param targetPed Ped
-- CLONE_PED_TO_TARGET(ped, targetPed)

--- CREATE_GROUP
-- ```
Creates a new ped group.  
Groups can contain up to 8 peds.  
The parameter is unused.  
Returns a handle to the created group, or 0 if a group couldn't be created.  
```
-- @param unused int
-- CREATE_GROUP(unused)

--- CREATE_NM_MESSAGE
-- ```
Creates a new NaturalMotion message.  
startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.  
messageId: The ID of the NaturalMotion message.  
If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.  
```
-- @param startImmediately BOOL
-- @param messageId int
-- CREATE_NM_MESSAGE(startImmediately, messageId)

--- CREATE_PARACHUTE_BAG_OBJECT
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 BOOL
-- CREATE_PARACHUTE_BAG_OBJECT(ped, p1, p2)

--- CREATE_PED
-- Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
(e.g. using REQUEST_MODEL).
-- @param pedType int - Unused. Peds get set to CIVMALE/CIVFEMALE/etc. no matter the value specified.
-- @param modelHash Hash - The model of ped to spawn.
-- @param x float - Spawn coordinate X component.
-- @param y float - Spawn coordinate Y component.
-- @param z float - Spawn coordinate Z component.
-- @param heading float - Heading to face towards, in degrees.
-- @param isNetwork BOOL - Whether to create a network object for the ped. If false, the ped exists only locally.
-- @param bScriptHostPed BOOL - Whether to register the ped as pinned to the script host in the R\* network model.
-- CREATE_PED(pedType, modelHash, x, y, z, heading, isNetwork, bScriptHostPed)

--- CREATE_PED_INSIDE_VEHICLE
-- @param vehicle Vehicle
-- @param pedType int - See [`CREATE_PED`](#\_0xD49F9B0955C367DE)
-- @param modelHash Hash
-- @param seat int
-- @param isNetwork BOOL
-- @param bScriptHostPed BOOL
-- CREATE_PED_INSIDE_VEHICLE(vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed)

--- CREATE_RANDOM_PED
-- ```
vb.net
Dim ped_handle As Integer
                    With Game.Player.Character
                        Dim pos As Vector3 = .Position + .ForwardVector * 3
                        ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
                    End With
Creates a Ped at the specified location, returns the Ped Handle.
Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
```
-- @param posX float
-- @param posY float
-- @param posZ float
-- CREATE_RANDOM_PED(posX, posY, posZ)

--- CREATE_RANDOM_PED_AS_DRIVER
-- @param vehicle Vehicle
-- @param returnHandle BOOL
-- CREATE_RANDOM_PED_AS_DRIVER(vehicle, returnHandle)

--- CREATE_SYNCHRONIZED_SCENE
-- ```
p6 always 2 (but it doesnt seem to matter...)  
roll and pitch 0  
yaw to Ped.rotation  
```
-- @param x float
-- @param y float
-- @param z float
-- @param roll float
-- @param pitch float
-- @param yaw float
-- @param p6 int
-- CREATE_SYNCHRONIZED_SCENE(x, y, z, roll, pitch, yaw, p6)

--- DELETE_PED
-- ```
Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.  
```
-- @param ped Ped*
-- DELETE_PED(ped)

--- DETACH_SYNCHRONIZED_SCENE
-- @param sceneID int
-- DETACH_SYNCHRONIZED_SCENE(sceneID)

--- DISABLE_HEAD_BLEND_PALETTE_COLOR
-- @param ped Ped
-- DISABLE_HEAD_BLEND_PALETTE_COLOR(ped)

--- DISABLE_PED_HEATSCALE_OVERRIDE
-- @param ped Ped
-- DISABLE_PED_HEATSCALE_OVERRIDE(ped)

--- DOES_GROUP_EXIST
-- @param groupId int
-- DOES_GROUP_EXIST(groupId)

--- DROP_AMBIENT_PROP
-- @param ped Ped
-- DROP_AMBIENT_PROP(ped)

--- EXPLODE_PED_HEAD
-- Applies lethal damage (FLT_MAX) to the `SKEL_Head` bone of the specified ped using the weapon passed, leading to the
ped's untimely demise.

The naming of the native is a legacy leftover (formerly EXPLODE_CHAR_HEAD in GTA3) as in the early 3D GTA games, lethal
damage to a ped head would 'explode' it.

Do note that this native function does not work in multiplayer/network environment.
-- @param ped Ped - The ped to lethally injure.
-- @param weaponHash Hash - The weapon to attribute the damage to.
-- EXPLODE_PED_HEAD(ped, weaponHash)

--- FINALIZE_HEAD_BLEND
-- @param ped Ped
-- FINALIZE_HEAD_BLEND(ped)

--- FORCE_PED_AI_AND_ANIMATION_UPDATE
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 BOOL
-- FORCE_PED_AI_AND_ANIMATION_UPDATE(ped, p1, p2)

--- FORCE_PED_MOTION_STATE
-- ```cpp
enum ePedMotionState
{
    MOTIONSTATE_NONE = -294553821, // MotionState_None
    MOTIONSTATE_IDLE = -1871534317, // MotionState_Idle
    MOTIONSTATE_WALK = -668482597, // MotionState_Walk
    MOTIONSTATE_RUN = -530524, // MotionState_Run
    MOTIONSTATE_SPRINT = -1115154469, // MotionState_Sprint
    MOTIONSTATE_CROUCH_IDLE = 1140525470, // MotionState_Crouch_Idle
    MOTIONSTATE_CROUCH_WALK = 147004056, // MotionState_Crouch_Walk
    MOTIONSTATE_CROUCH_RUN = 898879241, // MotionState_Crouch_Run
    MOTIONSTATE_DONOTHING = 247561816, // MotionState_DoNothing
    MOTIONSTATE_ANIMATEDVELOCITY = 1427811395, // MotionState_AnimatedVelocity
    MOTIONSTATE_INVEHICLE = -1797663347, // MotionState_InVehicle
    MOTIONSTATE_AIMING = 1063765679, // MotionState_Aiming
    MOTIONSTATE_DIVING_IDLE = 1212730861, // MotionState_Diving_Idle
    MOTIONSTATE_DIVING_SWIM = -1855028596, // MotionState_Diving_Swim
    MOTIONSTATE_SWIMMING_TREADWATER = -776007225, // MotionState_Swimming_TreadWater
    MOTIONSTATE_DEAD = 230360860, // MotionState_Dead
    MOTIONSTATE_STEALTH_IDLE = 1110276645, // MotionState_Stealth_Idle
    MOTIONSTATE_STEALTH_WALK = 69908130, // MotionState_Stealth_Walk
    MOTIONSTATE_STEALTH_RUN = -83133983, // MotionState_Stealth_Run
    MOTIONSTATE_PARACHUTING = -1161760501, // MotionState_Parachuting
    MOTIONSTATE_ACTIONMODE_IDLE = -633298724, // MotionState_ActionMode_Idle
    MOTIONSTATE_ACTIONMODE_WALK = -762290521, // MotionState_ActionMode_Walk
    MOTIONSTATE_ACTIONMODE_RUN = 834330132, // MotionState_ActionMode_Run
    MOTIONSTATE_JETPACK = 1398696542 // MotionState_Jetpack
}
```
-- @param ped Ped - The ped handle.
-- @param motionStateHash Hash - The motion state hash.
-- @param shouldReset BOOL - If the motion state should be set even if the ped is already in the specified motion state.
-- @param updateState int - Integer but treated as a boolean (only allows 1 or 0). Sets ped reset flags `CPED_RESET_FLAG_ForcePreCameraAiAnimUpdateIfFirstPerson` and `CPED_RESET_FLAG_ForcePostCameraAnimUpdate`.
-- @param forceAIPreCameraUpdate BOOL - If `updateState` is 1, will set either `CPED_RESET_FLAG_ForcePreCameraAIUpdate` (if true) or `CPED_RESET_FLAG_ForcePostCameraAIUpdate` (if false) ped reset flags.
-- FORCE_PED_MOTION_STATE(ped, motionStateHash, shouldReset, updateState, forceAIPreCameraUpdate)

--- FORCE_PED_TO_OPEN_PARACHUTE
-- @param ped Ped
-- FORCE_PED_TO_OPEN_PARACHUTE(ped)

--- GET_ANIM_INITIAL_OFFSET_POSITION
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param animDict char*
-- @param animName char*
-- @param x float
-- @param y float
-- @param z float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param p8 float
-- @param p9 int
-- GET_ANIM_INITIAL_OFFSET_POSITION(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)

--- GET_ANIM_INITIAL_OFFSET_ROTATION
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param animDict char*
-- @param animName char*
-- @param x float
-- @param y float
-- @param z float
-- @param xRot float
-- @param yRot float
-- @param zRot float
-- @param p8 float
-- @param p9 int
-- GET_ANIM_INITIAL_OFFSET_ROTATION(animDict, animName, x, y, z, xRot, yRot, zRot, p8, p9)

--- GET_CLOSEST_PED
-- ```
Gets the closest ped in a radius.  
Ped Types:  
Any ped = -1  
Player = 1  
Male = 4   
Female = 5   
Cop = 6  
Human = 26  
SWAT = 27   
Animal = 28  
Army = 29  
------------------  
P4 P5 P7 P8  
1  0  x  x  = return nearest walking Ped  
1  x  0  x  = return nearest walking Ped  
x  1  1  x  = return Ped you are using  
0  0  x  x  = no effect  
0  x  0  x  = no effect  
x = can be 1 or 0. Does not have any obvious changes.  
This function does not return ped who is:  
1. Standing still  
2. Driving  
3. Fleeing  
4. Attacking  
This function only work if the ped is:  
1. walking normally.  
2. waiting to cross a road.  
Note: PED::GET_PED_NEARBY_PEDS works for more peds.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p4 BOOL
-- @param p5 BOOL
-- @param outPed Ped*
-- @param p7 BOOL
-- @param p8 BOOL
-- @param pedType int
-- GET_CLOSEST_PED(x, y, z, radius, p4, p5, outPed, p7, p8, pedType)

--- GET_COMBAT_FLOAT
-- ```
p0: Ped Handle  
p1: int i | 0 <= i <= 27  
p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:  
<BlindFireChance value="0.1"/>  
<WeaponShootRateModifier value="1.0"/>  
<TimeBetweenBurstsInCover value="1.25"/>  
<BurstDurationInCover value="2.0"/>  
<TimeBetweenPeeks value="10.0"/>  
<WeaponAccuracy value="0.18"/>  
<FightProficiency value="0.8"/>  
<StrafeWhenMovingChance value="1.0"/>  
<WalkWhenStrafingChance value="0.0"/>  
<AttackWindowDistanceForCover value="55.0"/>  
<TimeToInvalidateInjuredTarget value="9.0"/>  
<TriggerChargeTime_Near value="4.0"/>  
<TriggerChargeTime_Far value="10.0"/>  
-------------Confirmed by editing combatbehavior.meta:  
p1:  
0=BlindFireChance  
1=BurstDurationInCover  
3=TimeBetweenBurstsInCover  
4=TimeBetweenPeeks  
5=StrafeWhenMovingChance  
8=WalkWhenStrafingChance  
11=AttackWindowDistanceForCover  
12=TimeToInvalidateInjuredTarget  
16=OptimalCoverDistance  
```
-- @param ped Ped
-- @param p1 int
-- GET_COMBAT_FLOAT(ped, p1)

--- GET_DEAD_PED_PICKUP_COORDS
-- @param ped Ped
-- @param p1 float
-- @param p2 float
-- GET_DEAD_PED_PICKUP_COORDS(ped, p1, p2)

--- GET_GROUP_SIZE
-- ```
p1 may be a BOOL representing whether or not the group even exists  
```
-- @param groupID int
-- @param unknown Any*
-- @param sizeInMembers int*
-- GET_GROUP_SIZE(groupID, unknown, sizeInMembers)

--- GET_JACK_TARGET
-- @param ped Ped
-- GET_JACK_TARGET(ped)

--- GET_MELEE_TARGET_FOR_PED
-- @param ped Ped
-- GET_MELEE_TARGET_FOR_PED(ped)

--- GET_MOUNT
-- ```
Function just returns 0  
void __fastcall ped__get_mount(NativeContext *a1)  
{  
  NativeContext *v1; // rbx@1  
  v1 = a1;  
  GetAddressOfPedFromScriptHandle(a1->Args->Arg1);  
  v1->Returns->Item1= 0;  
}  
```
-- @param ped Ped
-- GET_MOUNT(ped)

--- GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id you want to get the drawable variatons of. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80)
-- GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(ped, componentId)

--- GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS
-- @param ped Ped - The ped handle.
-- @param propId int - The prop id you want to get the drawable variations of. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F)
-- GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(ped, propId)

--- GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS
-- ```
Need to check behavior when drawableId = -1
```
-- @param ped Ped - The ped handle.
-- @param propId int - The prop id you want to get the texture variations of. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F)
-- @param drawableId int - The drawable id of the prop you want to get the texture variations of. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(ped, propId, drawableId)

--- GET_NUMBER_OF_PED_TEXTURE_VARIATIONS
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id you want to get the texture variations of. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId int - The drawable id of the component you want to get the texture variations of. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(ped, componentId, drawableId)

--- GET_PEDHEADSHOT_TXD_STRING
-- ```
gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
```
-- @param id int
-- GET_PEDHEADSHOT_TXD_STRING(id)

--- GET_PEDS_JACKER
-- @param ped Ped
-- GET_PEDS_JACKER(ped)

--- GET_PED_ACCURACY
-- @param ped Ped
-- GET_PED_ACCURACY(ped)

--- GET_PED_ALERTNESS
-- ```
Returns the ped's alertness (0-3).  
Values :   
0 : Neutral  
1 : Heard something (gun shot, hit, etc)  
2 : Knows (the origin of the event)  
3 : Fully alerted (is facing the event?)  
If the Ped does not exist, returns -1.  
```
-- @param ped Ped
-- GET_PED_ALERTNESS(ped)

--- GET_PED_ARMOUR
-- @param ped Ped
-- GET_PED_ARMOUR(ped)

--- GET_PED_AS_GROUP_LEADER
-- @param groupID int
-- GET_PED_AS_GROUP_LEADER(groupID)

--- GET_PED_AS_GROUP_MEMBER
-- ```
from fm_mission_controller.c4 (variable names changed for clarity):  
int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());  
PED::GET_GROUP_SIZE(group, &unused, &groupSize);  
if (groupSize >= 1) {  
. . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {  
. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);  
. . . . . . . . //and so on  
```
-- @param groupID int
-- @param memberNumber int
-- GET_PED_AS_GROUP_MEMBER(groupID, memberNumber)

--- GET_PED_BONE_COORDS
-- ```
Gets the position of the specified bone of the specified ped.  
ped: The ped to get the position of a bone from.  
boneId: The ID of the bone to get the position from. This is NOT the index.  
offsetX: The X-component of the offset to add to the position relative to the bone's rotation.  
offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.  
offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.  
```
-- @param ped Ped
-- @param boneId int
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- GET_PED_BONE_COORDS(ped, boneId, offsetX, offsetY, offsetZ)

--- GET_PED_BONE_INDEX
-- ```cpp
enum ePedBoneId : uint16_t
{
    SKEL_ROOT = 0x0,
    SKEL_Pelvis = 0x2E28,
    SKEL_L_Thigh = 0xE39F,
    SKEL_L_Calf = 0xF9BB,
    SKEL_L_Foot = 0x3779,
    SKEL_L_Toe0 = 0x83C,
    EO_L_Foot = 0x84C5,
    EO_L_Toe = 0x68BD,
    IK_L_Foot = 0xFEDD,
    PH_L_Foot = 0xE175,
    MH_L_Knee = 0xB3FE,
    SKEL_R_Thigh = 0xCA72,
    SKEL_R_Calf = 0x9000,
    SKEL_R_Foot = 0xCC4D,
    SKEL_R_Toe0 = 0x512D,
    EO_R_Foot = 0x1096,
    EO_R_Toe = 0x7163,
    IK_R_Foot = 0x8AAE,
    PH_R_Foot = 0x60E6,
    MH_R_Knee = 0x3FCF,
    RB_L_ThighRoll = 0x5C57,
    RB_R_ThighRoll = 0x192A,
    SKEL_Spine_Root = 0xE0FD,
    SKEL_Spine0 = 0x5C01,
    SKEL_Spine1 = 0x60F0,
    SKEL_Spine2 = 0x60F1,
    SKEL_Spine3 = 0x60F2,
    SKEL_L_Clavicle = 0xFCD9,
    SKEL_L_UpperArm = 0xB1C5,
    SKEL_L_Forearm = 0xEEEB,
    SKEL_L_Hand = 0x49D9,
    SKEL_L_Finger00 = 0x67F2,
    SKEL_L_Finger01 = 0xFF9,
    SKEL_L_Finger02 = 0xFFA,
    SKEL_L_Finger10 = 0x67F3,
    SKEL_L_Finger11 = 0x1049,
    SKEL_L_Finger12 = 0x104A,
    SKEL_L_Finger20 = 0x67F4,
    SKEL_L_Finger21 = 0x1059,
    SKEL_L_Finger22 = 0x105A,
    SKEL_L_Finger30 = 0x67F5,
    SKEL_L_Finger31 = 0x1029,
    SKEL_L_Finger32 = 0x102A,
    SKEL_L_Finger40 = 0x67F6,
    SKEL_L_Finger41 = 0x1039,
    SKEL_L_Finger42 = 0x103A,
    PH_L_Hand = 0xEB95,
    IK_L_Hand = 0x8CBD,
    RB_L_ForeArmRoll = 0xEE4F,
    RB_L_ArmRoll = 0x1470,
    MH_L_Elbow = 0x58B7,
    SKEL_R_Clavicle = 0x29D2,
    SKEL_R_UpperArm = 0x9D4D,
    SKEL_R_Forearm = 0x6E5C,
    SKEL_R_Hand = 0xDEAD,
    SKEL_R_Finger00 = 0xE5F2,
    SKEL_R_Finger01 = 0xFA10,
    SKEL_R_Finger02 = 0xFA11,
    SKEL_R_Finger10 = 0xE5F3,
    SKEL_R_Finger11 = 0xFA60,
    SKEL_R_Finger12 = 0xFA61,
    SKEL_R_Finger20 = 0xE5F4,
    SKEL_R_Finger21 = 0xFA70,
    SKEL_R_Finger22 = 0xFA71,
    SKEL_R_Finger30 = 0xE5F5,
    SKEL_R_Finger31 = 0xFA40,
    SKEL_R_Finger32 = 0xFA41,
    SKEL_R_Finger40 = 0xE5F6,
    SKEL_R_Finger41 = 0xFA50,
    SKEL_R_Finger42 = 0xFA51,
    PH_R_Hand = 0x6F06,
    IK_R_Hand = 0x188E,
    RB_R_ForeArmRoll = 0xAB22,
    RB_R_ArmRoll = 0x90FF,
    MH_R_Elbow = 0xBB0,
    SKEL_Neck_1 = 0x9995,
    SKEL_Head = 0x796E,
    IK_Head = 0x322C,
    FACIAL_facialRoot = 0xFE2C,
    FB_L_Brow_Out_000 = 0xE3DB,
    FB_L_Lid_Upper_000 = 0xB2B6,
    FB_L_Eye_000 = 0x62AC,
    FB_L_CheekBone_000 = 0x542E,
    FB_L_Lip_Corner_000 = 0x74AC,
    FB_R_Lid_Upper_000 = 0xAA10,
    FB_R_Eye_000 = 0x6B52,
    FB_R_CheekBone_000 = 0x4B88,
    FB_R_Brow_Out_000 = 0x54C,
    FB_R_Lip_Corner_000 = 0x2BA6,
    FB_Brow_Centre_000 = 0x9149,
    FB_UpperLipRoot_000 = 0x4ED2,
    FB_UpperLip_000 = 0xF18F,
    FB_L_Lip_Top_000 = 0x4F37,
    FB_R_Lip_Top_000 = 0x4537,
    FB_Jaw_000 = 0xB4A0,
    FB_LowerLipRoot_000 = 0x4324,
    FB_LowerLip_000 = 0x508F,
    FB_L_Lip_Bot_000 = 0xB93B,
    FB_R_Lip_Bot_000 = 0xC33B,
    FB_Tongue_000 = 0xB987,
    RB_Neck_1 = 0x8B93,
    SPR_L_Breast = 0xFC8E,
    SPR_R_Breast = 0x885F,
    IK_Root = 0xDD1C,
    SKEL_Neck_2 = 0x5FD4,
    SKEL_Pelvis1 = 0xD003,
    SKEL_PelvisRoot = 0x45FC,
    SKEL_SADDLE = 0x9524,
    MH_L_CalfBack = 0x1013,
    MH_L_ThighBack = 0x600D,
    SM_L_Skirt = 0xC419,
    MH_R_CalfBack = 0xB013,
    MH_R_ThighBack = 0x51A3,
    SM_R_Skirt = 0x7712,
    SM_M_BackSkirtRoll = 0xDBB,
    SM_L_BackSkirtRoll = 0x40B2,
    SM_R_BackSkirtRoll = 0xC141,
    SM_M_FrontSkirtRoll = 0xCDBB,
    SM_L_FrontSkirtRoll = 0x9B69,
    SM_R_FrontSkirtRoll = 0x86F1,
    SM_CockNBalls_ROOT = 0xC67D,
    SM_CockNBalls = 0x9D34,
    MH_L_Finger00 = 0x8C63,
    MH_L_FingerBulge00 = 0x5FB8,
    MH_L_Finger10 = 0x8C53,
    MH_L_FingerTop00 = 0xA244,
    MH_L_HandSide = 0xC78A,
    MH_Watch = 0x2738,
    MH_L_Sleeve = 0x933C,
    MH_R_Finger00 = 0x2C63,
    MH_R_FingerBulge00 = 0x69B8,
    MH_R_Finger10 = 0x2C53,
    MH_R_FingerTop00 = 0xEF4B,
    MH_R_HandSide = 0x68FB,
    MH_R_Sleeve = 0x92DC,
    FACIAL_jaw = 0xB21,
    FACIAL_underChin = 0x8A95,
    FACIAL_L_underChin = 0x234E,
    FACIAL_chin = 0xB578,
    FACIAL_chinSkinBottom = 0x98BC,
    FACIAL_L_chinSkinBottom = 0x3E8F,
    FACIAL_R_chinSkinBottom = 0x9E8F,
    FACIAL_tongueA = 0x4A7C,
    FACIAL_tongueB = 0x4A7D,
    FACIAL_tongueC = 0x4A7E,
    FACIAL_tongueD = 0x4A7F,
    FACIAL_tongueE = 0x4A80,
    FACIAL_L_tongueE = 0x35F2,
    FACIAL_R_tongueE = 0x2FF2,
    FACIAL_L_tongueD = 0x35F1,
    FACIAL_R_tongueD = 0x2FF1,
    FACIAL_L_tongueC = 0x35F0,
    FACIAL_R_tongueC = 0x2FF0,
    FACIAL_L_tongueB = 0x35EF,
    FACIAL_R_tongueB = 0x2FEF,
    FACIAL_L_tongueA = 0x35EE,
    FACIAL_R_tongueA = 0x2FEE,
    FACIAL_chinSkinTop = 0x7226,
    FACIAL_L_chinSkinTop = 0x3EB3,
    FACIAL_chinSkinMid = 0x899A,
    FACIAL_L_chinSkinMid = 0x4427,
    FACIAL_L_chinSide = 0x4A5E,
    FACIAL_R_chinSkinMid = 0xF5AF,
    FACIAL_R_chinSkinTop = 0xF03B,
    FACIAL_R_chinSide = 0xAA5E,
    FACIAL_R_underChin = 0x2BF4,
    FACIAL_L_lipLowerSDK = 0xB9E1,
    FACIAL_L_lipLowerAnalog = 0x244A,
    FACIAL_L_lipLowerThicknessV = 0xC749,
    FACIAL_L_lipLowerThicknessH = 0xC67B,
    FACIAL_lipLowerSDK = 0x7285,
    FACIAL_lipLowerAnalog = 0xD97B,
    FACIAL_lipLowerThicknessV = 0xC5BB,
    FACIAL_lipLowerThicknessH = 0xC5ED,
    FACIAL_R_lipLowerSDK = 0xA034,
    FACIAL_R_lipLowerAnalog = 0xC2D9,
    FACIAL_R_lipLowerThicknessV = 0xC6E9,
    FACIAL_R_lipLowerThicknessH = 0xC6DB,
    FACIAL_nose = 0x20F1,
    FACIAL_L_nostril = 0x7322,
    FACIAL_L_nostrilThickness = 0xC15F,
    FACIAL_noseLower = 0xE05A,
    FACIAL_L_noseLowerThickness = 0x79D5,
    FACIAL_R_noseLowerThickness = 0x7975,
    FACIAL_noseTip = 0x6A60,
    FACIAL_R_nostril = 0x7922,
    FACIAL_R_nostrilThickness = 0x36FF,
    FACIAL_noseUpper = 0xA04F,
    FACIAL_L_noseUpper = 0x1FB8,
    FACIAL_noseBridge = 0x9BA3,
    FACIAL_L_nasolabialFurrow = 0x5ACA,
    FACIAL_L_nasolabialBulge = 0xCD78,
    FACIAL_L_cheekLower = 0x6907,
    FACIAL_L_cheekLowerBulge1 = 0xE3FB,
    FACIAL_L_cheekLowerBulge2 = 0xE3FC,
    FACIAL_L_cheekInner = 0xE7AB,
    FACIAL_L_cheekOuter = 0x8161,
    FACIAL_L_eyesackLower = 0x771B,
    FACIAL_L_eyeball = 0x1744,
    FACIAL_L_eyelidLower = 0x998C,
    FACIAL_L_eyelidLowerOuterSDK = 0xFE4C,
    FACIAL_L_eyelidLowerOuterAnalog = 0xB9AA,
    FACIAL_L_eyelashLowerOuter = 0xD7F6,
    FACIAL_L_eyelidLowerInnerSDK = 0xF151,
    FACIAL_L_eyelidLowerInnerAnalog = 0x8242,
    FACIAL_L_eyelashLowerInner = 0x4CCF,
    FACIAL_L_eyelidUpper = 0x97C1,
    FACIAL_L_eyelidUpperOuterSDK = 0xAF15,
    FACIAL_L_eyelidUpperOuterAnalog = 0x67FA,
    FACIAL_L_eyelashUpperOuter = 0x27B7,
    FACIAL_L_eyelidUpperInnerSDK = 0xD341,
    FACIAL_L_eyelidUpperInnerAnalog = 0xF092,
    FACIAL_L_eyelashUpperInner = 0x9B1F,
    FACIAL_L_eyesackUpperOuterBulge = 0xA559,
    FACIAL_L_eyesackUpperInnerBulge = 0x2F2A,
    FACIAL_L_eyesackUpperOuterFurrow = 0xC597,
    FACIAL_L_eyesackUpperInnerFurrow = 0x52A7,
    FACIAL_forehead = 0x9218,
    FACIAL_L_foreheadInner = 0x843,
    FACIAL_L_foreheadInnerBulge = 0x767C,
    FACIAL_L_foreheadOuter = 0x8DCB,
    FACIAL_skull = 0x4221,
    FACIAL_foreheadUpper = 0xF7D6,
    FACIAL_L_foreheadUpperInner = 0xCF13,
    FACIAL_L_foreheadUpperOuter = 0x509B,
    FACIAL_R_foreheadUpperInner = 0xCEF3,
    FACIAL_R_foreheadUpperOuter = 0x507B,
    FACIAL_L_temple = 0xAF79,
    FACIAL_L_ear = 0x19DD,
    FACIAL_L_earLower = 0x6031,
    FACIAL_L_masseter = 0x2810,
    FACIAL_L_jawRecess = 0x9C7A,
    FACIAL_L_cheekOuterSkin = 0x14A5,
    FACIAL_R_cheekLower = 0xF367,
    FACIAL_R_cheekLowerBulge1 = 0x599B,
    FACIAL_R_cheekLowerBulge2 = 0x599C,
    FACIAL_R_masseter = 0x810,
    FACIAL_R_jawRecess = 0x93D4,
    FACIAL_R_ear = 0x1137,
    FACIAL_R_earLower = 0x8031,
    FACIAL_R_eyesackLower = 0x777B,
    FACIAL_R_nasolabialBulge = 0xD61E,
    FACIAL_R_cheekOuter = 0xD32,
    FACIAL_R_cheekInner = 0x737C,
    FACIAL_R_noseUpper = 0x1CD6,
    FACIAL_R_foreheadInner = 0xE43,
    FACIAL_R_foreheadInnerBulge = 0x769C,
    FACIAL_R_foreheadOuter = 0x8FCB,
    FACIAL_R_cheekOuterSkin = 0xB334,
    FACIAL_R_eyesackUpperInnerFurrow = 0x9FAE,
    FACIAL_R_eyesackUpperOuterFurrow = 0x140F,
    FACIAL_R_eyesackUpperInnerBulge = 0xA359,
    FACIAL_R_eyesackUpperOuterBulge = 0x1AF9,
    FACIAL_R_nasolabialFurrow = 0x2CAA,
    FACIAL_R_temple = 0xAF19,
    FACIAL_R_eyeball = 0x1944,
    FACIAL_R_eyelidUpper = 0x7E14,
    FACIAL_R_eyelidUpperOuterSDK = 0xB115,
    FACIAL_R_eyelidUpperOuterAnalog = 0xF25A,
    FACIAL_R_eyelashUpperOuter = 0xE0A,
    FACIAL_R_eyelidUpperInnerSDK = 0xD541,
    FACIAL_R_eyelidUpperInnerAnalog = 0x7C63,
    FACIAL_R_eyelashUpperInner = 0x8172,
    FACIAL_R_eyelidLower = 0x7FDF,
    FACIAL_R_eyelidLowerOuterSDK = 0x1BD,
    FACIAL_R_eyelidLowerOuterAnalog = 0x457B,
    FACIAL_R_eyelashLowerOuter = 0xBE49,
    FACIAL_R_eyelidLowerInnerSDK = 0xF351,
    FACIAL_R_eyelidLowerInnerAnalog = 0xE13,
    FACIAL_R_eyelashLowerInner = 0x3322,
    FACIAL_L_lipUpperSDK = 0x8F30,
    FACIAL_L_lipUpperAnalog = 0xB1CF,
    FACIAL_L_lipUpperThicknessH = 0x37CE,
    FACIAL_L_lipUpperThicknessV = 0x38BC,
    FACIAL_lipUpperSDK = 0x1774,
    FACIAL_lipUpperAnalog = 0xE064,
    FACIAL_lipUpperThicknessH = 0x7993,
    FACIAL_lipUpperThicknessV = 0x7981,
    FACIAL_L_lipCornerSDK = 0xB1C,
    FACIAL_L_lipCornerAnalog = 0xE568,
    FACIAL_L_lipCornerThicknessUpper = 0x7BC,
    FACIAL_L_lipCornerThicknessLower = 0xDD42,
    FACIAL_R_lipUpperSDK = 0x7583,
    FACIAL_R_lipUpperAnalog = 0x51CF,
    FACIAL_R_lipUpperThicknessH = 0x382E,
    FACIAL_R_lipUpperThicknessV = 0x385C,
    FACIAL_R_lipCornerSDK = 0xB3C,
    FACIAL_R_lipCornerAnalog = 0xEE0E,
    FACIAL_R_lipCornerThicknessUpper = 0x54C3,
    FACIAL_R_lipCornerThicknessLower = 0x2BBA,
    MH_MulletRoot = 0x3E73,
    MH_MulletScaler = 0xA1C2,
    MH_Hair_Scale = 0xC664,
    MH_Hair_Crown = 0x1675,
    SM_Torch = 0x8D6,
    FX_Light = 0x8959,
    FX_Light_Scale = 0x5038,
    FX_Light_Switch = 0xE18E,
    BagRoot = 0xAD09,
    BagPivotROOT = 0xB836,
    BagPivot = 0x4D11,
    BagBody = 0xAB6D,
    BagBone_R = 0x937,
    BagBone_L = 0x991,
    SM_LifeSaver_Front = 0x9420,
    SM_R_Pouches_ROOT = 0x2962,
    SM_R_Pouches = 0x4141,
    SM_L_Pouches_ROOT = 0x2A02,
    SM_L_Pouches = 0x4B41,
    SM_Suit_Back_Flapper = 0xDA2D,
    SPR_CopRadio = 0x8245,
    SM_LifeSaver_Back = 0x2127,
    MH_BlushSlider = 0xA0CE,
    SKEL_Tail_01 = 0x347,
    SKEL_Tail_02 = 0x348,
    MH_L_Concertina_B = 0xC988,
    MH_L_Concertina_A = 0xC987,
    MH_R_Concertina_B = 0xC8E8,
    MH_R_Concertina_A = 0xC8E7,
    MH_L_ShoulderBladeRoot = 0x8711,
    MH_L_ShoulderBlade = 0x4EAF,
    MH_R_ShoulderBladeRoot = 0x3A0A,
    MH_R_ShoulderBlade = 0x54AF,
    FB_R_Ear_000 = 0x6CDF,
    SPR_R_Ear = 0x63B6,
    FB_L_Ear_000 = 0x6439,
    SPR_L_Ear = 0x5B10,
    FB_TongueA_000 = 0x4206,
    FB_TongueB_000 = 0x4207,
    FB_TongueC_000 = 0x4208,
    SKEL_L_Toe1 = 0x1D6B,
    SKEL_R_Toe1 = 0xB23F,
    SKEL_Tail_03 = 0x349,
    SKEL_Tail_04 = 0x34A,
    SKEL_Tail_05 = 0x34B,
    SPR_Gonads_ROOT = 0xBFDE,
    SPR_Gonads = 0x1C00,
    FB_L_Brow_Out_001 = 0xE3DB,
    FB_L_Lid_Upper_001 = 0xB2B6,
    FB_L_Eye_001 = 0x62AC,
    FB_L_CheekBone_001 = 0x542E,
    FB_L_Lip_Corner_001 = 0x74AC,
    FB_R_Lid_Upper_001 = 0xAA10,
    FB_R_Eye_001 = 0x6B52,
    FB_R_CheekBone_001 = 0x4B88,
    FB_R_Brow_Out_001 = 0x54C,
    FB_R_Lip_Corner_001 = 0x2BA6,
    FB_Brow_Centre_001 = 0x9149,
    FB_UpperLipRoot_001 = 0x4ED2,
    FB_UpperLip_001 = 0xF18F,
    FB_L_Lip_Top_001 = 0x4F37,
    FB_R_Lip_Top_001 = 0x4537,
    FB_Jaw_001 = 0xB4A0,
    FB_LowerLipRoot_001 = 0x4324,
    FB_LowerLip_001 = 0x508F,
    FB_L_Lip_Bot_001 = 0xB93B,
    FB_R_Lip_Bot_001 = 0xC33B,
    FB_Tongue_001 = 0xB987
}; 
```
-- @param ped Ped
-- @param boneId int
-- GET_PED_BONE_INDEX(ped, boneId)

--- GET_PED_CAUSE_OF_DEATH
-- ```
Returns the hash of the weapon/model/object that killed the ped.  
```
-- @param ped Ped
-- GET_PED_CAUSE_OF_DEATH(ped)

--- GET_PED_COMBAT_MOVEMENT
-- @param ped Ped
-- GET_PED_COMBAT_MOVEMENT(ped)

--- GET_PED_COMBAT_RANGE
-- @param ped Ped
-- GET_PED_COMBAT_RANGE(ped)

--- GET_PED_CONFIG_FLAG
-- See [`SET_PED_CONFIG_FLAG`](#\_0x1913FE4CBF41C463).
-- @param ped Ped
-- @param flagId int
-- @param p2 BOOL
-- GET_PED_CONFIG_FLAG(ped, flagId, p2)

--- GET_PED_DECORATIONS_STATE
-- @param ped Ped
-- GET_PED_DECORATIONS_STATE(ped)

--- GET_PED_DECORATION_ZONE_FROM_HASHES
-- ```cpp
enum ePedDecorationZone
{
	ZONE_TORSO = 0,
	ZONE_HEAD = 1,
	ZONE_LEFT_ARM = 2,
	ZONE_RIGHT_ARM = 3,
	ZONE_LEFT_LEG = 4,
	ZONE_RIGHT_LEG = 5,
	ZONE_UNKNOWN = 6,
	ZONE_NONE = 7
};
```
-- @param collection Hash
-- @param overlay Hash
-- GET_PED_DECORATION_ZONE_FROM_HASHES(collection, overlay)

--- GET_PED_DEFENSIVE_AREA_POSITION
-- @param ped Ped
-- @param p1 BOOL
-- GET_PED_DEFENSIVE_AREA_POSITION(ped, p1)

--- GET_PED_DRAWABLE_VARIATION
-- ```
Ids
0 - Head
1 - Beard
2 - Hair
3 - Torso
4 - Legs
5 - Hands
6 - Foot
7 - Scarfs/Neck Accessories
8 - Accessories 1
9 - Accessories 2
10- Decals
11 - Auxiliary parts for torso
```
-- @param ped Ped
-- @param componentId int
-- GET_PED_DRAWABLE_VARIATION(ped, componentId)

--- GET_PED_ENVEFF_SCALE
-- @param ped Ped
-- GET_PED_ENVEFF_SCALE(ped)

--- GET_PED_EXTRACTED_DISPLACEMENT
-- ```
Gets the offset the specified ped has moved since the previous tick.  
If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.  
If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.  
```
-- @param ped Ped
-- @param worldSpace BOOL
-- GET_PED_EXTRACTED_DISPLACEMENT(ped, worldSpace)

--- GET_PED_GROUP_INDEX
-- ```
Returns the group id of which the specified ped is a member of.  
```
-- @param ped Ped
-- GET_PED_GROUP_INDEX(ped)

--- GET_PED_HEAD_BLEND_DATA
-- ```
The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.  
pass this struct in the second parameter   
typedef struct  
{  
        int shapeFirst, shapeSecond, shapeThird;   
        int skinFirst, skinSecond, skinThird;   
	float shapeMix, skinMix, thirdMix;  
} headBlendData;  
```
-- @param ped Ped
-- @param headBlendData Any*
-- GET_PED_HEAD_BLEND_DATA(ped, headBlendData)

--- GET_PED_HEAD_BLEND_FIRST_INDEX
-- ```
Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
Used when calling SET_PED_HEAD_BLEND_DATA.
```
-- @param type int
-- GET_PED_HEAD_BLEND_FIRST_INDEX(type)

--- GET_PED_HEAD_BLEND_NUM_HEADS
-- ```
Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.  
```
-- @param type int
-- GET_PED_HEAD_BLEND_NUM_HEADS(type)

--- GET_PED_HEAD_OVERLAY_NUM
-- ```
Used with freemode (online) characters.
```
-- @param overlayID int
-- GET_PED_HEAD_OVERLAY_NUM(overlayID)

--- GET_PED_HELMET_STORED_HAT_PROP_INDEX
-- @param ped Ped
-- GET_PED_HELMET_STORED_HAT_PROP_INDEX(ped)

--- GET_PED_HELMET_STORED_HAT_TEX_INDEX
-- @param ped Ped
-- GET_PED_HELMET_STORED_HAT_TEX_INDEX(ped)

--- GET_PED_LAST_DAMAGE_BONE
-- @param ped Ped
-- @param outBone int*
-- GET_PED_LAST_DAMAGE_BONE(ped, outBone)

--- GET_PED_MAX_HEALTH
-- @param ped Ped
-- GET_PED_MAX_HEALTH(ped)

--- GET_PED_MONEY
-- @param ped Ped
-- GET_PED_MONEY(ped)

--- GET_PED_NEARBY_PEDS
-- Console/PC structure definitions and example: pastebin.com/SsFej963

For FiveM/Cfx.Re use-cases refer to: [`GET_GAME_POOL`](#\_0x2B9D4F50).
-- @param ped Ped
-- @param sizeAndPeds int*
-- @param ignore int - Ped type to ignore
-- GET_PED_NEARBY_PEDS(ped, sizeAndPeds, ignore)

--- GET_PED_NEARBY_VEHICLES
-- ```
Returns size of array, passed into the second variable.  
See below for usage information.  
This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.  
//Setup the array  
	const int numElements = 10;  
	const int arrSize = numElements * 2 + 2;  
	Any veh[arrSize];  
	//0 index is the size of the array  
	veh[0] = numElements;  
	int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);  
	if (veh != NULL)  
	{  
//Simple loop to go through results  
for (int i = 0; i < count; i++)  
{  
	int offsettedID = i * 2 + 2;  
	//Make sure it exists  
	if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))  
	{  
//Do something  
	}  
}  
	}    
Here's the right way to do it (console and pc):  
pastebin.com/SsFej963  
```
-- @param ped Ped
-- @param sizeAndVehs int*
-- GET_PED_NEARBY_VEHICLES(ped, sizeAndVehs)

--- GET_PED_PALETTE_VARIATION
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id to get the palette variation from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- GET_PED_PALETTE_VARIATION(ped, componentId)

--- GET_PED_PARACHUTE_LANDING_TYPE
-- ```
-1: no landing  
0: landing on both feet  
1: stumbling  
2: rolling  
3: ragdoll  
```
-- @param ped Ped
-- GET_PED_PARACHUTE_LANDING_TYPE(ped)

--- GET_PED_PARACHUTE_STATE
-- ```
Returns:  
-1: Normal  
0: Wearing parachute on back  
1: Parachute opening  
2: Parachute open  
3: Falling to doom (e.g. after exiting parachute)  
Normal means no parachute?  
```
-- @param ped Ped
-- GET_PED_PARACHUTE_STATE(ped)

--- GET_PED_PARACHUTE_TINT_INDEX
-- @param ped Ped
-- @param outTintIndex int*
-- GET_PED_PARACHUTE_TINT_INDEX(ped, outTintIndex)

--- GET_PED_PROP_INDEX
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id to get the prop index from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- GET_PED_PROP_INDEX(ped, componentId)

--- GET_PED_PROP_TEXTURE_INDEX
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id to get the prop texture index from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- GET_PED_PROP_TEXTURE_INDEX(ped, componentId)

--- GET_PED_RAGDOLL_BONE_INDEX
-- @param ped Ped
-- @param bone int
-- GET_PED_RAGDOLL_BONE_INDEX(ped, bone)

--- GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
-- @param ped Ped
-- GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(ped)

--- GET_PED_RELATIONSHIP_GROUP_HASH
-- @param ped Ped
-- GET_PED_RELATIONSHIP_GROUP_HASH(ped)

--- GET_PED_RESET_FLAG
-- @param ped Ped
-- @param flagId int
-- GET_PED_RESET_FLAG(ped, flagId)

--- GET_PED_SOURCE_OF_DEATH
-- ```
Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'  
Is best to check if the Ped is dead before asking for its killer.  
```
-- @param ped Ped
-- GET_PED_SOURCE_OF_DEATH(ped)

--- GET_PED_STEALTH_MOVEMENT
-- ```
Returns whether the entity is in stealth mode  
```
-- @param ped Ped
-- GET_PED_STEALTH_MOVEMENT(ped)

--- GET_PED_TEXTURE_VARIATION
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id to get the texture variation from. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- GET_PED_TEXTURE_VARIATION(ped, componentId)

--- GET_PED_TIME_OF_DEATH
-- @param ped Ped
-- GET_PED_TIME_OF_DEATH(ped)

--- GET_PED_TYPE
-- Ped types:

```cpp
enum ePedType
{
	PED_TYPE_PLAYER_0 = 0,
	PED_TYPE_PLAYER_1 = 1,
	PED_TYPE_NETWORK_PLAYER = 2,
	PED_TYPE_PLAYER_2 = 3,
	PED_TYPE_CIVMALE = 4,
	PED_TYPE_CIVFEMALE = 5,
	PED_TYPE_COP = 6,
	PED_TYPE_GANG_ALBANIAN = 7,
	PED_TYPE_GANG_BIKER_1 = 8,
	PED_TYPE_GANG_BIKER_2 = 9,
	PED_TYPE_GANG_ITALIAN = 10,
	PED_TYPE_GANG_RUSSIAN = 11,
	PED_TYPE_GANG_RUSSIAN_2 = 12,
	PED_TYPE_GANG_IRISH = 13,
	PED_TYPE_GANG_JAMAICAN = 14,
	PED_TYPE_GANG_AFRICAN_AMERICAN = 15,
	PED_TYPE_GANG_KOREAN = 16,
	PED_TYPE_GANG_CHINESE_JAPANESE = 17,
	PED_TYPE_GANG_PUERTO_RICAN = 18,
	PED_TYPE_DEALER = 19,
	PED_TYPE_MEDIC = 20,
	PED_TYPE_FIREMAN = 21,
	PED_TYPE_CRIMINAL = 22,
	PED_TYPE_BUM = 23,
	PED_TYPE_PROSTITUTE = 24,
	PED_TYPE_SPECIAL = 25,
	PED_TYPE_MISSION = 26,
	PED_TYPE_SWAT = 27,
	PED_TYPE_ANIMAL = 28,
	PED_TYPE_ARMY = 29
};
```
-- @param ped Ped
-- GET_PED_TYPE(ped)

--- GET_PLAYER_PED_IS_FOLLOWING
-- @param ped Ped
-- GET_PLAYER_PED_IS_FOLLOWING(ped)

--- GET_RANDOM_PED_AT_COORD
-- ```
Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.   
Ped Types:  
Any = -1  
Player = 1  
Male = 4   
Female = 5   
Cop = 6  
Human = 26  
SWAT = 27   
Animal = 28  
Army = 29  
```
-- @param x float
-- @param y float
-- @param z float
-- @param xRadius float
-- @param yRadius float
-- @param zRadius float
-- @param pedType int
-- GET_RANDOM_PED_AT_COORD(x, y, z, xRadius, yRadius, zRadius, pedType)

--- GET_RELATIONSHIP_BETWEEN_GROUPS
-- ```
Gets the relationship between two groups. This should be called twice (once for each group).  
Relationship types:  
0 = Companion  
1 = Respect  
2 = Like  
3 = Neutral  
4 = Dislike  
5 = Hate  
255 = Pedestrians  
Example:  
PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);  
PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);  
```
-- @param group1 Hash
-- @param group2 Hash
-- GET_RELATIONSHIP_BETWEEN_GROUPS(group1, group2)

--- GET_RELATIONSHIP_BETWEEN_PEDS
-- ```
Gets the relationship between two peds. This should be called twice (once for each ped).  
Relationship types:  
0 = Companion  
1 = Respect  
2 = Like  
3 = Neutral  
4 = Dislike  
5 = Hate  
255 = Pedestrians  
(Credits: Inco)  
Example:  
PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);  
PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);  
```
-- @param ped1 Ped
-- @param ped2 Ped
-- GET_RELATIONSHIP_BETWEEN_PEDS(ped1, ped2)

--- GET_SEAT_PED_IS_TRYING_TO_ENTER
-- @param ped Ped
-- GET_SEAT_PED_IS_TRYING_TO_ENTER(ped)

--- GET_SYNCHRONIZED_SCENE_PHASE
-- @param sceneID int
-- GET_SYNCHRONIZED_SCENE_PHASE(sceneID)

--- GET_SYNCHRONIZED_SCENE_RATE
-- @param sceneID int
-- GET_SYNCHRONIZED_SCENE_RATE(sceneID)

--- GET_VEHICLE_PED_IS_ENTERING
-- @param ped Ped
-- GET_VEHICLE_PED_IS_ENTERING(ped)

--- GET_VEHICLE_PED_IS_IN
-- Retrieves the vehicle the specified ped is currently in, or the last vehicle they were in.
-- @param ped Ped - The target ped
-- @param lastVehicle BOOL - A boolean value where `false` represents the current vehicle the Ped is in, and `true` represents the last vehicle the Ped was in.
-- GET_VEHICLE_PED_IS_IN(ped, lastVehicle)

--- GET_VEHICLE_PED_IS_TRYING_TO_ENTER
-- @param ped Ped
-- GET_VEHICLE_PED_IS_TRYING_TO_ENTER(ped)

--- GET_VEHICLE_PED_IS_USING
-- ```
Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.  
```
-- @param ped Ped
-- GET_VEHICLE_PED_IS_USING(ped)

--- GIVE_PED_HELMET
-- Gives the ped a helmet. Can be removed by invoking [`REMOVE_PED_HELMET`](#\_0xA7B2458D0AD6DED8).

```cpp
enum ePedCompFlags {
  PV_FLAG_NONE                  = 0, // 0
  PV_FLAG_BULKY                 = 1, // 1<<0
  PV_FLAG_JOB                   = 2, // 1<<1
  PV_FLAG_SUNNY                 = 4, // 1<<2
  PV_FLAG_WET                   = 8, // 1<<3
  PV_FLAG_COLD                  = 16, // 1<<4
  PV_FLAG_NOT_IN_CAR            = 32, // 1<<5
  PV_FLAG_BIKE_ONLY             = 64, // 1<<6
  PV_FLAG_NOT_INDOORS           = 128, // 1<<7
  PV_FLAG_FIRE_RETARDENT        = 256, // 1<<8
  PV_FLAG_ARMOURED              = 512, // 1<<9
  PV_FLAG_LIGHTLY_ARMOURED      = 1024, // 1<<10
  PV_FLAG_HIGH_DETAIL           = 2048, // 1<<11
  PV_FLAG_DEFAULT_HELMET        = 4096, // 1<<12
  PV_FLAG_RANDOM_HELMET         = 8192, // 1<<13
  PV_FLAG_SCRIPT_HELMET         = 16384, // 1<<14
  PV_FLAG_FLIGHT_HELMET         = 32768, // 1<<15
  PV_FLAG_HIDE_IN_FIRST_PERSON  = 65536, // 1<<16
  PV_FLAG_USE_PHYSICS_HAT_2     = 131072, // 1<<17
  PV_FLAG_PILOT_HELMET          = 262144 // 1<<18
};
```
-- @param ped Ped - Ped index.
-- @param cannotRemove BOOL - Can remove helmet or not.
-- @param helmetFlag int - Flag for the helmet, the helmet appearance depends on the ped it's being applied on.
-- @param textureIndex int - Texture index; any value other than `-1` will overwrite the default texture index. The helmet texture index needs to be valid for it to be applied.
-- GIVE_PED_HELMET(ped, cannotRemove, helmetFlag, textureIndex)

--- GIVE_PED_NM_MESSAGE
-- ```
Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.  
If a message hasn't been created already, this function does nothing.  
If the Ped is not ragdolled with Euphoria enabled, this function does nothing.  
The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  
Call order:  
SET_PED_TO_RAGDOLL  
CREATE_NM_MESSAGE  
GIVE_PED_NM_MESSAGE  
Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:  
SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);  
CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.  
GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  
CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.  
GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  
CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.  
GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.  
```
-- @param ped Ped
-- GIVE_PED_NM_MESSAGE(ped)

--- HAS_ACTION_MODE_ASSET_LOADED
-- @param asset char*
-- HAS_ACTION_MODE_ASSET_LOADED(asset)

--- HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED
-- HAS_PEDHEADSHOT_IMG_UPLOAD_FAILED()

--- HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED
-- HAS_PEDHEADSHOT_IMG_UPLOAD_SUCCEEDED()

--- HAS_PED_HEAD_BLEND_FINISHED
-- @param ped Ped
-- HAS_PED_HEAD_BLEND_FINISHED(ped)

--- HAS_PED_PRELOAD_PROP_DATA_FINISHED
-- @param ped Ped
-- HAS_PED_PRELOAD_PROP_DATA_FINISHED(ped)

--- HAS_PED_PRELOAD_VARIATION_DATA_FINISHED
-- @param ped Ped
-- HAS_PED_PRELOAD_VARIATION_DATA_FINISHED(ped)

--- HAS_PED_RECEIVED_EVENT
-- @param ped Ped
-- @param eventId int
-- HAS_PED_RECEIVED_EVENT(ped, eventId)

--- HAS_STEALTH_MODE_ASSET_LOADED
-- @param asset char*
-- HAS_STEALTH_MODE_ASSET_LOADED(asset)

--- HAVE_ALL_STREAMING_REQUESTS_COMPLETED
-- @param ped Ped
-- HAVE_ALL_STREAMING_REQUESTS_COMPLETED(ped)

--- HIDE_PED_BLOOD_DAMAGE_BY_ZONE
-- @param ped Ped
-- @param p1 Any
-- @param p2 BOOL
-- HIDE_PED_BLOOD_DAMAGE_BY_ZONE(ped, p1, p2)

--- INSTANTLY_FILL_PED_POPULATION
-- INSTANTLY_FILL_PED_POPULATION()

--- IS_ANY_HOSTILE_PED_NEAR_POINT
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- IS_ANY_HOSTILE_PED_NEAR_POINT(ped, x, y, z, radius)

--- IS_ANY_PED_NEAR_POINT
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- IS_ANY_PED_NEAR_POINT(x, y, z, radius)

--- IS_ANY_PED_SHOOTING_IN_AREA
-- Verifies whether a ped is firing within a specific area.
-- @param minX float - Minimum X vector
-- @param minY float - Minimum Y vector
-- @param minZ float - Minimum Z vector
-- @param maxX float - Maximum X vector
-- @param maxY float - Maximum Y vector
-- @param maxZ float - Maximum Z vector
-- @param bHighlightArea BOOL - Highlights the area to check when set to `true`.
-- @param bDo3DCheck BOOL - Conducts a 3D height check when set to `true`.
-- IS_ANY_PED_SHOOTING_IN_AREA(minX, minY, minZ, maxX, maxY, maxZ, bHighlightArea, bDo3DCheck)

--- IS_CONVERSATION_PED_DEAD
-- @param ped Ped
-- IS_CONVERSATION_PED_DEAD(ped)

--- IS_COP_PED_IN_AREA_3D
-- ```
xyz - relative to the world origin.  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- IS_COP_PED_IN_AREA_3D(x1, y1, z1, x2, y2, z2)

--- IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE
-- IS_PEDHEADSHOT_IMG_UPLOAD_AVAILABLE()

--- IS_PEDHEADSHOT_READY
-- ```
gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
```
-- @param id int
-- IS_PEDHEADSHOT_READY(id)

--- IS_PEDHEADSHOT_VALID
-- ```
gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
```
-- @param id int
-- IS_PEDHEADSHOT_VALID(id)

--- IS_PED_AIMING_FROM_COVER
-- @param ped Ped
-- IS_PED_AIMING_FROM_COVER(ped)

--- IS_PED_A_PLAYER
-- ```
Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
```
-- @param ped Ped
-- IS_PED_A_PLAYER(ped)

--- IS_PED_BEING_JACKED
-- @param ped Ped
-- IS_PED_BEING_JACKED(ped)

--- IS_PED_BEING_STEALTH_KILLED
-- @param ped Ped
-- IS_PED_BEING_STEALTH_KILLED(ped)

--- IS_PED_BEING_STUNNED
-- ```
p1 is always 0  
```
-- @param ped Ped
-- @param p1 int
-- IS_PED_BEING_STUNNED(ped, p1)

--- IS_PED_CLIMBING
-- @param ped Ped
-- IS_PED_CLIMBING(ped)

--- IS_PED_COMPONENT_VARIATION_VALID
-- Checks if the component variation is valid, this works great for randomizing components using loops.
-- @param ped Ped - The ped handle.
-- @param componentId int - The component id to check the variation of. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId int - The drawable id to get the component variation of. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- @param textureId int - The texture id to get the component variation of. Refer to [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171).
-- IS_PED_COMPONENT_VARIATION_VALID(ped, componentId, drawableId, textureId)

--- IS_PED_DEAD_OR_DYING
-- Determines if a ped is dead. Contrary to what the name might suggest, it does not always detect when a ped is in the 'dying' phase (transitioning to death). The exception is when `checkMeleeDeathFlags` is set to `true`, which then includes peds in the midst of melee takedown moves as being in a dying state, even if the death task has not yet started.

```
NativeDB Introduced: v323
```
-- @param ped Ped - The ped to check.
-- @param checkMeleeDeathFlags BOOL - If set to `true`, extends the check to include melee takedown moves as part of the dying phase.
-- IS_PED_DEAD_OR_DYING(ped, checkMeleeDeathFlags)

--- IS_PED_DEFENSIVE_AREA_ACTIVE
-- @param ped Ped
-- @param p1 BOOL
-- IS_PED_DEFENSIVE_AREA_ACTIVE(ped, p1)

--- IS_PED_DIVING
-- @param ped Ped
-- IS_PED_DIVING(ped)

--- IS_PED_DOING_DRIVEBY
-- @param ped Ped
-- IS_PED_DOING_DRIVEBY(ped)

--- IS_PED_DUCKING
-- @param ped Ped
-- IS_PED_DUCKING(ped)

--- IS_PED_EVASIVE_DIVING
-- ```
Presumably returns the Entity that the Ped is currently diving out of the way of.
var num3;
    if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)
        if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)
```
-- @param ped Ped
-- @param evadingEntity Entity*
-- IS_PED_EVASIVE_DIVING(ped, evadingEntity)

--- IS_PED_FACING_PED
-- ```
angle is ped's view cone  
```
-- @param ped Ped
-- @param otherPed Ped
-- @param angle float
-- IS_PED_FACING_PED(ped, otherPed, angle)

--- IS_PED_FALLING
-- @param ped Ped
-- IS_PED_FALLING(ped)

--- IS_PED_FATALLY_INJURED
-- ```
Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.  
If the handle is invalid, the function returns true.  
```
-- @param ped Ped
-- IS_PED_FATALLY_INJURED(ped)

--- IS_PED_FLEEING
-- @param ped Ped
-- IS_PED_FLEEING(ped)

--- IS_PED_GETTING_INTO_A_VEHICLE
-- @param ped Ped
-- IS_PED_GETTING_INTO_A_VEHICLE(ped)

--- IS_PED_GOING_INTO_COVER
-- @param ped Ped
-- IS_PED_GOING_INTO_COVER(ped)

--- IS_PED_GROUP_MEMBER
-- @param ped Ped
-- @param groupId int
-- IS_PED_GROUP_MEMBER(ped, groupId)

--- IS_PED_HANGING_ON_TO_VEHICLE
-- @param ped Ped
-- IS_PED_HANGING_ON_TO_VEHICLE(ped)

--- IS_PED_HEADING_TOWARDS_POSITION
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param p4 float
-- IS_PED_HEADING_TOWARDS_POSITION(ped, x, y, z, p4)

--- IS_PED_HEADTRACKING_ENTITY
-- @param ped Ped
-- @param entity Entity
-- IS_PED_HEADTRACKING_ENTITY(ped, entity)

--- IS_PED_HEADTRACKING_PED
-- @param ped1 Ped
-- @param ped2 Ped
-- IS_PED_HEADTRACKING_PED(ped1, ped2)

--- IS_PED_HUMAN
-- ```
Returns true/false if the ped is/isn't humanoid.  
```
-- @param ped Ped
-- IS_PED_HUMAN(ped)

--- IS_PED_HURT
-- ```
Returns whether the specified ped is hurt.  
```
-- @param ped Ped
-- IS_PED_HURT(ped)

--- IS_PED_INJURED
-- Indicates whether this ped's health is below its injured threshold.
The default threshold is 100, these are stored in the `pedhealth.meta` file located in `common:\data\`

### Below are some of the values

| InjuredHealthThreshold | Name      |
|------------------------|-----------|
| 100.000000             | Strong    |
| 100.000000             | Average   |
| 100.000000             | Weak      |
-- @param ped Ped - The ped to check for injuries.
-- IS_PED_INJURED(ped)

--- IS_PED_IN_ANY_BOAT
-- @param ped Ped
-- IS_PED_IN_ANY_BOAT(ped)

--- IS_PED_IN_ANY_HELI
-- @param ped Ped
-- IS_PED_IN_ANY_HELI(ped)

--- IS_PED_IN_ANY_PLANE
-- @param ped Ped
-- IS_PED_IN_ANY_PLANE(ped)

--- IS_PED_IN_ANY_POLICE_VEHICLE
-- @param ped Ped
-- IS_PED_IN_ANY_POLICE_VEHICLE(ped)

--- IS_PED_IN_ANY_SUB
-- @param ped Ped
-- IS_PED_IN_ANY_SUB(ped)

--- IS_PED_IN_ANY_TAXI
-- @param ped Ped
-- IS_PED_IN_ANY_TAXI(ped)

--- IS_PED_IN_ANY_TRAIN
-- @param ped Ped
-- IS_PED_IN_ANY_TRAIN(ped)

--- IS_PED_IN_ANY_VEHICLE
-- Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
-- @param ped Ped - The ped to check.
-- @param atGetIn BOOL - `true` to also consider attempting to enter a vehicle.
-- IS_PED_IN_ANY_VEHICLE(ped, atGetIn)

--- IS_PED_IN_COMBAT
-- Examines whether the ped is engaged in combat; when given a target ped index, it confirms if the ped is actively fighting the specified target, returning true if engaged and false if not.
-- @param ped Ped - Ped index.
-- @param target Ped
-- IS_PED_IN_COMBAT(ped, target)

--- IS_PED_IN_COVER
-- ```
p1 is nearly always 0 in the scripts.  
```
-- @param ped Ped
-- @param exceptUseWeapon BOOL
-- IS_PED_IN_COVER(ped, exceptUseWeapon)

--- IS_PED_IN_COVER_FACING_LEFT
-- @param ped Ped
-- IS_PED_IN_COVER_FACING_LEFT(ped)

--- IS_PED_IN_FLYING_VEHICLE
-- @param ped Ped
-- IS_PED_IN_FLYING_VEHICLE(ped)

--- IS_PED_IN_GROUP
-- @param ped Ped
-- IS_PED_IN_GROUP(ped)

--- IS_PED_IN_HIGH_COVER
-- @param ped Ped
-- IS_PED_IN_HIGH_COVER(ped)

--- IS_PED_IN_MELEE_COMBAT
-- ```
Notes: The function only returns true while the ped is:   
A.) Swinging a random melee attack (including pistol-whipping)  
B.) Reacting to being hit by a melee attack (including pistol-whipping)  
C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).   
You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds  
```
-- @param ped Ped
-- IS_PED_IN_MELEE_COMBAT(ped)

--- IS_PED_IN_MODEL
-- @param ped Ped
-- @param modelHash Hash
-- IS_PED_IN_MODEL(ped, modelHash)

--- IS_PED_IN_PARACHUTE_FREE_FALL
-- @param ped Ped
-- IS_PED_IN_PARACHUTE_FREE_FALL(ped)

--- IS_PED_IN_VEHICLE
-- ```
Gets a value indicating whether the specified ped is in the specified vehicle.  
If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param atGetIn BOOL
-- IS_PED_IN_VEHICLE(ped, vehicle, atGetIn)

--- IS_PED_JACKING
-- @param ped Ped
-- IS_PED_JACKING(ped)

--- IS_PED_JUMPING
-- @param ped Ped
-- IS_PED_JUMPING(ped)

--- IS_PED_JUMPING_OUT_OF_VEHICLE
-- @param ped Ped
-- IS_PED_JUMPING_OUT_OF_VEHICLE(ped)

--- IS_PED_MALE
-- ```
Returns true/false if the ped is/isn't male.  
```
-- @param ped Ped
-- IS_PED_MALE(ped)

--- IS_PED_MODEL
-- @param ped Ped
-- @param modelHash Hash
-- IS_PED_MODEL(ped, modelHash)

--- IS_PED_ON_ANY_BIKE
-- @param ped Ped
-- IS_PED_ON_ANY_BIKE(ped)

--- IS_PED_ON_FOOT
-- @param ped Ped
-- IS_PED_ON_FOOT(ped)

--- IS_PED_ON_MOUNT
-- ```
Same function call as PED::GET_MOUNT, aka just returns 0  
```
-- @param ped Ped
-- IS_PED_ON_MOUNT(ped)

--- IS_PED_ON_SPECIFIC_VEHICLE
-- @param ped Ped
-- @param vehicle Vehicle
-- IS_PED_ON_SPECIFIC_VEHICLE(ped, vehicle)

--- IS_PED_ON_VEHICLE
-- ```
Gets a value indicating whether the specified ped is on top of any vehicle.  
Return 1 when ped is on vehicle.  
Return 0 when ped is not on a vehicle.  
```
-- @param ped Ped
-- IS_PED_ON_VEHICLE(ped)

--- IS_PED_PERFORMING_DEPENDENT_COMBO_LIMIT
-- @param ped Ped
-- IS_PED_PERFORMING_DEPENDENT_COMBO_LIMIT(ped)

--- IS_PED_PERFORMING_MELEE_ACTION
-- @param ped Ped
-- IS_PED_PERFORMING_MELEE_ACTION(ped)

--- IS_PED_PERFORMING_STEALTH_KILL
-- @param ped Ped
-- IS_PED_PERFORMING_STEALTH_KILL(ped)

--- IS_PED_PLANTING_BOMB
-- @param ped Ped
-- IS_PED_PLANTING_BOMB(ped)

--- IS_PED_PRONE
-- @param ped Ped
-- IS_PED_PRONE(ped)

--- IS_PED_RAGDOLL
-- ```
If the ped handle passed through the parenthesis is in a ragdoll state this will return true.  
```
-- @param ped Ped
-- IS_PED_RAGDOLL(ped)

--- IS_PED_RELOADING
-- ```
Returns whether the specified ped is reloading.  
```
-- @param ped Ped
-- IS_PED_RELOADING(ped)

--- IS_PED_RESPONDING_TO_EVENT
-- @param ped Ped
-- @param event Any
-- IS_PED_RESPONDING_TO_EVENT(ped, event)

--- IS_PED_RUNNING_MELEE_TASK
-- @param ped Ped
-- IS_PED_RUNNING_MELEE_TASK(ped)

--- IS_PED_RUNNING_MOBILE_PHONE_TASK
-- @param ped Ped
-- IS_PED_RUNNING_MOBILE_PHONE_TASK(ped)

--- IS_PED_RUNNING_RAGDOLL_TASK
-- @param ped Ped
-- IS_PED_RUNNING_RAGDOLL_TASK(ped)

--- IS_PED_SHOOTING
-- ```
Returns whether the specified ped is shooting.  
```
-- @param ped Ped
-- IS_PED_SHOOTING(ped)

--- IS_PED_SHOOTING_IN_AREA
-- @param ped Ped
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param p7 BOOL
-- @param p8 BOOL
-- IS_PED_SHOOTING_IN_AREA(ped, x1, y1, z1, x2, y2, z2, p7, p8)

--- IS_PED_SITTING_IN_ANY_VEHICLE
-- ```
Detect if ped is in any vehicle  
[True/False]  
```
-- @param ped Ped
-- IS_PED_SITTING_IN_ANY_VEHICLE(ped)

--- IS_PED_SITTING_IN_VEHICLE
-- ```
Detect if ped is sitting in the specified vehicle  
[True/False]  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- IS_PED_SITTING_IN_VEHICLE(ped, vehicle)

--- IS_PED_STOPPED
-- ```
Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.  
```
-- @param ped Ped
-- IS_PED_STOPPED(ped)

--- IS_PED_SWIMMING
-- @param ped Ped
-- IS_PED_SWIMMING(ped)

--- IS_PED_SWIMMING_UNDER_WATER
-- @param ped Ped
-- IS_PED_SWIMMING_UNDER_WATER(ped)

--- IS_PED_TAKING_OFF_HELMET
-- @param ped Ped
-- IS_PED_TAKING_OFF_HELMET(ped)

--- IS_PED_TRACKED
-- @param ped Ped
-- IS_PED_TRACKED(ped)

--- IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE
-- If the ped is attempting to enter a locked vehicle.
-- @param ped Ped - Ped index.
-- IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(ped)

--- IS_PED_USING_ACTION_MODE
-- @param ped Ped
-- IS_PED_USING_ACTION_MODE(ped)

--- IS_PED_USING_ANY_SCENARIO
-- @param ped Ped - The ped handle.
-- IS_PED_USING_ANY_SCENARIO(ped)

--- IS_PED_USING_SCENARIO
-- See [`TASK_START_SCENARIO_IN_PLACE`](#\_0x142A02425FF02BD9) for a list of scenarios.
-- @param ped Ped - The ped handle.
-- @param scenario char* - The scenario name.
-- IS_PED_USING_SCENARIO(ped, scenario)

--- IS_PED_VAULTING
-- @param ped Ped
-- IS_PED_VAULTING(ped)

--- IS_PED_WEARING_HELMET
-- ```
Returns true if the ped passed through the parenthesis is wearing a helmet.  
```
-- @param ped Ped
-- IS_PED_WEARING_HELMET(ped)

--- IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped Ped
-- @param animDict char*
-- @param anim char*
-- IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM(ped, animDict, anim)

--- IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME
-- @param sceneID int
-- IS_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(sceneID)

--- IS_SYNCHRONIZED_SCENE_LOOPED
-- @param sceneID int
-- IS_SYNCHRONIZED_SCENE_LOOPED(sceneID)

--- IS_SYNCHRONIZED_SCENE_RUNNING
-- ```
Returns true if a synchronized scene is running  
```
-- @param sceneId int
-- IS_SYNCHRONIZED_SCENE_RUNNING(sceneId)

--- IS_TRACKED_PED_VISIBLE
-- ```
returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.  
Target needs to be tracked.. won't work otherwise.  
```
-- @param ped Ped
-- IS_TRACKED_PED_VISIBLE(ped)

--- KNOCK_OFF_PED_PROP
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- @param p4 BOOL
-- KNOCK_OFF_PED_PROP(ped, p1, p2, p3, p4)

--- KNOCK_PED_OFF_VEHICLE
-- @param ped Ped
-- KNOCK_PED_OFF_VEHICLE(ped)

--- PLAY_FACIAL_ANIM
-- @param ped Ped
-- @param animName char*
-- @param animDict char*
-- PLAY_FACIAL_ANIM(ped, animName, animDict)

--- REGISTER_HATED_TARGETS_AROUND_PED
-- ```
Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).  
```
-- @param ped Ped
-- @param radius float
-- REGISTER_HATED_TARGETS_AROUND_PED(ped, radius)

--- REGISTER_PEDHEADSHOT
-- ```
gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
```
-- @param ped Ped - The ped you want to take the "headshot" of.
-- REGISTER_PEDHEADSHOT(ped)

--- REGISTER_PEDHEADSHOT_TRANSPARENT
-- Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.

**Result of the example code:**
<https://i.imgur.com/iHz8ztn.png>
-- @param ped Ped - A ped handle.
-- REGISTER_PEDHEADSHOT_TRANSPARENT(ped)

--- REGISTER_TARGET
-- ```
PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.  
l_216 = RECSBRobber1  
```
-- @param ped Ped
-- @param target Ped
-- REGISTER_TARGET(ped, target)

--- RELEASE_PEDHEADSHOT_IMG_UPLOAD
-- @param id int
-- RELEASE_PEDHEADSHOT_IMG_UPLOAD(id)

--- RELEASE_PED_PRELOAD_PROP_DATA
-- @param ped Ped
-- RELEASE_PED_PRELOAD_PROP_DATA(ped)

--- RELEASE_PED_PRELOAD_VARIATION_DATA
-- @param ped Ped
-- RELEASE_PED_PRELOAD_VARIATION_DATA(ped)

--- REMOVE_ACTION_MODE_ASSET
-- @param asset char*
-- REMOVE_ACTION_MODE_ASSET(asset)

--- REMOVE_GROUP
-- @param groupId int
-- REMOVE_GROUP(groupId)

--- REMOVE_PED_DEFENSIVE_AREA
-- ```
Ped will no longer get angry when you stay near him.  
```
-- @param ped Ped
-- @param toggle BOOL
-- REMOVE_PED_DEFENSIVE_AREA(ped, toggle)

--- REMOVE_PED_ELEGANTLY
-- ```
Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed. 
```
-- @param ped Ped*
-- REMOVE_PED_ELEGANTLY(ped)

--- REMOVE_PED_FROM_GROUP
-- @param ped Ped
-- REMOVE_PED_FROM_GROUP(ped)

--- REMOVE_PED_HELMET
-- Remove a helmet from a ped
-- @param ped Ped - Ped index.
-- @param instantly BOOL - Force to remove.
-- REMOVE_PED_HELMET(ped, instantly)

--- REMOVE_PED_PREFERRED_COVER_SET
-- @param ped Ped
-- REMOVE_PED_PREFERRED_COVER_SET(ped)

--- REMOVE_RELATIONSHIP_GROUP
-- @param groupHash Hash
-- REMOVE_RELATIONSHIP_GROUP(groupHash)

--- REMOVE_SCENARIO_BLOCKING_AREA
-- @param scenarioBlockingIndex int - the index of the Scenario blocking area
-- @param bNetwork BOOL - Optionally networked to all other players
-- REMOVE_SCENARIO_BLOCKING_AREA(scenarioBlockingIndex, bNetwork)

--- REMOVE_SCENARIO_BLOCKING_AREAS
-- REMOVE_SCENARIO_BLOCKING_AREAS()

--- REMOVE_STEALTH_MODE_ASSET
-- @param asset char*
-- REMOVE_STEALTH_MODE_ASSET(asset)

--- REQUEST_ACTION_MODE_ASSET
-- @param asset char*
-- REQUEST_ACTION_MODE_ASSET(asset)

--- REQUEST_PEDHEADSHOT_IMG_UPLOAD
-- @param id int
-- REQUEST_PEDHEADSHOT_IMG_UPLOAD(id)

--- REQUEST_PED_VEHICLE_VISIBILITY_TRACKING
-- @param ped Ped
-- @param p1 BOOL
-- REQUEST_PED_VEHICLE_VISIBILITY_TRACKING(ped, p1)

--- REQUEST_PED_VISIBILITY_TRACKING
-- @param ped Ped
-- REQUEST_PED_VISIBILITY_TRACKING(ped)

--- REQUEST_STEALTH_MODE_ASSET
-- @param asset char*
-- REQUEST_STEALTH_MODE_ASSET(asset)

--- RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
-- RESET_AI_MELEE_WEAPON_DAMAGE_MODIFIER()

--- RESET_AI_WEAPON_DAMAGE_MODIFIER
-- RESET_AI_WEAPON_DAMAGE_MODIFIER()

--- RESET_GROUP_FORMATION_DEFAULT_SPACING
-- @param groupHandle int
-- RESET_GROUP_FORMATION_DEFAULT_SPACING(groupHandle)

--- RESET_PED_IN_VEHICLE_CONTEXT
-- @param ped Ped
-- RESET_PED_IN_VEHICLE_CONTEXT(ped)

--- RESET_PED_LAST_VEHICLE
-- ```
Resets the value for the last vehicle driven by the Ped.  
```
-- @param ped Ped
-- RESET_PED_LAST_VEHICLE(ped)

--- RESET_PED_MOVEMENT_CLIPSET
-- @param ped Ped
-- @param transitionSpeed float
-- RESET_PED_MOVEMENT_CLIPSET(ped, transitionSpeed)

--- RESET_PED_RAGDOLL_TIMER
-- @param ped Ped
-- RESET_PED_RAGDOLL_TIMER(ped)

--- RESET_PED_STRAFE_CLIPSET
-- @param ped Ped
-- RESET_PED_STRAFE_CLIPSET(ped)

--- RESET_PED_VISIBLE_DAMAGE
-- @param ped Ped
-- RESET_PED_VISIBLE_DAMAGE(ped)

--- RESET_PED_WEAPON_MOVEMENT_CLIPSET
-- @param ped Ped
-- RESET_PED_WEAPON_MOVEMENT_CLIPSET(ped)

--- RESURRECT_PED
-- ```
This function will simply bring the dead person back to life.
Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
```
-- @param ped Ped
-- RESURRECT_PED(ped)

--- REVIVE_INJURED_PED
-- ```
It will revive/cure the injured ped. The condition is ped must not be dead.  
Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).  
This function is well suited there.  
```
-- @param ped Ped
-- REVIVE_INJURED_PED(ped)

--- SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER
-- @param modifier float
-- SET_AI_MELEE_WEAPON_DAMAGE_MODIFIER(modifier)

--- SET_AI_WEAPON_DAMAGE_MODIFIER
-- @param value float
-- SET_AI_WEAPON_DAMAGE_MODIFIER(value)

--- SET_AMBIENT_PEDS_DROP_MONEY
-- @param p0 BOOL
-- SET_AMBIENT_PEDS_DROP_MONEY(p0)

--- SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
-- ```
works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, toggle)

--- SET_CAN_ATTACK_FRIENDLY
-- ```
Setting ped to true allows the ped to shoot "friendlies".  
p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.  
p1 = false & p2 = false for unable to aim at.  
p1 = true & p2 = false for able to aim at.  
```
-- @param ped Ped
-- @param toggle BOOL
-- @param p2 BOOL
-- SET_CAN_ATTACK_FRIENDLY(ped, toggle, p2)

--- SET_COMBAT_FLOAT
-- @param ped Ped
-- @param combatType int - A value between 0-14, See [`GET_COMBAT_FLOAT`](#\_0x52DFF8A10508090A) for a list of possible parameters.
-- @param p2 float
-- SET_COMBAT_FLOAT(ped, combatType, p2)

--- SET_CREATE_RANDOM_COPS
-- @param toggle BOOL
-- SET_CREATE_RANDOM_COPS(toggle)

--- SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS
-- @param toggle BOOL
-- SET_CREATE_RANDOM_COPS_NOT_ON_SCENARIOS(toggle)

--- SET_CREATE_RANDOM_COPS_ON_SCENARIOS
-- @param toggle BOOL
-- SET_CREATE_RANDOM_COPS_ON_SCENARIOS(toggle)

--- SET_DRIVER_ABILITY
-- ```
The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.  
```
-- @param driver Ped
-- @param ability float
-- SET_DRIVER_ABILITY(driver, ability)

--- SET_DRIVER_AGGRESSIVENESS
-- ```
range 0.0f - 1.0f  
```
-- @param driver Ped
-- @param aggressiveness float
-- SET_DRIVER_AGGRESSIVENESS(driver, aggressiveness)

--- SET_DRIVER_RACING_MODIFIER
-- ```
Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
```
-- @param driver Ped
-- @param modifier float
-- SET_DRIVER_RACING_MODIFIER(driver, modifier)

--- SET_ENABLE_BOUND_ANKLES
-- Used with [SET_ENABLE_HANDCUFFS](#\_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
-- @param ped Ped
-- @param toggle BOOL
-- SET_ENABLE_BOUND_ANKLES(ped, toggle)

--- SET_ENABLE_HANDCUFFS
-- ```
ped can not pull out a weapon when true  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_ENABLE_HANDCUFFS(ped, toggle)

--- SET_ENABLE_PED_ENVEFF_SCALE
-- @param ped Ped
-- @param toggle BOOL
-- SET_ENABLE_PED_ENVEFF_SCALE(ped, toggle)

--- SET_ENABLE_SCUBA
-- ```
Enables diving motion when underwater.  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_ENABLE_SCUBA(ped, toggle)

--- SET_FACIAL_IDLE_ANIM_OVERRIDE
-- @param ped Ped
-- @param animName char*
-- @param animDict char*
-- SET_FACIAL_IDLE_ANIM_OVERRIDE(ped, animName, animDict)

--- SET_FORCE_FOOTSTEP_UPDATE
-- @param ped Ped
-- @param toggle BOOL
-- SET_FORCE_FOOTSTEP_UPDATE(ped, toggle)

--- SET_FORCE_STEP_TYPE
-- @param ped Ped
-- @param p1 BOOL
-- @param type int
-- @param p3 int
-- SET_FORCE_STEP_TYPE(ped, p1, type, p3)

--- SET_GROUP_FORMATION
-- ```
0: Freedom to move
1: Circle Around Leader
2: Alternative Circle Around Leader  
3: Line, with Leader at center  
4: Arrow Formation
5: "V" Formation
6: Line Follow Formation
7: Single Formation
8: Pairwise
```
-- @param groupId int
-- @param formationType int
-- SET_GROUP_FORMATION(groupId, formationType)

--- SET_GROUP_FORMATION_SPACING
-- @param groupId int
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- SET_GROUP_FORMATION_SPACING(groupId, p1, p2, p3)

--- SET_GROUP_SEPARATION_RANGE
-- ```
Sets the range at which members will automatically leave the group.  
```
-- @param groupHandle int
-- @param separationRange float
-- SET_GROUP_SEPARATION_RANGE(groupHandle, separationRange)

--- SET_HEAD_BLEND_PALETTE_COLOR
-- Preview: https://gfycat.com/MaleRareAmazonparrot
-- @param ped Ped
-- @param r int
-- @param g int
-- @param b int
-- @param id int - From 0 to 3.
-- SET_HEAD_BLEND_PALETTE_COLOR(ped, r, g, b, id)

--- SET_IK_TARGET
-- Sets the IK target for a given IK part belonging to the ped.

**Please note:** The IK target will only be valid for one update, so it needs to be set for as long as it is needed (to avoid IK targets not being cleared and getting stuck enabled).

```cpp
enum eIkPart {
  IK_PART_INVALID = 0,
  // head
  IK_PART_HEAD = 1,
  // spine
  IK_PART_SPINE = 2,
  // Left Arm
  IK_PART_ARM_LEFT = 3,
  // Right Arm
  IK_PART_ARM_RIGHT = 4,
  // Left Leg
  IK_PART_LEG_LEFT = 5,
  // Right Leg
  IK_PART_LEG_RIGHT = 6
};

```

```cpp
enum eIkTargetFlags {
  ITF_DEFAULT = 0,
  // arm target relative to the handbone
  ITF_ARM_TARGET_WRT_HANDBON = 1,
  // arm target relative to the pointhelper
  ITF_ARM_TARGET_WRT_POINTHELPER = 2,
  // arm target relative to the ikhelper
  ITF_ARM_TARGET_WRT_IKHELPE = 4,
  // use animation tags directly
  ITF_IK_TAG_MODE_NORMAL = 8,
  // use animation tags in ALLOW mode
  ITF_IK_TAG_MODE_ALLOW = 16,
  // use animation tags in BLOCK mode
  ITF_IK_TAG_MODE_BLOCK = 32,
  // solve for orientation in addition to position
  ITF_ARM_USE_ORIENTATION = 64
};

```

```
NativeDB Introduced: v323
```
-- @param ped Ped - The ped handle.
-- @param ikIndex int - See `eIkPart` for indexes.
-- @param entityLookAt Entity - Set to 0 for no entity, offsets will be world coordinates instead.
-- @param boneLookAt int - Set to -1 for no target bone.
-- @param offsetX float - X-axis offset calculated from the position of `entityLookAt`.
-- @param offsetY float - Y-axis offset calculated from the position of `entityLookAt`.
-- @param offsetZ float - Z-axis offset calculated from the position of `entityLookAt`.
-- @param ikTargetFlags int - See `eIkTargetFlags` for flags.
-- @param blendInDuration int - Animation blending in (in ms). `-1` by default.
-- @param blendOutDuration int - Animation blending out (in ms). `-1` by default.
-- SET_IK_TARGET(ped, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, ikTargetFlags, blendInDuration, blendOutDuration)

--- SET_MOVEMENT_MODE_OVERRIDE
-- ```
name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
```
-- @param ped Ped
-- @param name char*
-- SET_MOVEMENT_MODE_OVERRIDE(ped, name)

--- SET_PED_ACCURACY
-- ```
accuracy = 0-100, 100 being perfectly accurate
```
-- @param ped Ped
-- @param accuracy int
-- SET_PED_ACCURACY(ped, accuracy)

--- SET_PED_ALERTNESS
-- ```
value ranges from 0 to 3.  
```
-- @param ped Ped
-- @param value int
-- SET_PED_ALERTNESS(ped, value)

--- SET_PED_ALLOWED_TO_DUCK
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_ALLOWED_TO_DUCK(ped, toggle)

--- SET_PED_ALLOW_VEHICLES_OVERRIDE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_ALLOW_VEHICLES_OVERRIDE(ped, toggle)

--- SET_PED_ALTERNATE_MOVEMENT_ANIM
-- ```
stance:  
0 = idle  
1 = walk  
2 = running  
p5 = usually set to true  
```

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped Ped
-- @param stance int
-- @param animDictionary char*
-- @param animationName char*
-- @param p4 float
-- @param p5 BOOL
-- SET_PED_ALTERNATE_MOVEMENT_ANIM(ped, stance, animDictionary, animationName, p4, p5)

--- SET_PED_ALTERNATE_WALK_ANIM
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped Ped
-- @param animDict char*
-- @param animName char*
-- @param p3 float
-- @param p4 BOOL
-- SET_PED_ALTERNATE_WALK_ANIM(ped, animDict, animName, p3, p4)

--- SET_PED_ANGLED_DEFENSIVE_AREA
-- @param ped Ped
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 BOOL
-- @param p9 BOOL
-- SET_PED_ANGLED_DEFENSIVE_AREA(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- SET_PED_AO_BLOB_RENDERING
-- ```
Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_AO_BLOB_RENDERING(ped, toggle)

--- SET_PED_ARMOUR
-- ```
Sets the armor of the specified ped.  
ped: The Ped to set the armor of.  
amount: A value between 0 and 100 indicating the value to set the Ped's armor to.  
```
-- @param ped Ped
-- @param amount int
-- SET_PED_ARMOUR(ped, amount)

--- SET_PED_AS_COP
-- ```
Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_AS_COP(ped, toggle)

--- SET_PED_AS_ENEMY
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_AS_ENEMY(ped, toggle)

--- SET_PED_AS_GROUP_LEADER
-- @param ped Ped
-- @param groupId int
-- SET_PED_AS_GROUP_LEADER(ped, groupId)

--- SET_PED_AS_GROUP_MEMBER
-- @param ped Ped
-- @param groupId int
-- SET_PED_AS_GROUP_MEMBER(ped, groupId)

--- SET_PED_BLEND_FROM_PARENTS
-- @param ped Ped
-- @param father Ped
-- @param mother Ped
-- @param fathersSide float
-- @param mothersSide float
-- SET_PED_BLEND_FROM_PARENTS(ped, father, mother, fathersSide, mothersSide)

--- SET_PED_BLOCKS_PATHING_WHEN_DEAD
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_BLOCKS_PATHING_WHEN_DEAD(ped, toggle)

--- SET_PED_BOUNDS_ORIENTATION
-- @param ped Ped
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- SET_PED_BOUNDS_ORIENTATION(ped, p1, p2, p3, p4, p5)

--- SET_PED_CAN_ARM_IK
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_ARM_IK(ped, toggle)

--- SET_PED_CAN_BE_DRAGGED_OUT
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_BE_DRAGGED_OUT(ped, toggle)

--- SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE
-- ```
state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
```
-- @param ped Ped
-- @param state int
-- SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(ped, state)

--- SET_PED_CAN_BE_SHOT_IN_VEHICLE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_BE_SHOT_IN_VEHICLE(ped, toggle)

--- SET_PED_CAN_BE_TARGETED_WHEN_INJURED
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_BE_TARGETED_WHEN_INJURED(ped, toggle)

--- SET_PED_CAN_BE_TARGETED_WITHOUT_LOS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(ped, toggle)

--- SET_PED_CAN_BE_TARGETTED
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_BE_TARGETTED(ped, toggle)

--- SET_PED_CAN_BE_TARGETTED_BY_PLAYER
-- @param ped Ped
-- @param player Player
-- @param toggle BOOL
-- SET_PED_CAN_BE_TARGETTED_BY_PLAYER(ped, player, toggle)

--- SET_PED_CAN_BE_TARGETTED_BY_TEAM
-- @param ped Ped
-- @param team int
-- @param toggle BOOL
-- SET_PED_CAN_BE_TARGETTED_BY_TEAM(ped, team, toggle)

--- SET_PED_CAN_COWER_IN_COVER
-- ```
It simply makes the said ped to cower behind cover object(wall, desk, car)  
Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_COWER_IN_COVER(ped, toggle)

--- SET_PED_CAN_EVASIVE_DIVE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_EVASIVE_DIVE(ped, toggle)

--- SET_PED_CAN_HEAD_IK
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_HEAD_IK(ped, toggle)

--- SET_PED_CAN_LEG_IK
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_LEG_IK(ped, toggle)

--- SET_PED_CAN_LOSE_PROPS_ON_DAMAGE
-- It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
-- @param ped Ped - The target ped
-- @param loseProps BOOL - true = allow props to fall off, false = don't let props fall off
-- @param p2 int - purpose unknown, usually 0
-- SET_PED_CAN_LOSE_PROPS_ON_DAMAGE(ped, loseProps, p2)

--- SET_PED_CAN_PEEK_IN_COVER
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_PEEK_IN_COVER(ped, toggle)

--- SET_PED_CAN_PLAY_AMBIENT_ANIMS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_PLAY_AMBIENT_ANIMS(ped, toggle)

--- SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(ped, toggle)

--- SET_PED_CAN_PLAY_GESTURE_ANIMS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_PLAY_GESTURE_ANIMS(ped, toggle)

--- SET_PED_CAN_PLAY_VISEME_ANIMS
-- ```
p2 usually 0  
```
-- @param ped Ped
-- @param toggle BOOL
-- @param p2 BOOL
-- SET_PED_CAN_PLAY_VISEME_ANIMS(ped, toggle, p2)

--- SET_PED_CAN_RAGDOLL
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_RAGDOLL(ped, toggle)

--- SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(ped, toggle)

--- SET_PED_CAN_SMASH_GLASS
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 BOOL
-- SET_PED_CAN_SMASH_GLASS(ped, p1, p2)

--- SET_PED_CAN_SWITCH_WEAPON
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_SWITCH_WEAPON(ped, toggle)

--- SET_PED_CAN_TELEPORT_TO_GROUP_LEADER
-- ```
This only will teleport the ped to the group leader if the group leader teleports (sets coords).  
Only works in singleplayer  
```
-- @param pedHandle Ped
-- @param groupHandle int
-- @param toggle BOOL
-- SET_PED_CAN_TELEPORT_TO_GROUP_LEADER(pedHandle, groupHandle, toggle)

--- SET_PED_CAN_TORSO_IK
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_TORSO_IK(ped, toggle)

--- SET_PED_CAN_TORSO_REACT_IK
-- @param ped Ped
-- @param p1 BOOL
-- SET_PED_CAN_TORSO_REACT_IK(ped, p1)

--- SET_PED_CAN_TORSO_VEHICLE_IK
-- @param ped Ped
-- @param p1 BOOL
-- SET_PED_CAN_TORSO_VEHICLE_IK(ped, p1)

--- SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(ped, toggle)

--- SET_PED_CAPSULE
-- ```
Overrides the ped's collision capsule radius for the current tick.  
Must be called every tick to be effective.  
Setting this to 0.001 will allow warping through some objects.  
```
-- @param ped Ped
-- @param value float
-- SET_PED_CAPSULE(ped, value)

--- SET_PED_CLOTH_PACKAGE_INDEX
-- @param ped Ped
-- @param p1 int
-- SET_PED_CLOTH_PACKAGE_INDEX(ped, p1)

--- SET_PED_CLOTH_PRONE
-- @param p0 Any
-- @param p1 Any
-- SET_PED_CLOTH_PRONE(p0, p1)

--- SET_PED_COMBAT_ABILITY
-- ```
100 would equal attack  
less then 50ish would mean run away  
Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:  
0: CA_Poor  
1: CA_Average  
2: CA_Professional  
Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.  
```
-- @param ped Ped
-- @param p1 int
-- SET_PED_COMBAT_ABILITY(ped, p1)

--- SET_PED_COMBAT_ATTRIBUTES
-- These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.

So far, these are the equivalents found:

```cpp
enum eCombatAttribute
{
  CA_INVALID = -1,	
  // AI will only use cover if this is set
  CA_USE_COVER = 0,
  // AI will only use vehicles if this is set
  CA_USE_VEHICLE = 1,
  // AI will only driveby from a vehicle if this is set
  CA_DO_DRIVEBYS = 2,
  // Will be forced to stay in a ny vehicel if this isn't set
  CA_LEAVE_VEHICLES = 3,
  // This ped can make decisions on whether to strafe or not based on distance to destination, recent bullet events, etc.
  CA_CAN_USE_DYNAMIC_STRAFE_DECISIONS	= 4,
  // Ped will always fight upon getting threat response task
  CA_ALWAYS_FIGHT = 5,
  // If in combat and in a vehicle, the ped will flee rather than attacking
  CA_FLEE_WHILST_IN_VEHICLE = 6,
  // If in combat and chasing in a vehicle, the ped will keep a distance behind rather than ramming
  CA_JUST_FOLLOW_VEHICLE = 7,
  // Deprecated
  CA_PLAY_REACTION_ANIMS = 8,
  // Peds will scan for and react to dead peds found
  CA_WILL_SCAN_FOR_DEAD_PEDS = 9,
  // Deprecated
  CA_IS_A_GUARD = 10,
  // The ped will seek cover only 
  CA_JUST_SEEK_COVER = 11,
  // Ped will only blind fire when in cover
  CA_BLIND_FIRE_IN_COVER = 12,
  // Ped may advance
  CA_AGGRESSIVE = 13,
  // Ped can investigate events such as distant gunfire, footsteps, explosions etc
  CA_CAN_INVESTIGATE = 14,
  // Ped can use a radio to call for backup (happens after a reaction)
  CA_CAN_USE_RADIO = 15,
  // Deprecated
  CA_CAN_CAPTURE_ENEMY_PEDS = 16,
  // Ped will always flee upon getting threat response task
  CA_ALWAYS_FLEE = 17,
  // Ped can do unarmed taunts in vehicle
  CA_CAN_TAUNT_IN_VEHICLE = 20,
  // Ped will be able to chase their targets if both are on foot and the target is running away
  CA_CAN_CHASE_TARGET_ON_FOOT = 21,
  // Ped can drag injured peds to safety
  CA_WILL_DRAG_INJURED_PEDS_TO_SAFETY = 22,
  // Ped will require LOS to the target it is aiming at before shooting
  CA_REQUIRES_LOS_TO_SHOOT = 23,
  // Ped is allowed to use proximity based fire rate (increasing fire rate at closer distances)
  CA_USE_PROXIMITY_FIRING_RATE = 24,
  // Normally peds can switch briefly to a secondary target in combat, setting this will prevent that
  CA_DISABLE_SECONDARY_TARGET = 25,
  // This will disable the flinching combat entry reactions for peds, instead only playing the turn and aim anims
  CA_DISABLE_ENTRY_REACTIONS = 26,
  // Force ped to be 100% accurate in all situations (added by Jay Reinebold)
  CA_PERFECT_ACCURACY = 27,
  // If we don't have cover and can't see our target it's possible we will advance, even if the target is in cover
  CA_CAN_USE_FRUSTRATED_ADVANCE	= 28,
  // This will have the ped move to defensive areas and within attack windows before performing the cover search
  CA_MOVE_TO_LOCATION_BEFORE_COVER_SEARCH = 29,
  // Allow shooting of our weapon even if we don't have LOS (this isn't X-ray vision as it only affects weapon firing)
  CA_CAN_SHOOT_WITHOUT_LOS = 30,
  // Ped will try to maintain a min distance to the target, even if using defensive areas (currently only for cover finding + usage) 
  CA_MAINTAIN_MIN_DISTANCE_TO_TARGET = 31,
  // Allows ped to use steamed variations of peeking anims
  CA_CAN_USE_PEEKING_VARIATIONS	= 34,
  // Disables pinned down behaviors
  CA_DISABLE_PINNED_DOWN = 35,
  // Disables pinning down others
  CA_DISABLE_PIN_DOWN_OTHERS = 36,
  // When defensive area is reached the area is cleared and the ped is set to use defensive combat movement
  CA_OPEN_COMBAT_WHEN_DEFENSIVE_AREA_IS_REACHED = 37,
  // Disables bullet reactions
  CA_DISABLE_BULLET_REACTIONS = 38,
  // Allows ped to bust the player
  CA_CAN_BUST = 39,
  // This ped is ignored by other peds when wanted
  CA_IGNORED_BY_OTHER_PEDS_WHEN_WANTED = 40,
  // Ped is allowed to "jack" vehicles when needing to chase a target in combat
  CA_CAN_COMMANDEER_VEHICLES = 41,
  // Ped is allowed to flank
  CA_CAN_FLANK = 42,
  // Ped will switch to advance if they can't find cover
  CA_SWITCH_TO_ADVANCE_IF_CANT_FIND_COVER = 43,
  // Ped will switch to defensive if they are in cover
  CA_SWITCH_TO_DEFENSIVE_IF_IN_COVER = 44,
  // Ped will clear their primary defensive area when it is reached
  CA_CLEAR_PRIMARY_DEFENSIVE_AREA_WHEN_REACHED = 45,
  // Ped is allowed to fight armed peds when not armed
  CA_CAN_FIGHT_ARMED_PEDS_WHEN_NOT_ARMED = 46,
  // Ped is not allowed to use tactical points if set to use defensive movement (will only use cover)
  CA_ENABLE_TACTICAL_POINTS_WHEN_DEFENSIVE = 47,
  // Ped cannot adjust cover arcs when testing cover safety (atm done on corner cover points when  ped usingdefensive area + no LOS)
  CA_DISABLE_COVER_ARC_ADJUSTMENTS = 48,
  // Ped may use reduced accuracy with large number of enemies attacking the same local player target
  CA_USE_ENEMY_ACCURACY_SCALING	= 49,
  // Ped is allowed to charge the enemy position
  CA_CAN_CHARGE = 50,
  // When defensive area is reached the area is cleared and the ped is set to use will advance movement
  CA_REMOVE_AREA_SET_WILL_ADVANCE_WHEN_DEFENSIVE_AREA_REACHED = 51,
  // Use the vehicle attack mission during combat (only works on driver)
  CA_USE_VEHICLE_ATTACK = 52,
  // Use the vehicle attack mission during combat if the vehicle has mounted guns (only works on driver)
  CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS = 53,
  // Always equip best weapon in combat
  CA_ALWAYS_EQUIP_BEST_WEAPON = 54,
  // Ignores in water at depth visibility check
  CA_CAN_SEE_UNDERWATER_PEDS = 55,
  // Will prevent this ped from aiming at any AI targets that are in helicopters
  CA_DISABLE_AIM_AT_AI_TARGETS_IN_HELIS = 56,
  // Disables peds seeking due to no clear line of sight
  CA_DISABLE_SEEK_DUE_TO_LINE_OF_SIGHT = 57,
  // To be used when releasing missions peds if we don't want them fleeing from combat (mission peds already prevent flee)
  CA_DISABLE_FLEE_FROM_COMBAT = 58,
  // Disables target changes during vehicle pursuit
  CA_DISABLE_TARGET_CHANGES_DURING_VEHICLE_PURSUIT = 59,
  // Ped may throw a smoke grenade at player loitering in combat
  CA_CAN_THROW_SMOKE_GRENADE = 60,
  // Will clear a set defensive area if that area cannot be reached
  CA_CLEAR_AREA_SET_DEFENSIVE_IF_DEFENSIVE_CANNOT_BE_REACHED = 62,
  // Disable block from pursue during vehicle chases
  CA_DISABLE_BLOCK_FROM_PURSUE_DURING_VEHICLE_CHASE = 64,
  // Disable spin out during vehicle chases
  CA_DISABLE_SPIN_OUT_DURING_VEHICLE_CHASE = 65,
  // Disable cruise in front during block during vehicle chases
  CA_DISABLE_CRUISE_IN_FRONT_DURING_BLOCK_DURING_VEHICLE_CHASE = 66,
  // Makes it more likely that the ped will continue targeting a target with blocked los for a few seconds
  CA_CAN_IGNORE_BLOCKED_LOS_WEIGHTING = 67,
  // Disables the react to buddy shot behaviour.
  CA_DISABLE_REACT_TO_BUDDY_SHOT = 68,
  // Prefer pathing using navmesh over road nodes
  CA_PREFER_NAVMESH_DURING_VEHICLE_CHASE = 69,
  // Ignore road edges when avoiding
  CA_ALLOWED_TO_AVOID_OFFROAD_DURING_VEHICLE_CHASE = 70,
  // Permits ped to charge a target outside the assigned defensive area.
  CA_PERMIT_CHARGE_BEYOND_DEFENSIVE_AREA = 71,
  // This ped will switch to an RPG if target is in a vehicle, otherwise will use alternate weapon.
  CA_USE_ROCKETS_AGAINST_VEHICLES_ONLY = 72,
  // Disables peds moving to a tactical point without clear los
  CA_DISABLE_TACTICAL_POINTS_WITHOUT_CLEAR_LOS = 73,
  // Disables pull alongside during vehicle chase
  CA_DISABLE_PULL_ALONGSIDE_DURING_VEHICLE_CHASE = 74,
  // If set on a ped, they will not flee when all random peds flee is set to TRUE (they are still able to flee due to other reasons)
  CA_DISABLE_ALL_RANDOMS_FLEE = 78,
  // This ped will send out a script DeadPedSeenEvent when they see a dead ped
  CA_WILL_GENERATE_DEAD_PED_SEEN_SCRIPT_EVENTS = 79,
  // This will use the receiving peds sense range rather than the range supplied to the communicate event
  CA_USE_MAX_SENSE_RANGE_WHEN_RECEIVING_EVENTS = 80,
  // When aiming from a vehicle the ped will only aim at targets on his side of the vehicle
  CA_RESTRICT_IN_VEHICLE_AIMING_TO_CURRENT_SIDE = 81,
  // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
  CA_USE_DEFAULT_BLOCKED_LOS_POSITION_AND_DIRECTION = 82,
  // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
  CA_REQUIRES_LOS_TO_AIM = 83,
  // Allow vehicles spawned infront of target facing away to enter cruise and wait to block approaching target
  CA_CAN_CRUISE_AND_BLOCK_IN_VEHICLE = 84,
  // Peds flying aircraft will prefer to target other aircraft over entities on the ground
  CA_PREFER_AIR_COMBAT_WHEN_IN_AIRCRAFT = 85,
  //Allow peds flying aircraft to use dog fighting behaviours
  CA_ALLOW_DOG_FIGHTING = 86,
  // This will make the weight of targets who aircraft vehicles be reduced greatly compared to targets on foot or in ground based vehicles
  CA_PREFER_NON_AIRCRAFT_TARGETS = 87,
  //When peds are tasked to go to combat, they keep searching for a known target for a while before forcing an unknown one
  CA_PREFER_KNOWN_TARGETS_WHEN_COMBAT_CLOSEST_TARGET = 88,
  // Only allow mounted weapons to fire if within the correct attack angle (default 25-degree cone). On a flag in order to keep exiting behaviour and only fix in specific cases.
  CA_FORCE_CHECK_ATTACK_ANGLE_FOR_MOUNTED_GUNS = 89,
  // Blocks the firing state for passenger-controlled mounted weapons. Existing flags CA_USE_VEHICLE_ATTACK and CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS only work for drivers.
  CA_BLOCK_FIRE_FOR_VEHICLE_PASSENGER_MOUNTED_GUNS = 90 
};
```
-- @param ped Ped - The ped to set attributes to.
-- @param attributeIndex int - The attribute index to set. See `eCombatAttribute` enum.
-- @param enabled BOOL - A boolean to enable/disable the attribute (true/false).
-- SET_PED_COMBAT_ATTRIBUTES(ped, attributeIndex, enabled)

--- SET_PED_COMBAT_MOVEMENT
-- ```
0 - Stationary (Will just stand in place)  
1 - Defensive (Will try to find cover and very likely to blind fire)  
2 - Offensive (Will attempt to charge at enemy but take cover as well)  
3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)  
```
-- @param ped Ped
-- @param combatMovement int
-- SET_PED_COMBAT_MOVEMENT(ped, combatMovement)

--- SET_PED_COMBAT_RANGE
-- Define the scope within which the ped will engage in combat with the target.

```cpp
enum eCombatRange {
    CR_NEAR = 0, // keeps within 5-15m
    CR_MEDIUM = 1, // keeps within 7-30m
    CR_FAR = 2, // keeps within 15-40m
    CR_VERY_FAR = 3 // keeps within 22-45m
};
```
-- @param ped Ped - Ped index
-- @param range int - See `eCombatRange` enum.
-- SET_PED_COMBAT_RANGE(ped, range)

--- SET_PED_COMPONENT_VARIATION
-- This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.

### MP Freemode list of components

**0**: Face
**1**: Mask
**2**: Hair
**3**: Torso
**4**: Leg
**5**: Parachute / bag
**6**: Shoes
**7**: Accessory
**8**: Undershirt
**9**: Kevlar
**10**: Badge
**11**: Torso 2

List of Component IDs

```cpp
// Components
enum ePedVarComp
{
    PV_COMP_INVALID = 0xFFFFFFFF,
    PV_COMP_HEAD = 0, // "HEAD"
    PV_COMP_BERD = 1, // "BEARD"
    PV_COMP_HAIR = 2, // "HAIR"
    PV_COMP_UPPR = 3, // "UPPER"
    PV_COMP_LOWR = 4, // "LOWER"
    PV_COMP_HAND = 5, // "HAND"
    PV_COMP_FEET = 6, // "FEET"
    PV_COMP_TEEF = 7, // "TEETH"
    PV_COMP_ACCS = 8, // "ACCESSORIES"
    PV_COMP_TASK = 9, // "TASK"
    PV_COMP_DECL = 10, // "DECL"
    PV_COMP_JBIB = 11, // "JBIB"
    PV_COMP_MAX = 12,
};
```
-- @param ped Ped - The ped handle.
-- @param componentId int - The component that you want to set.
-- @param drawableId int - The drawable id that is going to be set. Refer to [GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS](#\_0x27561561732A7842).
-- @param textureId int - The texture id of the drawable. Refer to [GET_NUMBER_OF_PED_TEXTURE_VARIATIONS](#\_0x8F7156A3142A6BAD).
-- @param paletteId int - 0 to 3.
-- SET_PED_COMPONENT_VARIATION(ped, componentId, drawableId, textureId, paletteId)

--- SET_PED_CONFIG_FLAG
-- ```cpp
// Potential names and hash collisions included as comments
enum ePedConfigFlags {
	CPED_CONFIG_FLAG_CreatedByFactory = 0,
	CPED_CONFIG_FLAG_CanBeShotInVehicle = 1,
	CPED_CONFIG_FLAG_NoCriticalHits = 2,
	CPED_CONFIG_FLAG_DrownsInWater = 3,
	CPED_CONFIG_FLAG_DrownsInSinkingVehicle = 4,
	CPED_CONFIG_FLAG_DiesInstantlyWhenSwimming = 5,
	CPED_CONFIG_FLAG_HasBulletProofVest = 6,
	CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
	CPED_CONFIG_FLAG_NeverFallOffSkis = 8,
	CPED_CONFIG_FLAG_NeverEverTargetThisPed = 9,
	CPED_CONFIG_FLAG_ThisPedIsATargetPriority = 10,
	CPED_CONFIG_FLAG_TargettableWithNoLos = 11,
	CPED_CONFIG_FLAG_DoesntListenToPlayerGroupCommands = 12,
	CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
	CPED_CONFIG_FLAG_DoesntDropWeaponsWhenDead = 14,
	CPED_CONFIG_FLAG_SetDelayedWeaponAsCurrent = 15,
	CPED_CONFIG_FLAG_KeepTasksAfterCleanUp = 16,
	CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
	CPED_CONFIG_FLAG_HasAScriptBrain = 18,
	CPED_CONFIG_FLAG_WaitingForScriptBrainToLoad = 19,
	CPED_CONFIG_FLAG_AllowMedicsToReviveMe = 20,
	CPED_CONFIG_FLAG_MoneyHasBeenGivenByScript = 21,
	CPED_CONFIG_FLAG_NotAllowedToCrouch = 22,
	CPED_CONFIG_FLAG_DeathPickupsPersist = 23,
	CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
	CPED_CONFIG_FLAG_ForceDieIfInjured = 25,
	CPED_CONFIG_FLAG_DontDragMeOutCar = 26,
	CPED_CONFIG_FLAG_StayInCarOnJack = 27,
	CPED_CONFIG_FLAG_ForceDieInCar = 28,
	CPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,
	CPED_CONFIG_FLAG_WillRemainOnBoatAfterMissionEnds = 30,
	CPED_CONFIG_FLAG_DontStoreAsPersistent = 31,
	CPED_CONFIG_FLAG_WillFlyThroughWindscreen = 32,
	CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
	CPED_CONFIG_FLAG_HasHelmet = 34,
	CPED_CONFIG_FLAG_UseHelmet = 35,
	CPED_CONFIG_FLAG_DontTakeOffHelmet = 36,
	CPED_CONFIG_FLAG_HideInCutscene = 37,
	CPED_CONFIG_FLAG_PedIsEnemyToPlayer = 38,
	CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
	CPED_CONFIG_FLAG_PedGeneratesDeadBodyEvents = 40,
	CPED_CONFIG_FLAG_DontAttackPlayerWithoutWantedLevel = 41,
	CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
	CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
	CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
	CPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,
	_0xDB115BFA = 46,
	CPED_CONFIG_FLAG_PedBeingDeleted = 47,
	CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
	CPED_CONFIG_FLAG_BlockGroupPedAimedAtResponse = 49,
	CPED_CONFIG_FLAG_WillFollowLeaderAnyMeans = 50,
	CPED_CONFIG_FLAG_BlippedByScript = 51,
	CPED_CONFIG_FLAG_DrawRadarVisualField = 52,
	CPED_CONFIG_FLAG_StopWeaponFiringOnImpact = 53,
	CPED_CONFIG_FLAG_DissableAutoFallOffTests = 54,
	CPED_CONFIG_FLAG_SteerAroundDeadBodies = 55,
	CPED_CONFIG_FLAG_ConstrainToNavMesh = 56,
	CPED_CONFIG_FLAG_SyncingAnimatedProps = 57,
	CPED_CONFIG_FLAG_IsFiring = 58,
	CPED_CONFIG_FLAG_WasFiring = 59,
	CPED_CONFIG_FLAG_IsStanding = 60,
	CPED_CONFIG_FLAG_WasStanding = 61,
	CPED_CONFIG_FLAG_InVehicle = 62,
	CPED_CONFIG_FLAG_OnMount = 63,
	CPED_CONFIG_FLAG_AttachedToVehicle = 64,
	CPED_CONFIG_FLAG_IsSwimming = 65,
	CPED_CONFIG_FLAG_WasSwimming = 66,
	CPED_CONFIG_FLAG_IsSkiing = 67,
	CPED_CONFIG_FLAG_IsSitting = 68,
	CPED_CONFIG_FLAG_KilledByStealth = 69,
	CPED_CONFIG_FLAG_KilledByTakedown = 70,
	CPED_CONFIG_FLAG_Knockedout = 71,
	CPED_CONFIG_FLAG_ClearRadarBlipOnDeath = 72,
	CPED_CONFIG_FLAG_JustGotOffTrain = 73,
	CPED_CONFIG_FLAG_JustGotOnTrain = 74,
	CPED_CONFIG_FLAG_UsingCoverPoint = 75,
	CPED_CONFIG_FLAG_IsInTheAir = 76,
	CPED_CONFIG_FLAG_KnockedUpIntoAir = 77,
	CPED_CONFIG_FLAG_IsAimingGun = 78,
	CPED_CONFIG_FLAG_HasJustLeftCar = 79,
	CPED_CONFIG_FLAG_TargetWhenInjuredAllowed = 80,
	CPED_CONFIG_FLAG_CurrLeftFootCollNM = 81,
	CPED_CONFIG_FLAG_PrevLeftFootCollNM = 82,
	CPED_CONFIG_FLAG_CurrRightFootCollNM = 83,
	CPED_CONFIG_FLAG_PrevRightFootCollNM = 84,
	CPED_CONFIG_FLAG_HasBeenBumpedInCar = 85,
	CPED_CONFIG_FLAG_InWaterTaskQuitToClimbLadder = 86,
	CPED_CONFIG_FLAG_NMTwoHandedWeaponBothHandsConstrained = 87,
	CPED_CONFIG_FLAG_CreatedBloodPoolTimer = 88,
	CPED_CONFIG_FLAG_DontActivateRagdollFromAnyPedImpact = 89,
	CPED_CONFIG_FLAG_GroupPedFailedToEnterCover = 90,
	CPED_CONFIG_FLAG_AlreadyChattedOnPhone = 91,
	CPED_CONFIG_FLAG_AlreadyReactedToPedOnRoof = 92,
	CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
	CPED_CONFIG_FLAG_BlockCoweringInCover = 94,
	CPED_CONFIG_FLAG_BlockPeekingInCover = 95,
	CPED_CONFIG_FLAG_JustLeftCarNotCheckedForDoors = 96,
	CPED_CONFIG_FLAG_VaultFromCover = 97,
	CPED_CONFIG_FLAG_AutoConversationLookAts = 98,
	CPED_CONFIG_FLAG_UsingCrouchedPedCapsule = 99,
	CPED_CONFIG_FLAG_HasDeadPedBeenReported = 100,
	CPED_CONFIG_FLAG_ForcedAim = 101,
	CPED_CONFIG_FLAG_SteersAroundPeds = 102,
	CPED_CONFIG_FLAG_SteersAroundObjects = 103,
	CPED_CONFIG_FLAG_OpenDoorArmIK = 104,
	CPED_CONFIG_FLAG_ForceReload = 105,
	CPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,
	CPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,
	CPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,
	CPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,
	CPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,
	CPED_CONFIG_FLAG_IsBeingDraggedToSafety = 111,
	CPED_CONFIG_FLAG_HasBeenDraggedToSafety = 112,
	CPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,
	CPED_CONFIG_FLAG_ForceScriptControlledKnockout = 114,
	CPED_CONFIG_FLAG_FallOutOfVehicleWhenKilled = 115,
	CPED_CONFIG_FLAG_GetOutBurningVehicle = 116,
	CPED_CONFIG_FLAG_BumpedByPlayer = 117,
	CPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,
	CPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,
	CPED_CONFIG_FLAG_IsHandCuffed = 120,
	CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
	CPED_CONFIG_FLAG_DisableMelee = 122,
	CPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,
	CPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,
	CPED_CONFIG_FLAG_UNUSED_REPLACE_ME = 125,
	CPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,
	CPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,
	CPED_CONFIG_FLAG_CanBeAgitated = 128,
	CPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,
	CPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,
	CPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,
	CPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,
	CPED_CONFIG_FLAG_ForcePedToBeDragged = 133,
	CPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,
	CPED_CONFIG_FLAG_IsScuba = 135,
	CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
	CPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,
	CPED_CONFIG_FLAG_RidingTrain = 138,
	CPED_CONFIG_FLAG_ArrestResult = 139,
	CPED_CONFIG_FLAG_CanAttackFriendly = 140,
	CPED_CONFIG_FLAG_WillJackAnyPlayer = 141,
	CPED_CONFIG_FLAG_BumpedByPlayerVehicle = 142,
	CPED_CONFIG_FLAG_DodgedPlayerVehicle = 143,
	CPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,
	CPED_CONFIG_FLAG_NoCopWantedAggro = 145,
	CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
	CPED_CONFIG_FLAG_StairsDetected = 147,
	CPED_CONFIG_FLAG_SlopeDetected = 148,
	CPED_CONFIG_FLAG_HelmetHasBeenShot = 149,
	CPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,
	CPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,
	CPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,
	CPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,
	CPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,
	CPED_CONFIG_FLAG_CanPerformArrest = 155,
	CPED_CONFIG_FLAG_CanPerformUncuff = 156,
	CPED_CONFIG_FLAG_CanBeArrested = 157,
	CPED_CONFIG_FLAG_MoverConstrictedByOpposingCollisions = 158,
	CPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,
	CPED_CONFIG_FLAG_DontActivateRagdollFromImpactObject = 160,
	CPED_CONFIG_FLAG_DontActivateRagdollFromMelee = 161,
	CPED_CONFIG_FLAG_DontActivateRagdollFromWaterJet = 162,
	CPED_CONFIG_FLAG_DontActivateRagdollFromDrowning = 163,
	CPED_CONFIG_FLAG_DontActivateRagdollFromFalling = 164,
	CPED_CONFIG_FLAG_DontActivateRagdollFromRubberBullet = 165,
	CPED_CONFIG_FLAG_IsInjured = 166,
	CPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,
	CPED_CONFIG_FLAG_SwimmingTasksRunning = 168,
	CPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,
	CPED_CONFIG_FLAG_ForceDirectEntry = 170,
	CPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,
	CPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,
	CPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,
	CPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,
	CPED_CONFIG_FLAG_PlayerInContactWithKinematicPed = 175,
	CPED_CONFIG_FLAG_PlayerInContactWithSomethingOtherThanKinematicPed = 176,
	CPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,
	CPED_CONFIG_FLAG_AdditionalRappellingPed = 178,
	CPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,
	CPED_CONFIG_FLAG_IsInCustody = 180,
	CPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,
	CPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,
	CPED_CONFIG_FLAG_IsAgitated = 183,
	CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
	CPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,
	CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
	CPED_CONFIG_FLAG_HasHurtStarted = 187,
	CPED_CONFIG_FLAG_DisableHurt = 188,
	CPED_CONFIG_FLAG_PlayerIsWeird = 189,
	CPED_CONFIG_FLAG_PedHadPhoneConversation = 190,
	CPED_CONFIG_FLAG_BeganCrossingRoad = 191,
	CPED_CONFIG_FLAG_WarpIntoLeadersVehicle = 192,
	CPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,
	CPED_CONFIG_FLAG_UsingScenario = 194,
	CPED_CONFIG_FLAG_VisibleOnScreen = 195,
	CPED_CONFIG_FLAG_DontCollideWithKinematic = 196,
	CPED_CONFIG_FLAG_ActivateOnSwitchFromLowPhysicsLod = 197,
	CPED_CONFIG_FLAG_DontActivateRagdollOnPedCollisionWhenDead = 198,
	CPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,
	CPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,
	CPED_CONFIG_FLAG_UseDiminishingAmmoRate = 201,
	CPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,
	CPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,
	CPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,
	CPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,
	CPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,
	CPED_CONFIG_FLAG_LowPhysicsLodMayPlaceOnNavMesh = 207,
	CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
	CPED_CONFIG_FLAG_DodgedPlayer = 209,
	CPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,
	CPED_CONFIG_FLAG_ForcedToStayInCover = 211,
	CPED_CONFIG_FLAG_GeneratesSoundEvents = 212,
	CPED_CONFIG_FLAG_ListensToSoundEvents = 213,
	CPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,
	CPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,
	CPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,
	CPED_CONFIG_FLAG_ForceExitToSkyDive = 217,
	CPED_CONFIG_FLAG_SteersAroundVehicles = 218,
	CPED_CONFIG_FLAG_AllowPedInVehiclesOverrideTaskFlags = 219,
	CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
	CPED_CONFIG_FLAG_DisableExitToSkyDive = 221,
	CPED_CONFIG_FLAG_ScriptHasDisabledCollision = 222,
	CPED_CONFIG_FLAG_UseAmbientModelScaling = 223,
	CPED_CONFIG_FLAG_DontWatchFirstOnNextHurryAway = 224,
	CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
	CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
	CPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,
	CPED_CONFIG_FLAG_CanLosePropsOnDamage = 228,
	CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
	CPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,
	CPED_CONFIG_FLAG_HasShotBeenReactedToFromFront = 231,
	CPED_CONFIG_FLAG_HasShotBeenReactedToFromBack = 232,
	CPED_CONFIG_FLAG_HasShotBeenReactedToFromLeft = 233,
	CPED_CONFIG_FLAG_HasShotBeenReactedToFromRight = 234,
	CPED_CONFIG_FLAG_AllowBlockDeadPedRagdollActivation = 235,
	CPED_CONFIG_FLAG_IsHoldingProp = 236,
	CPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,
	CPED_CONFIG_FLAG_ForcePlayNormalScenarioExitOnNextScriptCommand = 238,
	CPED_CONFIG_FLAG_ForcePlayImmediateScenarioExitOnNextScriptCommand = 239,
	CPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,
	CPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,
	CPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,
	CPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,
	CPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,
	CPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,
	CPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,
	CPED_CONFIG_FLAG_InStrafeTransition = 247,
	CPED_CONFIG_FLAG_CanPlayInCarIdles = 248,
	CPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,
	CPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,
	CPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,
	CPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,
	CPED_CONFIG_FLAG_OnStairs = 253,
	CPED_CONFIG_FLAG_SimulatingAiming = 254,
	CPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,
	CPED_CONFIG_FLAG_ParentCarIsBeingRemoved = 256,
	CPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,
	CPED_CONFIG_FLAG_CanLoseHelmetOnDamage = 258,
	CPED_CONFIG_FLAG_NeverDoScenarioExitProbeChecks = 259,
	CPED_CONFIG_FLAG_SuppressLowLODRagdollSwitchWhenCorpseSettles = 260,
	CPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,
	CPED_CONFIG_FLAG_JustLeftVehicleNeedsReset = 262,
	CPED_CONFIG_FLAG_TeleportIfCantReachPlayer = 263,
	CPED_CONFIG_FLAG_PedsInVehiclePositionNeedsReset = 264,
	CPED_CONFIG_FLAG_PedsFullyInSeat = 265,
	CPED_CONFIG_FLAG_AllowPlayerLockOnIfFriendly = 266,
	CPED_CONFIG_FLAG_UseCameraHeadingForDesiredDirectionLockOnTest = 267,
	CPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,
	CPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,
	CPED_CONFIG_FLAG_OnStairSlope = 270,
	CPED_CONFIG_FLAG_HasPlayedNMGetup = 271,
	CPED_CONFIG_FLAG_DontBlipCop = 272,
	CPED_CONFIG_FLAG_SpawnedAtExtendedRangeScenario = 273,
	CPED_CONFIG_FLAG_WalkAlongsideLeaderWhenClose = 274,
	CPED_CONFIG_FLAG_KillWhenTrapped = 275,
	CPED_CONFIG_FLAG_EdgeDetected = 276,
	CPED_CONFIG_FLAG_AlwaysWakeUpPhysicsOfIntersectedPeds = 277,
	CPED_CONFIG_FLAG_EquippedAmbientLoadOutWeapon = 278,
	CPED_CONFIG_FLAG_AvoidTearGas = 279,
	CPED_CONFIG_FLAG_StoppedSpeechUponFreezing = 280,
	CPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,
	CPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,
	CPED_CONFIG_FLAG_ThrownFromVehicleDueToExhaustion = 283,
	CPED_CONFIG_FLAG_UpdateEnclosedSearchRegion = 284,
	CPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,
	CPED_CONFIG_FLAG_ShouldChargeNow = 286,
	CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
	CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
	CPED_CONFIG_FLAG_AllowMinorReactionsAsMissionPed = 289,
	CPED_CONFIG_FLAG_BlockDeadBodyShockingEventsWhenDead = 290,
	CPED_CONFIG_FLAG_PedHasBeenSeen = 291,
	CPED_CONFIG_FLAG_PedIsInReusePool = 292,
	CPED_CONFIG_FLAG_PedWasReused = 293,
	CPED_CONFIG_FLAG_DisableShockingEvents = 294,
	CPED_CONFIG_FLAG_MovedUsingLowLodPhysicsSinceLastActive = 295,
	CPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,
	CPED_CONFIG_FLAG_ForcePlayFleeScenarioExitOnNextScriptCommand = 297,
	CPED_CONFIG_FLAG_JustBumpedIntoVehicle = 298,
	CPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,
	CPED_CONFIG_FLAG_ShouldThrowSmokeNow = 300,
	CPED_CONFIG_FLAG_DisablePedConstraints = 301,
	CPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,
	CPED_CONFIG_FLAG_CreatedByDispatch = 303,
	CPED_CONFIG_FLAG_PointGunLeftHandSupporting = 304,
	CPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,
	CPED_CONFIG_FLAG_DontActivateRagdollFromPlayerPedImpact = 306,
	CPED_CONFIG_FLAG_DontActivateRagdollFromAiRagdollImpact = 307,
	CPED_CONFIG_FLAG_DontActivateRagdollFromPlayerRagdollImpact = 308,
	CPED_CONFIG_FLAG_DisableQuadrupedSpring = 309,
	CPED_CONFIG_FLAG_IsInCluster = 310,
	CPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,
	CPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,
	CPED_CONFIG_FLAG_PreferInjuredGetup = 313,
	CPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,
	CPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,
	CPED_CONFIG_FLAG_JackedAbandonedCar = 316,
	CPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,
	CPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,
	CPED_CONFIG_FLAG_HasPortablePickupAttached = 319,
	CPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,
	CPED_CONFIG_FLAG_HasClothCollisionBounds = 321,
	CPED_CONFIG_FLAG_HasHighHeels = 322,
	CPED_CONFIG_FLAG_TreatAsAmbientPedForDriverLockOn = 323,
	CPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,
	CPED_CONFIG_FLAG_SpawnedAtScenario = 325,
	CPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,
	CPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,
	CPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,
	CPED_CONFIG_FLAG_DisableTalkTo = 329,
	CPED_CONFIG_FLAG_DontBlip = 330,
	CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
	CPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,
	CPED_CONFIG_FLAG_ScriptForceNoTimesliceIntelligenceUpdate = 333,
	CPED_CONFIG_FLAG_JackedOutOfMyVehicle = 334,
	CPED_CONFIG_FLAG_WentIntoCombatAfterBeingJacked = 335,
	CPED_CONFIG_FLAG_DontActivateRagdollForVehicleGrab = 336,
	CPED_CONFIG_FLAG_ForcePackageCharacterCloth = 337,
	CPED_CONFIG_FLAG_DontRemoveWithValidOrder = 338,
	CPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,
	CPED_CONFIG_FLAG_ForcedToStayInCoverDueToPlayerSwitch = 340,
	CPED_CONFIG_FLAG_ForceProneCharacterCloth = 341,
	CPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,
	CPED_CONFIG_FLAG_InToStrafeTransition = 343,
	CPED_CONFIG_FLAG_KilledByStandardMelee = 344,
	CPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,
	CPED_CONFIG_FLAG_ForcePlayDirectedNormalScenarioExitOnNextScriptCommand = 346,
	CPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,
	CPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,
	CPED_CONFIG_FLAG_EquipJetpack = 349,
	CPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,
	CPED_CONFIG_FLAG_ScriptHasCompletelyDisabledCollision = 351,
	CPED_CONFIG_FLAG_NeverDoScenarioNavChecks = 352,
	CPED_CONFIG_FLAG_ForceSynchronousScenarioExitChecking = 353,
	CPED_CONFIG_FLAG_ThrowingGrenadeWhileAiming = 354,
	CPED_CONFIG_FLAG_HeadbobToRadioEnabled = 355,
	CPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,
	CPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,
	CPED_CONFIG_FLAG_DontBlipNotSynced = 358,
	CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
	CPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,
	CPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,
	CPED_CONFIG_FLAG_HasReserveParachute = 362,
	CPED_CONFIG_FLAG_UseReserveParachute = 363,
	CPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,
	CPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,
	CPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,
	CPED_CONFIG_FLAG_DontActivateRagdollFromSmokeGrenade = 367,
	CPED_CONFIG_FLAG_LinkMBRToOwnerOnChain = 368,
	CPED_CONFIG_FLAG_AmbientFriendBumpedByPlayer = 369,
	CPED_CONFIG_FLAG_AmbientFriendBumpedByPlayerVehicle = 370,
	CPED_CONFIG_FLAG_InFPSUnholsterTransition = 371,
	CPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,
	CPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,
	CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
	CPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,
	CPED_CONFIG_FLAG_UseFPSUnholsterTransitionDuringCombatRoll = 376,
	CPED_CONFIG_FLAG_ExitingFPSCombatRoll = 377,
	CPED_CONFIG_FLAG_ScriptHasControlOfPlayer = 378,
	CPED_CONFIG_FLAG_PlayFPSIdleFidgetsForProjectile = 379,
	CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,
	CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInAircraft = 381,
	CPED_CONFIG_FLAG_WasPlayingFPSGetup = 382,
	CPED_CONFIG_FLAG_WasPlayingFPSMeleeActionResult = 383,
	CPED_CONFIG_FLAG_PreferNoPriorityRemoval = 384,
	CPED_CONFIG_FLAG_FPSFidgetsAbortedOnFire = 385,
	CPED_CONFIG_FLAG_ForceFPSIKWithUpperBodyAnim = 386,
	CPED_CONFIG_FLAG_SwitchingCharactersInFirstPerson = 387,
	CPED_CONFIG_FLAG_IsClimbingLadder = 388,
	CPED_CONFIG_FLAG_HasBareFeet = 389,
	CPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,
	CPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,
	CPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,
	CPED_CONFIG_FLAG_ResetLastVehicleOnVehicleExit = 393,
	CPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,
	CPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,
	CPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,
	CPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,
	CPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,
	CPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,
	CPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,
	CPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,
	CPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,
	CPED_CONFIG_FLAG_ChangeFromPermanentToAmbientPopTypeOnMigration = 403,
	CPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,
	CPED_CONFIG_FLAG_UsingLowriderLeans = 405,
	CPED_CONFIG_FLAG_UsingAlternateLowriderLeans = 406,
	CPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,
	CPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,
	CPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,
	CPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,
	CPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,
	CPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,
	CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
	CPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,
	CPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,
	CPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,
	CPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,
	CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
	CPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,
	CPED_CONFIG_FLAG_IsPerformingVehicleMelee = 420,
	CPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,
	CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
	CPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamage = 423,
	CPED_CONFIG_FLAG_AllowBikeAlternateAnimations = 424,
	CPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamageNonSynced = 425,
	CPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,
	CPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,
	CPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,
	CPED_CONFIG_FLAG_DisableStartEngine = 429,
	CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
	CPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,
	CPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,
	CPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,
	CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
	CPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,
	CPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,
	CPED_CONFIG_FLAG_DontShoutTargetPosition = 437,
	CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
	CPED_CONFIG_FLAG_CreatedByConcealedPlayer = 439,
	CPED_CONFIG_FLAG_PermanentlyDisablePotentialToBeWalkedIntoResponse = 440,
	CPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,
	CPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,
	CPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,
	CPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,
	CPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,
	CPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,
	CPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,
	CPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,
	CPED_CONFIG_FLAG_FiresDummyRockets = 449,
	CPED_CONFIG_FLAG_PedIsArresting = 450,
	CPED_CONFIG_FLAG_IsDecoyPed = 451,
	CPED_CONFIG_FLAG_HasEstablishedDecoy = 452,
	CPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,
	CPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,
	CPED_CONFIG_FLAG_HitByTranqWeapon = 455,
	CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
	CPED_CONFIG_FLAG_ForcedAimFromArrest = 457,
	CPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,
	_0x4376ABF2 = 459,
	CPED_CONFIG_FLAG_RagdollFloatsIndefinitely = 460,
	CPED_CONFIG_FLAG_BlockElectricWeaponDamage = 461,
	_0x262A3B8E = 462,
	_0x1AA79A25 = 463,
}
```
-- @param ped Ped
-- @param flagId int
-- @param value BOOL
-- SET_PED_CONFIG_FLAG(ped, flagId, value)

--- SET_PED_COORDS_KEEP_VEHICLE
-- ```
teleports ped to coords along with the vehicle ped is in  
```
-- @param ped Ped
-- @param posX float
-- @param posY float
-- @param posZ float
-- SET_PED_COORDS_KEEP_VEHICLE(ped, posX, posY, posZ)

--- SET_PED_COORDS_NO_GANG
-- @param ped Ped
-- @param posX float
-- @param posY float
-- @param posZ float
-- SET_PED_COORDS_NO_GANG(ped, posX, posY, posZ)

--- SET_PED_COWER_HASH
-- ```
p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.  
```
-- @param ped Ped
-- @param p1 char*
-- SET_PED_COWER_HASH(ped, p1)

--- SET_PED_DEFAULT_COMPONENT_VARIATION
-- ```
Sets Ped Default Clothes  
```
-- @param ped Ped
-- SET_PED_DEFAULT_COMPONENT_VARIATION(ped)

--- SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED
-- @param ped Ped
-- @param attachPed Ped
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 BOOL
-- @param p10 BOOL
-- SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(ped, attachPed, p2, p3, p4, p5, p6, p7, p8, p9, p10)

--- SET_PED_DEFENSIVE_AREA_DIRECTION
-- @param ped Ped
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 BOOL
-- SET_PED_DEFENSIVE_AREA_DIRECTION(ped, p1, p2, p3, p4)

--- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED
-- @param ped Ped
-- @param target Ped
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param radius float
-- @param p6 BOOL
-- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_PED(ped, target, xOffset, yOffset, zOffset, radius, p6)

--- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE
-- @param ped Ped
-- @param target Vehicle
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param radius float
-- @param p6 BOOL
-- SET_PED_DEFENSIVE_SPHERE_ATTACHED_TO_VEHICLE(ped, target, xOffset, yOffset, zOffset, radius, p6)

--- SET_PED_DENSITY_MULTIPLIER_THIS_FRAME
-- **Usage:** Call this native every frame
-- @param multiplier float - Adjust from 0.0 (minimum, indicating no pedestrians in the street) to 1.0 (maximum, representing a normal amount of pedestrians on the street).
-- SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)

--- SET_PED_DESIRED_HEADING
-- @param ped Ped
-- @param heading float
-- SET_PED_DESIRED_HEADING(ped, heading)

--- SET_PED_DIES_INSTANTLY_IN_WATER
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DIES_INSTANTLY_IN_WATER(ped, toggle)

--- SET_PED_DIES_IN_SINKING_VEHICLE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DIES_IN_SINKING_VEHICLE(ped, toggle)

--- SET_PED_DIES_IN_VEHICLE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DIES_IN_VEHICLE(ped, toggle)

--- SET_PED_DIES_IN_WATER
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DIES_IN_WATER(ped, toggle)

--- SET_PED_DIES_WHEN_INJURED
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DIES_WHEN_INJURED(ped, toggle)

--- SET_PED_DRIVE_BY_CLIPSET_OVERRIDE
-- @param ped Ped
-- @param clipset char*
-- SET_PED_DRIVE_BY_CLIPSET_OVERRIDE(ped, clipset)

--- SET_PED_DUCKING
-- ```
This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DUCKING(ped, toggle)

--- SET_PED_ENABLE_WEAPON_BLOCKING
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_ENABLE_WEAPON_BLOCKING(ped, toggle)

--- SET_PED_ENVEFF_COLOR_MODULATOR
-- ```
Something related to the environmental effects natives.
In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
```
-- @param ped Ped
-- @param r int
-- @param g int
-- @param b int
-- SET_PED_ENVEFF_COLOR_MODULATOR(ped, r, g, b)

--- SET_PED_ENVEFF_SCALE
-- ```
Values look to be between 0.0 and 1.0  
From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0  
You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.  
```
-- @param ped Ped
-- @param value float
-- SET_PED_ENVEFF_SCALE(ped, value)

--- SET_PED_FIRING_PATTERN
-- ```
FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )  
FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )  
FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )  
FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )  
FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )  
FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )  
FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )  
FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )  
FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )  
FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )  
FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )  
FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )  
FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )  
FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )  
FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )  
FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )  
if anyone is interested firing pattern info: pastebin.com/Px036isB  
```
-- @param ped Ped
-- @param patternHash Hash
-- SET_PED_FIRING_PATTERN(ped, patternHash)

--- SET_PED_FLEE_ATTRIBUTES
-- ```
bit 15 (0x8000) = force cower
```
-- @param ped Ped
-- @param attributeFlags int
-- @param enable BOOL
-- SET_PED_FLEE_ATTRIBUTES(ped, attributeFlags, enable)

--- SET_PED_GENERATES_DEAD_BODY_EVENTS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_GENERATES_DEAD_BODY_EVENTS(ped, toggle)

--- SET_PED_GESTURE_GROUP
-- ```
From the scripts:  
PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  
"ANIM_GROUP_GESTURE_MISS_FRA0");  
PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),  
"ANIM_GROUP_GESTURE_MISS_DocksSetup1");  
```
-- @param ped Ped
-- @param animGroupGesture char*
-- SET_PED_GESTURE_GROUP(ped, animGroupGesture)

--- SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(ped, toggle)

--- SET_PED_GRAVITY
-- ```
enable or disable the gravity of a ped  
Examples:  
PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);  
PED::SET_PED_GRAVITY(Local_289[iVar0 /*20*/], 0x00000001);  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_GRAVITY(ped, toggle)

--- SET_PED_GROUP_MEMBER_PASSENGER_INDEX
-- @param ped Ped
-- @param index int
-- SET_PED_GROUP_MEMBER_PASSENGER_INDEX(ped, index)

--- SET_PED_HAIR_TINT
-- Sets the tint index for the hair on the specified ped.

```
NativeDB Introduced: v323
```
-- @param ped Ped - The Ped whose hair tint is to be set.
-- @param colorID int - The tint index for the primary hair color.
-- @param highlightColorID int - The tint index for the hair highlight color.
-- SET_PED_HAIR_TINT(ped, colorID, highlightColorID)

--- SET_PED_HEAD_BLEND_DATA
-- For more info please refer to [this](https://gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained) topic.

**Other information:**

IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.</br>

This native function is often called prior to calling natives such as:

*   [`SetPedHairColor`](#\_0xBB43F090)
*   [`SetPedHeadOverlayColor`](#\_0x78935A27)
*   [`SetPedHeadOverlay`](#\_0xD28DBA90)
*   [`SetPedFaceFeature`](#\_0x6C8D4458)
-- @param ped Ped - The ped entity
-- @param shapeFirstID int - Controls the shape of the first ped's face
-- @param shapeSecondID int - Controls the shape of the second ped's face
-- @param shapeThirdID int - Controls the shape of the third ped's face
-- @param skinFirstID int - Controls the first id's skin tone
-- @param skinSecondID int - Controls the second id's skin tone
-- @param skinThirdID int - Controls the third id's skin tone
-- @param shapeMix float - 0.0 - 1.0 Of whose characteristics to take Mother -> Father (shapeFirstID and shapeSecondID)
-- @param skinMix float - 0.0 - 1.0 Of whose characteristics to take Mother -> Father (skinFirstID and skinSecondID)
-- @param thirdMix float - Overrides the others in favor of the third IDs.
-- @param isParent BOOL - IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
-- SET_PED_HEAD_BLEND_DATA(ped, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent)

--- SET_PED_HEAD_OVERLAY
-- ```
OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.   
overlayID       Part                  Index, to disable  
0               Blemishes             0 - 23, 255  
1               Facial Hair           0 - 28, 255  
2               Eyebrows              0 - 33, 255  
3               Ageing                0 - 14, 255  
4               Makeup                0 - 74, 255  
5               Blush                 0 - 6, 255  
6               Complexion            0 - 11, 255  
7               Sun Damage            0 - 10, 255  
8               Lipstick              0 - 9, 255  
9               Moles/Freckles        0 - 17, 255  
10              Chest Hair            0 - 16, 255  
11              Body Blemishes        0 - 11, 255  
12              Add Body Blemishes    0 - 1, 255  
```

**Note:**

You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
-- @param ped Ped - The ped entity
-- @param overlayID int - The overlay id displayed up above.
-- @param index int - An integer representing the index (from 0 to `_GET_NUM_OVERLAY_VALUES(overlayID)-1`)
-- @param opacity float - A float ranging from 0.0 to 1.0
-- SET_PED_HEAD_OVERLAY(ped, overlayID, index, opacity)

--- SET_PED_HEARING_RANGE
-- @param ped Ped
-- @param value float
-- SET_PED_HEARING_RANGE(ped, value)

--- SET_PED_HEATSCALE_OVERRIDE
-- @param ped Ped
-- @param heatScale float
-- SET_PED_HEATSCALE_OVERRIDE(ped, heatScale)

--- SET_PED_HELMET
-- Sets whether a pedestrian should wear a helmet.
-- @param ped Ped - Ped index.
-- @param bEnable BOOL - Boolean value that indicates whether the helmet should be worn or not.
-- SET_PED_HELMET(ped, bEnable)

--- SET_PED_HELMET_FLAG
-- @param ped Ped
-- @param helmetFlag int
-- SET_PED_HELMET_FLAG(ped, helmetFlag)

--- SET_PED_HELMET_PROP_INDEX
-- ```
NativeDB Added Parameter 3: BOOL p2
```
-- @param ped Ped - The ped handle.
-- @param propIndex int - The prop index to set the helmet to. Refer to [SET_PED_PROP_INDEX](#\_0x93376B65A266EB5F).
-- SET_PED_HELMET_PROP_INDEX(ped, propIndex)

--- SET_PED_HELMET_TEXTURE_INDEX
-- @param ped Ped
-- @param textureIndex int
-- SET_PED_HELMET_TEXTURE_INDEX(ped, textureIndex)

--- SET_PED_HIGHLY_PERCEPTIVE
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_HIGHLY_PERCEPTIVE(ped, toggle)

--- SET_PED_ID_RANGE
-- @param ped Ped
-- @param value float
-- SET_PED_ID_RANGE(ped, value)

--- SET_PED_INCREASED_AVOIDANCE_RADIUS
-- @param ped Ped
-- SET_PED_INCREASED_AVOIDANCE_RADIUS(ped)

--- SET_PED_INTO_VEHICLE
-- @param ped Ped
-- @param vehicle Vehicle
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669). -2 for the first available seat.
-- SET_PED_INTO_VEHICLE(ped, vehicle, seatIndex)

--- SET_PED_IN_VEHICLE_CONTEXT
-- ```
PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));
PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));
PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));
PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));
PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));
```
-- @param ped Ped
-- @param context Hash
-- SET_PED_IN_VEHICLE_CONTEXT(ped, context)

--- SET_PED_KEEP_TASK
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_KEEP_TASK(ped, toggle)

--- SET_PED_LEG_IK_MODE
-- ```
"IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1  
```
-- @param ped Ped
-- @param mode int
-- SET_PED_LEG_IK_MODE(ped, mode)

--- SET_PED_LOD_MULTIPLIER
-- @param ped Ped
-- @param multiplier float
-- SET_PED_LOD_MULTIPLIER(ped, multiplier)

--- SET_PED_MAX_HEALTH
-- @param ped Ped - The ped handle we're setting this for.
-- @param value int - The new max health.
-- SET_PED_MAX_HEALTH(ped, value)

--- SET_PED_MAX_MOVE_BLEND_RATIO
-- @param ped Ped
-- @param value float
-- SET_PED_MAX_MOVE_BLEND_RATIO(ped, value)

--- SET_PED_MAX_TIME_IN_WATER
-- @param ped Ped
-- @param value float
-- SET_PED_MAX_TIME_IN_WATER(ped, value)

--- SET_PED_MAX_TIME_UNDERWATER
-- Set the maximum time a ped can stay underwater. Maximum seems to be 50 seconds.
-- @param ped Ped - Ped id.
-- @param value float - Time in seconds. Maximum is 50.0, any value above will be changed to 50.0.
-- SET_PED_MAX_TIME_UNDERWATER(ped, value)

--- SET_PED_MIN_GROUND_TIME_FOR_STUNGUN
-- Overwrites the minimum time the ped will stay on the ground for after being stunned. Setting this while the ped is stunned will not alter the duration of the current stun but will still effect future stuns.

Passing -1 into the second parameter `minTimeInMs` will reset the modifier, making it use the weapons original `DamageTime` as the stun duration (see `update/update.rpf/common/data/ai/weapons.meta`)

**NOTE**: Unlike what the native name implies, this works on any weapon that has its `DamageType` in the `weapons.meta` set to `ELECTRIC`.
-- @param ped Ped - The ped to set the min ground time for
-- @param minTimeInMs int - The minimum time the stun should last in milliseconds.
-- SET_PED_MIN_GROUND_TIME_FOR_STUNGUN(ped, minTimeInMs)

--- SET_PED_MIN_MOVE_BLEND_RATIO
-- @param ped Ped
-- @param value float
-- SET_PED_MIN_MOVE_BLEND_RATIO(ped, value)

--- SET_PED_MODEL_IS_SUPPRESSED
-- @param model Hash
-- @param toggle BOOL
-- SET_PED_MODEL_IS_SUPPRESSED(model, toggle)

--- SET_PED_MONEY
-- ```
Maximum possible amount of money on MP is 2000. ~JX  
-----------------------------------------------------------------------------  
Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.  
```
-- @param ped Ped
-- @param amount int
-- SET_PED_MONEY(ped, amount)

--- SET_PED_MOTION_BLUR
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_MOTION_BLUR(ped, toggle)

--- SET_PED_MOVEMENT_CLIPSET
-- ```
List of movement clipsets:
Thanks to elsewhat for list.
 "ANIM_GROUP_MOVE_BALLISTIC"
 "ANIM_GROUP_MOVE_LEMAR_ALLEY"
 "clipset@move@trash_fast_turn"
 "FEMALE_FAST_RUNNER"
 "missfbi4prepp1_garbageman"
 "move_characters@franklin@fire"
 "move_characters@Jimmy@slow@"
 "move_characters@michael@fire"
 "move_f@flee@a"
 "move_f@scared"
 "move_f@sexy@a"
 "move_heist_lester"
 "move_injured_generic"
 "move_lester_CaneUp"
 "move_m@bag"
 "MOVE_M@BAIL_BOND_NOT_TAZERED"
 "MOVE_M@BAIL_BOND_TAZERED"
 "move_m@brave"
 "move_m@casual@d"
 "move_m@drunk@moderatedrunk"
 "MOVE_M@DRUNK@MODERATEDRUNK"
 "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
 "MOVE_M@DRUNK@SLIGHTLYDRUNK"
 "MOVE_M@DRUNK@VERYDRUNK"
 "move_m@fire"
 "move_m@gangster@var_e"
 "move_m@gangster@var_f"
 "move_m@gangster@var_i"
 "move_m@JOG@"
 "MOVE_M@PRISON_GAURD"
 "MOVE_P_M_ONE"
 "MOVE_P_M_ONE_BRIEFCASE"
 "move_p_m_zero_janitor"
 "move_p_m_zero_slow"
 "move_ped_bucket"
 "move_ped_crouched"
 "move_ped_mop"
 "MOVE_M@FEMME@"
 "MOVE_F@FEMME@"
 "MOVE_M@GANGSTER@NG"
 "MOVE_F@GANGSTER@NG"
 "MOVE_M@POSH@"
 "MOVE_F@POSH@"
 "MOVE_M@TOUGH_GUY@"
 "MOVE_F@TOUGH_GUY@"
~ NotCrunchyTaco
```
-- @param ped Ped
-- @param clipSet char*
-- @param transitionSpeed float - time in seconds it takes to transition from one movement clipset to another.
-- SET_PED_MOVEMENT_CLIPSET(ped, clipSet, transitionSpeed)

--- SET_PED_MOVE_ANIMS_BLEND_OUT
-- @param ped Ped
-- SET_PED_MOVE_ANIMS_BLEND_OUT(ped)

--- SET_PED_MOVE_RATE_OVERRIDE
-- ```
Min: 0.00  
Max: 10.00  
Can be used in combo with fast run cheat.  
When value is set to 10.00:  
Sprinting without fast run cheat: 66 m/s  
Sprinting with fast run cheat: 77 m/s  
Needs to be looped!  
Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.  
```
-- @param ped Ped
-- @param value float
-- SET_PED_MOVE_RATE_OVERRIDE(ped, value)

--- SET_PED_NAME_DEBUG
-- ```
NOTE: Debugging functions are not present in the retail version of the game.  
*untested but char *name could also be a hash for a localized string  
```
-- @param ped Ped
-- @param name char*
-- SET_PED_NAME_DEBUG(ped, name)

--- SET_PED_NEVER_LEAVES_GROUP
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_NEVER_LEAVES_GROUP(ped, toggle)

--- SET_PED_NON_CREATION_AREA
-- ```
The distance between these points, is the diagonal of a box (remember it's 3D).  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- SET_PED_NON_CREATION_AREA(x1, y1, z1, x2, y2, z2)

--- SET_PED_PANIC_EXIT_SCENARIO
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- SET_PED_PANIC_EXIT_SCENARIO(ped, x, y, z)

--- SET_PED_PARACHUTE_TINT_INDEX
-- @param ped Ped
-- @param tintIndex int
-- SET_PED_PARACHUTE_TINT_INDEX(ped, tintIndex)

--- SET_PED_PHONE_PALETTE_IDX
-- Sets the palette index of a ped's phone.

| Value | Color      |
| :---: | :-----:    |
|  `0`  | Light Blue |
|  `1`  | Green      |
|  `2`  | Red        |
|  `3`  | Orange     |
|  `4`  | Grey       |
|  `5`  | Purple     |
|  `6`  | Pink       |

```
NativeDB Introduced: v323
```
-- @param ped Ped - The Ped whose phone palette is to be set.
-- @param index int - The index of the color palette to apply to the ped's phone.
-- SET_PED_PHONE_PALETTE_IDX(ped, index)

--- SET_PED_PINNED_DOWN
-- ```
i could be time. Only example in the decompiled scripts uses it as -1.
```
-- @param ped Ped
-- @param pinned BOOL
-- @param i int
-- SET_PED_PINNED_DOWN(ped, pinned, i)

--- SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE
-- **This native does absolutely nothing, just a nullsub**

```
Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.  
```
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(ped, toggle)

--- SET_PED_PREFERRED_COVER_SET
-- @param ped Ped
-- @param itemSet Any
-- SET_PED_PREFERRED_COVER_SET(ped, itemSet)

--- SET_PED_PRELOAD_PROP_DATA
-- @param ped Ped - The ped handle.
-- @param componentId int - The component that you want to set. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId int - The drawable id that is going to be set. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- @param textureId int - The texture id of the drawable. Refer to [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171).
-- SET_PED_PRELOAD_PROP_DATA(ped, componentId, drawableId, textureId)

--- SET_PED_PRELOAD_VARIATION_DATA
-- ```
from extreme3.c4
PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));
p1 is probably componentId
```
-- @param ped Ped
-- @param slot int
-- @param drawableId int
-- @param textureId int
-- SET_PED_PRELOAD_VARIATION_DATA(ped, slot, drawableId, textureId)

--- SET_PED_PRIMARY_LOOKAT
-- ```
This is only called once in the scripts.
sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
                    sub_1CA8("WORLD_HUMAN_SMOKING", 2);
                    PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());
```
-- @param ped Ped
-- @param lookAt Ped
-- SET_PED_PRIMARY_LOOKAT(ped, lookAt)

--- SET_PED_PROP_INDEX
-- This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.

### MP Freemode list of props

**0**: Hats
**1**: Glasses
**2**: Ears
**6**: Watches
**7**: Bracelets

List of Prop IDs

```cpp
enum eAnchorPoints
{
    ANCHOR_HEAD = 0, // "p_head"
    ANCHOR_EYES = 1, // "p_eyes"
    ANCHOR_EARS = 2, // "p_ears"
    ANCHOR_MOUTH = 3, // "p_mouth"
    ANCHOR_LEFT_HAND = 4, // "p_lhand"
    ANCHOR_RIGHT_HAND = 5, // "p_rhand"
    ANCHOR_LEFT_WRIST = 6, // "p_lwrist"
    ANCHOR_RIGHT_WRIST = 7, // "p_rwrist"
    ANCHOR_HIP = 8, // "p_lhip"
    ANCHOR_LEFT_FOOT = 9, // "p_lfoot"
    ANCHOR_RIGHT_FOOT = 10, // "p_rfoot"
    ANCHOR_PH_L_HAND = 11, // "ph_lhand"
    ANCHOR_PH_R_HAND = 12, // "ph_rhand"
    NUM_ANCHORS = 13,
};
```
-- @param ped Ped - The ped handle.
-- @param componentId int - The component that you want to set. Refer to [SET_PED_COMPONENT_VARIATION](#\_0x262B14F48D29DE80).
-- @param drawableId int - The drawable id that is going to be set. Refer to [GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS](#\_0x5FAF9754E789FB47).
-- @param textureId int - The texture id of the drawable. Refer to [GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS](#\_0xA6E7F1CEB523E171).
-- @param attach BOOL - Attached or not.
-- SET_PED_PROP_INDEX(ped, componentId, drawableId, textureId, attach)

--- SET_PED_RAGDOLL_FORCE_FALL
-- @param ped Ped
-- SET_PED_RAGDOLL_FORCE_FALL(ped)

--- SET_PED_RAGDOLL_ON_COLLISION
-- Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
Needs to be recalled after each ragdoll from a Collision.
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_RAGDOLL_ON_COLLISION(ped, toggle)

--- SET_PED_RANDOM_COMPONENT_VARIATION
-- ```
p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.  
```
-- @param ped Ped
-- @param p1 int
-- SET_PED_RANDOM_COMPONENT_VARIATION(ped, p1)

--- SET_PED_RANDOM_PROPS
-- @param ped Ped - The ped handle.
-- SET_PED_RANDOM_PROPS(ped)

--- SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH
-- @param ped Ped
-- @param hash Hash
-- SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(ped, hash)

--- SET_PED_RELATIONSHIP_GROUP_HASH
-- @param ped Ped
-- @param hash Hash
-- SET_PED_RELATIONSHIP_GROUP_HASH(ped, hash)

--- SET_PED_RESERVE_PARACHUTE_TINT_INDEX
-- @param ped Ped
-- @param p1 Any
-- SET_PED_RESERVE_PARACHUTE_TINT_INDEX(ped, p1)

--- SET_PED_RESET_FLAG
-- PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);
Known values:
-- @param ped Ped
-- @param flagId int
-- @param doReset BOOL
-- SET_PED_RESET_FLAG(ped, flagId, doReset)

--- SET_PED_SEEING_RANGE
-- @param ped Ped
-- @param value float
-- SET_PED_SEEING_RANGE(ped, value)

--- SET_PED_SHOOTS_AT_COORD
-- Fires a weapon at a coordinate using a ped.
-- @param ped Ped - Ped index.
-- @param x float
-- @param y float
-- @param z float
-- @param toggle BOOL
-- SET_PED_SHOOTS_AT_COORD(ped, x, y, z, toggle)

--- SET_PED_SHOOT_RATE
-- ```
shootRate 0-1000  
```
-- @param ped Ped
-- @param shootRate int
-- SET_PED_SHOOT_RATE(ped, shootRate)

--- SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT
-- @param ped Ped
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- SET_PED_SHOULD_PLAY_FLEE_SCENARIO_EXIT(ped, p1, p2, p3)

--- SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT
-- @param ped Ped
-- SET_PED_SHOULD_PLAY_IMMEDIATE_SCENARIO_EXIT(ped)

--- SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT
-- @param ped Ped
-- SET_PED_SHOULD_PLAY_NORMAL_SCENARIO_EXIT(ped)

--- SET_PED_SPHERE_DEFENSIVE_AREA
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p5 BOOL
-- @param p6 BOOL
-- SET_PED_SPHERE_DEFENSIVE_AREA(ped, x, y, z, radius, p5, p6)

--- SET_PED_STAY_IN_VEHICLE_WHEN_JACKED
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(ped, toggle)

--- SET_PED_STEALTH_MOVEMENT
-- ```
p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".  
```
-- @param ped Ped
-- @param p1 BOOL
-- @param action char*
-- SET_PED_STEALTH_MOVEMENT(ped, p1, action)

--- SET_PED_STEERS_AROUND_OBJECTS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_STEERS_AROUND_OBJECTS(ped, toggle)

--- SET_PED_STEERS_AROUND_PEDS
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_STEERS_AROUND_PEDS(ped, toggle)

--- SET_PED_STEERS_AROUND_VEHICLES
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_STEERS_AROUND_VEHICLES(ped, toggle)

--- SET_PED_STRAFE_CLIPSET
-- @param ped Ped
-- @param clipSet char*
-- SET_PED_STRAFE_CLIPSET(ped, clipSet)

--- SET_PED_SUFFERS_CRITICAL_HITS
-- Ped no longer takes critical damage modifiers if set to FALSE.

Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_SUFFERS_CRITICAL_HITS(ped, toggle)

--- SET_PED_SWEAT
-- ```
Sweat is set to 100.0 or 0.0 in the decompiled scripts.  
```
-- @param ped Ped
-- @param sweat float
-- SET_PED_SWEAT(ped, sweat)

--- SET_PED_TARGET_LOSS_RESPONSE
-- ```
Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.  
```
-- @param ped Ped
-- @param responseType int
-- SET_PED_TARGET_LOSS_RESPONSE(ped, responseType)

--- SET_PED_TO_INFORM_RESPECTED_FRIENDS
-- @param ped Ped
-- @param radius float
-- @param maxFriends int
-- SET_PED_TO_INFORM_RESPECTED_FRIENDS(ped, radius, maxFriends)

--- SET_PED_TO_LOAD_COVER
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_TO_LOAD_COVER(ped, toggle)

--- SET_PED_TO_RAGDOLL
-- p4/p5: Unusued in TU27

### Ragdoll Types

**0**: CTaskNMRelax
**1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
**Else**: CTaskNMBalance
-- @param ped Ped
-- @param time1 int - Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.
-- @param time2 int
-- @param ragdollType int
-- @param p4 BOOL
-- @param p5 BOOL
-- @param p6 BOOL
-- SET_PED_TO_RAGDOLL(ped, time1, time2, ragdollType, p4, p5, p6)

--- SET_PED_TO_RAGDOLL_WITH_FALL
-- ```
Return variable is never used in R*'s scripts.  
Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.  
x, y, and z are coordinates, most likely to where the ped will fall.  
p7 is probably the force of the fall, but untested, so I left the variable name the same.  
p8 to p13 are always 0f in R*'s scripts.  
(Simplified) Example of the usage of the function from R*'s scripts:  
ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);  
```
-- @param ped Ped
-- @param time int
-- @param p2 int
-- @param ragdollType int
-- @param x float
-- @param y float
-- @param z float
-- @param p7 float
-- @param p8 float
-- @param p9 float
-- @param p10 float
-- @param p11 float
-- @param p12 float
-- @param p13 float
-- SET_PED_TO_RAGDOLL_WITH_FALL(ped, time, p2, ragdollType, x, y, z, p7, p8, p9, p10, p11, p12, p13)

--- SET_PED_USING_ACTION_MODE
-- ```
p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".  
```
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 int
-- @param action char*
-- SET_PED_USING_ACTION_MODE(ped, p1, p2, action)

--- SET_PED_VEHICLE_FORCED_SEAT_USAGE
-- ```
NativeDB Added Parameter 5: Any p4
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- @param flags int
-- SET_PED_VEHICLE_FORCED_SEAT_USAGE(ped, vehicle, seatIndex, flags)

--- SET_PED_VISUAL_FIELD_CENTER_ANGLE
-- @param ped Ped
-- @param angle float
-- SET_PED_VISUAL_FIELD_CENTER_ANGLE(ped, angle)

--- SET_PED_VISUAL_FIELD_MAX_ANGLE
-- @param ped Ped
-- @param value float
-- SET_PED_VISUAL_FIELD_MAX_ANGLE(ped, value)

--- SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE
-- ```
This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.  
```
-- @param ped Ped
-- @param angle float
-- SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(ped, angle)

--- SET_PED_VISUAL_FIELD_MIN_ANGLE
-- @param ped Ped
-- @param value float
-- SET_PED_VISUAL_FIELD_MIN_ANGLE(ped, value)

--- SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE
-- ```
This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.  
```
-- @param ped Ped
-- @param angle float
-- SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(ped, angle)

--- SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE
-- @param ped Ped
-- @param range float
-- SET_PED_VISUAL_FIELD_PERIPHERAL_RANGE(ped, range)

--- SET_PED_WEAPON_MOVEMENT_CLIPSET
-- @param ped Ped
-- @param clipSet char*
-- SET_PED_WEAPON_MOVEMENT_CLIPSET(ped, clipSet)

--- SET_PED_WETNESS_ENABLED_THIS_FRAME
-- ```
combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function  
```
-- @param ped Ped
-- SET_PED_WETNESS_ENABLED_THIS_FRAME(ped)

--- SET_PED_WETNESS_HEIGHT
-- ```
It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.  
```
-- @param ped Ped
-- @param height float
-- SET_PED_WETNESS_HEIGHT(ped, height)

--- SET_POP_CONTROL_SPHERE_THIS_FRAME
-- ```
Min and max are usually 100.0 and 200.0
```
-- @param x float
-- @param y float
-- @param z float
-- @param min float
-- @param max float
-- SET_POP_CONTROL_SPHERE_THIS_FRAME(x, y, z, min, max)

--- SET_RAGDOLL_BLOCKING_FLAGS
-- ```
Works for both player and peds, but some flags don't seem to work for the player (1, for example)  
1 - Blocks ragdolling when shot.  
2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.  
4 - Blocks ragdolling when set on fire.  
-----------------------------------------------------------------------  
There seem to be 26 flags  
```
-- @param ped Ped
-- @param flags int
-- SET_RAGDOLL_BLOCKING_FLAGS(ped, flags)

--- SET_RELATIONSHIP_BETWEEN_GROUPS
-- ```
Sets the relationship between two groups. This should be called twice (once for each group).  
Relationship types:  
0 = Companion  
1 = Respect  
2 = Like  
3 = Neutral  
4 = Dislike  
5 = Hate  
255 = Pedestrians  
Example:  
PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);  
PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);  
```
-- @param relationship int
-- @param group1 Hash
-- @param group2 Hash
-- SET_RELATIONSHIP_BETWEEN_GROUPS(relationship, group1, group2)

--- SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA
-- @param x float
-- @param y float
-- @param z float
-- @param range float
-- @param p4 int
-- SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(x, y, z, range, p4)

--- SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND
-- ```
Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.  
```
-- @param value BOOL
-- SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(value)

--- SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME
-- Set the number of scenario peds on the entire map
-- @param interiorMult float - Multiplier for ped scenarios inside interiors.
-- @param exteriorMult float - Multiplier for ped scenarios outside interiors.
-- SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(interiorMult, exteriorMult)

--- SET_SCRIPTED_ANIM_SEAT_OFFSET
-- @param ped Ped
-- @param p1 float
-- SET_SCRIPTED_ANIM_SEAT_OFFSET(ped, p1)

--- SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME
-- @param x float
-- @param y float
-- @param z float
-- SET_SCRIPTED_CONVERSION_COORD_THIS_FRAME(x, y, z)

--- SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME
-- @param sceneID int
-- @param toggle BOOL
-- SET_SYNCHRONIZED_SCENE_HOLD_LAST_FRAME(sceneID, toggle)

--- SET_SYNCHRONIZED_SCENE_LOOPED
-- @param sceneID int
-- @param toggle BOOL
-- SET_SYNCHRONIZED_SCENE_LOOPED(sceneID, toggle)

--- SET_SYNCHRONIZED_SCENE_ORIGIN
-- @param sceneID int
-- @param x float
-- @param y float
-- @param z float
-- @param roll float
-- @param pitch float
-- @param yaw float
-- @param p7 BOOL
-- SET_SYNCHRONIZED_SCENE_ORIGIN(sceneID, x, y, z, roll, pitch, yaw, p7)

--- SET_SYNCHRONIZED_SCENE_PHASE
-- @param sceneID int
-- @param phase float
-- SET_SYNCHRONIZED_SCENE_PHASE(sceneID, phase)

--- SET_SYNCHRONIZED_SCENE_RATE
-- @param sceneID int
-- @param rate float
-- SET_SYNCHRONIZED_SCENE_RATE(sceneID, rate)

--- SPAWNPOINTS_CANCEL_SEARCH
-- SPAWNPOINTS_CANCEL_SEARCH()

--- SPAWNPOINTS_GET_NUM_SEARCH_RESULTS
-- SPAWNPOINTS_GET_NUM_SEARCH_RESULTS()

--- SPAWNPOINTS_GET_SEARCH_RESULT
-- @param randomInt int
-- @param x float*
-- @param y float*
-- @param z float*
-- SPAWNPOINTS_GET_SEARCH_RESULT(randomInt, x, y, z)

--- SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS
-- @param p0 Any
-- @param p1 Any*
-- SPAWNPOINTS_GET_SEARCH_RESULT_FLAGS(p0, p1)

--- SPAWNPOINTS_IS_SEARCH_ACTIVE
-- SPAWNPOINTS_IS_SEARCH_ACTIVE()

--- SPAWNPOINTS_IS_SEARCH_COMPLETE
-- SPAWNPOINTS_IS_SEARCH_COMPLETE()

--- SPAWNPOINTS_IS_SEARCH_FAILED
-- SPAWNPOINTS_IS_SEARCH_FAILED()

--- SPAWNPOINTS_START_SEARCH
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param interiorFlags int
-- @param scale float
-- @param duration int
-- SPAWNPOINTS_START_SEARCH(p0, p1, p2, p3, p4, interiorFlags, scale, duration)

--- SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA
-- @param x float
-- @param y float
-- @param z float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param interiorFlags int
-- @param scale float
-- @param duration int
-- SPAWNPOINTS_START_SEARCH_IN_ANGLED_AREA(x, y, z, p3, p4, p5, p6, interiorFlags, scale, duration)

--- SPECIAL_FUNCTION_DO_NOT_USE
-- Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.\
Only to be used in very specific situations where the ped needs to be inside the car still but not attached.
-- @param ped Ped
-- @param noCollisionUntilClear BOOL
-- SPECIAL_FUNCTION_DO_NOT_USE(ped, noCollisionUntilClear)

--- STOP_ANY_PED_MODEL_BEING_SUPPRESSED
-- STOP_ANY_PED_MODEL_BEING_SUPPRESSED()

--- STOP_PED_WEAPON_FIRING_WHEN_DROPPED
-- @param ped Ped
-- STOP_PED_WEAPON_FIRING_WHEN_DROPPED(ped)

--- TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE
-- @param scene int - Scene ID returned by [`CREATE_SYNCHRONIZED_SCENE`](#\_0x8C18E0F9080ADD73)
-- TAKE_OWNERSHIP_OF_SYNCHRONIZED_SCENE(scene)

--- UNREGISTER_PEDHEADSHOT
-- ```
gtaforums.com/topic/885580-ped-headshotmugshot-txd/  
```
-- @param id int
-- UNREGISTER_PEDHEADSHOT(id)

--- UPDATE_PED_HEAD_BLEND_DATA
-- See [`SET_PED_HEAD_BLEND_DATA`](#\_0x9414E18B9434C2FE)
-- @param ped Ped
-- @param shapeMix float
-- @param skinMix float
-- @param thirdMix float
-- UPDATE_PED_HEAD_BLEND_DATA(ped, shapeMix, skinMix, thirdMix)

--- WAS_PED_KILLED_BY_STEALTH
-- Verifies whether ped was eliminated through stealth.
-- @param ped Ped - Ped index
-- WAS_PED_KILLED_BY_STEALTH(ped)

--- WAS_PED_KILLED_BY_TAKEDOWN
-- @param ped Ped
-- WAS_PED_KILLED_BY_TAKEDOWN(ped)

--- WAS_PED_KNOCKED_OUT
-- @param ped Ped
-- WAS_PED_KNOCKED_OUT(ped)

--- WAS_PED_SKELETON_UPDATED
-- ```
Despite this function's name, it simply returns whether the specified handle is a Ped.  
```
-- @param ped Ped
-- WAS_PED_SKELETON_UPDATED(ped)

--- _BLOCK_PED_DEAD_BODY_SHOCKING_EVENTS
-- @param ped Ped
-- @param toggle BOOL
-- _BLOCK_PED_DEAD_BODY_SHOCKING_EVENTS(ped, toggle)

--- _CLEAR_FACIAL_CLIPSET_OVERRIDE
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- _CLEAR_FACIAL_CLIPSET_OVERRIDE(ped)

--- _CLEAR_PED_COVER_CLIPSET_OVERRIDE
-- ```
CLEAR_PED_*
```
-- @param ped Ped
-- _CLEAR_PED_COVER_CLIPSET_OVERRIDE(ped)

--- _CLONE_PED_EX
-- Used one time in fmmc_launcher.c instead of CLONE_PED because ?
-- @param ped Ped
-- @param heading float
-- @param isNetwork BOOL
-- @param bScriptHostPed BOOL
-- @param p4 Any
-- _CLONE_PED_EX(ped, heading, isNetwork, bScriptHostPed, p4)

--- _CLONE_PED_TO_TARGET_EX
-- @param ped Ped
-- @param targetPed Ped
-- @param p2 Any
-- _CLONE_PED_TO_TARGET_EX(ped, targetPed, p2)

--- _CREATE_SYNCHRONIZED_SCENE_2
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param object Hash
-- _CREATE_SYNCHRONIZED_SCENE_2(x, y, z, radius, object)

--- _DOES_RELATIONSHIP_GROUP_EXIST
-- @param groupHash Hash
-- _DOES_RELATIONSHIP_GROUP_EXIST(groupHash)

--- _DOES_SCENARIO_BLOCKING_AREA_EXIST
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- _DOES_SCENARIO_BLOCKING_AREA_EXIST(x1, y1, z1, x2, y2, z2)

--- _FREEZE_PED_CAMERA_ROTATION
-- @param ped Ped
-- _FREEZE_PED_CAMERA_ROTATION(ped)

--- _GET_NUM_HAIR_COLORS
-- ```
Used for freemode (online) characters.  
```
-- _GET_NUM_HAIR_COLORS()

--- _GET_NUM_MAKEUP_COLORS
-- _GET_NUM_MAKEUP_COLORS()

--- _GET_PED_CURRENT_MOVEMENT_SPEED
-- @param ped Ped
-- @param speedX float*
-- @param speedY float*
-- _GET_PED_CURRENT_MOVEMENT_SPEED(ped, speedX, speedY)

--- _GET_PED_DIES_IN_WATER
-- ```
NativeDB Introduced: v2699
```
-- @param ped Ped
-- _GET_PED_DIES_IN_WATER(ped)

--- _GET_PED_EMISSIVE_INTENSITY
-- Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
-- @param ped Ped - The ped to get the glow intensity from.
-- _GET_PED_EMISSIVE_INTENSITY(ped)

--- _GET_PED_EVENT_DATA
-- ```
NativeDB Introduced: v2189
```
-- @param ped Ped
-- @param eventType int
-- @param outData Any*
-- _GET_PED_EVENT_DATA(ped, eventType, outData)

--- _GET_PED_EYE_COLOR
-- A getter for [`_SET_PED_EYE_COLOR`](#\_0x50B56988B170AFDF).
-- @param ped Ped - The target ped
-- _GET_PED_EYE_COLOR(ped)

--- _GET_PED_HAIR_RGB_COLOR
-- Input: Haircolor index, value between 0 and 63 (inclusive).
Output: RGB values for the haircolor specified in the input.

This is used with the hair color swatches scaleform.

Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
-- @param hairColorIndex int - The hair color index. Value between 0-63 (inclusive).
-- @param outR int* - Output red value.
-- @param outG int* - Output green value.
-- @param outB int* - Output blue value.
-- _GET_PED_HAIR_RGB_COLOR(hairColorIndex, outR, outG, outB)

--- _GET_PED_HEAD_OVERLAY_VALUE
-- ```
Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
This might be the once removed native GET_PED_HEAD_OVERLAY.
```
-- @param ped Ped
-- @param overlayID int
-- _GET_PED_HEAD_OVERLAY_VALUE(ped, overlayID)

--- _GET_PED_MAKEUP_RGB_COLOR
-- Input: Makeup color index, value between 0 and 63 (inclusive).
Output: RGB values for the makeup color specified in the input.

This is used with the makeup color swatches scaleform.

Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
-- @param makeupColorIndex int - The hair color index. Value between 0-63 (inclusive).
-- @param outR int* - Output red value.
-- @param outG int* - Output green value.
-- @param outB int* - Output blue value.
-- _GET_PED_MAKEUP_RGB_COLOR(makeupColorIndex, outR, outG, outB)

--- _GET_PED_TASK_COMBAT_TARGET
-- ```
NativeDB Introduced: v2372
```
-- @param ped Ped
-- @param p1 Any
-- _GET_PED_TASK_COMBAT_TARGET(ped, p1)

--- _GET_PED_VISUAL_FIELD_CENTER_ANGLE
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- _GET_PED_VISUAL_FIELD_CENTER_ANGLE(ped)

--- _GET_TIME_OF_LAST_PED_WEAPON_DAMAGE
-- ```
GET_TIME_*
```
-- @param ped Ped
-- @param weaponHash Hash
-- _GET_TIME_OF_LAST_PED_WEAPON_DAMAGE(ped, weaponHash)

--- _IS_PED_BLUSH_COLOR_VALID
-- @param colorID int
-- _IS_PED_BLUSH_COLOR_VALID(colorID)

--- _IS_PED_BLUSH_COLOR_VALID_2
-- @param colorId int
-- _IS_PED_BLUSH_COLOR_VALID_2(colorId)

--- _IS_PED_BODY_BLEMISH_VALID
-- ```
NativeDB Introduced: v1290
```
-- @param colorID int
-- _IS_PED_BODY_BLEMISH_VALID(colorID)

--- _IS_PED_DOING_BEAST_JUMP
-- @param ped Ped
-- _IS_PED_DOING_BEAST_JUMP(ped)

--- _IS_PED_HAIR_COLOR_VALID
-- @param colorID int
-- _IS_PED_HAIR_COLOR_VALID(colorID)

--- _IS_PED_HAIR_COLOR_VALID_2
-- @param colorId int
-- _IS_PED_HAIR_COLOR_VALID_2(colorId)

--- _IS_PED_HELMET_UNK
-- @param ped Ped
-- _IS_PED_HELMET_UNK(ped)

--- _IS_PED_LIPSTICK_COLOR_VALID
-- @param colorID int
-- _IS_PED_LIPSTICK_COLOR_VALID(colorID)

--- _IS_PED_LIPSTICK_COLOR_VALID_2
-- @param colorId int
-- _IS_PED_LIPSTICK_COLOR_VALID_2(colorId)

--- _IS_PED_OPENING_A_DOOR
-- ```
IS_PED_*

Returns true if the ped is currently opening a door (CTaskOpenDoor).
```
-- @param ped Ped
-- _IS_PED_OPENING_A_DOOR(ped)

--- _IS_PED_SHADER_EFFECT_VALID
-- @param ped Ped
-- _IS_PED_SHADER_EFFECT_VALID(ped)

--- _IS_PED_SWAPPING_WEAPON
-- @param Ped Ped
-- _IS_PED_SWAPPING_WEAPON(Ped)

--- _IS_SCUBA_GEAR_LIGHT_ENABLED
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- _IS_SCUBA_GEAR_LIGHT_ENABLED(ped)

--- _REGISTER_PEDHEADSHOT_3
-- @param ped Ped
-- _REGISTER_PEDHEADSHOT_3(ped)

--- _SET_BLOCK_AMBIENT_PEDS_FROM_DROPPING_WEAPONS_THIS_FRAME
-- Prevents ambient peds from dropping their weapons for the current frame.

```
NativeDB Introduced: v3258
```
-- _SET_BLOCK_AMBIENT_PEDS_FROM_DROPPING_WEAPONS_THIS_FRAME()

--- _SET_ENABLE_SCUBA_GEAR_LIGHT
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param toggle BOOL
-- _SET_ENABLE_SCUBA_GEAR_LIGHT(ped, toggle)

--- _SET_FACIAL_CLIPSET_OVERRIDE
-- Clipsets:
"facials@gen_female@base"
"facials@gen_male@base"
"facials@p_m_zero@base"

Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#\_0xFFC24B988B938B38):
"mood_drunk\_1"
"mood_stressed\_1"
"mood_happy\_1"
"mood_talking\_1"

```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param animDict char*
-- _SET_FACIAL_CLIPSET_OVERRIDE(ped, animDict)

--- _SET_PED_CAN_PLAY_INJURED_ANIMS
-- @param ped Ped
-- @param p1 BOOL
-- _SET_PED_CAN_PLAY_INJURED_ANIMS(ped, p1)

--- _SET_PED_COVER_CLIPSET_OVERRIDE
-- ```
Found in the b617d scripts:
PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");
SET_PED_MO*
```
-- @param ped Ped
-- @param p1 char*
-- _SET_PED_COVER_CLIPSET_OVERRIDE(ped, p1)

--- _SET_PED_EMISSIVE_INTENSITY
-- This native sets the glow intensity of illuminated clothing items.

This native does **NOT** need to be executed every tick.
This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.

Glow intensity is a value between `0.0` and `1.0`.

In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.

Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.

Intensity: `1.0`:
![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)

Intensity: `0.0`:
![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)

**Examples code result**:
![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)

(Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
-- @param ped Ped - The ped to set the glow intensity on.
-- @param intensity float - The glow intensity, value between `0.0` and `1.0`.
-- _SET_PED_EMISSIVE_INTENSITY(ped, intensity)

--- _SET_PED_EYE_COLOR
-- Used for freemode (online) characters.

Indices:

1.  black
2.  very light blue/green
3.  dark blue
4.  brown
5.  darker brown
6.  light brown
7.  blue
8.  light blue
9.  pink
10. yellow
11. purple
12. black
13. dark green
14. light brown
15. yellow/black pattern
16. light colored spiral pattern
17. shiny red
18. shiny half blue/half red
19. half black/half light blue
20. white/red perimter
21. green snake
22. red snake
23. dark blue snake
24. dark yellow
25. bright yellow
26. all black
27. red small pupil
28. devil blue/black
29. white small pupil
30. glossed over
-- @param ped Ped
-- @param index int
-- _SET_PED_EYE_COLOR(ped, index)

--- _SET_PED_FACE_FEATURE
-- Sets the various freemode face features, e.g. nose length, chin shape.

**Indexes (From 0 to 19):**

Parentheses indicate morph scale/direction as in (-1.0 to 1.0)

*   **0**: Nose Width (Thin/Wide)
*   **1**: Nose Peak (Up/Down)
*   **2**: Nose Length (Long/Short)
*   **3**: Nose Bone Curveness (Crooked/Curved)
*   **4**: Nose Tip (Up/Down)
*   **5**: Nose Bone Twist (Left/Right)
*   **6**: Eyebrow (Up/Down)
*   **7**: Eyebrow (In/Out)
*   **8**: Cheek Bones (Up/Down)
*   **9**: Cheek Sideways Bone Size (In/Out)
*   **10**: Cheek Bones Width (Puffed/Gaunt)
*   **11**: Eye Opening (Both) (Wide/Squinted)
*   **12**: Lip Thickness (Both) (Fat/Thin)
*   **13**: Jaw Bone Width (Narrow/Wide)
*   **14**: Jaw Bone Shape (Round/Square)
*   **15**: Chin Bone (Up/Down)
*   **16**: Chin Bone Length (In/Out or Backward/Forward)
*   **17**: Chin Bone Shape (Pointed/Square)
*   **18**: Chin Hole (Chin Bum)
*   **19**: Neck Thickness (Thin/Thick)

**Note:**

You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
-- @param ped Ped - The ped entity
-- @param index int - An integer ranging from 0 to 19
-- @param scale float - A float ranging from -1.0 to 1.0
-- _SET_PED_FACE_FEATURE(ped, index, scale)

--- _SET_PED_HEAD_OVERLAY_COLOR
-- ```
Used for freemode (online) characters. 
Called after SET_PED_HEAD_OVERLAY().  
```

**Note:**

You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
-- @param ped Ped - The ped entity
-- @param overlayID int - An integer representing the overlay id
-- @param colorType int - 1 for eyebrows, beards, makeup, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
-- @param colorID int - An integer representing the primary color id
-- @param secondColorID int - An integer representing the secondary color id
-- _SET_PED_HEAD_OVERLAY_COLOR(ped, overlayID, colorType, colorID, secondColorID)

--- _SET_PED_HELMET_UNK
-- @param ped Ped
-- @param p1 BOOL
-- @param p2 int
-- @param p3 int
-- _SET_PED_HELMET_UNK(ped, p1, p2, p3)

--- _SET_PED_SCUBA_GEAR_VARIATION
-- This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models. It works on freemode and player_\* models.
-- @param ped Ped
-- _SET_PED_SCUBA_GEAR_VARIATION(ped)

--- _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT
-- When this ped receives its next script task, they will exit from their scenario using the normal scenario exit.
Exiting the scenario may take several frames while the ped is playing the exit animation.
If the ped is not currently using a scenario at the time of the command or 0,0,0 is specified as the reaction position,
then the ped will by default attempt to direct their exit forwards.
-- @param ped Ped - the ped who should play a normal (unhurried) exit the next time they are given a script command.
-- @param x float - X Coordinate.
-- @param y float - Y Coordinate.
-- @param z float - Z Coordinate.
-- _SET_PED_SHOULD_PLAY_DIRECTED_SCENARIO_EXIT(ped, x, y, z)

--- _SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL
-- @param group Hash
-- @param p1 BOOL
-- _SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL(group, p1)


-- ========== PHYSICS ==========

--- 0x36CCB9BE67B970FD
-- ```
ROPE_*
```
-- @param ropeId int
-- @param p1 BOOL
-- 0x36CCB9BE67B970FD(ropeId, p1)

--- 0x84DE3B5FB3E666F0
-- @param ropeId int*
-- 0x84DE3B5FB3E666F0(ropeId)

--- 0x9EBD751E5787BAF2
-- ```
SET_*
```
-- @param p0 BOOL
-- 0x9EBD751E5787BAF2(p0)

--- 0xA1AE736541B0FCA3
-- ROPE_\*

```
NativeDB Introduced: v1868
```
-- @param ropeId int*
-- @param p1 BOOL
-- 0xA1AE736541B0FCA3(ropeId, p1)

--- 0xB1B6216CA2E7B55E
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- 0xB1B6216CA2E7B55E(p0, p1, p2)

--- 0xB743F735C03D7810
-- ```
ROPE_*
```
-- @param ropeId int
-- @param p1 int
-- 0xB743F735C03D7810(ropeId, p1)

--- 0xBC0CE682D4D05650
-- ```
Most likely ROPE_ATTACH_*  
```
-- @param ropeId int
-- @param p1 int
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 float
-- @param p10 float
-- @param p11 float
-- @param p12 float
-- @param p13 float
-- 0xBC0CE682D4D05650(ropeId, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)

--- 0xCC6E963682533882
-- ```
RESET_*  
```
-- @param object Object
-- 0xCC6E963682533882(object)

--- ACTIVATE_PHYSICS
-- @param entity Entity
-- ACTIVATE_PHYSICS(entity)

--- ADD_ROPE
-- ```
Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
__
Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
```

There are 8 different rope types in the base game. Full rope data can be found in `ropedata.xml`.

```cpp
enum ePhysicsRopeType {
    RopeThin = 0, // Verticies: 1, Radius: 0.03, Textures: rope & rope_n
    RopeWire6 = 1, // Verticies: 4, Radius: 0.015, Textures: steel_cable & steel_cable_n
    RopeWire32 = 2, // Verticies: 32, Radius: 0.025, Textures: steel_cable & steel_cable_n
    RopeMesh = 3, // Verticies: 6, Radius: 0.03, Textures: rope & rope_n
    RopeThinWire32 = 4, // Verticies: 32, Radius: 0.01, Textures: rope & rope_n
    RopeReins = 5, // Verticies: 32, Radius: 0.005, Textures: rope & rope_n
    RopeThin4 = 6, // Verticies: 4, Radius: 0.03, Textures: rope & rope_n
    RopeWire64 = 7 // Verticies: 64, Radius: 0.025, Textures: steel_cable & steel_cable_n
}
```
-- @param x float - Spawn coordinate X component.
-- @param y float - Spawn coordinate Y component.
-- @param z float - Spawn coordinate Z component.
-- @param rotX float - Rotation X component.
-- @param rotY float - Rotation Y component.
-- @param rotZ float - Rotation Z component.
-- @param maxLength float - The maximum length the rope can droop.
-- @param ropeType int - The zero-based index of the entry in the `ropedata.xml` file. *NOTE: Using an index which does not exist will crash the game. As of game build 3258, valid values are from `0` to `7` inclusive.*
-- @param initLength float - The initial length of the rope.
-- @param minLength float - The minimum length the rope can be.
-- @param lengthChangeRate float - The speed in which the rope will wind if winding is started.
-- @param onlyPPU BOOL
-- @param collisionOn BOOL - Whether the rope should have collision. In original scripts this is followed by a LoadRopeData call when set.
-- @param lockFromFront BOOL - If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
-- @param timeMultiplier float - The speed as which physics should run at. 1.0f is normal, 2.0f is twice as fast, -1.0f is time going backwards. This can affect gravity, etc.
-- @param breakable BOOL - Whether shooting the rope will break it.
-- @param unkPtr Any* - Unknown pointer, always 0 in original scrips.
-- ADD_ROPE(x, y, z, rotX, rotY, rotZ, maxLength, ropeType, initLength, minLength, lengthChangeRate, onlyPPU, collisionOn, lockFromFront, timeMultiplier, breakable, unkPtr)

--- APPLY_IMPULSE_TO_CLOTH
-- @param posX float
-- @param posY float
-- @param posZ float
-- @param vecX float
-- @param vecY float
-- @param vecZ float
-- @param impulse float
-- APPLY_IMPULSE_TO_CLOTH(posX, posY, posZ, vecX, vecY, vecZ, impulse)

--- ATTACH_ENTITIES_TO_ROPE
-- ```
Attaches entity 1 to entity 2.  
```
-- @param ropeId int
-- @param ent1 Entity
-- @param ent2 Entity
-- @param ent1_x float
-- @param ent1_y float
-- @param ent1_z float
-- @param ent2_x float
-- @param ent2_y float
-- @param ent2_z float
-- @param length float
-- @param p10 BOOL
-- @param p11 BOOL
-- @param boneName1 char*
-- @param boneName2 char*
-- ATTACH_ENTITIES_TO_ROPE(ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length, p10, p11, boneName1, boneName2)

--- ATTACH_ROPE_TO_ENTITY
-- ```
The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.  
```
-- @param ropeId int
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- @param p5 BOOL
-- ATTACH_ROPE_TO_ENTITY(ropeId, entity, x, y, z, p5)

--- BREAK_ENTITY_GLASS
-- @param entity Entity
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 Any
-- @param p10 BOOL
-- BREAK_ENTITY_GLASS(entity, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)

--- DELETE_CHILD_ROPE
-- @param ropeId int
-- DELETE_CHILD_ROPE(ropeId)

--- DELETE_ROPE
-- Deletes the rope with the specified handle.

You should check if the rope exists before trying to delete it, see [DOES_ROPE_EXIST](#\_0xFD5448BE3111ED96).

For an example on how to use this native please refer to [ADD_ROPE](#\_0xE832D760399EB220)
-- @param ropeId int* - The handle of the rope to delete
-- DELETE_ROPE(ropeId)

--- DETACH_ROPE_FROM_ENTITY
-- @param ropeId int
-- @param entity Entity
-- DETACH_ROPE_FROM_ENTITY(ropeId, entity)

--- DOES_ROPE_EXIST
-- For an example on how to use this native please refer to [ADD_ROPE](#\_0xE832D760399EB220)
-- @param ropeId int* - The handle of the rope to check
-- DOES_ROPE_EXIST(ropeId)

--- GET_CGOFFSET
-- @param entity Entity
-- GET_CGOFFSET(entity)

--- GET_ROPE_LAST_VERTEX_COORD
-- @param ropeId int
-- GET_ROPE_LAST_VERTEX_COORD(ropeId)

--- GET_ROPE_VERTEX_COORD
-- @param ropeId int
-- @param vertex int
-- GET_ROPE_VERTEX_COORD(ropeId, vertex)

--- GET_ROPE_VERTEX_COUNT
-- @param ropeId int
-- GET_ROPE_VERTEX_COUNT(ropeId)

--- LOAD_ROPE_DATA
-- ```
Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
```
-- @param ropeId int
-- @param rope_preset char*
-- LOAD_ROPE_DATA(ropeId, rope_preset)

--- PIN_ROPE_VERTEX
-- @param ropeId int
-- @param vertex int
-- @param x float
-- @param y float
-- @param z float
-- PIN_ROPE_VERTEX(ropeId, vertex, x, y, z)

--- ROPE_ARE_TEXTURES_LOADED
-- ROPE_ARE_TEXTURES_LOADED()

--- ROPE_CONVERT_TO_SIMPLE
-- @param ropeId int
-- ROPE_CONVERT_TO_SIMPLE(ropeId)

--- ROPE_DRAW_SHADOW_ENABLED
-- @param ropeId int*
-- @param toggle BOOL
-- ROPE_DRAW_SHADOW_ENABLED(ropeId, toggle)

--- ROPE_FORCE_LENGTH
-- ```
Forces a rope to a certain length.
```
-- @param ropeId int
-- @param length float
-- ROPE_FORCE_LENGTH(ropeId, length)

--- ROPE_GET_DISTANCE_BETWEEN_ENDS
-- @param ropeId int
-- ROPE_GET_DISTANCE_BETWEEN_ENDS(ropeId)

--- ROPE_LOAD_TEXTURES
-- ```
Loads rope textures for all ropes in the current scene.
```
-- ROPE_LOAD_TEXTURES()

--- ROPE_RESET_LENGTH
-- ```
Reset a rope to a certain length.  
```
-- @param ropeId int
-- @param length float
-- ROPE_RESET_LENGTH(ropeId, length)

--- ROPE_SET_UPDATE_ORDER
-- @param ropeId int
-- @param p1 Any
-- ROPE_SET_UPDATE_ORDER(ropeId, p1)

--- ROPE_SET_UPDATE_PINVERTS
-- @param ropeId int
-- ROPE_SET_UPDATE_PINVERTS(ropeId)

--- ROPE_UNLOAD_TEXTURES
-- ```
Unloads rope textures for all ropes in the current scene.
```
-- ROPE_UNLOAD_TEXTURES()

--- SET_CGOFFSET
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- SET_CGOFFSET(entity, x, y, z)

--- SET_CG_AT_BOUNDCENTER
-- @param entity Entity
-- SET_CG_AT_BOUNDCENTER(entity)

--- SET_DAMPING
-- @param entity Entity
-- @param vertex int
-- @param value float
-- SET_DAMPING(entity, vertex, value)

--- SET_DISABLE_BREAKING
-- @param object Object
-- @param toggle BOOL
-- SET_DISABLE_BREAKING(object, toggle)

--- SET_DISABLE_FRAG_DAMAGE
-- @param object Object
-- @param toggle BOOL
-- SET_DISABLE_FRAG_DAMAGE(object, toggle)

--- START_ROPE_UNWINDING_FRONT
-- @param ropeId int
-- START_ROPE_UNWINDING_FRONT(ropeId)

--- START_ROPE_WINDING
-- @param ropeId int
-- START_ROPE_WINDING(ropeId)

--- STOP_ROPE_UNWINDING_FRONT
-- @param ropeId int
-- STOP_ROPE_UNWINDING_FRONT(ropeId)

--- STOP_ROPE_WINDING
-- @param ropeId int
-- STOP_ROPE_WINDING(ropeId)

--- UNPIN_ROPE_VERTEX
-- @param ropeId int
-- @param vertex int
-- UNPIN_ROPE_VERTEX(ropeId, vertex)

--- _DOES_ROPE_BELONG_TO_THIS_SCRIPT
-- Return if the rope was generated or not by the script where the native is called.
-- @param ropeId int
-- _DOES_ROPE_BELONG_TO_THIS_SCRIPT(ropeId)

--- _GET_HAS_OBJECT_FRAG_INST
-- ```
GET_*
```
-- @param object Object
-- _GET_HAS_OBJECT_FRAG_INST(object)

--- _SET_ENTITY_PROOF_UNK
-- @param entity Entity
-- @param toggle BOOL
-- _SET_ENTITY_PROOF_UNK(entity, toggle)

--- _SET_LAUNCH_CONTROL_ENABLED
-- Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.

```
NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- _SET_LAUNCH_CONTROL_ENABLED(toggle)


-- ========== PLAYER ==========

--- 0x0032A6DBA562C518
-- ```
2 matches in 1 script - am_hold_up
Used in multiplayer scripts?
```
-- 0x0032A6DBA562C518()

--- 0x237440E46D918649
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- 0x237440E46D918649(p0)

--- 0x2382AB11450AE7BA
-- @param p0 Any
-- @param p1 Any
-- 0x2382AB11450AE7BA(p0, p1)

--- 0x2F41A3BAE005E5FA
-- @param p0 Any
-- @param p1 Any
-- 0x2F41A3BAE005E5FA(p0, p1)

--- 0x2F7CEB6520288061
-- ```
Used with radios:
void sub_cf383(auto _a0) {
    if ((a_0)==1) {
        if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
            PLAYER::_2F7CEB6520288061(0);
            AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);
            AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);
            AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);
        }
        sub_cf3f6(1);
    } else {
        if (MISC::IS_BIT_SET((g_240005._f1), 3)) {
            PLAYER::_2F7CEB6520288061(1);
            AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);
            AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);
            AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);
        }
        sub_cf3f6(0);
    }
}
SET_PLAYER_S*
```
-- @param p0 BOOL
-- 0x2F7CEB6520288061(p0)

--- 0x31E90B8873A4CD3B
-- @param player Player
-- @param p1 float
-- 0x31E90B8873A4CD3B(player, p1)

--- 0x36F1B38855F2A8DF
-- @param player Player
-- 0x36F1B38855F2A8DF(player)

--- 0x4669B3ED80F24B4E
-- ```
This has been found in use in the decompiled files.  
```
-- @param player Player
-- 0x4669B3ED80F24B4E(player)

--- 0x5501B7A5CDB79D37
-- ```
Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION
```
-- @param player Player
-- 0x5501B7A5CDB79D37(player)

--- 0x55FCC0C390620314
-- @param player1 Player
-- @param player2 Player
-- @param toggle BOOL
-- 0x55FCC0C390620314(player1, player2, toggle)

--- 0x690A61A6D13583F6
-- ```
IS_*
```
-- @param player Player
-- 0x690A61A6D13583F6(player)

--- 0x6E4361FF3E8CD7CA
-- @param p0 Any
-- 0x6E4361FF3E8CD7CA(p0)

--- 0x70A382ADEC069DD3
-- ```
NativeDB Introduced: v1604
```
-- @param coordX float
-- @param coordY float
-- @param coordZ float
-- 0x70A382ADEC069DD3(coordX, coordY, coordZ)

--- 0x7148E0F43D11F0D9
-- ```
NativeDB Introduced: v1604
```
-- 0x7148E0F43D11F0D9()

--- 0x7BAE68775557AE0B
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- 0x7BAE68775557AE0B(p0, p1, p2, p3, p4, p5)

--- 0x7E07C78925D5FD96
-- @param p0 Any
-- 0x7E07C78925D5FD96(p0)

--- 0x823EC8E82BA45986
-- ```
NativeDB Introduced: v2060
```
-- @param p0 Any
-- 0x823EC8E82BA45986(p0)

--- 0x8D768602ADEF2245
-- ```
SET_PLAYER_MAX_*
```
-- @param player Player
-- @param p1 float
-- 0x8D768602ADEF2245(player, p1)

--- 0x9097EB6D4BB9A12A
-- ADD_\*

```
NativeDB Introduced: v1868
```
-- @param player Player
-- @param entity Entity
-- 0x9097EB6D4BB9A12A(player, entity)

--- 0x9EDD76E87D5D51BA
-- @param player Player
-- 0x9EDD76E87D5D51BA(player)

--- 0x9F260BFB59ADBCA3
-- REMOVE_\*

```
NativeDB Introduced: v1868
```
-- @param player Player
-- @param entity Entity
-- 0x9F260BFB59ADBCA3(player, entity)

--- 0xAD73CE5A09E42D12
-- ```
This has been found in use in the decompiled files.  
```
-- @param player Player
-- 0xAD73CE5A09E42D12(player)

--- 0xB45EFF719D8427A6
-- ```
PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation
***
In "am_hold_up.ysc" used once:
l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);
PLAYER::_B45EFF719D8427A6((l_8d._f47));
```
-- @param p0 float
-- 0xB45EFF719D8427A6(p0)

--- 0xB885852C39CC265D
-- ```
Disables something. Used only once in R* scripts (freemode.ysc).
DISABLE_PLAYER_*
```
-- 0xB885852C39CC265D()

--- 0xB9CF1F793A9F1BF1
-- ```
Returns profile setting 237.
GET_*
```
-- 0xB9CF1F793A9F1BF1()

--- 0xBC9490CA15AEA8FB
-- ```
Seems to only appear in scripts used in Singleplayer.  
Always used like this in scripts  
PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());  
```
-- @param player Player
-- 0xBC9490CA15AEA8FB(player)

--- 0xC3376F42B1FACCC6
-- ```
- This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
```
-- @param player Player
-- 0xC3376F42B1FACCC6(player)

--- 0xCAC57395B151135F
-- ```
Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".  
```
-- @param player Player
-- @param p1 BOOL
-- 0xCAC57395B151135F(player, p1)

--- 0xCB645E85E97EA48B
-- ```
Returns profile setting 243.
GET_*
```
-- 0xCB645E85E97EA48B()

--- 0xD821056B9ACF8052
-- @param player Player
-- @param p1 Any
-- 0xD821056B9ACF8052(player, p1)

--- 0xDCC07526B8EC45AF
-- Always returns false.

```
NativeDB Introduced: v1868
```
-- @param player Player
-- 0xDCC07526B8EC45AF(player)

--- 0xDD2620B7B9D16FF1
-- ```
2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.  
```
-- @param player Player
-- @param p1 float
-- 0xDD2620B7B9D16FF1(player, p1)

--- 0xDE45D1A1EF45EE61
-- @param player Player
-- @param toggle BOOL
-- 0xDE45D1A1EF45EE61(player, toggle)

--- 0xFAC75988A7D078D3
-- @param player Player
-- 0xFAC75988A7D078D3(player)

--- 0xFFEE8FA29AB9A18E
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- 0xFFEE8FA29AB9A18E(player)

--- ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP
-- @param player Player
-- ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(player)

--- ARE_PLAYER_STARS_GREYED_OUT
-- @param player Player
-- ARE_PLAYER_STARS_GREYED_OUT(player)

--- ASSISTED_MOVEMENT_CLOSE_ROUTE
-- ASSISTED_MOVEMENT_CLOSE_ROUTE()

--- ASSISTED_MOVEMENT_FLUSH_ROUTE
-- ASSISTED_MOVEMENT_FLUSH_ROUTE()

--- CAN_PED_HEAR_PLAYER
-- @param player Player
-- @param ped Ped
-- CAN_PED_HEAR_PLAYER(player, ped)

--- CAN_PLAYER_START_MISSION
-- @param player Player
-- CAN_PLAYER_START_MISSION(player)

--- CHANGE_PLAYER_PED
-- @param player Player
-- @param ped Ped
-- @param b2 BOOL
-- @param resetDamage BOOL
-- CHANGE_PLAYER_PED(player, ped, b2, resetDamage)

--- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
-- @param player Player
-- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(player)

--- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED
-- @param player Player
-- CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(player)

--- CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE
-- @param player Player
-- CLEAR_PLAYER_PARACHUTE_MODEL_OVERRIDE(player)

--- CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE
-- @param player Player
-- CLEAR_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(player)

--- CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE
-- @param player Player
-- CLEAR_PLAYER_PARACHUTE_VARIATION_OVERRIDE(player)

--- CLEAR_PLAYER_WANTED_LEVEL
-- ```
This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);  
PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.  
```
-- @param player Player
-- CLEAR_PLAYER_WANTED_LEVEL(player)

--- DISABLE_PLAYER_FIRING
-- Inhibits the player from using any method of combat including melee and firearms.\
NOTE: Only disables the firing for one frame
-- @param player Player - The player for which to disable combat methods.
-- @param toggle BOOL - Unused, as this native will disable combat regardless of the value of this parameter.
-- DISABLE_PLAYER_FIRING(player, toggle)

--- DISABLE_PLAYER_VEHICLE_REWARDS
-- Disables vehicle rewards for the current frame.
-- @param player Player - The player to disable rewards
-- DISABLE_PLAYER_VEHICLE_REWARDS(player)

--- DISPLAY_SYSTEM_SIGNIN_UI
-- ```
Purpose of the BOOL currently unknown.  
Both, true and false, work  
```
-- @param unk BOOL
-- DISPLAY_SYSTEM_SIGNIN_UI(unk)

--- ENABLE_SPECIAL_ABILITY
-- ```
NativeDB Added Parameter 3: Any p2
```
-- @param player Player
-- @param toggle BOOL
-- ENABLE_SPECIAL_ABILITY(player, toggle)

--- EXTEND_WORLD_BOUNDARY_FOR_PLAYER
-- ```
Appears only 3 times in the scripts, more specifically in michael1.ysc
-
This can be used to prevent dying if you are "out of the world"
```
-- @param x float
-- @param y float
-- @param z float
-- EXTEND_WORLD_BOUNDARY_FOR_PLAYER(x, y, z)

--- FORCE_CLEANUP
-- ```
used with 1,2,8,64,128 in the scripts  
```
-- @param cleanupFlags int
-- FORCE_CLEANUP(cleanupFlags)

--- FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME
-- ```
PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation  
```
-- @param name char*
-- @param cleanupFlags int
-- FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME(name, cleanupFlags)

--- FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID
-- @param id int
-- @param cleanupFlags int
-- FORCE_CLEANUP_FOR_THREAD_WITH_THIS_ID(id, cleanupFlags)

--- GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP
-- GET_CAUSE_OF_MOST_RECENT_FORCE_CLEANUP()

--- GET_ENTITY_PLAYER_IS_FREE_AIMING_AT
-- ```
Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.  
Returns false if no entity found.  
```
-- @param player Player
-- @param entity Entity*
-- GET_ENTITY_PLAYER_IS_FREE_AIMING_AT(player, entity)

--- GET_IS_PLAYER_DRIVING_ON_HIGHWAY
-- @param playerId Player - The local index of the player to check (see [PLAYER_ID](#\_0x4F8644AF03D0E0D6))
-- GET_IS_PLAYER_DRIVING_ON_HIGHWAY(playerId)

--- GET_MAX_WANTED_LEVEL
-- ```
Gets the maximum wanted level the player can get.  
Ranges from 0 to 5.  
```
-- GET_MAX_WANTED_LEVEL()

--- GET_NUMBER_OF_PLAYERS
-- ```
Gets the number of players in the current session.
If not multiplayer, always returns 1.
```
-- GET_NUMBER_OF_PLAYERS()

--- GET_PLAYERS_LAST_VEHICLE
-- ### Warning

This native will return `0` if the last vehicle the player was in was destroyed.

### Alternative

You can use [GET_VEHICLE_PED_IS_IN](#\_0x9A9112A0FE9A4713), which will actually get the last vehicle, even if it was destroyed.
-- GET_PLAYERS_LAST_VEHICLE()

--- GET_PLAYER_CURRENT_STEALTH_NOISE
-- @param player Player
-- GET_PLAYER_CURRENT_STEALTH_NOISE(player)

--- GET_PLAYER_FAKE_WANTED_LEVEL
-- @param player Player
-- GET_PLAYER_FAKE_WANTED_LEVEL(player)

--- GET_PLAYER_GROUP
-- ```
Returns the group ID the player is member of.  
```
-- @param player Player
-- GET_PLAYER_GROUP(player)

--- GET_PLAYER_HAS_RESERVE_PARACHUTE
-- @param player Player
-- GET_PLAYER_HAS_RESERVE_PARACHUTE(player)

--- GET_PLAYER_INDEX
-- ```
Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT  
```
-- GET_PLAYER_INDEX()

--- GET_PLAYER_INVINCIBLE
-- ```
Returns the Player's Invincible status.  
This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:  
	bool IsPlayerInvincible(Player player)  
	{  
auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));	  
if (addr)  
{  
	DWORD flag = *(DWORD *)(addr + 0x188);  
	return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);  
}  
return false;  
	}  
============================================================  
This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash? 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?  
```
-- @param player Player
-- GET_PLAYER_INVINCIBLE(player)

--- GET_PLAYER_MAX_ARMOUR
-- @param player Player
-- GET_PLAYER_MAX_ARMOUR(player)

--- GET_PLAYER_NAME
-- Returns the players name from a specified player index
-- @param player Player - The player index, or -1 to get the local player ped.
-- GET_PLAYER_NAME(player)

--- GET_PLAYER_PARACHUTE_PACK_TINT_INDEX
-- @param player Player
-- @param tintIndex int*
-- GET_PLAYER_PARACHUTE_PACK_TINT_INDEX(player, tintIndex)

--- GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR
-- @param player Player
-- @param r int*
-- @param g int*
-- @param b int*
-- GET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(player, r, g, b)

--- GET_PLAYER_PARACHUTE_TINT_INDEX
-- ```
Tints:  
None = -1,  
Rainbow = 0,  
Red = 1,  
SeasideStripes = 2,  
WidowMaker = 3,  
Patriot = 4,  
Blue = 5,  
Black = 6,  
Hornet = 7,  
AirFocce = 8,  
Desert = 9,  
Shadow = 10,  
HighAltitude = 11,  
Airbone = 12,  
Sunrise = 13,  
```
-- @param player Player
-- @param tintIndex int*
-- GET_PLAYER_PARACHUTE_TINT_INDEX(player, tintIndex)

--- GET_PLAYER_PED
-- Gets the ped for a specified player index.
-- @param playerId Player - The player index, or -1 to get the local player ped.
-- GET_PLAYER_PED(playerId)

--- GET_PLAYER_PED_SCRIPT_INDEX
-- ```
Does the same like PLAYER::GET_PLAYER_PED
```
-- @param player Player
-- GET_PLAYER_PED_SCRIPT_INDEX(player)

--- GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX
-- ```
Tints:  
None = -1,  
Rainbow = 0,  
Red = 1,  
SeasideStripes = 2,  
WidowMaker = 3,  
Patriot = 4,  
Blue = 5,  
Black = 6,  
Hornet = 7,  
AirFocce = 8,  
Desert = 9,  
Shadow = 10,  
HighAltitude = 11,  
Airbone = 12,  
Sunrise = 13,  
```
-- @param player Player
-- @param index int*
-- GET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(player, index)

--- GET_PLAYER_RGB_COLOUR
-- @param player Player
-- @param r int*
-- @param g int*
-- @param b int*
-- GET_PLAYER_RGB_COLOUR(player, r, g, b)

--- GET_PLAYER_SPRINT_STAMINA_REMAINING
-- @param player Player
-- GET_PLAYER_SPRINT_STAMINA_REMAINING(player)

--- GET_PLAYER_SPRINT_TIME_REMAINING
-- @param player Player
-- GET_PLAYER_SPRINT_TIME_REMAINING(player)

--- GET_PLAYER_TARGET_ENTITY
-- ```
Assigns the handle of locked-on melee target to *entity that you pass it.  
Returns false if no entity found.  
```
-- @param player Player
-- @param entity Entity*
-- GET_PLAYER_TARGET_ENTITY(player, entity)

--- GET_PLAYER_TEAM
-- ```
Gets the player's team.  
Does nothing in singleplayer.  
```
-- @param player Player
-- GET_PLAYER_TEAM(player)

--- GET_PLAYER_UNDERWATER_TIME_REMAINING
-- @param player Player
-- GET_PLAYER_UNDERWATER_TIME_REMAINING(player)

--- GET_PLAYER_WANTED_CENTRE_POSITION
-- @param player Player
-- GET_PLAYER_WANTED_CENTRE_POSITION(player)

--- GET_PLAYER_WANTED_LEVEL
-- @param player Player
-- GET_PLAYER_WANTED_LEVEL(player)

--- GET_TIME_SINCE_LAST_ARREST
-- ```
Returns the time since the character was arrested in (ms) milliseconds.  
example  
var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();  
UI.DrawSubtitle(time.ToString());  
if player has not been arrested, the int returned will be -1.  
```
-- GET_TIME_SINCE_LAST_ARREST()

--- GET_TIME_SINCE_LAST_DEATH
-- ```
Returns the time since the character died in (ms) milliseconds.  
example  
var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();  
UI.DrawSubtitle(time.ToString());  
if player has not died, the int returned will be -1.  
```
-- GET_TIME_SINCE_LAST_DEATH()

--- GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC
-- @param player Player
-- GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(player)

--- GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT
-- @param player Player
-- GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(player)

--- GET_TIME_SINCE_PLAYER_HIT_PED
-- @param player Player
-- GET_TIME_SINCE_PLAYER_HIT_PED(player)

--- GET_TIME_SINCE_PLAYER_HIT_VEHICLE
-- @param player Player
-- GET_TIME_SINCE_PLAYER_HIT_VEHICLE(player)

--- GET_WANTED_LEVEL_RADIUS
-- ```
Remnant from GTA IV. Does nothing in GTA V.
```
-- @param player Player
-- GET_WANTED_LEVEL_RADIUS(player)

--- GET_WANTED_LEVEL_THRESHOLD
-- ```
Drft  
```
-- @param wantedLevel int
-- GET_WANTED_LEVEL_THRESHOLD(wantedLevel)

--- GIVE_ACHIEVEMENT_TO_PLAYER
-- ```
Achievements from 0-57
more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
```
-- @param achievement int
-- GIVE_ACHIEVEMENT_TO_PLAYER(achievement)

--- GIVE_PLAYER_RAGDOLL_CONTROL
-- @param player Player
-- @param toggle BOOL
-- GIVE_PLAYER_RAGDOLL_CONTROL(player, toggle)

--- HAS_ACHIEVEMENT_BEEN_PASSED
-- @param achievement int
-- HAS_ACHIEVEMENT_BEEN_PASSED(achievement)

--- HAS_FORCE_CLEANUP_OCCURRED
-- @param cleanupFlags int
-- HAS_FORCE_CLEANUP_OCCURRED(cleanupFlags)

--- HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE
-- @param player Player
-- HAS_PLAYER_BEEN_SPOTTED_IN_STOLEN_VEHICLE(player)

--- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED
-- @param player Player
-- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_NON_ANIMAL_PED(player)

--- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED
-- @param player Player
-- HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(player)

--- HAS_PLAYER_LEFT_THE_WORLD
-- @param player Player
-- HAS_PLAYER_LEFT_THE_WORLD(player)

--- INT_TO_PARTICIPANTINDEX
-- ```
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
--------------------------------------------------------  
if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))  
```
-- @param value int
-- INT_TO_PARTICIPANTINDEX(value)

--- INT_TO_PLAYERINDEX
-- ```
Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).  
```
-- @param value int
-- INT_TO_PLAYERINDEX(value)

--- IS_PLAYER_BATTLE_AWARE
-- ```
Returns true if an unk value is greater than 0.0f  
```
-- @param player Player
-- IS_PLAYER_BATTLE_AWARE(player)

--- IS_PLAYER_BEING_ARRESTED
-- ```
Return true while player is being arrested / busted.  
If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)  
If atArresting is set to 0, this function will return 1 only when the busted screen is shown.  
```
-- @param player Player
-- @param atArresting BOOL
-- IS_PLAYER_BEING_ARRESTED(player, atArresting)

--- IS_PLAYER_BLUETOOTH_ENABLE
-- @param player Player
-- IS_PLAYER_BLUETOOTH_ENABLE(player)

--- IS_PLAYER_CLIMBING
-- ```
Returns TRUE if the player ('s ped) is climbing at the moment.  
```
-- @param player Player
-- IS_PLAYER_CLIMBING(player)

--- IS_PLAYER_CONTROL_ON
-- ```
Can the player control himself, used to disable controls for player for things like a cutscene.  
---  
You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.  
```
-- @param player Player
-- IS_PLAYER_CONTROL_ON(player)

--- IS_PLAYER_DEAD
-- @param player Player
-- IS_PLAYER_DEAD(player)

--- IS_PLAYER_FREE_AIMING
-- ```
Gets a value indicating whether the specified player is currently aiming freely.  
```
-- @param player Player
-- IS_PLAYER_FREE_AIMING(player)

--- IS_PLAYER_FREE_AIMING_AT_ENTITY
-- ```
Gets a value indicating whether the specified player is currently aiming freely at the specified entity.  
```
-- @param player Player
-- @param entity Entity
-- IS_PLAYER_FREE_AIMING_AT_ENTITY(player, entity)

--- IS_PLAYER_FREE_FOR_AMBIENT_TASK
-- @param player Player
-- IS_PLAYER_FREE_FOR_AMBIENT_TASK(player)

--- IS_PLAYER_LOGGING_IN_NP
-- ```
this function is hard-coded to always return 0.  
```
-- IS_PLAYER_LOGGING_IN_NP()

--- IS_PLAYER_ONLINE
-- It returns true if the player is online, suggesting they are also logged in locally. Note that this is an alias for `NETWORK_IS_SIGNED_ONLINE`.
-- IS_PLAYER_ONLINE()

--- IS_PLAYER_PLAYING
-- ```
Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.  
```
-- @param player Player
-- IS_PLAYER_PLAYING(player)

--- IS_PLAYER_PRESSING_HORN
-- @param player Player
-- IS_PLAYER_PRESSING_HORN(player)

--- IS_PLAYER_READY_FOR_CUTSCENE
-- @param player Player
-- IS_PLAYER_READY_FOR_CUTSCENE(player)

--- IS_PLAYER_RIDING_TRAIN
-- ```
Returns true if the player is riding a train.  
```
-- @param player Player
-- IS_PLAYER_RIDING_TRAIN(player)

--- IS_PLAYER_SCRIPT_CONTROL_ON
-- @param player Player
-- IS_PLAYER_SCRIPT_CONTROL_ON(player)

--- IS_PLAYER_TARGETTING_ANYTHING
-- @param player Player
-- IS_PLAYER_TARGETTING_ANYTHING(player)

--- IS_PLAYER_TARGETTING_ENTITY
-- @param player Player
-- @param entity Entity
-- IS_PLAYER_TARGETTING_ENTITY(player, entity)

--- IS_PLAYER_TELEPORT_ACTIVE
-- IS_PLAYER_TELEPORT_ACTIVE()

--- IS_PLAYER_WANTED_LEVEL_GREATER
-- @param player Player
-- @param wantedLevel int
-- IS_PLAYER_WANTED_LEVEL_GREATER(player, wantedLevel)

--- IS_SPECIAL_ABILITY_ACTIVE
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- IS_SPECIAL_ABILITY_ACTIVE(player)

--- IS_SPECIAL_ABILITY_ENABLED
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- IS_SPECIAL_ABILITY_ENABLED(player)

--- IS_SPECIAL_ABILITY_METER_FULL
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- IS_SPECIAL_ABILITY_METER_FULL(player)

--- IS_SPECIAL_ABILITY_UNLOCKED
-- @param playerModel Hash
-- IS_SPECIAL_ABILITY_UNLOCKED(playerModel)

--- IS_SYSTEM_UI_BEING_DISPLAYED
-- IS_SYSTEM_UI_BEING_DISPLAYED()

--- NETWORK_PLAYER_ID_TO_INT
-- ```
Does exactly the same thing as PLAYER_ID()  
```
-- NETWORK_PLAYER_ID_TO_INT()

--- PLAYER_ATTACH_VIRTUAL_BOUND
-- ```
Only 1 match. ob_sofa_michael.  
PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- PLAYER_ATTACH_VIRTUAL_BOUND(p0, p1, p2, p3, p4, p5, p6, p7)

--- PLAYER_DETACH_VIRTUAL_BOUND
-- ```
1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;  
```
-- PLAYER_DETACH_VIRTUAL_BOUND()

--- PLAYER_ID
-- Returns the player index for the local player.
-- PLAYER_ID()

--- PLAYER_PED_ID
-- Returns the entity handle for the local player ped. Note that this entity handle will change after using commands such as SET_PLAYER_MODEL.
-- PLAYER_PED_ID()

--- REMOVE_PLAYER_HELMET
-- @param player Player
-- @param p2 BOOL
-- REMOVE_PLAYER_HELMET(player, p2)

--- REPORT_CRIME
-- ```
PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));  
From am_armybase.ysc.c4:  
PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));  
-----  
This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7   
-----  
crimeType:  
1: Firearms possession  
2: Person running a red light ("5-0-5")  
3: Reckless driver  
4: Speeding vehicle (a "5-10")  
5: Traffic violation (a "5-0-5")  
6: Motorcycle rider without a helmet  
7: Vehicle theft (a "5-0-3")  
8: Grand Theft Auto  
9: ???  
10: ???  
11: Assault on a civilian (a "2-40")  
12: Assault on an officer  
13: Assault with a deadly weapon (a "2-45")  
14: Officer shot (a "2-45")  
15: Pedestrian struck by a vehicle  
16: Officer struck by a vehicle  
17: Helicopter down (an "AC"?)  
18: Civilian on fire (a "2-40")  
19: Officer set on fire (a "10-99")  
20: Car on fire  
21: Air unit down (an "AC"?)  
22: An explosion (a "9-96")  
23: A stabbing (a "2-45") (also something else I couldn't understand)  
24: Officer stabbed (also something else I couldn't understand)  
25: Attack on a vehicle ("MDV"?)  
26: Damage to property  
27: Suspect threatening officer with a firearm  
28: Shots fired  
29: ???  
30: ???  
31: ???  
32: ???  
33: ???  
34: A "2-45"  
35: ???  
36: A "9-25"  
37: ???  
38: ???  
39: ???  
40: ???  
41: ???  
42: ???  
43: Possible disturbance  
44: Civilian in need of assistance  
45: ???  
46: ???  
```
-- @param player Player
-- @param crimeType int
-- @param wantedLvlThresh int
-- REPORT_CRIME(player, crimeType, wantedLvlThresh)

--- REPORT_POLICE_SPOTTED_PLAYER
-- @param player Player
-- REPORT_POLICE_SPOTTED_PLAYER(player)

--- RESET_PLAYER_ARREST_STATE
-- @param player Player
-- RESET_PLAYER_ARREST_STATE(player)

--- RESET_PLAYER_INPUT_GAIT
-- @param player Player
-- RESET_PLAYER_INPUT_GAIT(player)

--- RESET_PLAYER_STAMINA
-- @param player Player
-- RESET_PLAYER_STAMINA(player)

--- RESET_WANTED_LEVEL_DIFFICULTY
-- @param player Player
-- RESET_WANTED_LEVEL_DIFFICULTY(player)

--- RESET_WORLD_BOUNDARY_FOR_PLAYER
-- ```
NativeDB Introduced: v323
```
-- RESET_WORLD_BOUNDARY_FOR_PLAYER()

--- RESTORE_PLAYER_STAMINA
-- Adds a percentage to a players stamina
-- @param player Player - player to restore the stamina for
-- @param percentage float - seems to be a percentage that ranges from 0.0 to 1.0 (1.0 being 100%)
-- RESTORE_PLAYER_STAMINA(player, percentage)

--- SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE
-- ```
This can be between 1.0f - 14.9f   
You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.  
On PC the multiplier can be between 0.0f and 50.0f (inclusive).  
```
-- @param player Player
-- @param multiplier float
-- SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(player, multiplier)

--- SET_ALL_RANDOM_PEDS_FLEE
-- Sets whether all random peds will run away from the player if they are agitated (threatened) (bool=true), or if they will stand their ground (bool=false).
-- @param player Player - The Player ID for whom you want to set this behavior.
-- @param toggle BOOL - true/false.
-- SET_ALL_RANDOM_PEDS_FLEE(player, toggle)

--- SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
-- @param player Player
-- SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(player)

--- SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE
-- @param player Player
-- @param toggle BOOL
-- SET_AUTO_GIVE_PARACHUTE_WHEN_ENTER_PLANE(player, toggle)

--- SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE
-- @param player Player
-- @param toggle BOOL
-- SET_AUTO_GIVE_SCUBA_GEAR_WHEN_EXIT_VEHICLE(player, toggle)

--- SET_DISABLE_AMBIENT_MELEE_MOVE
-- @param player Player
-- @param toggle BOOL
-- SET_DISABLE_AMBIENT_MELEE_MOVE(player, toggle)

--- SET_DISPATCH_COPS_FOR_PLAYER
-- @param player Player
-- @param toggle BOOL
-- SET_DISPATCH_COPS_FOR_PLAYER(player, toggle)

--- SET_EVERYONE_IGNORE_PLAYER
-- @param player Player
-- @param toggle BOOL
-- SET_EVERYONE_IGNORE_PLAYER(player, toggle)

--- SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS
-- @param player Player
-- @param toggle BOOL
-- SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(player, toggle)

--- SET_MAX_WANTED_LEVEL
-- @param maxWantedLevel int
-- SET_MAX_WANTED_LEVEL(maxWantedLevel)

--- SET_PLAYER_BLUETOOTH_STATE
-- @param player Player
-- @param state BOOL
-- SET_PLAYER_BLUETOOTH_STATE(player, state)

--- SET_PLAYER_CAN_BE_HASSLED_BY_GANGS
-- ```
Sets whether this player can be hassled by gangs.  
```
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(player, toggle)

--- SET_PLAYER_CAN_DO_DRIVE_BY
-- Sets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.

This is a toggle, it does not have to be ran every frame.
-- @param player Player - The player to target.
-- @param toggle BOOL - If set to false, disables the players ability to do drive bys.
-- SET_PLAYER_CAN_DO_DRIVE_BY(player, toggle)

--- SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL
-- @param player Player
-- @param enabled BOOL
-- SET_PLAYER_CAN_LEAVE_PARACHUTE_SMOKE_TRAIL(player, enabled)

--- SET_PLAYER_CAN_USE_COVER
-- ```
Sets whether this player can take cover.
```
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_CAN_USE_COVER(player, toggle)

--- SET_PLAYER_CLOTH_LOCK_COUNTER
-- ```
6 matches across 4 scripts. 5 occurrences were 240. The other was 255.  
```
-- @param value int
-- SET_PLAYER_CLOTH_LOCK_COUNTER(value)

--- SET_PLAYER_CLOTH_PACKAGE_INDEX
-- ```
Every occurrence was either 0 or 2.  
```
-- @param index int
-- SET_PLAYER_CLOTH_PACKAGE_INDEX(index)

--- SET_PLAYER_CLOTH_PIN_FRAMES
-- @param player Player
-- @param p1 int
-- SET_PLAYER_CLOTH_PIN_FRAMES(player, p1)

--- SET_PLAYER_CONTROL
-- ```
Flags:
SPC_AMBIENT_SCRIPT = (1 << 1),
SPC_CLEAR_TASKS = (1 << 2),
SPC_REMOVE_FIRES = (1 << 3),
SPC_REMOVE_EXPLOSIONS = (1 << 4),
SPC_REMOVE_PROJECTILES = (1 << 5),
SPC_DEACTIVATE_GADGETS = (1 << 6),
SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
SPC_ALLOW_PAD_SHAKE = (1 << 12)
See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
```
-- @param player Player
-- @param bHasControl BOOL
-- @param flags int
-- SET_PLAYER_CONTROL(player, bHasControl, flags)

--- SET_PLAYER_FORCED_AIM
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_FORCED_AIM(player, toggle)

--- SET_PLAYER_FORCED_ZOOM
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_FORCED_ZOOM(player, toggle)

--- SET_PLAYER_FORCE_SKIP_AIM_INTRO
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_FORCE_SKIP_AIM_INTRO(player, toggle)

--- SET_PLAYER_HAS_RESERVE_PARACHUTE
-- @param player Player
-- SET_PLAYER_HAS_RESERVE_PARACHUTE(player)

--- SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER
-- This multiplier is reset to `1.0` every time the player ped is changed, often times via [`SET_PLAYER_MODEL`](#\_0x00A1CADD00108836) or [`CHANGE_PLAYER_PED`](#\_0x048189FAC643DEEE).
-- @param player Player - The local player ID, see [PLAYER_ID](#\_0x4F8644AF03D0E0D6).
-- @param regenRate float - The recharge multiplier, this value needs to be a positive float value to work.
-- SET_PLAYER_HEALTH_RECHARGE_MULTIPLIER(player, regenRate)

--- SET_PLAYER_INVINCIBLE
-- Make the player impervious to all forms of damage.
-- @param player Player - The player index.
-- @param bInvincible BOOL
-- SET_PLAYER_INVINCIBLE(player, bInvincible)

--- SET_PLAYER_LEAVE_PED_BEHIND
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_LEAVE_PED_BEHIND(player, toggle)

--- SET_PLAYER_LOCKON
-- ```
Used to toggle the square up aim.
```
-- @param player Player - The player ID to toggle the lock on for.
-- @param toggle BOOL - Set to false to prevent lock on, set to true to allow for lock on.
-- SET_PLAYER_LOCKON(player, toggle)

--- SET_PLAYER_LOCKON_RANGE_OVERRIDE
-- ```
Affects the range of auto aim target.  
```
-- @param player Player
-- @param range float
-- SET_PLAYER_LOCKON_RANGE_OVERRIDE(player, range)

--- SET_PLAYER_MAX_ARMOUR
-- ```
Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4  
```
-- @param player Player
-- @param value int
-- SET_PLAYER_MAX_ARMOUR(player, value)

--- SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE
-- Establishes a reset flag to prevent the player from entering any vehicle. Not that this native must be called every frame.
-- @param player Player - The player index.
-- SET_PLAYER_MAY_NOT_ENTER_ANY_VEHICLE(player)

--- SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE
-- Limit the player to only enter this vehicle. Note set vehicle to false if you want them to access any vehicle.
-- @param player Player - The player index.
-- @param vehicle Vehicle - Vehicle id.
-- SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(player, vehicle)

--- SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER
-- ```
NativeDB Added Parameter 3: BOOL p2
```
-- @param player Player
-- @param modifier float
-- SET_PLAYER_MELEE_WEAPON_DAMAGE_MODIFIER(player, modifier)

--- SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER
-- ```
modifier's min value is 0.1
```
-- @param player Player
-- @param modifier float
-- SET_PLAYER_MELEE_WEAPON_DEFENSE_MODIFIER(player, modifier)

--- SET_PLAYER_MODEL
-- Set the model for a specific Player. Note that this will destroy the current Ped for the Player and create a new one, any reference to the old ped will be invalid after calling this.

As per usual, make sure to request the model first and wait until it has loaded.
-- @param player Player - The player to set the model for
-- @param model Hash - The model to use
-- SET_PLAYER_MODEL(player, model)

--- SET_PLAYER_NOISE_MULTIPLIER
-- @param player Player
-- @param multiplier float
-- SET_PLAYER_NOISE_MULTIPLIER(player, multiplier)

--- SET_PLAYER_PARACHUTE_MODEL_OVERRIDE
-- ```
example:  
PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);  
```
-- @param player Player
-- @param model Hash
-- SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(player, model)

--- SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE
-- @param player Player
-- @param model Hash
-- SET_PLAYER_PARACHUTE_PACK_MODEL_OVERRIDE(player, model)

--- SET_PLAYER_PARACHUTE_PACK_TINT_INDEX
-- ```
tints 0- 13
0 - unkown
1 - unkown
2 - unkown
3 - unkown
4 - unkown
```
-- @param player Player
-- @param tintIndex int
-- SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(player, tintIndex)

--- SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR
-- @param player Player
-- @param r int
-- @param g int
-- @param b int
-- SET_PLAYER_PARACHUTE_SMOKE_TRAIL_COLOR(player, r, g, b)

--- SET_PLAYER_PARACHUTE_TINT_INDEX
-- ```
Tints:  
None = -1,  
Rainbow = 0,  
Red = 1,  
SeasideStripes = 2,  
WidowMaker = 3,  
Patriot = 4,  
Blue = 5,  
Black = 6,  
Hornet = 7,  
AirFocce = 8,  
Desert = 9,  
Shadow = 10,  
HighAltitude = 11,  
Airbone = 12,  
Sunrise = 13,  
```
-- @param player Player
-- @param tintIndex int
-- SET_PLAYER_PARACHUTE_TINT_INDEX(player, tintIndex)

--- SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE
-- ```
p1 was always 5.  
p4 was always false.  
```
-- @param player Player
-- @param p1 int
-- @param p2 Any
-- @param p3 Any
-- @param p4 BOOL
-- SET_PLAYER_PARACHUTE_VARIATION_OVERRIDE(player, p1, p2, p3, p4)

--- SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX
-- ```
Tints:  
None = -1,  
Rainbow = 0,  
Red = 1,  
SeasideStripes = 2,  
WidowMaker = 3,  
Patriot = 4,  
Blue = 5,  
Black = 6,  
Hornet = 7,  
AirFocce = 8,  
Desert = 9,  
Shadow = 10,  
HighAltitude = 11,  
Airbone = 12,  
Sunrise = 13,  
```
-- @param player Player
-- @param index int
-- SET_PLAYER_RESERVE_PARACHUTE_TINT_INDEX(player, index)

--- SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS
-- ```
example:  
flags: 0-6  
PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);  
wouldnt the flag be the seatIndex?  
```
-- @param player Player
-- @param flags int
-- SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(player, flags)

--- SET_PLAYER_SIMULATE_AIMING
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_SIMULATE_AIMING(player, toggle)

--- SET_PLAYER_SNEAKING_NOISE_MULTIPLIER
-- ```
Values around 1.0f to 2.0f used in game scripts.  
```
-- @param player Player
-- @param multiplier float
-- SET_PLAYER_SNEAKING_NOISE_MULTIPLIER(player, multiplier)

--- SET_PLAYER_SPRINT
-- @param player Player
-- @param toggle BOOL
-- SET_PLAYER_SPRINT(player, toggle)

--- SET_PLAYER_STEALTH_PERCEPTION_MODIFIER
-- @param player Player
-- @param value float
-- SET_PLAYER_STEALTH_PERCEPTION_MODIFIER(player, value)

--- SET_PLAYER_TARGETING_MODE
-- ```
Sets your targeting mode.
0 = Assisted Aim - Full
1 = Assisted Aim - Partial
2 = Free Aim - Assisted
3 = Free Aim
```
-- @param targetMode int
-- SET_PLAYER_TARGETING_MODE(targetMode)

--- SET_PLAYER_TARGET_LEVEL
-- @param targetLevel int
-- SET_PLAYER_TARGET_LEVEL(targetLevel)

--- SET_PLAYER_TEAM
-- Set the player's current team.
-- @param player Player - The player index.
-- @param team int
-- SET_PLAYER_TEAM(player, team)

--- SET_PLAYER_VEHICLE_DAMAGE_MODIFIER
-- ```
modifier's min value is 0.1
```
-- @param player Player
-- @param modifier float
-- SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(player, modifier)

--- SET_PLAYER_VEHICLE_DEFENSE_MODIFIER
-- ```
modifier's min value is 0.1
```
-- @param player Player
-- @param modifier float
-- SET_PLAYER_VEHICLE_DEFENSE_MODIFIER(player, modifier)

--- SET_PLAYER_WANTED_CENTRE_POSITION
-- ```
# Predominant call signatures  
PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));  
# Parameter value ranges  
P0: PLAYER::PLAYER_ID()  
P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)  
P2: Not set by any call  
```
-- @param player Player
-- @param position Vector3*
-- @param p2 BOOL
-- @param p3 BOOL
-- SET_PLAYER_WANTED_CENTRE_POSITION(player, position, p2, p3)

--- SET_PLAYER_WANTED_LEVEL
-- @param player Player - the target player
-- @param wantedLevel int - the wanted level 1-5
-- @param delayedResponse BOOL - false = 0-10sec police spawn response time, true = 10-20sec police spawn response time
-- SET_PLAYER_WANTED_LEVEL(player, wantedLevel, delayedResponse)

--- SET_PLAYER_WANTED_LEVEL_NOW
-- ```
Forces any pending wanted level to be applied to the specified player immediately.  
Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.  
Second parameter is unknown (always false).  
```
-- @param player Player
-- @param p1 BOOL
-- SET_PLAYER_WANTED_LEVEL_NOW(player, p1)

--- SET_PLAYER_WANTED_LEVEL_NO_DROP
-- @param player Player - the target player
-- @param wantedLevel int - the wanted level 1-5
-- @param delayedResponse BOOL - false = 0-10sec police spawn response time, true = 10-20sec police spawn response time
-- SET_PLAYER_WANTED_LEVEL_NO_DROP(player, wantedLevel, delayedResponse)

--- SET_PLAYER_WEAPON_DAMAGE_MODIFIER
-- The native ensures the 'modifier' parameter is 0.1 or greater.
-- @param player Player
-- @param modifier float
-- SET_PLAYER_WEAPON_DAMAGE_MODIFIER(player, modifier)

--- SET_PLAYER_WEAPON_DEFENSE_MODIFIER
-- @param player Player
-- @param modifier float
-- SET_PLAYER_WEAPON_DEFENSE_MODIFIER(player, modifier)

--- SET_POLICE_IGNORE_PLAYER
-- ```
The player will be ignored by the police if toggle is set to true  
```
-- @param player Player
-- @param toggle BOOL
-- SET_POLICE_IGNORE_PLAYER(player, toggle)

--- SET_POLICE_RADAR_BLIPS
-- ```
If toggle is set to false:
 The police won't be shown on the (mini)map
If toggle is set to true:
 The police will be shown on the (mini)map
```
-- @param toggle BOOL
-- SET_POLICE_RADAR_BLIPS(toggle)

--- SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER
-- ```
Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.  
Just call it one time, it is not required to be called once every tick.  
Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.  
It is not possible to "decrease" speed. Anything below 1 will be ignored.  
```
-- @param player Player
-- @param multiplier float
-- SET_RUN_SPRINT_MULTIPLIER_FOR_PLAYER(player, multiplier)

--- SET_SPECIAL_ABILITY_MULTIPLIER
-- @param multiplier float
-- SET_SPECIAL_ABILITY_MULTIPLIER(multiplier)

--- SET_SWIM_MULTIPLIER_FOR_PLAYER
-- ```
Swim speed multiplier.  
Multiplier goes up to 1.49  
Just call it one time, it is not required to be called once every tick. - Note copied from below native.  
Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.  
```
-- @param player Player
-- @param multiplier float
-- SET_SWIM_MULTIPLIER_FOR_PLAYER(player, multiplier)

--- SET_WANTED_LEVEL_DIFFICULTY
-- ```
Max value is 1.0  
```
-- @param player Player
-- @param difficulty float
-- SET_WANTED_LEVEL_DIFFICULTY(player, difficulty)

--- SET_WANTED_LEVEL_MULTIPLIER
-- @param multiplier float
-- SET_WANTED_LEVEL_MULTIPLIER(multiplier)

--- SIMULATE_PLAYER_INPUT_GAIT
-- This is to make the player walk without accepting input.

Call this native every frame so you can control the direction of your ped.
-- @param player Player - The player to target (always your local player id).
-- @param amount float - For game pads, using anything less than 1.0 will make it partially press analog controls (like sticks/triggers).
-- @param gaitType int - Value in increments of 100's. 2000, 500, 300, 200, etc. Set to -1 if you want your ped to walk forever.
-- @param rotationSpeed float - Determines the counterclockwise rotation angle when walking.
-- @param p4 BOOL - Always true
-- @param p5 BOOL - Always false
-- SIMULATE_PLAYER_INPUT_GAIT(player, amount, gaitType, rotationSpeed, p4, p5)

--- SPECIAL_ABILITY_CHARGE_ABSOLUTE
-- ```
p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param player Player
-- @param p1 int
-- @param p2 BOOL
-- SPECIAL_ABILITY_CHARGE_ABSOLUTE(player, p1, p2)

--- SPECIAL_ABILITY_CHARGE_CONTINUOUS
-- ```
p1 appears to always be 1 (only comes up twice)
```

```
NativeDB Added Parameter 3: Any p2
```
-- @param player Player
-- @param p2 Ped
-- SPECIAL_ABILITY_CHARGE_CONTINUOUS(player, p2)

--- SPECIAL_ABILITY_CHARGE_LARGE
-- ```
2 matches. p1 was always true.
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param player Player
-- @param p1 BOOL
-- @param p2 BOOL
-- SPECIAL_ABILITY_CHARGE_LARGE(player, p1, p2)

--- SPECIAL_ABILITY_CHARGE_MEDIUM
-- ```
Only 1 match. Both p1 & p2 were true.
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param player Player
-- @param p1 BOOL
-- @param p2 BOOL
-- SPECIAL_ABILITY_CHARGE_MEDIUM(player, p1, p2)

--- SPECIAL_ABILITY_CHARGE_NORMALIZED
-- ```
normalizedValue is from 0.0 - 1.0
p2 is always 1
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param player Player
-- @param normalizedValue float
-- @param p2 BOOL
-- SPECIAL_ABILITY_CHARGE_NORMALIZED(player, normalizedValue, p2)

--- SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- SPECIAL_ABILITY_CHARGE_ON_MISSION_FAILED(player)

--- SPECIAL_ABILITY_CHARGE_SMALL
-- ```
Every occurrence of p1 & p2 were both true.
```

```
NativeDB Added Parameter 4: Any p3
```
-- @param player Player
-- @param p1 BOOL
-- @param p2 BOOL
-- SPECIAL_ABILITY_CHARGE_SMALL(player, p1, p2)

--- SPECIAL_ABILITY_DEACTIVATE
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- SPECIAL_ABILITY_DEACTIVATE(player)

--- SPECIAL_ABILITY_DEACTIVATE_FAST
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- SPECIAL_ABILITY_DEACTIVATE_FAST(player)

--- SPECIAL_ABILITY_DEPLETE_METER
-- ```
p1 was always true.
```

```
NativeDB Added Parameter 3: Any p2
```
-- @param player Player
-- @param p1 BOOL
-- SPECIAL_ABILITY_DEPLETE_METER(player, p1)

--- SPECIAL_ABILITY_FILL_METER
-- ```
Also known as _RECHARGE_SPECIAL_ABILITY
```

```
NativeDB Added Parameter 3: Any p2
```
-- @param player Player
-- @param p1 BOOL
-- SPECIAL_ABILITY_FILL_METER(player, p1)

--- SPECIAL_ABILITY_LOCK
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param playerModel Hash
-- SPECIAL_ABILITY_LOCK(playerModel)

--- SPECIAL_ABILITY_RESET
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Player
-- SPECIAL_ABILITY_RESET(player)

--- SPECIAL_ABILITY_UNLOCK
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param playerModel Hash
-- SPECIAL_ABILITY_UNLOCK(playerModel)

--- START_FIRING_AMNESTY
-- @param duration int
-- START_FIRING_AMNESTY(duration)

--- START_PLAYER_TELEPORT
-- Teleports the player to the given coordinates.

If findCollisionLand is true it will try to find the Z value for you, this however has a timeout of 100 frames.

When trying to find the Z value the native will take longer the higher the difference from the given Z to the ground, this combined with the timeout can cause the teleport to just teleport to the given Z value, so try to estimate the z value, so don't just pass in 1000.0.

Also if you're in a vehicle and teleportWithVehicle is true it will not find the Z value for you.
-- @param player Player
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param teleportWithVehicle BOOL - Teleports the player along with the vehicle they are in.
-- @param findCollisionLand BOOL - Attempt to find a ground coordinate at the given XY location; overriding the Z value.
-- @param p7 BOOL
-- START_PLAYER_TELEPORT(player, x, y, z, heading, teleportWithVehicle, findCollisionLand, p7)

--- STOP_PLAYER_TELEPORT
-- ```
Disables the player's teleportation  
```
-- STOP_PLAYER_TELEPORT()

--- SUPPRESS_CRIME_THIS_FRAME
-- Suppresses a crime for a given player for this frame only.

**Note:** This native needs to be executed inside a thread if a crime is meant to be suppressed for a given amount of time.
-- @param player Player - The player we are suppressing the crime for.
-- @param crimeType int - The crime to suppress, see [`REPORT_CRIME`](#\_0xE9B09589827545E7) for available types.
-- SUPPRESS_CRIME_THIS_FRAME(player, crimeType)

--- _CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE
-- ```
NativeDB Introduced: v2372
```
-- @param player Player
-- _CLEAR_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(player)

--- _GET_ACHIEVEMENT_PROGRESS
-- ```
For Steam.
Always returns 0 in retail version of the game.
```
-- @param achievement int
-- _GET_ACHIEVEMENT_PROGRESS(achievement)

--- _GET_NUMBER_OF_PLAYERS_IN_TEAM
-- ```
NativeDB Introduced: v1180
```
-- @param team int
-- _GET_NUMBER_OF_PLAYERS_IN_TEAM(team)

--- _GET_PLAYER_HEALTH_RECHARGE_LIMIT
-- @param player Player
-- _GET_PLAYER_HEALTH_RECHARGE_LIMIT(player)

--- _GET_PLAYER_PARACHUTE_MODEL_OVERRIDE
-- ```
NativeDB Introduced: v2372
```
-- @param player Player
-- _GET_PLAYER_PARACHUTE_MODEL_OVERRIDE(player)

--- _GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE
-- ```
NativeDB Introduced: v2372
```
-- @param player Player
-- _GET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(player)

--- _GET_WANTED_LEVEL_PAROLE_DURATION
-- ```
NativeDB Introduced: v2372
```
-- _GET_WANTED_LEVEL_PAROLE_DURATION()

--- _HAS_PLAYER_BEEN_SHOT_BY_COP
-- @param player Player
-- @param ms int - Time since last bullet fired
-- @param p2 BOOL - Always false
-- _HAS_PLAYER_BEEN_SHOT_BY_COP(player, ms, p2)

--- _IS_PLAYER_CAM_CONTROL_DISABLED
-- ```
Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.  
Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.  
```
-- _IS_PLAYER_CAM_CONTROL_DISABLED()

--- _IS_PLAYER_DRIVING_DANGEROUSLY
-- ```cpp
enum eViolationType {
  // Checks if the player is driving on pedestrians walk ways
  VT_PAVED_PEDESTRIAN_AREAS = 0,
  // Checks if the player is running through red lights
  // This takes some time to return true.
  VT_RUNNING_REDS = 1,
  // checks if the player is driving on the wrong side of the road
  VT_AGAINST_TRAFFIC = 2
};
```

Used solely in "Al Di Napoli" with type 2 for a voiceline.
-- @param player Player - Player ID
-- @param type int - Refer to `eViolationType`.
-- _IS_PLAYER_DRIVING_DANGEROUSLY(player, type)

--- _SET_ACHIEVEMENT_PROGRESS
-- For Steam.
Does nothing and always returns false in the retail version of the game.
-- @param achievement int
-- @param progress int
-- _SET_ACHIEVEMENT_PROGRESS(achievement, progress)

--- _SET_PLAYER_FALL_DISTANCE
-- @param player Player
-- @param distance float
-- _SET_PLAYER_FALL_DISTANCE(player, distance)

--- _SET_PLAYER_HEALTH_RECHARGE_LIMIT
-- @param player Player - The local player ID.
-- @param limit float - A value between 0.0 and 1.0, 0.5 is default.
-- _SET_PLAYER_HEALTH_RECHARGE_LIMIT(player, limit)

--- _SET_PLAYER_HOMING_ROCKET_DISABLED
-- ```
NativeDB Introduced: v1180
```
-- @param player Player
-- @param p1 BOOL
-- _SET_PLAYER_HOMING_ROCKET_DISABLED(player, p1)

--- _SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED
-- @param player Player
-- @param toggle BOOL
-- _SET_PLAYER_INVINCIBLE_KEEP_RAGDOLL_ENABLED(player, toggle)

--- _SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE
-- ```
NativeDB Introduced: v2372
```
-- @param player Player
-- @param model Hash
-- _SET_PLAYER_RESERVE_PARACHUTE_MODEL_OVERRIDE(player, model)

--- _SET_PLAYER_UNDERWATER_TIME_REMAINING
-- Seems to lock the underwater timer of the specified player. Set `percentage` to `50.0` will reduce the value of [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731) to 5.0.

If you want to increase the underwater time for ped, use [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) instead.

Using this native after [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) **WILL NOT** get what you want. For example, if you set the max time underwater to `100.0` seconds using [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) and then call this native and set the `percentage` to 50.0, you will not get `50.0`, instead `2.0`.
-- @param player Player - Player id.
-- @param percentage float - Maximum is `100.0`. Any value above `100.0` and less than `0.0` will have no effect on [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731).
-- _SET_PLAYER_UNDERWATER_TIME_REMAINING(player, percentage)

--- _SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2
-- @param player Player
-- @param modifier float
-- _SET_PLAYER_WEAPON_DEFENSE_MODIFIER_2(player, modifier)

--- _SET_SPECIAL_ABILITY
-- ```
NativeDB Added Parameter 3: Any p2
```
-- @param player Player
-- @param p1 int
-- _SET_SPECIAL_ABILITY(player, p1)

--- _SET_WANTED_LEVEL_HIDDEN_EVASION_TIME
-- ```
NativeDB Introduced: v2060
```
-- @param player Player
-- @param wantedLevel int
-- @param lossTime int
-- _SET_WANTED_LEVEL_HIDDEN_EVASION_TIME(player, wantedLevel, lossTime)

--- _SPECIAL_ABILITY_ACTIVATE
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param player Any
-- _SPECIAL_ABILITY_ACTIVATE(player)

--- _SPECIAL_ABILITY_DEPLETE
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param p0 Any
-- _SPECIAL_ABILITY_DEPLETE(p0)

--- _UPDATE_PLAYER_TELEPORT
-- @param player Player
-- _UPDATE_PLAYER_TELEPORT(player)


-- ========== RECORDING ==========

--- 0x13B350B8AD0EEE10
-- 0x13B350B8AD0EEE10()

--- 0x208784099002BC30
-- ```
-This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -  
first one seems to be a string of a mission name, second one seems to be a bool/toggle  
p1 was always 0.  
```
-- @param missionNameLabel char*
-- @param p1 Any
-- 0x208784099002BC30(missionNameLabel, p1)

--- 0x293220DA1B46CEBC
-- @param p0 float
-- @param p1 float
-- @param p2 int
-- 0x293220DA1B46CEBC(p0, p1, p2)

--- 0x33D47E85B476ABCD
-- @param p0 BOOL
-- 0x33D47E85B476ABCD(p0)

--- 0x4282E08174868BE3
-- 0x4282E08174868BE3()

--- 0x48621C9FCA3EBD28
-- @param p0 int
-- 0x48621C9FCA3EBD28(p0)

--- 0x66972397E0757E7A
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x66972397E0757E7A(p0, p1, p2)

--- 0x81CBAE94390F9F89
-- 0x81CBAE94390F9F89()

--- 0xDF4B952F7D381B95
-- 0xDF4B952F7D381B95()

--- 0xF854439EFBB3B583
-- 0xF854439EFBB3B583()

--- _DISABLE_ROCKSTAR_EDITOR_CAMERA_CHANGES
-- This will disable the ability to make camera changes in R\* Editor.
-- _DISABLE_ROCKSTAR_EDITOR_CAMERA_CHANGES()

--- _IS_RECORDING
-- Checks if you're recording.
-- _IS_RECORDING()

--- _SAVE_RECORDING_CLIP
-- _SAVE_RECORDING_CLIP()

--- _START_RECORDING
-- Starts recording a replay.\
If already recording a replay, does nothing.
-- @param mode int - 0 turns on action replay, 1 starts recording
-- _START_RECORDING(mode)

--- _STOP_RECORDING_AND_DISCARD_CLIP
-- Stops recording and discards the recorded clip.
-- _STOP_RECORDING_AND_DISCARD_CLIP()

--- _STOP_RECORDING_AND_SAVE_CLIP
-- Stops recording and saves the recorded clip.
-- _STOP_RECORDING_AND_SAVE_CLIP()

--- _STOP_RECORDING_THIS_FRAME
-- Disable recording for this frame only.
-- _STOP_RECORDING_THIS_FRAME()


-- ========== REPLAY ==========

--- 0x5AD3932DAEB1E5D3
-- ```
Disables some other rendering (internal)  
```
-- 0x5AD3932DAEB1E5D3()

--- 0x7E2BD3EF6C205F09
-- **This native does absolutely nothing, just a nullsub**

```
Something to do with phone cameras.  
startup.c4:  
void sub_2a3d() {  
    UNK2::_7E2BD3EF6C205F09("No_Filter", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);  
    UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);  
}  
```
-- @param p0 char*
-- @param p1 BOOL
-- 0x7E2BD3EF6C205F09(p0, p1)

--- 0xE058175F8EAFE79A
-- @param p0 BOOL
-- 0xE058175F8EAFE79A(p0)

--- _ACTIVATE_ROCKSTAR_EDITOR
-- Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.

```
NativeDB Added Parameter 1: int p0
```
-- _ACTIVATE_ROCKSTAR_EDITOR()

--- _IS_INTERIOR_RENDERING_DISABLED
-- ```
Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible  
```
-- _IS_INTERIOR_RENDERING_DISABLED()

--- _RESET_EDITOR_VALUES
-- ```
Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.  
```
-- _RESET_EDITOR_VALUES()


-- ========== SAVEMIGRATION ==========

--- 0x690B76BD2763E068
-- ```
NativeDB Introduced: v2372
```
-- 0x690B76BD2763E068()

--- 0x84B418E93894AC1C
-- ```
NativeDB Introduced: v2372
```
-- 0x84B418E93894AC1C()

--- 0xE5E9746A66359F9D
-- ```
NativeDB Introduced: v2372
```
-- 0xE5E9746A66359F9D()


-- ========== SCRIPT ==========

--- 0x0F6F1EBBC4E1D5E6
-- ```
BG_*

NativeDB Introduced: v323
```
-- @param scriptIndex int
-- @param p1 char*
-- 0x0F6F1EBBC4E1D5E6(scriptIndex, p1)

--- 0x22E21FBCFC88C149
-- ```
BG_*

NativeDB Introduced: v323
```
-- @param scriptIndex int
-- @param p1 char*
-- 0x22E21FBCFC88C149(scriptIndex, p1)

--- 0x760910B49D2B98EA
-- ```
Sets bit 1 in GtaThread+0x154

BG_*

NativeDB Introduced: v323
```
-- 0x760910B49D2B98EA()

--- 0x829CD22E043A2577
-- ```
BG_*

NativeDB Introduced: v323
```
-- @param p0 Hash
-- 0x829CD22E043A2577(p0)

--- 0x836B62713E0534CA
-- ```
Returns true if bit 0 in GtaThread+0x154 is set.

BG_*

NativeDB Introduced: v323
```
-- 0x836B62713E0534CA()

--- BG_END_CONTEXT
-- ```
Deletes the given context from the background scripts context map.

NativeDB Introduced: v323
```
-- @param contextName char*
-- BG_END_CONTEXT(contextName)

--- BG_END_CONTEXT_HASH
-- ```
Hashed version of 0xDC2BACD920D0A0DD.

NativeDB Introduced: v323
```
-- @param contextHash Hash
-- BG_END_CONTEXT_HASH(contextHash)

--- BG_START_CONTEXT
-- ```
Inserts the given context into the background scripts context map.

NativeDB Introduced: v323
```
-- @param contextName char*
-- BG_START_CONTEXT(contextName)

--- BG_START_CONTEXT_HASH
-- ```
Hashed version of 0x9D5A25BADB742ACD.

NativeDB Introduced: v323
```
-- @param contextHash Hash
-- BG_START_CONTEXT_HASH(contextHash)

--- DOES_SCRIPT_EXIST
-- @param scriptName char*
-- DOES_SCRIPT_EXIST(scriptName)

--- DOES_SCRIPT_WITH_NAME_HASH_EXIST
-- @param scriptHash Hash
-- DOES_SCRIPT_WITH_NAME_HASH_EXIST(scriptHash)

--- GET_EVENT_AT_INDEX
-- ```
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
```
-- @param eventGroup int
-- @param eventIndex int
-- GET_EVENT_AT_INDEX(eventGroup, eventIndex)

--- GET_EVENT_DATA
-- ```
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
```
-- @param eventGroup int
-- @param eventIndex int
-- @param eventData int*
-- @param eventDataSize int
-- GET_EVENT_DATA(eventGroup, eventIndex, eventData, eventDataSize)

--- GET_EVENT_EXISTS
-- ```
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
```
-- @param eventGroup int
-- @param eventIndex int
-- GET_EVENT_EXISTS(eventGroup, eventIndex)

--- GET_HASH_OF_THIS_SCRIPT_NAME
-- GET_HASH_OF_THIS_SCRIPT_NAME()

--- GET_ID_OF_THIS_THREAD
-- GET_ID_OF_THIS_THREAD()

--- GET_NO_LOADING_SCREEN
-- GET_NO_LOADING_SCREEN()

--- GET_NUMBER_OF_EVENTS
-- ```
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
```
-- @param eventGroup int
-- GET_NUMBER_OF_EVENTS(eventGroup)

--- GET_THIS_SCRIPT_NAME
-- GET_THIS_SCRIPT_NAME()

--- HAS_SCRIPT_LOADED
-- Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
-- @param scriptName char*
-- HAS_SCRIPT_LOADED(scriptName)

--- HAS_SCRIPT_WITH_NAME_HASH_LOADED
-- @param scriptHash Hash
-- HAS_SCRIPT_WITH_NAME_HASH_LOADED(scriptHash)

--- IS_THREAD_ACTIVE
-- @param threadId int
-- IS_THREAD_ACTIVE(threadId)

--- REQUEST_SCRIPT
-- @param scriptName char*
-- REQUEST_SCRIPT(scriptName)

--- REQUEST_SCRIPT_WITH_NAME_HASH
-- ```
formerly _REQUEST_STREAMED_SCRIPT  
```
-- @param scriptHash Hash
-- REQUEST_SCRIPT_WITH_NAME_HASH(scriptHash)

--- SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID
-- ```
If the function returns 0, the end of the iteration has been reached.
```
-- SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID()

--- SCRIPT_THREAD_ITERATOR_RESET
-- Starts a new iteration of the current threads.
Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
-- SCRIPT_THREAD_ITERATOR_RESET()

--- SET_NO_LOADING_SCREEN
-- @param toggle BOOL
-- SET_NO_LOADING_SCREEN(toggle)

--- SET_SCRIPT_AS_NO_LONGER_NEEDED
-- @param scriptName char*
-- SET_SCRIPT_AS_NO_LONGER_NEEDED(scriptName)

--- SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED
-- @param scriptHash Hash
-- SET_SCRIPT_WITH_NAME_HASH_AS_NO_LONGER_NEEDED(scriptHash)

--- SHUTDOWN_LOADING_SCREEN
-- SHUTDOWN_LOADING_SCREEN()

--- TERMINATE_THIS_THREAD
-- TERMINATE_THIS_THREAD()

--- TERMINATE_THREAD
-- @param threadId int
-- TERMINATE_THREAD(threadId)

--- TRIGGER_SCRIPT_EVENT
-- ```
eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
```
-- @param eventGroup int
-- @param eventData int*
-- @param eventDataSize int
-- @param playerBits int
-- TRIGGER_SCRIPT_EVENT(eventGroup, eventData, eventDataSize, playerBits)

--- _GET_NAME_OF_THREAD
-- @param threadId int
-- _GET_NAME_OF_THREAD(threadId)

--- _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH
-- ```
Gets the number of instances of the specified script is currently running.
Actually returns numRefs - 1.
if (program)
	v3 = rage::scrProgram::GetNumRefs(program) - 1;
return v3;
```
-- @param scriptHash Hash
-- _GET_NUMBER_OF_REFERENCES_OF_SCRIPT_WITH_NAME_HASH(scriptHash)

--- _LOCK_LOADING_SCREEN_BUTTONS
-- Updates the display of the MP/SP loading buttons, and locks the state so that other options are not displayed or changed. This can only be done once.
-- _LOCK_LOADING_SCREEN_BUTTONS()

--- _TRIGGER_SCRIPT_EVENT_2
-- ```
See TRIGGER_SCRIPT_EVENT
```
-- @param eventGroup int
-- @param eventData int*
-- @param eventDataSize int
-- @param playerBits int
-- _TRIGGER_SCRIPT_EVENT_2(eventGroup, eventData, eventDataSize, playerBits)


-- ========== SHAPETEST ==========

--- GET_SHAPE_TEST_RESULT
-- Returns the result of a shape test.

When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.

Unless the return value is 2, the other return values are undefined.
-- @param shapeTestHandle int - A shape test handle.
-- @param hit BOOL* - Whether or not the shape test hit any collisions.
-- @param endCoords Vector3* - The resulting coordinates where the shape test hit a collision.
-- @param surfaceNormal Vector3* - The surface normal of the hit position.
-- @param entityHit Entity* - Any dynamic entity hit by the shape test.
-- GET_SHAPE_TEST_RESULT(shapeTestHandle, hit, endCoords, surfaceNormal, entityHit)

--- GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL
-- Returns the result of a shape test, also returning the material of any touched surface.

When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.

Unless the return value is 2, the other return values are undefined.
-- @param shapeTestHandle int - A shape test handle.
-- @param hit BOOL* - Whether or not the shape test hit any collisions.
-- @param endCoords Vector3* - The resulting coordinates where the shape test hit a collision.
-- @param surfaceNormal Vector3* - The surface normal of the hit position.
-- @param materialHash Hash* - hash of the hit material or surface type, see materialFX.dat
-- @param entityHit Entity* - Any dynamic entity hit by the shape test.
-- GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL(shapeTestHandle, hit, endCoords, surfaceNormal, materialHash, entityHit)

--- RELEASE_SCRIPT_GUID_FROM_ENTITY
-- Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
-- @param entity Entity - The entity handle to invalidate.
-- RELEASE_SCRIPT_GUID_FROM_ENTITY(entity)

--- START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE
-- Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.

Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
-- @param x1 float - Starting X coordinate.
-- @param y1 float - Starting Y coordinate.
-- @param z1 float - Starting Z coordinate.
-- @param x2 float - Ending X coordinate.
-- @param y2 float - Ending Y coordinate.
-- @param z2 float - Ending Z coordinate.
-- @param flags int - See [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E).
-- @param entity Entity - An entity to ignore, or 0.
-- @param p8 int - A bit mask with bits 1, 2 and/or 4, relating to collider types. 4 should usually be used.
-- START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE(x1, y1, z1, x2, y2, z2, flags, entity, p8)

--- START_SHAPE_TEST_BOUND
-- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
-- @param entity Entity
-- @param flags1 int
-- @param flags2 int
-- START_SHAPE_TEST_BOUND(entity, flags1, flags2)

--- START_SHAPE_TEST_BOUNDING_BOX
-- See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
-- @param entity Entity
-- @param flags1 int
-- @param flags2 int
-- START_SHAPE_TEST_BOUNDING_BOX(entity, flags1, flags2)

--- START_SHAPE_TEST_BOX
-- For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#\_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E).
-- @param x float - Starting X coordinate.
-- @param y float - Starting Y coordinate.
-- @param z float - Starting Z coordinate.
-- @param x1 float - Ending X coordinate.
-- @param y1 float - Ending Y coordinate.
-- @param z1 float - Ending Z coordinate.
-- @param rotX float
-- @param rotY float
-- @param rotZ float
-- @param p9 int - Unknown, always 2 or 0
-- @param flags int - See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity Entity
-- @param p12 int - A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
-- START_SHAPE_TEST_BOX(x, y, z, x1, y1, z1, rotX, rotY, rotZ, p9, flags, entity, p12)

--- START_SHAPE_TEST_CAPSULE
-- Raycast from point to point, where the ray has a radius.
-- @param x1 float - Starting X coordinate.
-- @param y1 float - Starting Y coordinate.
-- @param z1 float - Starting Z coordinate.
-- @param x2 float - Ending X coordinate.
-- @param y2 float - Ending Y coordinate.
-- @param z2 float - Ending Z coordinate.
-- @param radius float
-- @param flags int - See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity Entity - Entity to ignore, or 0.
-- @param p9 int - A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
-- START_SHAPE_TEST_CAPSULE(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)

--- START_SHAPE_TEST_LOS_PROBE
-- Asynchronously starts a line-of-sight (raycast) world probe shape test.

```cpp
enum eTraceFlags
{
  None = 0,
  IntersectWorld = 1,
  IntersectVehicles = 2,
  IntersectPeds = 4,
  IntersectRagdolls = 8,
  IntersectObjects = 16,
  IntersectWater = 32,
  IntersectGlass = 64,
  IntersectRiver = 128,
  IntersectFoliage = 256,
  IntersectEverything = -1
}
```

NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.

Use the handle with [GET_SHAPE_TEST_RESULT](#\_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#\_0x65287525D951F6BE) until it returns 0 or 2.
-- @param x1 float - Starting X coordinate.
-- @param y1 float - Starting Y coordinate.
-- @param z1 float - Starting Z coordinate.
-- @param x2 float - Ending X coordinate.
-- @param y2 float - Ending Y coordinate.
-- @param z2 float - Ending Z coordinate.
-- @param traceFlags int - Refer to `eTraceFlags`, this defines what the shape test will intersect with
-- @param entity Entity - An entity to ignore, or 0.
-- @param options int - A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
-- START_SHAPE_TEST_LOS_PROBE(x1, y1, z1, x2, y2, z2, traceFlags, entity, options)

--- START_SHAPE_TEST_SWEPT_SPHERE
-- Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
-- @param x1 float - Starting X coordinate.
-- @param y1 float - Starting Y coordinate.
-- @param z1 float - Starting Z coordinate.
-- @param x2 float - Ending X coordinate.
-- @param y2 float - Ending Y coordinate.
-- @param z2 float - Ending Z coordinate.
-- @param radius float
-- @param flags int - See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param entity Entity - An entity to ignore, or 0.
-- @param p9 int - A bit mask with bits 1, 2, 4, or 7 relating to collider types. 4 and 7 are usually used.
-- START_SHAPE_TEST_SWEPT_SPHERE(x1, y1, z1, x2, y2, z2, radius, flags, entity, p9)

--- _START_SHAPE_TEST_SURROUNDING_COORDS
-- Since it is only used in the PC version, likely some mouse-friendly shape test. Uses **in** vector arguments.

Asynchronous.

```
it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.  
In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7  
```

See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
-- @param pVec1 Vector3*
-- @param pVec2 Vector3*
-- @param flag int
-- @param entity Entity
-- @param flag2 int
-- _START_SHAPE_TEST_SURROUNDING_COORDS(pVec1, pVec2, flag, entity, flag2)


-- ========== SOCIALCLUB ==========

--- 0x07DBD622D9533857
-- @param p0 Any
-- 0x07DBD622D9533857(p0)

--- 0x116FB94DC4B79F17
-- @param p0 char*
-- 0x116FB94DC4B79F17(p0)

--- 0x16DA8172459434AA
-- 0x16DA8172459434AA()

--- 0x19853B5B17D77BCA
-- @param p0 Any
-- @param p1 Any*
-- 0x19853B5B17D77BCA(p0, p1)

--- 0x1D12A56FC95BE92E
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: char* p1
NativeDB Added Parameter 3: char* p2
NativeDB Introduced: v323
```
-- 0x1D12A56FC95BE92E()

--- 0x225798743970412B
-- @param p0 int*
-- 0x225798743970412B(p0)

--- 0x2570E26BE63964E3
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: float* p1
NativeDB Added Parameter 3: char* p2
NativeDB Introduced: v323
```
-- 0x2570E26BE63964E3()

--- 0x2D874D4AE612A65F
-- ```
NativeDB Introduced: v323
```
-- 0x2D874D4AE612A65F()

--- 0x3001BEF2FECA3680
-- 0x3001BEF2FECA3680()

--- 0x33DF47CC0642061B
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: char* p1
NativeDB Introduced: v323
```
-- 0x33DF47CC0642061B()

--- 0x44ACA259D67651DB
-- @param p0 Any*
-- @param p1 Any
-- 0x44ACA259D67651DB(p0, p1)

--- 0x450819D8CF90C416
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Introduced: v323
```
-- 0x450819D8CF90C416()

--- 0x4737980E8A283806
-- @param p0 int
-- @param p1 Any*
-- 0x4737980E8A283806(p0, p1)

--- 0x487912FD248EFDDF
-- @param p0 Any
-- @param p1 float
-- 0x487912FD248EFDDF(p0, p1)

--- 0x4A7D6E727F941747
-- @param p0 Any*
-- 0x4A7D6E727F941747(p0)

--- 0x4ED9C8D6DA297639
-- ```
NativeDB Introduced: v323
```
-- 0x4ED9C8D6DA297639()

--- 0x50A8A36201DBF83E
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: float* p1
NativeDB Introduced: v323
```
-- 0x50A8A36201DBF83E()

--- 0x675721C9F644D161
-- 0x675721C9F644D161()

--- 0x699E4A5C8C893A18
-- @param p0 int
-- @param p1 char*
-- @param p2 Any*
-- 0x699E4A5C8C893A18(p0, p1, p2)

--- 0x6BFB12CE158E3DD4
-- @param p0 Any
-- 0x6BFB12CE158E3DD4(p0)

--- 0x710BCDA8071EDED1
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: int* p1
NativeDB Introduced: v323
```
-- 0x710BCDA8071EDED1()

--- 0x7DB18CA8CAD5B098
-- 0x7DB18CA8CAD5B098()

--- 0x7FFCBFEE44ECFABF
-- ```
NativeDB Introduced: v323
```
-- 0x7FFCBFEE44ECFABF()

--- 0x8A4416C0DB05FA66
-- ```
NativeDB Introduced: v1290
```
-- @param newsStoryData Any*
-- 0x8A4416C0DB05FA66(newsStoryData)

--- 0x8CC469AB4D349B7C
-- @param p0 int
-- @param p1 char*
-- @param p2 Any*
-- 0x8CC469AB4D349B7C(p0, p1, p2)

--- 0x9237E334F6E43156
-- @param p0 Any
-- 0x9237E334F6E43156(p0)

--- 0x92DA6E70EF249BD1
-- @param p0 char*
-- @param p1 int*
-- 0x92DA6E70EF249BD1(p0, p1)

--- 0x9DE5D2F723575ED0
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: char* p1
NativeDB Introduced: v323
```
-- 0x9DE5D2F723575ED0()

--- 0xA468E0BE12B12C70
-- ```
NativeDB Added Parameter 1: int p0
NativeDB Introduced: v323
```
-- 0xA468E0BE12B12C70()

--- 0xC2C97EA97711D1AE
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Introduced: v323
```
-- 0xC2C97EA97711D1AE()

--- 0xC5A35C73B68F3C49
-- ```
NativeDB Added Parameter 1: int p0
NativeDB Added Parameter 2: char* p1
NativeDB Added Parameter 3: float* p2
NativeDB Introduced: v323
```
-- 0xC5A35C73B68F3C49()

--- 0xD8122C407663B995
-- 0xD8122C407663B995()

--- 0xE4F6E8D07A2F0F51
-- ```
NativeDB Introduced: v1290
```
-- @param p0 Any
-- 0xE4F6E8D07A2F0F51(p0)

--- 0xE75A4A2E5E316D86
-- ```
NativeDB Added Parameter 1: char* p0
NativeDB Added Parameter 2: int* p1
NativeDB Added Parameter 3: char* p2
NativeDB Introduced: v323
```
-- 0xE75A4A2E5E316D86()

--- 0xEA95C0853A27888E
-- ```
NativeDB Introduced: v1290
```
-- 0xEA95C0853A27888E()

--- 0xF22CA0FD74B80E7A
-- @param p0 Any
-- 0xF22CA0FD74B80E7A(p0)

--- 0xF6BAAAF762E1BF40
-- @param p0 char*
-- @param p1 int*
-- 0xF6BAAAF762E1BF40(p0, p1)

--- 0xFE4C1D0D3B9CC17E
-- @param p0 Any
-- @param p1 BOOL
-- 0xFE4C1D0D3B9CC17E(p0, p1)

--- 0xFF8F3A92B75ED67A
-- 0xFF8F3A92B75ED67A()

--- SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST
-- SC_EMAIL_MESSAGE_CLEAR_RECIP_LIST()

--- SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST
-- @param networkHandle int*
-- SC_EMAIL_MESSAGE_PUSH_GAMER_TO_RECIP_LIST(networkHandle)

--- SC_GAMERDATA_GET_BOOL
-- ```
sfink: from scripts:
func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));
func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));
```
-- @param name char*
-- SC_GAMERDATA_GET_BOOL(name)

--- SC_GAMERDATA_GET_FLOAT
-- ```
NativeDB Introduced: v323
```
-- @param name char*
-- @param outValue float*
-- SC_GAMERDATA_GET_FLOAT(name, outValue)

--- SC_GAMERDATA_GET_INT
-- ```
NativeDB Introduced: v323
```
-- @param name char*
-- @param outValue int*
-- SC_GAMERDATA_GET_INT(name, outValue)

--- SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX
-- @param msgIndex int
-- SC_INBOX_GET_MESSAGE_IS_READ_AT_INDEX(msgIndex)

--- SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX
-- @param msgIndex int
-- SC_INBOX_GET_MESSAGE_TYPE_AT_INDEX(msgIndex)

--- SC_INBOX_GET_TOTAL_NUM_MESSAGES
-- SC_INBOX_GET_TOTAL_NUM_MESSAGES()

--- SC_INBOX_MESSAGE_DO_APPLY
-- @param p0 int
-- SC_INBOX_MESSAGE_DO_APPLY(p0)

--- SC_INBOX_MESSAGE_GET_DATA_INT
-- @param p0 int
-- @param context char*
-- @param out int*
-- SC_INBOX_MESSAGE_GET_DATA_INT(p0, context, out)

--- SC_INBOX_MESSAGE_GET_DATA_STRING
-- @param p0 int
-- @param context char*
-- @param out char*
-- SC_INBOX_MESSAGE_GET_DATA_STRING(p0, context, out)

--- SC_INBOX_MESSAGE_GET_UGCDATA
-- @param p0 Any
-- @param p1 Any*
-- SC_INBOX_MESSAGE_GET_UGCDATA(p0, p1)

--- SC_LICENSEPLATE_ADD
-- Social Club native to add license plate for the user
-- @param plateText char*
-- @param plateData char*
-- @param tokenOut int*
-- SC_LICENSEPLATE_ADD(plateText, plateData, tokenOut)

--- SC_LICENSEPLATE_GET_ADD_IS_PENDING
-- Returns true if the add license plate text request is still pending.
-- @param token int
-- SC_LICENSEPLATE_GET_ADD_IS_PENDING(token)

--- SC_LICENSEPLATE_GET_ADD_STATUS
-- Returns a status for adding the license plate
-- @param token int
-- SC_LICENSEPLATE_GET_ADD_STATUS(token)

--- SC_LICENSEPLATE_GET_COUNT
-- Gets number of plates in the response of the get license plates request.
Range: \[0, count) can be used as second argument to \_0x1D4446A62D35B0D0 and \_0x2E89990DDFF670C3
-- @param token int
-- SC_LICENSEPLATE_GET_COUNT(token)

--- SC_LICENSEPLATE_GET_ISVALID_IS_PENDING
-- Checks if the "is valid license plate" request is still pending.
-- @param token int
-- SC_LICENSEPLATE_GET_ISVALID_IS_PENDING(token)

--- SC_LICENSEPLATE_GET_ISVALID_STATUS
-- Gets the status of the is valid license plate request
-- @param token int
-- SC_LICENSEPLATE_GET_ISVALID_STATUS(token)

--- SC_LICENSEPLATE_GET_PLATE
-- Gets license plate text related to the get license plate info request
-- @param token int
-- @param plateIndex int - The plate index from the list of result plates. Use SC_LICENSEPLATE_GET_COUNT for the number of plates.
-- SC_LICENSEPLATE_GET_PLATE(token, plateIndex)

--- SC_LICENSEPLATE_GET_PLATE_DATA
-- Gets license plate data related to the get license plate info request
-- @param token int
-- @param plateIndex int - The plate index from the list of result plates. Use SC_LICENSEPLATE_GET_COUNT for the number of plates.
-- SC_LICENSEPLATE_GET_PLATE_DATA(token, plateIndex)

--- SC_LICENSEPLATE_ISVALID
-- SC native to start a request for if license plate text is valid
-- @param plateText char*
-- @param tokenOut int*
-- SC_LICENSEPLATE_ISVALID(plateText, tokenOut)

--- SC_LICENSEPLATE_SET_PLATE_DATA
-- Changes the license plate for the user (no insert).
-- @param oldPlateText char*
-- @param newPlateText char*
-- @param plateData char*
-- SC_LICENSEPLATE_SET_PLATE_DATA(oldPlateText, newPlateText, plateData)

--- SC_PRESENCE_ATTR_SET_FLOAT
-- ```
NativeDB Introduced: v323
NativeDB Added Parameter 1: Hash attrHash
NativeDB Added Parameter 2: float value
```
-- SC_PRESENCE_ATTR_SET_FLOAT()

--- SC_PRESENCE_ATTR_SET_INT
-- @param attrHash Hash
-- @param value int
-- SC_PRESENCE_ATTR_SET_INT(attrHash, value)

--- SC_PRESENCE_ATTR_SET_STRING
-- @param attrHash Hash
-- @param value char*
-- SC_PRESENCE_ATTR_SET_STRING(attrHash, value)

--- SC_PROFANITY_CHECK_STRING
-- Starts a task to check an entered string for profanity on the ROS/Social Club services.

See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
-- @param string char*
-- @param token int*
-- SC_PROFANITY_CHECK_STRING(string, token)

--- SC_PROFANITY_GET_CHECK_IS_PENDING
-- @param token int
-- SC_PROFANITY_GET_CHECK_IS_PENDING(token)

--- SC_PROFANITY_GET_CHECK_IS_VALID
-- @param token int
-- SC_PROFANITY_GET_CHECK_IS_VALID(token)

--- SC_PROFANITY_GET_STRING_PASSED
-- @param token int
-- SC_PROFANITY_GET_STRING_PASSED(token)

--- SC_PROFANITY_GET_STRING_STATUS
-- @param token int
-- SC_PROFANITY_GET_STRING_STATUS(token)

--- _IS_ROCKSTAR_MESSAGE_READY_FOR_SCRIPT
-- _IS_ROCKSTAR_MESSAGE_READY_FOR_SCRIPT()

--- _ROCKSTAR_MESSAGE_GET_STRING
-- _ROCKSTAR_MESSAGE_GET_STRING()

--- _SC_GET_HAS_ACHIEVEMENT_BEEN_PASSED
-- ```
Same as HAS_ACHIEVEMENT_BEEN_PASSED
```
-- @param achievement int
-- _SC_GET_HAS_ACHIEVEMENT_BEEN_PASSED(achievement)

--- _SC_GET_NICKNAME
-- ```
Returns the nickname of the logged-in Rockstar Social Club account.
```
-- _SC_GET_NICKNAME()

--- _SC_INBOX_GET_EMAILS
-- @param offset int
-- @param limit int
-- _SC_INBOX_GET_EMAILS(offset, limit)

--- _SC_INBOX_MESSAGE_GET_BOUNTY_DATA
-- @param index int
-- @param outData int*
-- _SC_INBOX_MESSAGE_GET_BOUNTY_DATA(index, outData)

--- _SC_INBOX_MESSAGE_GET_DATA_BOOL
-- @param p0 int
-- @param p1 char*
-- _SC_INBOX_MESSAGE_GET_DATA_BOOL(p0, p1)

--- _SC_INBOX_MESSAGE_GET_STRING
-- @param p0 int
-- _SC_INBOX_MESSAGE_GET_STRING(p0)

--- _SC_INBOX_MESSAGE_POP
-- @param p0 int
-- _SC_INBOX_MESSAGE_POP(p0)

--- _SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST
-- @param networkHandle int*
-- _SC_INBOX_MESSAGE_PUSH_GAMER_TO_EVENT_RECIP_LIST(networkHandle)

--- _SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT
-- @param data char*
-- _SC_INBOX_MESSAGE_SEND_BOUNTY_PRESENCE_EVENT(data)

--- _SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT
-- @param data char*
-- _SC_INBOX_MESSAGE_SEND_UGC_STAT_UPDATE_EVENT(data)

--- _SC_PROFANITY_CHECK_UGC_STRING
-- @param string char*
-- @param token int*
-- _SC_PROFANITY_CHECK_UGC_STRING(string, token)

--- _SET_HANDLE_ROCKSTAR_MESSAGE_VIA_SCRIPT
-- @param toggle BOOL
-- _SET_HANDLE_ROCKSTAR_MESSAGE_VIA_SCRIPT(toggle)


-- ========== STATS ==========

--- 0x0077F15613D36993
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x0077F15613D36993(p0, p1, p2, p3)

--- 0x015B03EE1C43E6EC
-- @param p0 Any
-- 0x015B03EE1C43E6EC(p0)

--- 0x03C2EEBB04B3FB72
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0x03C2EEBB04B3FB72(p0, p1, p2, p3, p4, p5, p6)

--- 0x06EAF70AE066441E
-- @param p0 Any
-- 0x06EAF70AE066441E(p0)

--- 0x0A9C7F36E5D7B683
-- @param p0 Any
-- 0x0A9C7F36E5D7B683(p0)

--- 0x0B565B0AAE56A0E8
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0x0B565B0AAE56A0E8(p0, p1, p2, p3, p4, p5, p6)

--- 0x0B8B7F74BF061C6D
-- 0x0B8B7F74BF061C6D()

--- 0x0D01D20616FC73FB
-- @param p0 Any
-- @param p1 Any
-- 0x0D01D20616FC73FB(p0, p1)

--- 0x14E0B2D1AD1044E0
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- 0x14E0B2D1AD1044E0(p0, p1, p2, p3)

--- 0x14EDA9EE27BD1626
-- @param p0 Any
-- 0x14EDA9EE27BD1626(p0)

--- 0x164C5FF663790845
-- @param p0 Any
-- 0x164C5FF663790845(p0)

--- 0x1A7CE7CD3E653485
-- @param p0 Any
-- 0x1A7CE7CD3E653485(p0)

--- 0x1A8EA222F9C67DBB
-- @param p0 float*
-- 0x1A8EA222F9C67DBB(p0)

--- 0x26D7399B9587FE89
-- ```
STATS::0x343B27E2(0);  
STATS::0x343B27E2(1);  
STATS::0x343B27E2(2);  
STATS::0x343B27E2(3);  
STATS::0x343B27E2(4);  
STATS::0x343B27E2(5);  
STATS::0x343B27E2(6);  
STATS::0x343B27E2(7);  
Identical in ingamehud & maintransition.  
```
-- @param p0 int
-- 0x26D7399B9587FE89(p0)

--- 0x27AA1C973CACFE63
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- 0x27AA1C973CACFE63(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- 0x2818FF6638CB09DE
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0x2818FF6638CB09DE(p0)

--- 0x282B6739644F4347
-- @param p0 Any
-- 0x282B6739644F4347(p0)

--- 0x28ECB8AC2F607DB2
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x28ECB8AC2F607DB2(p0, p1, p2, p3, p4)

--- 0x2CD90358F67D0AA8
-- @param p0 Any
-- 0x2CD90358F67D0AA8(p0)

--- 0x2D7A9B577E72385E
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0x2D7A9B577E72385E(p0)

--- 0x2E0259BABC27A327
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0x2E0259BABC27A327(p0)

--- 0x2FA3173480008493
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x2FA3173480008493(p0, p1, p2, p3, p4)

--- 0x316DB59CD14C1774
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0x316DB59CD14C1774(p0)

--- 0x32CAC93C9DE73D32
-- 0x32CAC93C9DE73D32()

--- 0x33D72899E24C3365
-- @param p0 Any
-- @param p1 Any
-- 0x33D72899E24C3365(p0, p1)

--- 0x34770B9CE0E03B91
-- @param p0 Any
-- @param p1 Any*
-- 0x34770B9CE0E03B91(p0, p1)

--- 0x38491439B6BA7F7D
-- @param p0 Any
-- @param p1 Any
-- 0x38491439B6BA7F7D(p0, p1)

--- 0x38BAAA5DD4C9D19F
-- ```
Sets profile setting 934  
```
-- @param value int
-- 0x38BAAA5DD4C9D19F(value)

--- 0x3DE3AA516FB126A4
-- @param p0 Any
-- 0x3DE3AA516FB126A4(p0)

--- 0x3EBEAC6C3F81F6BD
-- @param p0 Any
-- 0x3EBEAC6C3F81F6BD(p0)

--- 0x419615486BBF1956
-- @param p0 Any
-- 0x419615486BBF1956(p0)

--- 0x44919CC079BB60BF
-- @param p0 Any
-- 0x44919CC079BB60BF(p0)

--- 0x4AFF7E02E485E92B
-- ```
NativeDB Introduced: v1868
```
-- 0x4AFF7E02E485E92B()

--- 0x4C89FE2BDEB3F169
-- 0x4C89FE2BDEB3F169()

--- 0x4DC416F246A41FC8
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x4DC416F246A41FC8(p0, p1, p2, p3, p4)

--- 0x4FCDBD3F0A813C25
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- 0x4FCDBD3F0A813C25(p0, p1)

--- 0x53C31853EC9531FF
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0x53C31853EC9531FF(p0)

--- 0x53CAE13E9B426993
-- @param p0 Any
-- 0x53CAE13E9B426993(p0)

--- 0x55384438FC55AD8E
-- ```
Sets profile setting 935  
```
-- @param value int
-- 0x55384438FC55AD8E(value)

--- 0x55A8BECAF28A4EB7
-- 0x55A8BECAF28A4EB7()

--- 0x5688585E6D563CD8
-- ```
STAT_SET_*
```
-- @param p0 int
-- 0x5688585E6D563CD8(p0)

--- 0x5A556B229A169402
-- 0x5A556B229A169402()

--- 0x5BD5F255321C4AAF
-- @param p0 Any
-- 0x5BD5F255321C4AAF(p0)

--- 0x5BF29846C6527C54
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x5BF29846C6527C54(p0, p1, p2, p3, p4)

--- 0x5CDAED54B34B0ED0
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0x5CDAED54B34B0ED0(p0)

--- 0x5EAD2BF6484852E4
-- ```
example from completionpercentage_controller.ysc.c4
if (STATS::_5EAD2BF6484852E4()) {
            MISC::SET_BIT(g_17b95._f20df._ff10, 15);
            STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);
        }
```
-- 0x5EAD2BF6484852E4()

--- 0x5FF2C33B13A02A11
-- @param p0 Any
-- 0x5FF2C33B13A02A11(p0)

--- 0x60EEDC12AF66E846
-- @param p0 Any
-- 0x60EEDC12AF66E846(p0)

--- 0x629526ABA383BCAA
-- 0x629526ABA383BCAA()

--- 0x6483C25849031C4F
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any*
-- 0x6483C25849031C4F(p0, p1, p2, p3)

--- 0x6551B1F7F6CD46EA
-- @param p0 Any
-- 0x6551B1F7F6CD46EA(p0)

--- 0x678F86D8FC040BDB
-- @param p0 Any
-- 0x678F86D8FC040BDB(p0)

--- 0x6A60E43998228229
-- @param p0 Any
-- 0x6A60E43998228229(p0)

--- 0x6A7F19756F1A9016
-- ```
NativeDB Introduced: v2060
```
-- 0x6A7F19756F1A9016()

--- 0x6BC0ACD0673ACEBE
-- @param p0 Any
-- @param valueA int*
-- @param valueB int*
-- 0x6BC0ACD0673ACEBE(p0, valueA, valueB)

--- 0x6BCCF9948492FD85
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x6BCCF9948492FD85(p0, p1, p2, p3, p4)

--- 0x6DEE77AFF8C21BD1
-- @param playerAccountId int*
-- @param posixTime int*
-- 0x6DEE77AFF8C21BD1(playerAccountId, posixTime)

--- 0x6E0A5253375C4584
-- 0x6E0A5253375C4584()

--- 0x6F361B8889A792A3
-- 0x6F361B8889A792A3()

--- 0x7033EEFD9B28088E
-- @param p0 Any
-- 0x7033EEFD9B28088E(p0)

--- 0x71B008056E5692D6
-- 0x71B008056E5692D6()

--- 0x723C1CE13FBFDB67
-- @param p0 Any
-- @param p1 Any
-- 0x723C1CE13FBFDB67(p0, p1)

--- 0x73001E34F85137F8
-- @param p0 Any
-- 0x73001E34F85137F8(p0)

--- 0x79D310A861697CC9
-- ```
Sets profile setting 940 and 941

_SET_F* - _SET_G*
```

```
NativeDB Introduced: v2699
```
-- @param profileSetting int
-- @param settingValue int
-- 0x79D310A861697CC9(profileSetting, settingValue)

--- 0x7B18DA61F6BAE9D5
-- @param p0 Any
-- 0x7B18DA61F6BAE9D5(p0)

--- 0x7D36291161859389
-- @param p0 Any
-- 0x7D36291161859389(p0)

--- 0x7D8BA05688AD64C7
-- @param p0 Any
-- 0x7D8BA05688AD64C7(p0)

--- 0x7E6946F68A38B74F
-- @param p0 Any
-- 0x7E6946F68A38B74F(p0)

--- 0x7EEC2A316C250073
-- ```
_PLAYSTATS_ROB_ARMOURD_TRUCK  
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x7EEC2A316C250073(p0, p1, p2)

--- 0x7F2C4CDF2E82DF4C
-- @param p0 Any
-- 0x7F2C4CDF2E82DF4C(p0)

--- 0x810B5FCC52EC7FF0
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0x810B5FCC52EC7FF0(p0, p1, p2, p3)

--- 0x830C3A44EB3F2CF9
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0x830C3A44EB3F2CF9(p0)

--- 0x84A810B375E69C0E
-- 0x84A810B375E69C0E()

--- 0x84DFC579C2FC214C
-- @param p0 Any
-- 0x84DFC579C2FC214C(p0)

--- 0x88087EE1F28024AE
-- @param p0 Any
-- 0x88087EE1F28024AE(p0)

--- 0x88578F6EC36B4A3A
-- @param p0 Any
-- @param p1 Any
-- 0x88578F6EC36B4A3A(p0, p1)

--- 0x8989CBD7B4E82534
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- 0x8989CBD7B4E82534(p0, p1, p2, p3, p4, p5, p6)

--- 0x8B9CDBD6C566C38C
-- 0x8B9CDBD6C566C38C()

--- 0x8C9D11605E59D955
-- @param p0 Any
-- 0x8C9D11605E59D955(p0)

--- 0x8D8ADB562F09A245
-- @param p0 Any
-- 0x8D8ADB562F09A245(p0)

--- 0x8EC74CEB042E7CFF
-- @param p0 Any
-- 0x8EC74CEB042E7CFF(p0)

--- 0x92FC0EEDFAC04A14
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- 0x92FC0EEDFAC04A14(p0, p1, p2, p3, p4, p5)

--- 0x930F504203F561C9
-- @param p0 Any
-- 0x930F504203F561C9(p0)

--- 0x96E6D5150DBF1C09
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x96E6D5150DBF1C09(p0, p1, p2)

--- 0x98E2BC1CA26287C3
-- 0x98E2BC1CA26287C3()

--- 0x9A62EC95AE10E011
-- 0x9A62EC95AE10E011()

--- 0x9B4BD21D69B1E609
-- 0x9B4BD21D69B1E609()

--- 0x9EC8858184CD253A
-- 0x9EC8858184CD253A()

--- 0xA0F93D5465B3094D
-- @param p0 Any*
-- 0xA0F93D5465B3094D(p0)

--- 0xA3C53804BDB68ED2
-- @param p0 Any
-- @param p1 Any
-- 0xA3C53804BDB68ED2(p0, p1)

--- 0xA6F54BB2FFCA35EA
-- @param p0 Any
-- 0xA6F54BB2FFCA35EA(p0)

--- 0xA736CF7FB7C5BFF4
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- 0xA736CF7FB7C5BFF4(p0, p1, p2, p3)

--- 0xA761D4AC6115623D
-- 0xA761D4AC6115623D()

--- 0xA78B8FA58200DA56
-- ```
STATS::0xE3247582(0);  
STATS::0xE3247582(1);  
STATS::0xE3247582(2);  
STATS::0xE3247582(3);  
STATS::0xE3247582(4);  
STATS::0xE3247582(5);  
STATS::0xE3247582(6);  
```
-- @param p0 int
-- 0xA78B8FA58200DA56(p0)

--- 0xA8733668D1047B51
-- @param p0 Any
-- 0xA8733668D1047B51(p0)

--- 0xA943FD1722E11EFD
-- 0xA943FD1722E11EFD()

--- 0xAA525DFF66BB82F5
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xAA525DFF66BB82F5(p0, p1, p2)

--- 0xAFF47709F1D5DCCE
-- 0xAFF47709F1D5DCCE()

--- 0xB1D2BB1E1631F5B1
-- 0xB1D2BB1E1631F5B1()

--- 0xB26F670685631727
-- ```
NativeDB Added Parameter 2: Any p1
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0xB26F670685631727(p0)

--- 0xB3DA2606774A8E2D
-- ```
This function is hard-coded to always return 1.
NETWORK_IS_*
```
-- 0xB3DA2606774A8E2D()

--- 0xBA9749CC94C1FD85
-- 0xBA9749CC94C1FD85()

--- 0xBAA2F0490E146BE8
-- @param p0 Any
-- 0xBAA2F0490E146BE8(p0)

--- 0xBE3DB208333D9844
-- 0xBE3DB208333D9844()

--- 0xBED9F5693F34ED17
-- @param statName Hash
-- @param p1 int
-- @param outValue float*
-- 0xBED9F5693F34ED17(statName, p1, outValue)

--- 0xBF371CD2B64212FD
-- @param p0 Any
-- 0xBF371CD2B64212FD(p0)

--- 0xBFAFDB5FAAA5C5AB
-- @param p0 Any
-- 0xBFAFDB5FAAA5C5AB(p0)

--- 0xC01D2470F22CDE5A
-- **This native does absolutely nothing, just a nullsub**

```
NativeDB Introduced: v2372
```
-- 0xC01D2470F22CDE5A()

--- 0xC03FAB2C2F92289B
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0xC03FAB2C2F92289B(p0)

--- 0xC0E0D686DDFC6EAE
-- 0xC0E0D686DDFC6EAE()

--- 0xC141B8917E0017EC
-- 0xC141B8917E0017EC()

--- 0xC14BD9F5337219B2
-- ```
NativeDB Added Parameter 2: Any p1
NativeDB Introduced: v1493
```
-- @param p0 Any
-- 0xC14BD9F5337219B2(p0)

--- 0xC1E963C58664B556
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0xC1E963C58664B556(p0)

--- 0xC67E2DA1CBE759E2
-- Sets profile setting 939

```
NativeDB Introduced: v1734
```
-- 0xC67E2DA1CBE759E2()

--- 0xC6E0E2616A7576BB
-- 0xC6E0E2616A7576BB()

--- 0xC847B43F369AC0B5
-- 0xC847B43F369AC0B5()

--- 0xCC25A4553DFBF9EA
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0xCC25A4553DFBF9EA(p0, p1, p2, p3, p4)

--- 0xD1A1EE3B4FA8E760
-- @param p0 Any
-- 0xD1A1EE3B4FA8E760(p0)

--- 0xD1C9B92BDD3F151D
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xD1C9B92BDD3F151D(p0, p1, p2)

--- 0xD4367D310F079DB0
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xD4367D310F079DB0(p0, p1, p2, p3)

--- 0xD558BEC0BBA7E8D2
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0xD558BEC0BBA7E8D2(p0, p1, p2, p3, p4)

--- 0xD6CA58B3B53A0F22
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0xD6CA58B3B53A0F22(p0)

--- 0xDAF80797FC534BEC
-- @param p0 Any
-- 0xDAF80797FC534BEC(p0)

--- 0xDEAAF77EB3687E97
-- @param p0 Any
-- @param p1 Any*
-- 0xDEAAF77EB3687E97(p0, p1)

--- 0xDFBD93BF2943E29B
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0xDFBD93BF2943E29B(p0)

--- 0xDFCDB14317A9B361
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0xDFCDB14317A9B361(p0)

--- 0xE3261D791EB44ACB
-- @param p0 Any
-- 0xE3261D791EB44ACB(p0)

--- 0xE496A53BA5F50A56
-- @param p0 Any
-- 0xE496A53BA5F50A56(p0)

--- 0xE8853FBCE7D8D0D6
-- 0xE8853FBCE7D8D0D6()

--- 0xECB41AC6AB754401
-- ```
STAT_LOAD_*
```
-- 0xECB41AC6AB754401()

--- 0xEDBF6C9B0D2C65C8
-- @param p0 Any
-- 0xEDBF6C9B0D2C65C8(p0)

--- 0xF06A6F41CB445443
-- @param p0 Any
-- 0xF06A6F41CB445443(p0)

--- 0xF11F01D98113536A
-- @param p0 float*
-- 0xF11F01D98113536A(p0)

--- 0xF1A1803D3476F215
-- ```
Sets profile setting 933  
```
-- @param value int
-- 0xF1A1803D3476F215(value)

--- 0xF534D94DFA2EAD26
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0xF534D94DFA2EAD26(p0, p1, p2, p3, p4)

--- 0xF8C54A461C3E11DC
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- 0xF8C54A461C3E11DC(p0, p1, p2, p3)

--- 0xF9096193DF1F99D4
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0xF9096193DF1F99D4(p0)

--- 0xF9F2922717B819EC
-- 0xF9F2922717B819EC()

--- 0xFCC228E07217FCAC
-- @param p0 Any
-- 0xFCC228E07217FCAC(p0)

--- GET_PACKED_BOOL_STAT_KEY
-- @param index int
-- @param spStat BOOL
-- @param charStat BOOL
-- @param character int
-- GET_PACKED_BOOL_STAT_KEY(index, spStat, charStat, character)

--- GET_PACKED_INT_STAT_KEY
-- @param index int
-- @param spStat BOOL
-- @param charStat BOOL
-- @param character int
-- GET_PACKED_INT_STAT_KEY(index, spStat, charStat, character)

--- GET_PACKED_TU_BOOL_STAT_KEY
-- @param index int
-- @param spStat BOOL
-- @param charStat BOOL
-- @param character int
-- GET_PACKED_TU_BOOL_STAT_KEY(index, spStat, charStat, character)

--- GET_PACKED_TU_INT_STAT_KEY
-- @param index int
-- @param spStat BOOL
-- @param charStat BOOL
-- @param character int
-- GET_PACKED_TU_INT_STAT_KEY(index, spStat, charStat, character)

--- LEADERBOARDS2_READ_BY_HANDLE
-- @param p0 Any*
-- @param p1 Any*
-- LEADERBOARDS2_READ_BY_HANDLE(p0, p1)

--- LEADERBOARDS2_READ_BY_RADIUS
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any*
-- LEADERBOARDS2_READ_BY_RADIUS(p0, p1, p2)

--- LEADERBOARDS2_READ_BY_RANK
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS2_READ_BY_RANK(p0, p1, p2)

--- LEADERBOARDS2_READ_BY_ROW
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any*
-- @param p4 Any
-- @param p5 Any*
-- @param p6 Any
-- LEADERBOARDS2_READ_BY_ROW(p0, p1, p2, p3, p4, p5, p6)

--- LEADERBOARDS2_READ_BY_SCORE_FLOAT
-- @param p0 Any*
-- @param p1 float
-- @param p2 Any
-- LEADERBOARDS2_READ_BY_SCORE_FLOAT(p0, p1, p2)

--- LEADERBOARDS2_READ_BY_SCORE_INT
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS2_READ_BY_SCORE_INT(p0, p1, p2)

--- LEADERBOARDS2_READ_FRIENDS_BY_ROW
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any
-- @param p3 BOOL
-- @param p4 Any
-- @param p5 Any
-- LEADERBOARDS2_READ_FRIENDS_BY_ROW(p0, p1, p2, p3, p4, p5)

--- LEADERBOARDS2_READ_RANK_PREDICTION
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any*
-- LEADERBOARDS2_READ_RANK_PREDICTION(p0, p1, p2)

--- LEADERBOARDS2_WRITE_DATA
-- @param p0 Any*
-- LEADERBOARDS2_WRITE_DATA(p0)

--- LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE
-- @param p0 Any*
-- @param p1 Any*
-- LEADERBOARDS2_WRITE_DATA_FOR_EVENT_TYPE(p0, p1)

--- LEADERBOARDS_CACHE_DATA_ROW
-- @param p0 Any*
-- LEADERBOARDS_CACHE_DATA_ROW(p0)

--- LEADERBOARDS_CLEAR_CACHE_DATA
-- LEADERBOARDS_CLEAR_CACHE_DATA()

--- LEADERBOARDS_GET_CACHE_DATA_ROW
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any*
-- LEADERBOARDS_GET_CACHE_DATA_ROW(p0, p1, p2)

--- LEADERBOARDS_GET_CACHE_EXISTS
-- @param p0 Any
-- LEADERBOARDS_GET_CACHE_EXISTS(p0)

--- LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS
-- @param p0 Any
-- LEADERBOARDS_GET_CACHE_NUMBER_OF_ROWS(p0)

--- LEADERBOARDS_GET_CACHE_TIME
-- @param p0 Any
-- LEADERBOARDS_GET_CACHE_TIME(p0)

--- LEADERBOARDS_GET_COLUMN_ID
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS_GET_COLUMN_ID(p0, p1, p2)

--- LEADERBOARDS_GET_COLUMN_TYPE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS_GET_COLUMN_TYPE(p0, p1, p2)

--- LEADERBOARDS_GET_NUMBER_OF_COLUMNS
-- @param p0 Any
-- @param p1 Any
-- LEADERBOARDS_GET_NUMBER_OF_COLUMNS(p0, p1)

--- LEADERBOARDS_READ_ANY_PENDING
-- LEADERBOARDS_READ_ANY_PENDING()

--- LEADERBOARDS_READ_CLEAR
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS_READ_CLEAR(p0, p1, p2)

--- LEADERBOARDS_READ_CLEAR_ALL
-- LEADERBOARDS_READ_CLEAR_ALL()

--- LEADERBOARDS_READ_PENDING
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS_READ_PENDING(p0, p1, p2)

--- LEADERBOARDS_READ_SUCCESSFUL
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS_READ_SUCCESSFUL(p0, p1, p2)

--- LEADERBOARDS_WRITE_ADD_COLUMN
-- @param p0 Any
-- @param p1 Any
-- @param p2 float
-- LEADERBOARDS_WRITE_ADD_COLUMN(p0, p1, p2)

--- LEADERBOARDS_WRITE_ADD_COLUMN_LONG
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- LEADERBOARDS_WRITE_ADD_COLUMN_LONG(p0, p1, p2)

--- PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE
-- @param p0 Any
-- PLAYSTATS_ACQUIRED_HIDDEN_PACKAGE(p0)

--- PLAYSTATS_ACTIVITY_DONE
-- @param p0 Any
-- @param p1 Any
-- PLAYSTATS_ACTIVITY_DONE(p0, p1)

--- PLAYSTATS_AWARD_XP
-- @param amount int
-- @param type Hash
-- @param category Hash
-- PLAYSTATS_AWARD_XP(amount, type, category)

--- PLAYSTATS_BACKGROUND_SCRIPT_ACTION
-- @param action char*
-- @param value int
-- PLAYSTATS_BACKGROUND_SCRIPT_ACTION(action, value)

--- PLAYSTATS_CHEAT_APPLIED
-- @param cheat char*
-- PLAYSTATS_CHEAT_APPLIED(cheat)

--- PLAYSTATS_CLOTH_CHANGE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- PLAYSTATS_CLOTH_CHANGE(p0, p1, p2, p3, p4)

--- PLAYSTATS_CRATE_CREATED
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- PLAYSTATS_CRATE_CREATED(p0, p1, p2)

--- PLAYSTATS_CRATE_DROP_MISSION_DONE
-- ```
NativeDB Added Parameter 7: Any p6
NativeDB Added Parameter 8: Any p7
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- PLAYSTATS_CRATE_DROP_MISSION_DONE(p0, p1, p2, p3, p4, p5)

--- PLAYSTATS_FRIEND_ACTIVITY
-- @param p0 Any
-- @param p1 Any
-- PLAYSTATS_FRIEND_ACTIVITY(p0, p1)

--- PLAYSTATS_HEIST_SAVE_CHEAT
-- @param hash Hash
-- @param p1 int
-- PLAYSTATS_HEIST_SAVE_CHEAT(hash, p1)

--- PLAYSTATS_HOLD_UP_MISSION_DONE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- PLAYSTATS_HOLD_UP_MISSION_DONE(p0, p1, p2, p3)

--- PLAYSTATS_IDLE_KICK
-- ```
longest time being ilde?  
```
-- @param time int
-- PLAYSTATS_IDLE_KICK(time)

--- PLAYSTATS_IMPORT_EXPORT_MISSION_DONE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- PLAYSTATS_IMPORT_EXPORT_MISSION_DONE(p0, p1, p2, p3)

--- PLAYSTATS_JOB_BEND
-- @param p0 Any*
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- PLAYSTATS_JOB_BEND(p0, p1, p2, p3)

--- PLAYSTATS_LEAVE_JOB_CHAIN
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- PLAYSTATS_LEAVE_JOB_CHAIN(p0, p1, p2, p3, p4)

--- PLAYSTATS_MATCH_STARTED
-- ```
NativeDB Removed Parameter 4: Any p3
NativeDB Removed Parameter 5: Any p4
NativeDB Removed Parameter 6: Any p5
NativeDB Removed Parameter 7: Any p6
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- PLAYSTATS_MATCH_STARTED(p0, p1, p2, p3, p4, p5, p6)

--- PLAYSTATS_MISSION_CHECKPOINT
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- PLAYSTATS_MISSION_CHECKPOINT(p0, p1, p2, p3)

--- PLAYSTATS_MISSION_OVER
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- @param p3 BOOL
-- @param p4 BOOL
-- @param p5 BOOL
-- PLAYSTATS_MISSION_OVER(p0, p1, p2, p3, p4, p5)

--- PLAYSTATS_MISSION_STARTED
-- @param p0 Any*
-- @param p1 Any
-- @param p2 Any
-- @param p3 BOOL
-- PLAYSTATS_MISSION_STARTED(p0, p1, p2, p3)

--- PLAYSTATS_NPC_INVITE
-- @param p0 Any*
-- PLAYSTATS_NPC_INVITE(p0)

--- PLAYSTATS_ODDJOB_DONE
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- PLAYSTATS_ODDJOB_DONE(p0, p1, p2)

--- PLAYSTATS_PROP_CHANGE
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- PLAYSTATS_PROP_CHANGE(p0, p1, p2, p3)

--- PLAYSTATS_QUICKFIX_TOOL
-- @param element int
-- @param item char*
-- PLAYSTATS_QUICKFIX_TOOL(element, item)

--- PLAYSTATS_RACE_CHECKPOINT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- PLAYSTATS_RACE_CHECKPOINT(p0, p1, p2, p3, p4)

--- PLAYSTATS_RACE_TO_POINT_MISSION_DONE
-- ```
NativeDB Removed Parameter 5: Any p4
NativeDB Removed Parameter 6: Any p5
NativeDB Removed Parameter 7: Any p6
NativeDB Removed Parameter 8: Any p7
NativeDB Removed Parameter 9: Any p8
NativeDB Removed Parameter 10: Any p9
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- PLAYSTATS_RACE_TO_POINT_MISSION_DONE(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- PLAYSTATS_RANDOM_MISSION_DONE
-- @param name char*
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- PLAYSTATS_RANDOM_MISSION_DONE(name, p1, p2, p3)

--- PLAYSTATS_RANK_UP
-- @param rank int
-- PLAYSTATS_RANK_UP(rank)

--- PLAYSTATS_ROS_BET
-- @param amount int
-- @param act int
-- @param player Player
-- @param cm float
-- PLAYSTATS_ROS_BET(amount, act, player, cm)

--- PLAYSTATS_SET_JOIN_TYPE
-- Sets a byte that is then used in session_host and session_join metrics when hosting or joining a session
-- @param joinType int
-- PLAYSTATS_SET_JOIN_TYPE(joinType)

--- PLAYSTATS_SHOP_ITEM
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- PLAYSTATS_SHOP_ITEM(p0, p1, p2, p3, p4)

--- PLAYSTATS_START_TRACKING_STUNTS
-- Allows stunts to be triggered and sent as a `CEventNetworkStuntPerformed` event.

Event types are shown below:

```cpp
enum eTrackedStuntType
{
    ST_FRONTFLIP = 0,
    ST_BACKFLIP = 1,
    ST_SPIN = 2,
    ST_WHEELIE = 3,
    ST_STOPPIE = 4,
    ST_BOWLING_PIN = 5,
    ST_FOOTBALL = 6,
    ST_ROLL = 7
};
```
-- PLAYSTATS_START_TRACKING_STUNTS()

--- PLAYSTATS_STOP_TRACKING_STUNTS
-- Disallows CEventNetworkStuntPerformed to be triggered (Resets [`PLAYSTATS_START_TRACKING_STUNTS`](#\_0x928DBFB892638EF3)).
-- PLAYSTATS_STOP_TRACKING_STUNTS()

--- PLAYSTATS_WEAPON_MODE_CHANGE
-- @param weaponHash Hash
-- @param componentHashTo Hash
-- @param componentHashFrom Hash
-- PLAYSTATS_WEAPON_MODE_CHANGE(weaponHash, componentHashTo, componentHashFrom)

--- PLAYSTATS_WEBSITE_VISITED
-- @param scaleformHash Hash
-- @param p1 int
-- PLAYSTATS_WEBSITE_VISITED(scaleformHash, p1)

--- PRESENCE_EVENT_UPDATESTAT_FLOAT
-- @param statHash Hash
-- @param value float
-- @param p2 int
-- PRESENCE_EVENT_UPDATESTAT_FLOAT(statHash, value, p2)

--- PRESENCE_EVENT_UPDATESTAT_INT
-- @param statHash Hash
-- @param value int
-- @param p2 int
-- PRESENCE_EVENT_UPDATESTAT_INT(statHash, value, p2)

--- SET_PROFILE_SETTING_PROLOGUE_COMPLETE
-- SET_PROFILE_SETTING_PROLOGUE_COMPLETE()

--- STAT_CLEAR_SLOT_FOR_RELOAD
-- ```
Example:
for (v_2 = 0; v_2 <= 4; v_2 += 1) {
    STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);
}
```
-- @param statSlot int
-- STAT_CLEAR_SLOT_FOR_RELOAD(statSlot)

--- STAT_DELETE_SLOT
-- @param p0 Any
-- STAT_DELETE_SLOT(p0)

--- STAT_GET_BOOL
-- @param statHash Hash
-- @param outValue BOOL*
-- @param p2 Any
-- STAT_GET_BOOL(statHash, outValue, p2)

--- STAT_GET_BOOL_MASKED
-- ```
p2 - Default value? Seems to be -1 most of the time.  
```
-- @param statName Hash
-- @param mask int
-- @param p2 int
-- STAT_GET_BOOL_MASKED(statName, mask, p2)

--- STAT_GET_DATE
-- @param statHash Hash
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- STAT_GET_DATE(statHash, p1, p2, p3)

--- STAT_GET_FLOAT
-- @param statHash Hash
-- @param outValue float*
-- @param p2 Any
-- STAT_GET_FLOAT(statHash, outValue, p2)

--- STAT_GET_INT
-- ```
p2 appears to always be -1  
```
-- @param statHash Hash
-- @param outValue int*
-- @param p2 int
-- STAT_GET_INT(statHash, outValue, p2)

--- STAT_GET_LICENSE_PLATE
-- @param statName Hash
-- STAT_GET_LICENSE_PLATE(statName)

--- STAT_GET_MASKED_INT
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- STAT_GET_MASKED_INT(p0, p1, p2, p3, p4)

--- STAT_GET_NUMBER_OF_DAYS
-- @param statName Hash
-- STAT_GET_NUMBER_OF_DAYS(statName)

--- STAT_GET_NUMBER_OF_HOURS
-- @param statName Hash
-- STAT_GET_NUMBER_OF_HOURS(statName)

--- STAT_GET_NUMBER_OF_MINUTES
-- @param statName Hash
-- STAT_GET_NUMBER_OF_MINUTES(statName)

--- STAT_GET_NUMBER_OF_SECONDS
-- @param statName Hash
-- STAT_GET_NUMBER_OF_SECONDS(statName)

--- STAT_GET_POS
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- @param p4 Any
-- STAT_GET_POS(p0, p1, p2, p3, p4)

--- STAT_GET_SAVE_MIGRATION_STATUS
-- @param data Any*
-- STAT_GET_SAVE_MIGRATION_STATUS(data)

--- STAT_GET_STRING
-- ```
p1 is always -1 in the script files  
```
-- @param statHash Hash
-- @param p1 int
-- STAT_GET_STRING(statHash, p1)

--- STAT_GET_USER_ID
-- ```
Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.  
```
-- @param p0 Any
-- STAT_GET_USER_ID(p0)

--- STAT_INCREMENT
-- @param statName Hash
-- @param value float
-- STAT_INCREMENT(statName, value)

--- STAT_LOAD
-- @param p0 int
-- STAT_LOAD(p0)

--- STAT_LOAD_PENDING
-- @param p0 Any
-- STAT_LOAD_PENDING(p0)

--- STAT_SAVE
-- ```
NativeDB Added Parameter 4: Any p3
```
-- @param p0 int
-- @param p1 BOOL
-- @param p2 int
-- STAT_SAVE(p0, p1, p2)

--- STAT_SAVE_MIGRATION_STATUS_START
-- STAT_SAVE_MIGRATION_STATUS_START()

--- STAT_SAVE_PENDING
-- STAT_SAVE_PENDING()

--- STAT_SAVE_PENDING_OR_REQUESTED
-- STAT_SAVE_PENDING_OR_REQUESTED()

--- STAT_SET_BLOCK_SAVES
-- @param toggle BOOL
-- STAT_SET_BLOCK_SAVES(toggle)

--- STAT_SET_BOOL
-- ```
Example:
 STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);
```
-- @param statName Hash
-- @param value BOOL
-- @param save BOOL
-- STAT_SET_BOOL(statName, value, save)

--- STAT_SET_BOOL_MASKED
-- @param statName Hash
-- @param value BOOL
-- @param mask int
-- @param save BOOL
-- STAT_SET_BOOL_MASKED(statName, value, mask, save)

--- STAT_SET_CHEAT_IS_ACTIVE
-- STAT_SET_CHEAT_IS_ACTIVE()

--- STAT_SET_CURRENT_POSIX_TIME
-- ```
p1 always true.  
```
-- @param statName Hash
-- @param p1 BOOL
-- STAT_SET_CURRENT_POSIX_TIME(statName, p1)

--- STAT_SET_DATE
-- ```
'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).  
The structure looks like this:  
int year  
int month  
int day  
int hour  
int minute  
int second  
int millisecond  
The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.  
```
-- @param statName Hash
-- @param value Any*
-- @param numFields int
-- @param save BOOL
-- STAT_SET_DATE(statName, value, numFields, save)

--- STAT_SET_FLOAT
-- ```
Example:
 STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);
```
-- @param statName Hash
-- @param value float
-- @param save BOOL
-- STAT_SET_FLOAT(statName, value, save)

--- STAT_SET_GXT_LABEL
-- ```
The following values have been found in the decompiled scripts:  
"RC_ABI1"  
"RC_ABI2"  
"RC_BA1"  
"RC_BA2"  
"RC_BA3"  
"RC_BA3A"  
"RC_BA3C"  
"RC_BA4"  
"RC_DRE1"  
"RC_EPS1"  
"RC_EPS2"  
"RC_EPS3"  
"RC_EPS4"  
"RC_EPS5"  
"RC_EPS6"  
"RC_EPS7"  
"RC_EPS8"  
"RC_EXT1"  
"RC_EXT2"  
"RC_EXT3"  
"RC_EXT4"  
"RC_FAN1"  
"RC_FAN2"  
"RC_FAN3"  
"RC_HAO1"  
"RC_HUN1"  
"RC_HUN2"  
"RC_JOS1"  
"RC_JOS2"  
"RC_JOS3"  
"RC_JOS4"  
"RC_MAU1"  
"RC_MIN1"  
"RC_MIN2"  
"RC_MIN3"  
"RC_MRS1"  
"RC_MRS2"  
"RC_NI1"  
"RC_NI1A"  
"RC_NI1B"  
"RC_NI1C"  
"RC_NI1D"  
"RC_NI2"  
"RC_NI3"  
"RC_OME1"  
"RC_OME2"  
"RC_PA1"  
"RC_PA2"  
"RC_PA3"  
"RC_PA3A"  
"RC_PA3B"  
"RC_PA4"  
"RC_RAM1"  
"RC_RAM2"  
"RC_RAM3"  
"RC_RAM4"  
"RC_RAM5"  
"RC_SAS1"  
"RC_TON1"  
"RC_TON2"  
"RC_TON3"  
"RC_TON4"  
"RC_TON5"  
```
-- @param statName Hash
-- @param value char*
-- @param save BOOL
-- STAT_SET_GXT_LABEL(statName, value, save)

--- STAT_SET_INT
-- @param statName Hash
-- @param value int
-- @param save BOOL
-- STAT_SET_INT(statName, value, save)

--- STAT_SET_LICENSE_PLATE
-- @param statName Hash
-- @param str char*
-- STAT_SET_LICENSE_PLATE(statName, str)

--- STAT_SET_MASKED_INT
-- @param statName Hash
-- @param p1 Any
-- @param p2 Any
-- @param p3 int
-- @param save BOOL
-- STAT_SET_MASKED_INT(statName, p1, p2, p3, save)

--- STAT_SET_POS
-- @param statName Hash
-- @param x float
-- @param y float
-- @param z float
-- @param save BOOL
-- STAT_SET_POS(statName, x, y, z, save)

--- STAT_SET_PROFILE_SETTING_VALUE
-- ```
Does not take effect immediately, unfortunately.
profileSetting seems to only be 936, 937 and 938 in scripts
```
-- @param profileSetting int
-- @param value int
-- STAT_SET_PROFILE_SETTING_VALUE(profileSetting, value)

--- STAT_SET_STRING
-- @param statName Hash
-- @param value char*
-- @param save BOOL
-- STAT_SET_STRING(statName, value, save)

--- STAT_SET_USER_ID
-- @param statName Hash
-- @param value char*
-- @param save BOOL
-- STAT_SET_USER_ID(statName, value, save)

--- STAT_SLOT_IS_LOADED
-- @param p0 Any
-- STAT_SLOT_IS_LOADED(p0)

--- _GET_NGSTAT_BOOL_HASH
-- ```
Needs more research. Gets the stat name of a masked bool?
section - values used in the decompiled scripts:
"_NGPSTAT_BOOL"
"_NGTATPSTAT_BOOL"
"_NGDLCPSTAT_BOOL"
"_DLCBIKEPSTAT_BOOL"
"_DLCGUNPSTAT_BOOL"
"_GUNTATPSTAT_BOOL"
"_DLCSMUGCHARPSTAT_BOOL"
"_GANGOPSPSTAT_BOOL"
"_BUSINESSBATPSTAT_BOOL"
"_ARENAWARSPSTAT_BOOL"
"_CASINOPSTAT_BOOL"
"_CASINOHSTPSTAT_BOOL"
"_HEIST3TATTOOSTAT_BOOL"
```
-- @param index int
-- @param spStat BOOL
-- @param charStat BOOL
-- @param character int
-- @param section char*
-- _GET_NGSTAT_BOOL_HASH(index, spStat, charStat, character, section)

--- _GET_NGSTAT_INT_HASH
-- ```
Needs more research. Gets the stat name of a masked int?
section - values used in the decompiled scripts:
"_NGPSTAT_INT"
"_MP_NGPSTAT_INT"
"_MP_LRPSTAT_INT"
"_MP_APAPSTAT_INT"
"_MP_LR2PSTAT_INT"
"_MP_BIKEPSTAT_INT"
"_MP_IMPEXPPSTAT_INT"
"_MP_GUNRPSTAT_INT"
"_NGDLCPSTAT_INT"
"_MP_NGDLCPSTAT_INT"
"_DLCSMUGCHARPSTAT_INT"
"_GANGOPSPSTAT_INT"
"_BUSINESSBATPSTAT_INT"
"_ARENAWARSPSTAT_INT"
"_CASINOPSTAT_INT"
"_CASINOHSTPSTAT_INT"
```
-- @param index int
-- @param spStat BOOL
-- @param charStat BOOL
-- @param character int
-- @param section char*
-- _GET_NGSTAT_INT_HASH(index, spStat, charStat, character, section)

--- _HIRED_LIMO
-- @param p0 Any
-- @param p1 Any
-- _HIRED_LIMO(p0, p1)

--- _LEADERBOARDS2_READ_BY_PLATFORM
-- @param p0 Any*
-- @param gamerHandleCsv char*
-- @param platformName char*
-- _LEADERBOARDS2_READ_BY_PLATFORM(p0, gamerHandleCsv, platformName)

--- _LEADERBOARDS_DEATHS
-- @param statName Hash
-- @param value float
-- _LEADERBOARDS_DEATHS(statName, value)

--- _ORDERED_BOSS_VEHICLE
-- @param p0 Any
-- @param p1 Any
-- @param vehicleHash Hash
-- _ORDERED_BOSS_VEHICLE(p0, p1, vehicleHash)

--- _PLAYSTATS_ARCADEGAME
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- _PLAYSTATS_ARCADEGAME(p0, p1, p2, p3, p4, p5)

--- _PLAYSTATS_ARENA_WARS_ENDED
-- ```
NativeDB Introduced: v1604
```
-- @param data Any*
-- _PLAYSTATS_ARENA_WARS_ENDED(data)

--- _PLAYSTATS_ARENA_WAR_SPECTATOR
-- ```
NativeDB Introduced: v1604
```
-- @param p0 int
-- @param p1 int
-- @param p2 int
-- @param p3 int
-- @param p4 int
-- _PLAYSTATS_ARENA_WAR_SPECTATOR(p0, p1, p2, p3, p4)

--- _PLAYSTATS_AWARD_BADSPORT
-- @param id int
-- _PLAYSTATS_AWARD_BADSPORT(id)

--- _PLAYSTATS_BAN_ALERT
-- @param p0 int
-- _PLAYSTATS_BAN_ALERT(p0)

--- _PLAYSTATS_BUY_CONTRABAND
-- @param data Any*
-- _PLAYSTATS_BUY_CONTRABAND(data)

--- _PLAYSTATS_CARCLUB_CHALLENGE
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _PLAYSTATS_CARCLUB_CHALLENGE(p0, p1, p2, p3)

--- _PLAYSTATS_CARCLUB_POINTS
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _PLAYSTATS_CARCLUB_POINTS(p0)

--- _PLAYSTATS_CARCLUB_PRIZE
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- _PLAYSTATS_CARCLUB_PRIZE(p0, p1)

--- _PLAYSTATS_CASINO_BLACKJACK
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_BLACKJACK(p0)

--- _PLAYSTATS_CASINO_BLACKJACK_LIGHT
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_BLACKJACK_LIGHT(p0)

--- _PLAYSTATS_CASINO_CHIP
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_CHIP(p0)

--- _PLAYSTATS_CASINO_INSIDETRACK
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_INSIDETRACK(p0)

--- _PLAYSTATS_CASINO_INSIDETRACK_LIGHT
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_INSIDETRACK_LIGHT(p0)

--- _PLAYSTATS_CASINO_LUCKYSEVEN
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_LUCKYSEVEN(p0)

--- _PLAYSTATS_CASINO_MISSION_ENDED
-- ```
NativeDB Introduced: v1734
```
-- @param data Any*
-- _PLAYSTATS_CASINO_MISSION_ENDED(data)

--- _PLAYSTATS_CASINO_ROULETTE
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_ROULETTE(p0)

--- _PLAYSTATS_CASINO_ROULETTE_LIGHT
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_ROULETTE_LIGHT(p0)

--- _PLAYSTATS_CASINO_SLOTMACHINE
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_SLOTMACHINE(p0)

--- _PLAYSTATS_CASINO_SLOTMACHINE_LIGHT
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_SLOTMACHINE_LIGHT(p0)

--- _PLAYSTATS_CASINO_STORY_MISSION_ENDED
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- @param p1 Any
-- _PLAYSTATS_CASINO_STORY_MISSION_ENDED(p0, p1)

--- _PLAYSTATS_CASINO_THREECARDPOKER
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_THREECARDPOKER(p0)

--- _PLAYSTATS_CASINO_THREECARDPOKER_LIGHT
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- _PLAYSTATS_CASINO_THREECARDPOKER_LIGHT(p0)

--- _PLAYSTATS_CHANGE_MC_EMBLEM
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- _PLAYSTATS_CHANGE_MC_EMBLEM(p0, p1, p2, p3, p4)

--- _PLAYSTATS_COLLECTIBLE
-- ```
NativeDB Introduced: v1734
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- _PLAYSTATS_COLLECTIBLE(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- _PLAYSTATS_COPY_RANK_INTO_NEW_SLOT
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- _PLAYSTATS_COPY_RANK_INTO_NEW_SLOT(p0, p1, p2, p3, p4, p5, p6)

--- _PLAYSTATS_DAR_MISSION_END
-- ```
NativeDB Introduced: v1290
```
-- @param data Any*
-- _PLAYSTATS_DAR_MISSION_END(data)

--- _PLAYSTATS_DEFEND_CONTRABAND
-- @param data Any*
-- _PLAYSTATS_DEFEND_CONTRABAND(data)

--- _PLAYSTATS_DIRECTOR_MODE
-- @param p0 Any*
-- _PLAYSTATS_DIRECTOR_MODE(p0)

--- _PLAYSTATS_DRONE_USAGE
-- ```
NativeDB Introduced: v1493
```
-- @param p0 int
-- @param p1 int
-- @param p2 int
-- _PLAYSTATS_DRONE_USAGE(p0, p1, p2)

--- _PLAYSTATS_DUPE_DETECTION
-- @param data Any*
-- _PLAYSTATS_DUPE_DETECTION(data)

--- _PLAYSTATS_EARNED_MC_POINTS
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- _PLAYSTATS_EARNED_MC_POINTS(p0, p1, p2, p3, p4, p5)

--- _PLAYSTATS_ENTER_SESSION_PACK
-- ```
NativeDB Introduced: v1290
```
-- @param data Any*
-- _PLAYSTATS_ENTER_SESSION_PACK(data)

--- _PLAYSTATS_EXTRA_EVENT
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _PLAYSTATS_EXTRA_EVENT(p0)

--- _PLAYSTATS_GUNRUN_MISSION_ENDED
-- @param data Any*
-- _PLAYSTATS_GUNRUN_MISSION_ENDED(data)

--- _PLAYSTATS_H2_FMPREP_END
-- ```
NativeDB Introduced: v1290
```
-- @param data Any*
-- _PLAYSTATS_H2_FMPREP_END(data)

--- _PLAYSTATS_H2_INSTANCE_END
-- ```
NativeDB Introduced: v1290
```
-- @param data Any*
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _PLAYSTATS_H2_INSTANCE_END(data, p1, p2, p3)

--- _PLAYSTATS_INVENTORY
-- ```
NativeDB Introduced: v2699
```
-- @param p0 Any
-- _PLAYSTATS_INVENTORY(p0)

--- _PLAYSTATS_PASSIVE_MODE
-- ```
NativeDB Introduced: v1734
```
-- @param p0 BOOL
-- @param p1 int
-- @param p2 int
-- @param p3 int
-- _PLAYSTATS_PASSIVE_MODE(p0, p1, p2, p3)

--- _PLAYSTATS_PEGASAIRCRAFT
-- ```
NativeDB Introduced: v1180
```
-- @param modelHash Hash
-- _PLAYSTATS_PEGASAIRCRAFT(modelHash)

--- _PLAYSTATS_PI_MENU_HIDE_SETTINGS
-- @param data Any*
-- _PLAYSTATS_PI_MENU_HIDE_SETTINGS(data)

--- _PLAYSTATS_RECOVER_CONTRABAND
-- @param data Any*
-- _PLAYSTATS_RECOVER_CONTRABAND(data)

--- _PLAYSTATS_ROBBERY_FINALE
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _PLAYSTATS_ROBBERY_FINALE(p0)

--- _PLAYSTATS_ROBBERY_PREP
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- _PLAYSTATS_ROBBERY_PREP(p0)

--- _PLAYSTATS_SELL_CONTRABAND
-- @param data Any*
-- _PLAYSTATS_SELL_CONTRABAND(data)

--- _PLAYSTATS_SMUG_MISSION_ENDED
-- ```
NativeDB Introduced: v1180
```
-- @param data Any*
-- _PLAYSTATS_SMUG_MISSION_ENDED(data)

--- _PLAYSTATS_SPECTATOR_WHEEL_SPIN
-- ```
NativeDB Introduced: v1604
```
-- @param p0 int
-- @param p1 int
-- @param p2 int
-- @param p3 int
-- _PLAYSTATS_SPECTATOR_WHEEL_SPIN(p0, p1, p2, p3)

--- _PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT
-- @param amount int
-- _PLAYSTATS_SPENT_PI_CUSTOM_LOADOUT(amount)

--- _PLAYSTATS_START_OFFLINE_MODE
-- ```
PLAYSTATS_START_INVITE_DESPAWNING?
```
-- _PLAYSTATS_START_OFFLINE_MODE()

--- _PLAYSTATS_STONE_HATCHET_END
-- ```
NativeDB Introduced: v1493
```
-- @param data Any*
-- _PLAYSTATS_STONE_HATCHET_END(data)

--- _SET_HAS_CONTENT_UNLOCKS_FLAGS
-- ```
Sets profile setting 866
SET_*
```
-- @param value int
-- _SET_HAS_CONTENT_UNLOCKS_FLAGS(value)

--- _SET_SAVE_MIGRATION_TRANSACTION_ID
-- ```
Sets profile setting 501
```
-- @param transactionId int
-- _SET_SAVE_MIGRATION_TRANSACTION_ID(transactionId)

--- _STAT_GET_CANCEL_SAVE_MIGRATION_STATUS
-- _STAT_GET_CANCEL_SAVE_MIGRATION_STATUS()

--- _STAT_GET_PACKED_BOOL_MASK
-- ```
Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?  
```
-- @param p0 int
-- _STAT_GET_PACKED_BOOL_MASK(p0)

--- _STAT_GET_PACKED_INT_MASK
-- ```
Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?  
```
-- @param p0 int
-- _STAT_GET_PACKED_INT_MASK(p0)

--- _STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS
-- @param p0 int*
-- _STAT_GET_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK_STATUS(p0)

--- _STAT_MIGRATE_SAVE
-- ```
platformName must be one of the following: ps3, xbox360, ps4, xboxone
```
-- @param platformName char*
-- _STAT_MIGRATE_SAVE(platformName)

--- _STAT_SAVE_MIGRATION_CANCEL
-- _STAT_SAVE_MIGRATION_CANCEL()

--- _STAT_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK
-- @param contentId Hash
-- @param srcPlatform char*
-- @param srcGamerHandle char*
-- _STAT_SAVE_MIGRATION_CONSUME_CONTENT_UNLOCK(contentId, srcPlatform, srcGamerHandle)


-- ========== STREAMING ==========

--- 0x03F1A106BDA7DD3E
-- 0x03F1A106BDA7DD3E()

--- 0x0811381EF5062FEC
-- @param p0 Entity
-- 0x0811381EF5062FEC(p0)

--- 0x1E9057A74FD73E23
-- 0x1E9057A74FD73E23()

--- 0x20C6C7E4EB082A7F
-- @param p0 BOOL
-- 0x20C6C7E4EB082A7F(p0)

--- 0x472397322E92A856
-- 0x472397322E92A856()

--- 0x4E52E752C76E7E7A
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 Any
-- 0x4E52E752C76E7E7A(p0)

--- 0x5068F488DDB54DD8
-- 0x5068F488DDB54DD8()

--- 0x63EB2B972A218CAC
-- 0x63EB2B972A218CAC()

--- 0x71E7B2E657449AAD
-- 0x71E7B2E657449AAD()

--- 0x933BBEEB8C61B5F4
-- ```
Probably IS_SWITCH_*
```
-- 0x933BBEEB8C61B5F4()

--- 0x95A7DABDDBB78AE7
-- @param iplName1 char*
-- @param iplName2 char*
-- 0x95A7DABDDBB78AE7(iplName1, iplName2)

--- 0xBEB2D9A1D9A8F55A
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- 0xBEB2D9A1D9A8F55A(p0, p1, p2, p3)

--- 0xBED8CA5FF5E04113
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- 0xBED8CA5FF5E04113(p0, p1, p2, p3)

--- 0xEF39EE20C537E98C
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- 0xEF39EE20C537E98C(p0, p1, p2, p3, p4, p5)

--- 0xF4A0DADB70F57FA6
-- 0xF4A0DADB70F57FA6()

--- 0xF8155A7F03DDFC8E
-- @param p0 Any
-- 0xF8155A7F03DDFC8E(p0)

--- 0xFB199266061F820A
-- 0xFB199266061F820A()

--- ADD_MODEL_TO_CREATOR_BUDGET
-- @param modelHash Hash
-- ADD_MODEL_TO_CREATOR_BUDGET(modelHash)

--- ALLOW_PLAYER_SWITCH_ASCENT
-- ALLOW_PLAYER_SWITCH_ASCENT()

--- ALLOW_PLAYER_SWITCH_DESCENT
-- ALLOW_PLAYER_SWITCH_DESCENT()

--- ALLOW_PLAYER_SWITCH_OUTRO
-- ALLOW_PLAYER_SWITCH_OUTRO()

--- ALLOW_PLAYER_SWITCH_PAN
-- ALLOW_PLAYER_SWITCH_PAN()

--- BEGIN_SRL
-- BEGIN_SRL()

--- CLEAR_FOCUS
-- CLEAR_FOCUS()

--- CLEAR_HD_AREA
-- CLEAR_HD_AREA()

--- DISABLE_SWITCH_OUTRO_FX
-- DISABLE_SWITCH_OUTRO_FX()

--- DOES_ANIM_DICT_EXIST
-- @param animDict char*
-- DOES_ANIM_DICT_EXIST(animDict)

--- ENABLE_SWITCH_PAUSE_BEFORE_DESCENT
-- ENABLE_SWITCH_PAUSE_BEFORE_DESCENT()

--- END_SRL
-- Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
-- END_SRL()

--- GET_IDEAL_PLAYER_SWITCH_TYPE
-- ```
x1, y1, z1 -- Coords of your ped model  
x2, y2, z2 -- Coords of the ped you want to switch to  
```
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- GET_IDEAL_PLAYER_SWITCH_TYPE(x1, y1, z1, x2, y2, z2)

--- GET_LODSCALE
-- GET_LODSCALE()

--- GET_NUMBER_OF_STREAMING_REQUESTS
-- GET_NUMBER_OF_STREAMING_REQUESTS()

--- GET_PLAYER_SHORT_SWITCH_STATE
-- GET_PLAYER_SHORT_SWITCH_STATE()

--- GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME
-- GET_PLAYER_SWITCH_INTERP_OUT_CURRENT_TIME()

--- GET_PLAYER_SWITCH_INTERP_OUT_DURATION
-- GET_PLAYER_SWITCH_INTERP_OUT_DURATION()

--- GET_PLAYER_SWITCH_JUMP_CUT_INDEX
-- GET_PLAYER_SWITCH_JUMP_CUT_INDEX()

--- GET_PLAYER_SWITCH_STATE
-- GET_PLAYER_SWITCH_STATE()

--- GET_PLAYER_SWITCH_TYPE
-- GET_PLAYER_SWITCH_TYPE()

--- HAS_ANIM_DICT_LOADED
-- @param animDict char*
-- HAS_ANIM_DICT_LOADED(animDict)

--- HAS_ANIM_SET_LOADED
-- Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.

Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
-- @param animSet char*
-- HAS_ANIM_SET_LOADED(animSet)

--- HAS_CLIP_SET_LOADED
-- ```
Alias for HAS_ANIM_SET_LOADED.  
```
-- @param clipSet char*
-- HAS_CLIP_SET_LOADED(clipSet)

--- HAS_COLLISION_FOR_MODEL_LOADED
-- @param model Hash
-- HAS_COLLISION_FOR_MODEL_LOADED(model)

--- HAS_MODEL_LOADED
-- Returns whether the specified model (archetype) is currently loaded.

Note that this will return 'true' even if the model has been requested and loaded by something other than the current script, if you're intending to actually use the model in a later frame, you should call REQUEST_MODEL anyway.
-- @param model Hash - The model hash to check for.
-- HAS_MODEL_LOADED(model)

--- HAS_NAMED_PTFX_ASSET_LOADED
-- @param fxName char*
-- HAS_NAMED_PTFX_ASSET_LOADED(fxName)

--- HAS_PTFX_ASSET_LOADED
-- HAS_PTFX_ASSET_LOADED()

--- INIT_CREATOR_BUDGET
-- INIT_CREATOR_BUDGET()

--- IS_ENTITY_FOCUS
-- @param entity Entity
-- IS_ENTITY_FOCUS(entity)

--- IS_IPL_ACTIVE
-- @param iplName char*
-- IS_IPL_ACTIVE(iplName)

--- IS_MODEL_A_VEHICLE
-- ```
Returns whether the specified model represents a vehicle.  
```
-- @param model Hash
-- IS_MODEL_A_VEHICLE(model)

--- IS_MODEL_IN_CDIMAGE
-- ```
Check if model is in cdimage(rpf)  
```
-- @param model Hash
-- IS_MODEL_IN_CDIMAGE(model)

--- IS_MODEL_VALID
-- ```
Returns whether the specified model exists in the game.  
```
-- @param model Hash
-- IS_MODEL_VALID(model)

--- IS_NETWORK_LOADING_SCENE
-- IS_NETWORK_LOADING_SCENE()

--- IS_NEW_LOAD_SCENE_ACTIVE
-- IS_NEW_LOAD_SCENE_ACTIVE()

--- IS_NEW_LOAD_SCENE_LOADED
-- IS_NEW_LOAD_SCENE_LOADED()

--- IS_PLAYER_SWITCH_IN_PROGRESS
-- ```
Returns true if the player is currently switching, false otherwise.  
(When the camera is in the sky moving from Trevor to Franklin for example)  
```
-- IS_PLAYER_SWITCH_IN_PROGRESS()

--- IS_SRL_LOADED
-- Returns true when the srl from BEGIN_SRL is loaded.
-- IS_SRL_LOADED()

--- IS_STREAMVOL_ACTIVE
-- IS_STREAMVOL_ACTIVE()

--- IS_SWITCH_READY_FOR_DESCENT
-- IS_SWITCH_READY_FOR_DESCENT()

--- IS_SWITCH_SKIPPING_DESCENT
-- IS_SWITCH_SKIPPING_DESCENT()

--- LOAD_ALL_OBJECTS_NOW
-- LOAD_ALL_OBJECTS_NOW()

--- LOAD_SCENE
-- @param x float
-- @param y float
-- @param z float
-- LOAD_SCENE(x, y, z)

--- NETWORK_STOP_LOAD_SCENE
-- NETWORK_STOP_LOAD_SCENE()

--- NETWORK_UPDATE_LOAD_SCENE
-- NETWORK_UPDATE_LOAD_SCENE()

--- NEW_LOAD_SCENE_START
-- ```
`radius` value is usually between `3f` and `7000f` in original 1868 scripts.
`p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
Returns True if success, used only 7 times in decompiled scripts of 1868
```
-- @param posX float - World `x` coordinate.
-- @param posY float - World `y` coordinate.
-- @param posZ float - World `z` coordinate.
-- @param offsetX float - Offset `x` coordinate.
-- @param offsetY float - Offset `y` coordinate.
-- @param offsetZ float - Offset `z` coordinate.
-- @param radius float - Action radius, value is usually between `3f` and `7000f` in original 1868 scripts.
-- @param p7 int - 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
-- NEW_LOAD_SCENE_START(posX, posY, posZ, offsetX, offsetY, offsetZ, radius, p7)

--- NEW_LOAD_SCENE_START_SPHERE
-- ```
if (!sub_8f12("START LOAD SCENE SAFE")) {
    if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {
        STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);
        sub_8e9e("START LOAD SCENE SAFE", 1);
    }
}
(Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p4 Any
-- NEW_LOAD_SCENE_START_SPHERE(x, y, z, radius, p4)

--- NEW_LOAD_SCENE_STOP
-- NEW_LOAD_SCENE_STOP()

--- OVERRIDE_LODSCALE_THIS_FRAME
-- ```
This allows you to override "extended distance scaling" setting. Needs to be called each frame.
Max scaling seems to be 200.0, normal is 1.0
See https://gfycat.com/DetailedHauntingIncatern
```
-- @param scaling float
-- OVERRIDE_LODSCALE_THIS_FRAME(scaling)

--- PREFETCH_SRL
-- This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
For instance, GTA:O opening cutscene.

https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker.
-- @param srl char* - A SRL name.
-- PREFETCH_SRL(srl)

--- REMOVE_ANIM_DICT
-- @param animDict char*
-- REMOVE_ANIM_DICT(animDict)

--- REMOVE_ANIM_SET
-- Unloads the specified animation set. An animation set provides movement animations for a ped.

Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
-- @param animSet char*
-- REMOVE_ANIM_SET(animSet)

--- REMOVE_CLIP_SET
-- ```
Alias for REMOVE_ANIM_SET.  
```
-- @param clipSet char*
-- REMOVE_CLIP_SET(clipSet)

--- REMOVE_IPL
-- IPL list can be found [here](https://gist.github.com/4mmonium/4c8a076b5f712a7cc64666003009a2e7).
-- @param iplName char*
-- REMOVE_IPL(iplName)

--- REMOVE_MODEL_FROM_CREATOR_BUDGET
-- @param modelHash Hash
-- REMOVE_MODEL_FROM_CREATOR_BUDGET(modelHash)

--- REMOVE_NAMED_PTFX_ASSET
-- @param fxName char*
-- REMOVE_NAMED_PTFX_ASSET(fxName)

--- REMOVE_PTFX_ASSET
-- REMOVE_PTFX_ASSET()

--- REQUEST_ADDITIONAL_COLLISION_AT_COORD
-- @param x float
-- @param y float
-- @param z float
-- REQUEST_ADDITIONAL_COLLISION_AT_COORD(x, y, z)

--- REQUEST_ANIM_DICT
-- @param animDict char*
-- REQUEST_ANIM_DICT(animDict)

--- REQUEST_ANIM_SET
-- Starts loading the specified animation set. An animation set provides movement animations for a ped. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
-- @param animSet char*
-- REQUEST_ANIM_SET(animSet)

--- REQUEST_CLIP_SET
-- @param clipSet char*
-- REQUEST_CLIP_SET(clipSet)

--- REQUEST_COLLISION_AT_COORD
-- @param x float
-- @param y float
-- @param z float
-- REQUEST_COLLISION_AT_COORD(x, y, z)

--- REQUEST_COLLISION_FOR_MODEL
-- @param model Hash
-- REQUEST_COLLISION_FOR_MODEL(model)

--- REQUEST_IPL
-- ```
Exemple: REQUEST_IPL("TrevorsTrailerTrash");
```
-- @param iplName char*
-- REQUEST_IPL(iplName)

--- REQUEST_MENU_PED_MODEL
-- @param model Hash
-- REQUEST_MENU_PED_MODEL(model)

--- REQUEST_MODEL
-- Request a model (archetype) to be loaded for use by the current script. Use SET_MODEL_AS_NO_LONGER_NEEDED when done using the model in script.
-- @param model Hash - The model to request.
-- REQUEST_MODEL(model)

--- REQUEST_MODELS_IN_ROOM
-- ```
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");
STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");
```
-- @param interior int
-- @param roomName char*
-- REQUEST_MODELS_IN_ROOM(interior, roomName)

--- REQUEST_NAMED_PTFX_ASSET
-- ```
 From the b678d decompiled scripts:
 STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");
 STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");
```
-- @param fxName char*
-- REQUEST_NAMED_PTFX_ASSET(fxName)

--- REQUEST_PTFX_ASSET
-- ```
maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
```
-- REQUEST_PTFX_ASSET()

--- SET_DITCH_POLICE_MODELS
-- ```
This is a NOP function. It does nothing at all.  
```
-- @param toggle BOOL
-- SET_DITCH_POLICE_MODELS(toggle)

--- SET_FOCUS_ENTITY
-- ```
It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.  
```
-- @param entity Entity
-- SET_FOCUS_ENTITY(entity)

--- SET_FOCUS_POS_AND_VEL
-- ```
Override the area where the camera will render the terrain.
p3, p4 and p5 are usually set to 0.0
```
-- @param x float
-- @param y float
-- @param z float
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- SET_FOCUS_POS_AND_VEL(x, y, z, offsetX, offsetY, offsetZ)

--- SET_GAME_PAUSES_FOR_STREAMING
-- @param toggle BOOL
-- SET_GAME_PAUSES_FOR_STREAMING(toggle)

--- SET_HD_AREA
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- SET_HD_AREA(x, y, z, radius)

--- SET_INTERIOR_ACTIVE
-- @param interiorID int
-- @param toggle BOOL
-- SET_INTERIOR_ACTIVE(interiorID, toggle)

--- SET_ISLAND_ENABLED
-- Enables the specified island. For more information, see islandhopper.meta

```
NativeDB Introduced: v2189
```
-- @param islandName char* - The name of the island to be enabled or disabled.
-- @param toggle BOOL - A boolean value where `true` enables the island and `false` disables it.
-- SET_ISLAND_ENABLED(islandName, toggle)

--- SET_MAPDATACULLBOX_ENABLED
-- ```
Possible p0 values:  
"prologue"  
"Prologue_Main"  
```
-- @param name char*
-- @param toggle BOOL
-- SET_MAPDATACULLBOX_ENABLED(name, toggle)

--- SET_MODEL_AS_NO_LONGER_NEEDED
-- Releases the script ownership assigned by REQUEST_MODEL. This command should be used when done using a specific model hash in script.
-- @param model Hash - The model to release ownership of.
-- SET_MODEL_AS_NO_LONGER_NEEDED(model)

--- SET_PED_POPULATION_BUDGET
-- Sets the memory budget level for ped population.
-- @param budgetLevel int - Ranges from `0` to `3`, where `0` is lowest (no peds) and `3` is the full budget level.
-- SET_PED_POPULATION_BUDGET(budgetLevel)

--- SET_PLAYER_SHORT_SWITCH_STYLE
-- @param style int - Always 0
-- SET_PLAYER_SHORT_SWITCH_STYLE(style)

--- SET_PLAYER_SWITCH_ESTABLISHING_SHOT
-- ```
All names can be found in playerswitchestablishingshots.meta
```
-- @param name char*
-- SET_PLAYER_SWITCH_ESTABLISHING_SHOT(name)

--- SET_PLAYER_SWITCH_OUTRO
-- @param cameraCoordX float
-- @param cameraCoordY float
-- @param cameraCoordZ float
-- @param camRotationX float
-- @param camRotationY float
-- @param camRotationZ float
-- @param camFov float
-- @param camFarClip float
-- @param rotationOrder int
-- SET_PLAYER_SWITCH_OUTRO(cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder)

--- SET_REDUCE_PED_MODEL_BUDGET
-- @param toggle BOOL
-- SET_REDUCE_PED_MODEL_BUDGET(toggle)

--- SET_REDUCE_VEHICLE_MODEL_BUDGET
-- @param toggle BOOL
-- SET_REDUCE_VEHICLE_MODEL_BUDGET(toggle)

--- SET_RENDER_HD_ONLY
-- @param toggle BOOL
-- SET_RENDER_HD_ONLY(toggle)

--- SET_SRL_TIME
-- @param p0 float
-- SET_SRL_TIME(p0)

--- SET_STREAMING
-- @param toggle BOOL
-- SET_STREAMING(toggle)

--- SET_VEHICLE_POPULATION_BUDGET
-- @param p0 int
-- SET_VEHICLE_POPULATION_BUDGET(p0)

--- SHUTDOWN_CREATOR_BUDGET
-- SHUTDOWN_CREATOR_BUDGET()

--- START_PLAYER_SWITCH
-- ```cpp
enum ePlayerSwitchType  
{  
	SWITCH_TYPE_AUTO = 0,
	SWITCH_TYPE_LONG = 1,
	SWITCH_TYPE_MEDIUM = 2,
	SWITCH_TYPE_SHORT = 3
};  
```

```cpp
enum eSwitchFlags {
	SKIP_INTRO = 1,
	SKIP_OUTRO = 2,
	PAUSE_BEFORE_PAN = 4,
	PAUSE_BEFORE_OUTRO = 8,
	SKIP_PAN = 16,
	UNKNOWN_DEST = 32,
	DESCENT_ONLY = 64,
	START_FROM_CAMPOS = 128,
	PAUSE_BEFORE_ASCENT = 256,
	PAUSE_BEFORE_DESCENT = 512,
	ALLOW_SNIPER_AIM_INTRO = 1024,
	ALLOW_SNIPER_AIM_OUTRO = 2048,
	SKIP_TOP_DESCENT = 4096,
	SUPPRESS_OUTRO_FX = 8192,
	SUPPRESS_INTRO_FX = 16384,
	DELAY_ASCENT_FX = 32768
}
```
-- @param from Ped
-- @param to Ped
-- @param flags int - Refer to `eSwitchFlags`
-- @param switchType int - Refer to `ePlayerSwitchType`
-- START_PLAYER_SWITCH(from, to, flags, switchType)

--- STOP_PLAYER_SWITCH
-- STOP_PLAYER_SWITCH()

--- STREAMVOL_CREATE_FRUSTUM
-- ```
Always returns zero.
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 Any
-- @param p8 Any
-- STREAMVOL_CREATE_FRUSTUM(p0, p1, p2, p3, p4, p5, p6, p7, p8)

--- STREAMVOL_CREATE_LINE
-- ```
Always returns zero.
```
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 Any
-- STREAMVOL_CREATE_LINE(p0, p1, p2, p3, p4, p5, p6)

--- STREAMVOL_CREATE_SPHERE
-- ```
Always returns zero.
```
-- @param x float
-- @param y float
-- @param z float
-- @param rad float
-- @param p4 Any
-- @param p5 Any
-- STREAMVOL_CREATE_SPHERE(x, y, z, rad, p4, p5)

--- STREAMVOL_DELETE
-- @param unused Any
-- STREAMVOL_DELETE(unused)

--- STREAMVOL_HAS_LOADED
-- @param unused Any
-- STREAMVOL_HAS_LOADED(unused)

--- STREAMVOL_IS_VALID
-- @param unused Any
-- STREAMVOL_IS_VALID(unused)

--- SWITCH_TO_MULTI_FIRSTPART
-- You can check if the player is in a Switch state with [`IS_PLAYER_SWITCH_IN_PROGRESS`](#\_0xD9D2CFFF49FAB35F).

***Note:** Doesn't act normally when used on Mount Chiliad.*
-- @param ped Ped - The Ped (player character) for which the switch is initiated.
-- @param flags int - Flags control various functionalities: 0 for normal behavior, 1 for no transition, and 255 for Switch IN.
-- @param switchType int - Specifies the type of switch (0 - 3): 0 for 1 step towards ped, 1 for 3 steps out from ped, 2 for 1 step out from ped, and 3 for 1 step towards ped.
-- SWITCH_TO_MULTI_FIRSTPART(ped, flags, switchType)

--- SWITCH_TO_MULTI_SECONDPART
-- After using [`SWITCH_TO_MULTI_FIRSTPART`](#\_0xAAB3200ED59016BC) , use this native to smoothly return the camera to the player's character.
-- @param ped Ped
-- SWITCH_TO_MULTI_SECONDPART(ped)

--- _GET_GLOBAL_WATER_TYPE
-- ```
NativeDB Introduced: v2189
```
-- _GET_GLOBAL_WATER_TYPE()

--- _GET_USED_CREATOR_MODEL_MEMORY_PERCENTAGE
-- ```
0.0 = no memory used
1.0 = all memory used

Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB

GET_*
```
-- _GET_USED_CREATOR_MODEL_MEMORY_PERCENTAGE()

--- _IS_MODEL_A_PED
-- @param model Hash
-- _IS_MODEL_A_PED(model)

--- _LOAD_GLOBAL_WATER_TYPE
-- 0 - default
1 - HeistIsland

```
NativeDB Introduced: v2189
```
-- @param waterType int
-- _LOAD_GLOBAL_WATER_TYPE(waterType)


-- ========== SYSTEM ==========

--- CEIL
-- ```
I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down  
```
-- @param value float
-- CEIL(value)

--- COS
-- Returns the cosine of the given number.
-- @param value float - The number of degrees (in degrees, not radians)
-- COS(value)

--- FLOOR
-- @param value float
-- FLOOR(value)

--- POW
-- @param base float
-- @param exponent float
-- POW(base, exponent)

--- ROUND
-- @param value float
-- ROUND(value)

--- SETTIMERA
-- Sets the value for the timer A in milliseconds
-- @param value int - In milliseconds.
-- SETTIMERA(value)

--- SETTIMERB
-- Sets the value for the timer B in milliseconds
-- @param value int - In milliseconds.
-- SETTIMERB(value)

--- SHIFT_LEFT
-- Left bit shifts a value.
It is advised you use the `<<` operator instead of this native. It does the same and is faster.
-- @param value int
-- @param bitShift int
-- SHIFT_LEFT(value, bitShift)

--- SHIFT_RIGHT
-- Right bit shifts a value.
It is advised you use the `>>` operator instead of this native. It does the same and is faster.
-- @param value int
-- @param bitShift int
-- SHIFT_RIGHT(value, bitShift)

--- SIN
-- Returns the sine of the given number.
-- @param value float - The number of degrees (in degrees, not radians)
-- SIN(value)

--- SQRT
-- @param value float
-- SQRT(value)

--- START_NEW_SCRIPT
-- ```
Examples:
 g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);
 l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);
 SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);
 SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 SYSTEM::START_NEW_SCRIPT("emergencycall", 512);
 SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);
 SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);
 SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);
 SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);
Decompiled examples of usage when starting a script:

    SCRIPT::REQUEST_SCRIPT(a_0);
    if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {
        SYSTEM::START_NEW_SCRIPT(a_0, v_3);
        SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);
        return 1;
    }

or:
    v_2 = "MrsPhilips2";
    SCRIPT::REQUEST_SCRIPT(v_2);
    while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {
    SCRIPT::REQUEST_SCRIPT(v_2);
    SYSTEM::WAIT(0);
    }
    sub_8792(36);
    SYSTEM::START_NEW_SCRIPT(v_2, 17000);
    SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);
All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
```
-- @param scriptName char*
-- @param stackSize int
-- START_NEW_SCRIPT(scriptName, stackSize)

--- START_NEW_SCRIPT_WITH_ARGS
-- ```
return : script thread id, 0 if failed  
Pass pointer to struct of args in p1, size of struct goes into p2  
```
-- @param scriptName char*
-- @param args Any*
-- @param argCount int
-- @param stackSize int
-- START_NEW_SCRIPT_WITH_ARGS(scriptName, args, argCount, stackSize)

--- START_NEW_SCRIPT_WITH_NAME_HASH
-- @param scriptHash Hash
-- @param stackSize int
-- START_NEW_SCRIPT_WITH_NAME_HASH(scriptHash, stackSize)

--- START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS
-- @param scriptHash Hash
-- @param args Any*
-- @param argCount int
-- @param stackSize int
-- START_NEW_SCRIPT_WITH_NAME_HASH_AND_ARGS(scriptHash, args, argCount, stackSize)

--- TIMERA
-- ```
Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).  
```
-- TIMERA()

--- TIMERB
-- TIMERB()

--- TIMESTEP
-- ```
Gets the current frame time.  
```
-- TIMESTEP()

--- TO_FLOAT
-- @param value int
-- TO_FLOAT(value)

--- VDIST
-- Calculates the distance between two points in 3D space. For performance reasons, consider using direct mathematical calculations for distance, as they can be more efficient than calling this native function.

```
NativeDB Introduced: v323
```
-- @param x1 float - X coordinate of the first point.
-- @param y1 float - Y coordinate of the first point.
-- @param z1 float - Z coordinate of the first point. Represents the height or elevation at the first point.
-- @param x2 float - X coordinate of the second point.
-- @param y2 float - Y coordinate of the second point.
-- @param z2 float - Z coordinate of the second point. Represents the height or elevation at the second point.
-- VDIST(x1, y1, z1, x2, y2, z2)

--- VDIST2
-- Calculates distance between vectors but does not perform Sqrt operations. Its way faster than [`VDIST`](#\_0x2A488C176D52CCA5), but it's not faster than direct mathematical calculations.

```
NativeDB Introduced: v323
```
-- @param x1 float - X coordinate of the first point.
-- @param y1 float - Y coordinate of the first point.
-- @param z1 float - Z coordinate of the first point. Represents the height or elevation at the first point.
-- @param x2 float - X coordinate of the second point.
-- @param y2 float - Y coordinate of the second point.
-- @param z2 float - Z coordinate of the second point. Represents the height or elevation at the second point.
-- VDIST2(x1, y1, z1, x2, y2, z2)

--- VMAG
-- ```
Calculates the magnitude of a vector.  
```
-- @param x float
-- @param y float
-- @param z float
-- VMAG(x, y, z)

--- VMAG2
-- ```
Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)  
```
-- @param x float
-- @param y float
-- @param z float
-- VMAG2(x, y, z)

--- WAIT
-- ```
Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
```
-- @param ms int
-- WAIT(ms)

--- _LOG10
-- ```
NativeDB Introduced: v1604
```
-- @param value float
-- _LOG10(value)

--- _SET_THREAD_PRIORITY
-- ```
0 = high
1 = normal
2 = low
```
-- @param priority int
-- _SET_THREAD_PRIORITY(priority)


-- ========== TASK ==========

--- 0x0FFB3C758E8C07B9
-- Doesn't actually return anything.

```
NativeDB Introduced: v2060
```
-- @param ped Ped
-- @param p1 BOOL
-- 0x0FFB3C758E8C07B9(ped, p1)

--- 0x1F351CF1C6475734
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- 0x1F351CF1C6475734(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)

--- 0x29682E2CCF21E9B5
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- @param p10 Any
-- @param p11 Any
-- @param p12 Any
-- @param p13 Any
-- 0x29682E2CCF21E9B5(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)

--- 0x3E38E28A1D80DDF6
-- ```
IS_*
```
-- @param ped Ped
-- 0x3E38E28A1D80DDF6(ped)

--- 0x53DDC75BC3AC0A90
-- Related to [`_CLEAR_VEHICLE_TASKS`](#\_0xDBBC7A2432524127) and requires more research (e.g., \_CLEAR_VEHICLE_SECONDARY_TASKS).

```
CLEAR_*

NativeDB Introduced: v1290
```
-- @param vehicle Vehicle - The vehicle to have tasks cleared
-- 0x53DDC75BC3AC0A90(vehicle)

--- 0x6100B3CEFD43452E
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- 0x6100B3CEFD43452E(p0)

--- 0x8423541E8B3A1589
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x8423541E8B3A1589(p0, p1, p2)

--- 0x8634CEF2522D987B
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param p1 char*
-- @param value float
-- 0x8634CEF2522D987B(ped, p1, value)

--- 0x9D252648778160DF
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- 0x9D252648778160DF(p0)

--- 0xAB13A5565480B6D9
-- ```
Used only once in the scripts (fm_mission_controller) like so:

TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");

SET_*
```
-- @param ped Ped
-- @param p1 char*
-- 0xAB13A5565480B6D9(ped, p1)

--- 0xFA83CA6776038F64
-- ```
REMOVE_*

NativeDB Introduced: v1493
```
-- @param x float
-- @param y float
-- @param z float
-- 0xFA83CA6776038F64(x, y, z)

--- ADD_COVER_BLOCKING_AREA
-- @param playerX float
-- @param playerY float
-- @param playerZ float
-- @param radiusX float
-- @param radiusY float
-- @param radiusZ float
-- @param p6 BOOL
-- @param p7 BOOL
-- @param p8 BOOL
-- @param p9 BOOL
-- ADD_COVER_BLOCKING_AREA(playerX, playerY, playerZ, radiusX, radiusY, radiusZ, p6, p7, p8, p9)

--- ADD_COVER_POINT
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 BOOL
-- ADD_COVER_POINT(p0, p1, p2, p3, p4, p5, p6, p7)

--- ADD_PATROL_ROUTE_LINK
-- connects/links 2 [route nodes](#\_0x8EDF950167586B7C)\
image representing the cyclic example below:\
![image](https://user-images.githubusercontent.com/55803068/188470866-c32c6a9f-a25d-4772-9b18-5be46e2c14a1.png)
-- @param id1 int - the id representing the first route node
-- @param id2 int - the id representing the second route node
-- ADD_PATROL_ROUTE_LINK(id1, id2)

--- ADD_PATROL_ROUTE_NODE
-- x2,y2 and z2 are the coordinates to which the ped should look at
-- @param id int - is an integer that "identifies" the route node for linking to the route with ADD_PATROL_ROUTE_LINK.
-- @param guardScenario char* - can be "WORLD_HUMAN_GUARD_STAND" or "StandGuard"
-- @param x1 float - destination
-- @param y1 float - destination
-- @param z1 float - destination
-- @param x2 float - coordinates to which the ped should look
-- @param y2 float - coordinates to which the ped should look
-- @param z2 float - coordinates to which the ped should look
-- @param waitTime int - written in ms
-- ADD_PATROL_ROUTE_NODE(id, guardScenario, x1, y1, z1, x2, y2, z2, waitTime)

--- ADD_VEHICLE_SUBTASK_ATTACK_COORD
-- ```
x, y, z: offset in world coords from some entity.  
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- ADD_VEHICLE_SUBTASK_ATTACK_COORD(ped, x, y, z)

--- ADD_VEHICLE_SUBTASK_ATTACK_PED
-- @param ped Ped
-- @param ped2 Ped
-- ADD_VEHICLE_SUBTASK_ATTACK_PED(ped, ped2)

--- ASSISTED_MOVEMENT_IS_ROUTE_LOADED
-- @param route char*
-- ASSISTED_MOVEMENT_IS_ROUTE_LOADED(route)

--- ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME
-- @param dist float
-- ASSISTED_MOVEMENT_OVERRIDE_LOAD_DISTANCE_THIS_FRAME(dist)

--- ASSISTED_MOVEMENT_REMOVE_ROUTE
-- @param route char*
-- ASSISTED_MOVEMENT_REMOVE_ROUTE(route)

--- ASSISTED_MOVEMENT_REQUEST_ROUTE
-- ```
Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"  
```
-- @param route char*
-- ASSISTED_MOVEMENT_REQUEST_ROUTE(route)

--- ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES
-- @param route char*
-- @param props int
-- ASSISTED_MOVEMENT_SET_ROUTE_PROPERTIES(route, props)

--- CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
-- @param ped Ped
-- CLEAR_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(ped)

--- CLEAR_PED_SECONDARY_TASK
-- @param ped Ped
-- CLEAR_PED_SECONDARY_TASK(ped)

--- CLEAR_PED_TASKS
-- Clear a ped's tasks. Stop animations and other tasks created by scripts.
-- @param ped Ped - Ped id. Use PlayerPedId() for your own character.
-- CLEAR_PED_TASKS(ped)

--- CLEAR_PED_TASKS_IMMEDIATELY
-- Immediately stops the pedestrian from whatever it's doing. The difference between this and [CLEAR_PED_TASKS](#\_0xE1EF3C1216AFF2CD) is that this one teleports the ped but does not change the position of the ped.
-- @param ped Ped - Ped id.
-- CLEAR_PED_TASKS_IMMEDIATELY(ped)

--- CLEAR_SEQUENCE_TASK
-- For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#\_0xE8854A4326B9E12B)

#### NOTE

If you fail to call [`CLOSE_SEQUENCE_TASK`](#\_0x39E72BC99E6360CB) and `CLEAR_SEQUENCE_TASK` the sequence system can get stuck in a broken state until you restart your client.
-- @param taskSequenceId int* - The task sequence to clear
-- CLEAR_SEQUENCE_TASK(taskSequenceId)

--- CLOSE_PATROL_ROUTE
-- CLOSE_PATROL_ROUTE()

--- CLOSE_SEQUENCE_TASK
-- For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#\_0xE8854A4326B9E12B)

#### NOTE

If you fail to call `CLOSE_SEQUENCE_TASK` and [`CLEAR_SEQUENCE_TASK`](#\_0x3841422E9C488D8C) this can get stuck in a broken state until you restart your client.
-- @param taskSequenceId int - The task sequence to close
-- CLOSE_SEQUENCE_TASK(taskSequenceId)

--- CONTROL_MOUNTED_WEAPON
-- ```
Forces the ped to use the mounted weapon.  
Returns false if task is not possible.  
```
-- @param ped Ped
-- CONTROL_MOUNTED_WEAPON(ped)

--- CREATE_PATROL_ROUTE
-- CREATE_PATROL_ROUTE()

--- DELETE_PATROL_ROUTE
-- ```
From the b617d scripts:
TASK::DELETE_PATROL_ROUTE("miss_merc0");
TASK::DELETE_PATROL_ROUTE("miss_merc1");
TASK::DELETE_PATROL_ROUTE("miss_merc2");
TASK::DELETE_PATROL_ROUTE("miss_dock");
```
-- @param patrolRoute char*
-- DELETE_PATROL_ROUTE(patrolRoute)

--- DOES_SCENARIO_EXIST_IN_AREA
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param b BOOL
-- DOES_SCENARIO_EXIST_IN_AREA(x, y, z, radius, b)

--- DOES_SCENARIO_GROUP_EXIST
-- ```
Occurrences in the b617d scripts:
"ARMY_GUARD",
"ARMY_HELI",
"Cinema_Downtown",
"Cinema_Morningwood",
"Cinema_Textile",
"City_Banks",
"Countryside_Banks",
"DEALERSHIP",
"GRAPESEED_PLANES",
"KORTZ_SECURITY",
"LOST_BIKERS",
"LSA_Planes",
"LSA_Planes",
"MP_POLICE",
"Observatory_Bikers",
"POLICE_POUND1",
"POLICE_POUND2",
"POLICE_POUND3",
"POLICE_POUND4",
"POLICE_POUND5"
"QUARRY",
"SANDY_PLANES",
"SCRAP_SECURITY",
"SEW_MACHINE",
"SOLOMON_GATE",
"Triathlon_1_Start",
"Triathlon_2_Start",
"Triathlon_3_Start"
Sometimes used with IS_SCENARIO_GROUP_ENABLED:
if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
```
-- @param scenarioGroup char*
-- DOES_SCENARIO_GROUP_EXIST(scenarioGroup)

--- DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 char*
-- @param p4 float
-- @param p5 BOOL
-- DOES_SCENARIO_OF_TYPE_EXIST_IN_AREA(p0, p1, p2, p3, p4, p5)

--- DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS
-- ```
Checks if there is a cover point at position  
```
-- @param x float
-- @param y float
-- @param z float
-- DOES_SCRIPTED_COVER_POINT_EXIST_AT_COORDS(x, y, z)

--- GET_ACTIVE_VEHICLE_MISSION_TYPE
-- ```
https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
```
-- @param vehicle Vehicle
-- GET_ACTIVE_VEHICLE_MISSION_TYPE(vehicle)

--- GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK
-- @param p0 int
-- GET_CLIP_SET_FOR_SCRIPTED_GUN_TASK(p0)

--- GET_IS_TASK_ACTIVE
-- ```
Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
```
-- @param ped Ped
-- @param taskIndex int
-- GET_IS_TASK_ACTIVE(ped, taskIndex)

--- GET_IS_WAYPOINT_RECORDING_LOADED
-- @param name char*
-- GET_IS_WAYPOINT_RECORDING_LOADED(name)

--- GET_NAVMESH_ROUTE_DISTANCE_REMAINING
-- ```
Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
Looks like the native returns an int for the path's state:
1 - ???
2 - ???
3 - Finished Generating
```
-- @param ped Ped
-- @param distanceRemaining float*
-- @param isPathReady BOOL*
-- GET_NAVMESH_ROUTE_DISTANCE_REMAINING(ped, distanceRemaining, isPathReady)

--- GET_NAVMESH_ROUTE_RESULT
-- See [`GET_NAVMESH_ROUTE_DISTANCE_REMAINING`](#\_0xC6F5C0BCDC74D62D) for more details.
-- @param ped Ped
-- GET_NAVMESH_ROUTE_RESULT(ped)

--- GET_PED_DESIRED_MOVE_BLEND_RATIO
-- @param ped Ped
-- GET_PED_DESIRED_MOVE_BLEND_RATIO(ped)

--- GET_PED_WAYPOINT_DISTANCE
-- @param p0 Any
-- GET_PED_WAYPOINT_DISTANCE(p0)

--- GET_PED_WAYPOINT_PROGRESS
-- @param ped Ped
-- GET_PED_WAYPOINT_PROGRESS(ped)

--- GET_PHONE_GESTURE_ANIM_CURRENT_TIME
-- @param ped Ped
-- GET_PHONE_GESTURE_ANIM_CURRENT_TIME(ped)

--- GET_PHONE_GESTURE_ANIM_TOTAL_TIME
-- @param ped Ped
-- GET_PHONE_GESTURE_ANIM_TOTAL_TIME(ped)

--- GET_SCRIPTED_COVER_POINT_COORDS
-- @param coverpoint ScrHandle
-- GET_SCRIPTED_COVER_POINT_COORDS(coverpoint)

--- GET_SCRIPT_TASK_STATUS
-- Gets the status of a spesifed script-assigned task on the given ped. The return value is always an int between 0-7.

You can set taskHash to `SCRIPT_TASK_ANY` to check if any task is active, it will return 1 for active, 3 for no active.
`SCRIPT_TASK_INVALID` can be similarly used, it returns 7 if there are any active task, and 3 if there are no active tasks.

taskHash list: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt

Returns:

```
0 = WAITING_TO_START_TASK
1 = PERFORMING_TASK
2 = DORMANT_TASK
3 = VACANT_STAGE
7 = TASK_FINISHED_OR_NOT_FOUND
```
-- @param ped Ped - The ped the task is running on
-- @param taskHash Hash - The hash of the task
-- GET_SCRIPT_TASK_STATUS(ped, taskHash)

--- GET_SEQUENCE_PROGRESS
-- ```
returned values:
0 to 7 = task that's currently in progress, 0 meaning the first one.
-1 no task sequence in progress.
```
-- @param ped Ped
-- GET_SEQUENCE_PROGRESS(ped)

--- GET_TASK_MOVE_NETWORK_EVENT
-- @param ped Ped
-- @param eventName char*
-- GET_TASK_MOVE_NETWORK_EVENT(ped, eventName)

--- GET_TASK_MOVE_NETWORK_SIGNAL_BOOL
-- @param ped Ped
-- @param signalName char*
-- GET_TASK_MOVE_NETWORK_SIGNAL_BOOL(ped, signalName)

--- GET_TASK_MOVE_NETWORK_STATE
-- @param ped Ped
-- GET_TASK_MOVE_NETWORK_STATE(ped)

--- GET_VEHICLE_WAYPOINT_PROGRESS
-- @param vehicle Vehicle
-- GET_VEHICLE_WAYPOINT_PROGRESS(vehicle)

--- GET_VEHICLE_WAYPOINT_TARGET_POINT
-- @param vehicle Vehicle
-- GET_VEHICLE_WAYPOINT_TARGET_POINT(vehicle)

--- GET_WAYPOINT_DISTANCE_ALONG_ROUTE
-- @param p0 char*
-- @param p1 int
-- GET_WAYPOINT_DISTANCE_ALONG_ROUTE(p0, p1)

--- IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK
-- @param ped Ped
-- IS_DRIVEBY_TASK_UNDERNEATH_DRIVING_TASK(ped)

--- IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK
-- @param ped Ped
-- IS_MOUNTED_WEAPON_TASK_UNDERNEATH_DRIVING_TASK(ped)

--- IS_MOVE_BLEND_RATIO_RUNNING
-- @param ped Ped
-- IS_MOVE_BLEND_RATIO_RUNNING(ped)

--- IS_MOVE_BLEND_RATIO_SPRINTING
-- @param ped Ped
-- IS_MOVE_BLEND_RATIO_SPRINTING(ped)

--- IS_MOVE_BLEND_RATIO_STILL
-- @param ped Ped
-- IS_MOVE_BLEND_RATIO_STILL(ped)

--- IS_MOVE_BLEND_RATIO_WALKING
-- @param ped Ped
-- IS_MOVE_BLEND_RATIO_WALKING(ped)

--- IS_PED_ACTIVE_IN_SCENARIO
-- This is a stricter version of [`IS_PED_USING_ANY_SCENARIO`](#\_0x57AB4A3080F85143). It only returns true if the ped is playing the ambient animations associated with the scenario.
-- @param ped Ped - The ped handle.
-- IS_PED_ACTIVE_IN_SCENARIO(ped)

--- IS_PED_BEING_ARRESTED
-- ```
This function is hard-coded to always return 0.  
```
-- @param ped Ped
-- IS_PED_BEING_ARRESTED(ped)

--- IS_PED_CUFFED
-- @param ped Ped
-- IS_PED_CUFFED(ped)

--- IS_PED_GETTING_UP
-- @param ped Ped
-- IS_PED_GETTING_UP(ped)

--- IS_PED_IN_WRITHE
-- This native checks if a ped is on the ground, in pain from a (gunshot) wound.
-- @param ped Ped
-- IS_PED_IN_WRITHE(ped)

--- IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO
-- @param ped Ped
-- IS_PED_PLAYING_BASE_CLIP_IN_SCENARIO(ped)

--- IS_PED_RUNNING
-- @param ped Ped
-- IS_PED_RUNNING(ped)

--- IS_PED_RUNNING_ARREST_TASK
-- @param ped Ped
-- IS_PED_RUNNING_ARREST_TASK(ped)

--- IS_PED_SPRINTING
-- @param ped Ped
-- IS_PED_SPRINTING(ped)

--- IS_PED_STILL
-- @param ped Ped
-- IS_PED_STILL(ped)

--- IS_PED_STRAFING
-- ```
What's strafing?  
```
-- @param ped Ped
-- IS_PED_STRAFING(ped)

--- IS_PED_WALKING
-- @param ped Ped
-- IS_PED_WALKING(ped)

--- IS_PLAYING_PHONE_GESTURE_ANIM
-- @param ped Ped
-- IS_PLAYING_PHONE_GESTURE_ANIM(ped)

--- IS_SCENARIO_GROUP_ENABLED
-- ```
 Occurrences in the b617d scripts:
 "ARMY_GUARD",
 "ARMY_HELI",
 "BLIMP",
 "Cinema_Downtown",
 "Cinema_Morningwood",
 "Cinema_Textile",
 "City_Banks",
 "Countryside_Banks",
 "DEALERSHIP",
 "KORTZ_SECURITY",
 "LSA_Planes",
 "MP_POLICE",
 "Observatory_Bikers",
 "POLICE_POUND1",
 "POLICE_POUND2",
 "POLICE_POUND3",
 "POLICE_POUND4",
 "POLICE_POUND5",
 "Rampage1",
 "SANDY_PLANES",
 "SCRAP_SECURITY",
 "SEW_MACHINE",
 "SOLOMON_GATE"
Sometimes used with DOES_SCENARIO_GROUP_EXIST:
if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {
else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {
```
-- @param scenarioGroup char*
-- IS_SCENARIO_GROUP_ENABLED(scenarioGroup)

--- IS_SCENARIO_OCCUPIED
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 BOOL
-- IS_SCENARIO_OCCUPIED(p0, p1, p2, p3, p4)

--- IS_SCENARIO_TYPE_ENABLED
-- ```
Occurrences in the b617d scripts:
"PROP_HUMAN_SEAT_CHAIR",
"WORLD_HUMAN_DRINKING",
"WORLD_HUMAN_HANG_OUT_STREET",
"WORLD_HUMAN_SMOKING",
"WORLD_MOUNTAIN_LION_WANDER",
"WORLD_HUMAN_DRINKING"
Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.
scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
```
-- @param scenarioType char*
-- IS_SCENARIO_TYPE_ENABLED(scenarioType)

--- IS_TASK_MOVE_NETWORK_ACTIVE
-- @param ped Ped
-- IS_TASK_MOVE_NETWORK_ACTIVE(ped)

--- IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION
-- @param ped Ped
-- IS_TASK_MOVE_NETWORK_READY_FOR_TRANSITION(ped)

--- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED
-- @param p0 Any
-- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(p0)

--- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE
-- @param vehicle Vehicle
-- IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(vehicle)

--- OPEN_PATROL_ROUTE
-- ```
The patrol route name must starts with "miss_" to be properly created. 

 patrolRoutes found in the b617d scripts:
 "miss_Ass0",
 "miss_Ass1",
 "miss_Ass2",
 "miss_Ass3",
 "miss_Ass4",
 "miss_Ass5",
 "miss_Ass6",
 "MISS_PATROL_6",
 "MISS_PATROL_7",
 "MISS_PATROL_8",
 "MISS_PATROL_9",
 "miss_Tower_01",
 "miss_Tower_02",
 "miss_Tower_03",
 "miss_Tower_04",
 "miss_Tower_05",
 "miss_Tower_06",
 "miss_Tower_07",
 "miss_Tower_08",
 "miss_Tower_10"
```
-- @param patrolRoute char*
-- OPEN_PATROL_ROUTE(patrolRoute)

--- OPEN_SEQUENCE_TASK
-- ### NOTE

If this returns 0 that means it failed to get a sequence id.

If you fail to call [`CLOSE_SEQUENCE_TASK`](#\_0x39E72BC99E6360CB) and [`CLEAR_SEQUENCE_TASK`](#\_0x3841422E9C488D8C) the sequence system can get stuck in a broken state until you restart your client.
-- @param taskSequenceId int* - The reference to bind to, in Lua/JS this will be returned as a value
-- OPEN_SEQUENCE_TASK(taskSequenceId)

--- PED_HAS_USE_SCENARIO_TASK
-- @param ped Ped
-- PED_HAS_USE_SCENARIO_TASK(ped)

--- PLAY_ANIM_ON_RUNNING_SCENARIO
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped Ped
-- @param animDict char*
-- @param animName char*
-- PLAY_ANIM_ON_RUNNING_SCENARIO(ped, animDict, animName)

--- PLAY_ENTITY_SCRIPTED_ANIM
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- @param p4 float
-- @param p5 float
-- PLAY_ENTITY_SCRIPTED_ANIM(p0, p1, p2, p3, p4, p5)

--- REMOVE_ALL_COVER_BLOCKING_AREAS
-- REMOVE_ALL_COVER_BLOCKING_AREAS()

--- REMOVE_COVER_POINT
-- @param coverpoint ScrHandle
-- REMOVE_COVER_POINT(coverpoint)

--- REMOVE_WAYPOINT_RECORDING
-- @param name char*
-- REMOVE_WAYPOINT_RECORDING(name)

--- REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION
-- @param ped Ped - A ped handle.
-- @param name char* - The name of the target request state in the move network file.
-- REQUEST_TASK_MOVE_NETWORK_STATE_TRANSITION(ped, name)

--- REQUEST_WAYPOINT_RECORDING
-- ```
For a full list of the points, see here: goo.gl/wIH0vn
Max number of loaded recordings is 32.
```
-- @param name char*
-- REQUEST_WAYPOINT_RECORDING(name)

--- RESET_EXCLUSIVE_SCENARIO_GROUP
-- RESET_EXCLUSIVE_SCENARIO_GROUP()

--- RESET_SCENARIO_GROUPS_ENABLED
-- RESET_SCENARIO_GROUPS_ENABLED()

--- RESET_SCENARIO_TYPES_ENABLED
-- RESET_SCENARIO_TYPES_ENABLED()

--- SET_ANIM_LOOPED
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 Any
-- @param p3 BOOL
-- SET_ANIM_LOOPED(p0, p1, p2, p3)

--- SET_ANIM_PHASE
-- ```
NativeDB Introduced: v2372
```
-- @param entity Entity
-- @param p1 float
-- @param p2 Any
-- @param p3 BOOL
-- SET_ANIM_PHASE(entity, p1, p2, p3)

--- SET_ANIM_RATE
-- @param p0 Any
-- @param p1 float
-- @param p2 Any
-- @param p3 BOOL
-- SET_ANIM_RATE(p0, p1, p2, p3)

--- SET_ANIM_WEIGHT
-- @param p0 Any
-- @param p1 float
-- @param p2 Any
-- @param p3 Any
-- @param p4 BOOL
-- SET_ANIM_WEIGHT(p0, p1, p2, p3, p4)

--- SET_DRIVEBY_TASK_TARGET
-- ```
For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.  
```
-- @param shootingPed Ped
-- @param targetPed Ped
-- @param targetVehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- SET_DRIVEBY_TASK_TARGET(shootingPed, targetPed, targetVehicle, x, y, z)

--- SET_DRIVE_TASK_CRUISE_SPEED
-- @param driver Ped
-- @param cruiseSpeed float
-- SET_DRIVE_TASK_CRUISE_SPEED(driver, cruiseSpeed)

--- SET_DRIVE_TASK_DRIVING_STYLE
-- Sets the driving style for a ped currently performing a driving task.

Each flag in the `eVehicleDrivingFlags` enum can be combined to create a driving style, with each enabling or disabling a specific driving behavior. The driving style can be set to one of the predefined driving styles, or a custom driving style can be created by combining the flags. This can be done by using the bitwise OR operator (`|`) to combine the flags or by adding the decimal values of the flags together.

```cpp
enum eVehicleDrivingFlags
{
  None = 0,
  StopForVehicles = 1,
  StopForPeds = 2,
  SwerveAroundAllVehicles = 4,
  SteerAroundStationaryVehicles = 8,
  SteerAroundPeds = 16,
  SteerAroundObjects = 32,
  DontSteerAroundPlayerPed = 64,
  StopAtTrafficLights = 128,
  GoOffRoadWhenAvoiding = 256,
  AllowGoingWrongWay = 512,
  Reverse = 1024,
  UseWanderFallbackInsteadOfStraightLine = 2048,
  AvoidRestrictedAreas = 4096,
  PreventBackgroundPathfinding = 8192,
  AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
  UseShortCutLinks = 262144,
  ChangeLanesAroundObstructions = 524288,
  UseSwitchedOffNodes = 2097152,
  PreferNavmeshRoute = 4194304,
  PlaneTaxiMode = 8388608,
  ForceStraightLine = 16777216,
  UseStringPullingAtJunctions = 33554432,
  TryToAvoidHighways = 536870912,
  ForceJoinInRoadDirection = 1073741824,
  StopAtDestination = 2147483648,
  // StopForVehicles | StopForPeds | SteerAroundObjects | SteerAroundStationaryVehicles | StopAtTrafficLights | UseShortCutLinks | ChangeLanesAroundObstructions
  DrivingModeStopForVehicles = 786603,
  // StopForVehicles | StopForPeds | StopAtTrafficLights | UseShortCutLinks
  DrivingModeStopForVehiclesStrict = 262275,
  // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
  DrivingModeAvoidVehicles = 786469,
  // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions
  DrivingModeAvoidVehiclesReckless = 786468,
  // StopForVehicles | SteerAroundStationaryVehicles | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions
  DrivingModeStopForVehiclesIgnoreLights = 786475,
  // SwerveAroundAllVehicles | StopAtTrafficLights | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
  DrivingModeAvoidVehiclesObeyLights = 786597,
  // SwerveAroundAllVehicles | StopAtTrafficLights | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
  DrivingModeAvoidVehiclesStopForPedsObeyLights = 786599,
}
```
-- @param ped Ped - The ped to have their driving style set.
-- @param drivingStyle int - The driving style (see `eVehicleDrivingFlags`).
-- SET_DRIVE_TASK_DRIVING_STYLE(ped, drivingStyle)

--- SET_DRIVE_TASK_MAX_CRUISE_SPEED
-- @param p0 Any
-- @param p1 float
-- SET_DRIVE_TASK_MAX_CRUISE_SPEED(p0, p1)

--- SET_EXCLUSIVE_SCENARIO_GROUP
-- ```
Groups found in the scripts used with this native:  
"AMMUNATION",  
"QUARRY",  
"Triathlon_1",  
"Triathlon_2",  
"Triathlon_3"  
```
-- @param scenarioGroup char*
-- SET_EXCLUSIVE_SCENARIO_GROUP(scenarioGroup)

--- SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT
-- ```
Birds will try to reach the given height.  
```
-- @param height float
-- SET_GLOBAL_MIN_BIRD_FLIGHT_HEIGHT(height)

--- SET_HIGH_FALL_TASK
-- @param ped Ped
-- @param duration Any
-- @param p2 Any
-- @param p3 Any
-- SET_HIGH_FALL_TASK(ped, duration, p2, p3)

--- SET_MOUNTED_WEAPON_TARGET
-- ```
Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.  
```

```
NativeDB Added Parameter 7: Any p6
NativeDB Added Parameter 8: Any p7
```
-- @param shootingPed Ped
-- @param targetPed Ped
-- @param targetVehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- SET_MOUNTED_WEAPON_TARGET(shootingPed, targetPed, targetVehicle, x, y, z)

--- SET_NEXT_DESIRED_MOVE_STATE
-- **This native does absolutely nothing, just a nullsub**
-- @param p0 float
-- SET_NEXT_DESIRED_MOVE_STATE(p0)

--- SET_PARACHUTE_TASK_TARGET
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- SET_PARACHUTE_TASK_TARGET(ped, x, y, z)

--- SET_PARACHUTE_TASK_THRUST
-- @param ped Ped
-- @param thrust float
-- SET_PARACHUTE_TASK_THRUST(ped, thrust)

--- SET_PED_CAN_PLAY_AMBIENT_IDLES
-- Prevents a ped from playing ambient idle animations.

**Note:** This native must be called every frame.
-- @param ped Ped - Ped index.
-- @param bBlockIdleClips BOOL - If true, prevents a ped from playing an idle animation this frame.
-- @param bRemoveIdleClipIfPlaying BOOL - If true and the ped is playing an idle animation, the clip is stopped.
-- SET_PED_CAN_PLAY_AMBIENT_IDLES(ped, bBlockIdleClips, bRemoveIdleClipIfPlaying)

--- SET_PED_DESIRED_MOVE_BLEND_RATIO
-- @param ped Ped
-- @param p1 float
-- SET_PED_DESIRED_MOVE_BLEND_RATIO(ped, p1)

--- SET_PED_PATH_AVOID_FIRE
-- @param ped Ped
-- @param avoidFire BOOL
-- SET_PED_PATH_AVOID_FIRE(ped, avoidFire)

--- SET_PED_PATH_CAN_DROP_FROM_HEIGHT
-- @param ped Ped
-- @param Toggle BOOL
-- SET_PED_PATH_CAN_DROP_FROM_HEIGHT(ped, Toggle)

--- SET_PED_PATH_CAN_USE_CLIMBOVERS
-- @param ped Ped
-- @param Toggle BOOL
-- SET_PED_PATH_CAN_USE_CLIMBOVERS(ped, Toggle)

--- SET_PED_PATH_CAN_USE_LADDERS
-- @param ped Ped
-- @param Toggle BOOL
-- SET_PED_PATH_CAN_USE_LADDERS(ped, Toggle)

--- SET_PED_PATH_CLIMB_COST_MODIFIER
-- ```
Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
```
-- @param ped Ped
-- @param modifier float
-- SET_PED_PATH_CLIMB_COST_MODIFIER(ped, modifier)

--- SET_PED_PATH_MAY_ENTER_WATER
-- @param ped Ped
-- @param mayEnterWater BOOL
-- SET_PED_PATH_MAY_ENTER_WATER(ped, mayEnterWater)

--- SET_PED_PATH_PREFER_TO_AVOID_WATER
-- @param ped Ped
-- @param avoidWater BOOL
-- SET_PED_PATH_PREFER_TO_AVOID_WATER(ped, avoidWater)

--- SET_PED_WAYPOINT_ROUTE_OFFSET
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- SET_PED_WAYPOINT_ROUTE_OFFSET(p0, p1, p2, p3)

--- SET_SCENARIO_GROUP_ENABLED
-- ```
Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU  
```
-- @param scenarioGroup char*
-- @param p1 BOOL
-- SET_SCENARIO_GROUP_ENABLED(scenarioGroup, p1)

--- SET_SCENARIO_TYPE_ENABLED
-- ```
seems to enable/disable specific scenario-types from happening in the game world.
Here are some scenario types from the scripts:
"WORLD_MOUNTAIN_LION_REST"
"WORLD_MOUNTAIN_LION_WANDER"
"DRIVE"
"WORLD_VEHICLE_POLICE_BIKE"
"WORLD_VEHICLE_POLICE_CAR"
"WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
"WORLD_VEHICLE_DRIVE_SOLO"
"WORLD_VEHICLE_BIKER"
"WORLD_VEHICLE_DRIVE_PASSENGERS"
"WORLD_VEHICLE_SALTON_DIRT_BIKE"
"WORLD_VEHICLE_BICYCLE_MOUNTAIN"
"PROP_HUMAN_SEAT_CHAIR"
"WORLD_VEHICLE_ATTRACTOR"
"WORLD_HUMAN_LEANING"
"WORLD_HUMAN_HANG_OUT_STREET"
"WORLD_HUMAN_DRINKING"
"WORLD_HUMAN_SMOKING"
"WORLD_HUMAN_GUARD_STAND"
"WORLD_HUMAN_CLIPBOARD"
"WORLD_HUMAN_HIKER"
"WORLD_VEHICLE_EMPTY"
"WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
"WORLD_HUMAN_PAPARAZZI"
"WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
"WORLD_VEHICLE_PARK_PARALLEL"
"WORLD_VEHICLE_CONSTRUCTION_SOLO"
"WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
"WORLD_VEHICLE_TRUCK_LOGS"
scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.
```
-- @param scenarioType char*
-- @param toggle BOOL
-- SET_SCENARIO_TYPE_ENABLED(scenarioType, toggle)

--- SET_SEQUENCE_TO_REPEAT
-- @param taskSequenceId int
-- @param repeat BOOL
-- SET_SEQUENCE_TO_REPEAT(taskSequenceId, repeat)

--- SET_TASK_MOVE_NETWORK_SIGNAL_BOOL
-- @param ped Ped - The ped that's performing the task.
-- @param signalName char* - The property name.
-- @param value BOOL - The property value to set.
-- SET_TASK_MOVE_NETWORK_SIGNAL_BOOL(ped, signalName, value)

--- SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT
-- ```
p0 - PLAYER::PLAYER_PED_ID();
p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
p2 - From what i can see it goes up to 1f (maybe).
-LcGamingHD
Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);
```
-- @param ped Ped - The ped on which the task is playing.
-- @param signalName char* - The property name.
-- @param value float - The property value to set.
-- SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(ped, signalName, value)

--- SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG
-- ```
* Flag 1: Aggressive ramming of suspect
* Flag 2: Ram attempts
* Flag 8: Medium-aggressive boxing tactic with a bit of PIT
* Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
* Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
```
-- @param ped Ped
-- @param flag int
-- @param set BOOL
-- SET_TASK_VEHICLE_CHASE_BEHAVIOR_FLAG(ped, flag, set)

--- SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE
-- @param ped Ped
-- @param distance float
-- SET_TASK_VEHICLE_CHASE_IDEAL_PURSUIT_DISTANCE(ped, distance)

--- STOP_ANIM_PLAYBACK
-- ```
Looks like p1 may be a flag, still need to do some research, though.
```
-- @param ped Ped
-- @param p1 int
-- @param p2 BOOL
-- STOP_ANIM_PLAYBACK(ped, p1, p2)

--- STOP_ANIM_TASK
-- [Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped Ped
-- @param animDictionary char*
-- @param animationName char*
-- @param animExitSpeed float - Greater than `0.0`, higher is faster. Setting to `0.0` or using an integer, will cause animation lockout - requiring the animation to be played again or the player be killed.
-- STOP_ANIM_TASK(ped, animDictionary, animationName, animExitSpeed)

--- TASK_ACHIEVE_HEADING
-- ```
Makes the specified ped achieve the specified heading.  
pedHandle: The handle of the ped to assign the task to.  
heading: The desired heading.  
timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.  
```
-- @param ped Ped
-- @param heading float
-- @param timeout int
-- TASK_ACHIEVE_HEADING(ped, heading, timeout)

--- TASK_AIM_GUN_AT_COORD
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param time int
-- @param bInstantBlendToAim BOOL
-- @param bPlayAimIntro BOOL
-- TASK_AIM_GUN_AT_COORD(ped, x, y, z, time, bInstantBlendToAim, bPlayAimIntro)

--- TASK_AIM_GUN_AT_ENTITY
-- ```
duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped  
```
-- @param ped Ped
-- @param entity Entity
-- @param duration int
-- @param bInstantBlendToAim BOOL
-- TASK_AIM_GUN_AT_ENTITY(ped, entity, duration, bInstantBlendToAim)

--- TASK_AIM_GUN_SCRIPTED
-- @param ped Ped
-- @param scriptTask Hash
-- @param bDisableBlockingClip BOOL
-- @param bInstantBlendToAim BOOL
-- TASK_AIM_GUN_SCRIPTED(ped, scriptTask, bDisableBlockingClip, bInstantBlendToAim)

--- TASK_AIM_GUN_SCRIPTED_WITH_TARGET
-- @param ped Ped
-- @param targetPed Ped
-- @param x float
-- @param y float
-- @param z float
-- @param iGunTaskType Hash
-- @param bDisableBlockingClip BOOL
-- @param bForceAim BOOL
-- TASK_AIM_GUN_SCRIPTED_WITH_TARGET(ped, targetPed, x, y, z, iGunTaskType, bDisableBlockingClip, bForceAim)

--- TASK_ARREST_PED
-- ```
Example from "me_amanda1.ysc.c4":
TASK::TASK_ARREST_PED(l_19F /* This is a Ped */ , PLAYER::PLAYER_PED_ID());
Example from "armenian1.ysc.c4":
if (!PED::IS_PED_INJURED(l_B18[0/*1*/])) {
    TASK::TASK_ARREST_PED(l_B18[0/*1*/], PLAYER::PLAYER_PED_ID());
}
I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
```
-- @param ped Ped
-- @param target Ped
-- TASK_ARREST_PED(ped, target)

--- TASK_BOAT_MISSION
-- All parameters except ped and boat are optional, with `pedTarget`, `vehicleTarget`, `x`, `y`, `z` being dependent on `missionType` (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either `x`, `y`, `z` or a target ped/vehicle).

If you don't want to use a parameter; pass `0.0f` for `x`, `y` and `z`, `0` for `pedTarget`, `vehicleTarget` and other int parameters, and `-1.0f` for the remaining float parameters.

```cpp
enum eBoatMissionFlags
{
  None = 0,
  StopAtEnd = 1,
  StopAtShore = 2,
  AvoidShore = 4,
  PreferForward = 8,
  NeverStop = 16,
  NeverNavMesh = 32,
  NeverRoute = 64,
  ForceBeached = 128,
  UseWanderRoute = 256,
  UseFleeRoute = 512,
  NeverPause = 1024,
  // StopAtEnd | StopAtShore | AvoidShore
  DefaultSettings = 7,
  // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverRoute
  OpenOceanSettings = 111,
  // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverPause
  BoatTaxiSettings = 1071,
}
```
-- @param ped Ped - The ped to be tasked.
-- @param boat Vehicle - The boats' entity handle.
-- @param vehicleTarget Vehicle - The target vehicle (default is 0).
-- @param pedTarget Ped - The target ped (default is 0).
-- @param x float - The x coordinate of the target (default is 0.0f).
-- @param y float - The y coordinate of the target (default is 0.0f).
-- @param z float - The z coordinate of the target (default is 0.0f).
-- @param missionType int - The mission type (default is 0) (see [TaskVehicleMission](#\_0x659427E0EF36BCDE)).
-- @param speed float - The speed in m/s (default is -1.0f).
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param radius float - The radius of when the task will be completed (default is -1.0f).
-- @param missionFlags int - The mission flags (default is 0) (see `eBoatMissionFlags`).
-- TASK_BOAT_MISSION(ped, boat, vehicleTarget, pedTarget, x, y, z, missionType, speed, drivingStyle, radius, missionFlags)

--- TASK_CHAT_TO_PED
-- ```
p2 tend to be 16, 17 or 1  
p3 to p7 tend to be 0.0  
```
-- @param ped Ped
-- @param target Ped
-- @param p2 Any
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- TASK_CHAT_TO_PED(ped, target, p2, p3, p4, p5, p6, p7)

--- TASK_CLEAR_DEFENSIVE_AREA
-- @param p0 Any
-- TASK_CLEAR_DEFENSIVE_AREA(p0)

--- TASK_CLEAR_LOOK_AT
-- ```
Not clear what it actually does, but here's how script uses it -
if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)
{
 if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))
    {
     TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());
  }
 ...
}
Another one where it doesn't "look" at current player -
TASK::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);
PED::_2208438012482A1A(l_3ED, 0, 0);
TASK::TASK_CLEAR_LOOK_AT(l_3ED);
```
-- @param ped Ped
-- TASK_CLEAR_LOOK_AT(ped)

--- TASK_CLIMB
-- ```
Climbs or vaults the nearest thing.  
```
-- @param ped Ped
-- @param unused BOOL
-- TASK_CLIMB(ped, unused)

--- TASK_CLIMB_LADDER
-- @param ped Ped
-- @param p1 int
-- TASK_CLIMB_LADDER(ped, p1)

--- TASK_COMBAT_HATED_TARGETS_AROUND_PED
-- ```
Despite its name, it only attacks ONE hated target. The one closest hated target.  
p2 seems to be always 0  
```
-- @param ped Ped
-- @param radius float
-- @param p2 int
-- TASK_COMBAT_HATED_TARGETS_AROUND_PED(ped, radius, p2)

--- TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED
-- @param p0 Any
-- @param p1 float
-- @param p2 Any
-- @param p3 Any
-- TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(p0, p1, p2, p3)

--- TASK_COMBAT_HATED_TARGETS_IN_AREA
-- ```
Despite its name, it only attacks ONE hated target. The one closest to the specified position.  
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p5 Any
-- TASK_COMBAT_HATED_TARGETS_IN_AREA(ped, x, y, z, radius, p5)

--- TASK_COMBAT_PED
-- ```
Makes the specified ped attack the target ped.  
p2 should be 0  
p3 should be 16  
```
-- @param ped Ped
-- @param targetPed Ped
-- @param p2 int
-- @param p3 int
-- TASK_COMBAT_PED(ped, targetPed, p2, p3)

--- TASK_COMBAT_PED_TIMED
-- @param p0 Any
-- @param ped Ped
-- @param p2 int
-- @param p3 Any
-- TASK_COMBAT_PED_TIMED(p0, ped, p2, p3)

--- TASK_COWER
-- The ped will act like NPC's involved in a gunfight. The ped will squat down with their heads held in place and look around.
-- @param ped Ped - Ped id.
-- @param duration int - Duration of the animation in ms. Set to -1 if you do not want a duration.
-- TASK_COWER(ped, duration)

--- TASK_DRIVE_BY
-- ```
Example:
TASK::TASK_DRIVE_BY(l_467[1/*22*/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});
Needs working example. Doesn't seem to do anything.
I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
```
-- @param driverPed Ped
-- @param targetPed Ped
-- @param targetVehicle Vehicle
-- @param targetX float
-- @param targetY float
-- @param targetZ float
-- @param distanceToShoot float
-- @param pedAccuracy int
-- @param p8 BOOL
-- @param firingPattern Hash
-- TASK_DRIVE_BY(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, p8, firingPattern)

--- TASK_ENTER_VEHICLE
-- ```
speed 1.0 = walk, 2.0 = run  
p5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle  
p6 is always 0  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param timeout int
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- @param speed float
-- @param flag int
-- @param p6 Any
-- TASK_ENTER_VEHICLE(ped, vehicle, timeout, seatIndex, speed, flag, p6)

--- TASK_EVERYONE_LEAVE_VEHICLE
-- @param vehicle Vehicle
-- TASK_EVERYONE_LEAVE_VEHICLE(vehicle)

--- TASK_EXIT_COVER
-- @param p0 Any
-- @param p1 Any
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- TASK_EXIT_COVER(p0, p1, p2, p3, p4)

--- TASK_EXTEND_ROUTE
-- Adds a new point to the current point route; a maximum of 8 points can be added.

Call [TASK_FLUSH_ROUTE](#\_0x841142A1376E9006) before the first call to this. Call [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E) to make the Ped go the route.
-- @param x float
-- @param y float
-- @param z float
-- TASK_EXTEND_ROUTE(x, y, z)

--- TASK_FLUSH_ROUTE
-- Clears the current point route. Call this before [TASK_EXTEND_ROUTE](#\_0x1E7889778264843A) and [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E).
-- TASK_FLUSH_ROUTE()

--- TASK_FOLLOW_NAV_MESH_TO_COORD
-- Sometimes a path may not be able to be found. This could happen because there simply isn't any way to get there, or maybe a bunch of dynamic objects have blocked the way,
or maybe the destination is too far away. In this case the ped will simply stand still.
To identify when this has happened, you can use GET_NAVMESH_ROUTE_RESULT. This will help you find situations where peds cannot get to their target.

```cpp
enum eNavScriptFlags {
    // Default flag
    ENAV_DEFAULT = 0,
    // Will ensure the ped continues to move whilst waiting for the path
    // to be found, and will not slow down at the end of their route.
    ENAV_NO_STOPPING = 1,
    // Performs a slide-to-coord at the end of the task. This requires that the
    // accompanying NAVDATA structure has the 'SlideToCoordHeading' member set correctly.
    ENAV_ADV_SLIDE_TO_COORD_AND_ACHIEVE_HEADING_AT_END = 2,
    // If the navmesh is not loaded in under the target position, then this will
    // cause the ped to get as close as is possible on whatever navmesh is loaded.
    // The navmesh must still be loaded at the path start.
    ENAV_GO_FAR_AS_POSSIBLE_IF_TARGET_NAVMESH_NOT_LOADED = 4,
    // Will allow navigation underwater - by default this is not allowed.
    ENAV_ALLOW_SWIMMING_UNDERWATER = 8,
    // Will only allow navigation on pavements. If the path starts or ends off
    // the pavement, the command will fail. Likewise if no pavement-only route
    // can be found even although the start and end are on pavement.
    ENAV_KEEP_TO_PAVEMENTS = 16,
    // Prevents the path from entering water at all.
    ENAV_NEVER_ENTER_WATER = 32,
    // Disables object-avoidance for this path. The ped may still make minor
    // steering adjustments to avoid objects, but will not pathfind around them.
    ENAV_DONT_AVOID_OBJECTS = 64,
    // Specifies that the navmesh route will only be able to traverse up slopes
    // which are under the angle specified, in the MaxSlopeNavigable member of the accompanying NAVDATA structure.
    ENAV_ADVANCED_USE_MAX_SLOPE_NAVIGABLE = 128,
    // Unused.
    ENAV_STOP_EXACTLY = 512,
    // The entity will look ahead in its path for a longer distance to make the
    // walk/run start go more in the right direction.
    ENAV_ACCURATE_WALKRUN_START = 1024,
    // Disables ped-avoidance for this path while we move.
    ENAV_DONT_AVOID_PEDS = 2048,
    // If target pos is inside the boundingbox of an object it will otherwise be pushed out.
    ENAV_DONT_ADJUST_TARGET_POSITION = 4096,
    // Turns off the default behaviour, which is to stop exactly at the target position.
    // Occasionally this can cause footsliding/skating problems.
    ENAV_SUPPRESS_EXACT_STOP = 8192,
    // Prevents the path-search from finding paths outside of this search distance.
    // This can be used to prevent peds from finding long undesired routes.
    ENAV_ADVANCED_USE_CLAMP_MAX_SEARCH_DISTANCE = 16384,
    // Pulls out the paths from edges at corners for a longer distance, to prevent peds walking into stuff.
    ENAV_PULL_FROM_EDGE_EXTRA = 32768
};
```
-- @param ped Ped - Ped Index.
-- @param x float - X Position Coordinate.
-- @param y float - Y Position Coordinate.
-- @param z float - Z Position Coordinate
-- @param moveBlendRatio float - Ratio for ped movement (0 to 3.0 in the following order: still, walk, run and sprint)
-- @param time int - INT value in milliseconds.
-- @param radius float - distance from the final coordinates that the pedestrian should be to consider itself at the target.
-- @param flags int - Navigation Flags for the ped (see `eNavScriptFlags`).
-- @param finalHeading float - Peds heading when finished.
-- TASK_FOLLOW_NAV_MESH_TO_COORD(ped, x, y, z, moveBlendRatio, time, radius, flags, finalHeading)

--- TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param speed float
-- @param timeout int
-- @param unkFloat float
-- @param unkInt int
-- @param unkX float
-- @param unkY float
-- @param unkZ float
-- @param unk_40000f float
-- TASK_FOLLOW_NAV_MESH_TO_COORD_ADVANCED(ped, x, y, z, speed, timeout, unkFloat, unkInt, unkX, unkY, unkZ, unk_40000f)

--- TASK_FOLLOW_POINT_ROUTE
-- Makes the ped go on a point route.

```cpp
enum eFollowPointRouteMode {
	TICKET_SINGLE = 0,
	TICKET_RETURN = 1,
	TICKET_SEASON = 2,
	TICKET_LOOP = 3
}
```

This native is often times used with [`TASK_FLUSH_ROUTE`](#\_0x841142A1376E9006) and [`TASK_EXTEND_ROUTE`](#\_0x1E7889778264843A)
-- @param ped Ped - The ped to give the task to.
-- @param speed float - The speed to move at in m/s.
-- @param routeMode int - The route mode to use, refer to `eFollowPointRouteMode`
-- TASK_FOLLOW_POINT_ROUTE(ped, speed, routeMode)

--- TASK_FOLLOW_TO_OFFSET_OF_ENTITY
-- ```
p6 always -1  
p7 always 10.0  
p8 always 1  
```
-- @param ped Ped
-- @param entity Entity
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- @param movementSpeed float
-- @param timeout int
-- @param stoppingRange float
-- @param persistFollowing BOOL
-- TASK_FOLLOW_TO_OFFSET_OF_ENTITY(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing)

--- TASK_FOLLOW_WAYPOINT_RECORDING
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- TASK_FOLLOW_WAYPOINT_RECORDING(p0, p1, p2, p3, p4)

--- TASK_FORCE_MOTION_STATE
-- See [`FORCE_PED_MOTION_STATE`](#\_0xF28965D04F570DCA)
-- @param ped Ped
-- @param state Hash
-- @param p2 BOOL
-- TASK_FORCE_MOTION_STATE(ped, state, p2)

--- TASK_GET_OFF_BOAT
-- @param ped Ped
-- @param boat Vehicle
-- TASK_GET_OFF_BOAT(ped, boat)

--- TASK_GOTO_ENTITY_AIMING
-- ```
eg
 TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);
ped = Ped you want to perform this task.
target = the Entity they should aim at.
distanceToStopAt = distance from the target, where the ped should stop to aim.
StartAimingDist = distance where the ped should start to aim.
```
-- @param ped Ped
-- @param target Entity
-- @param distanceToStopAt float
-- @param StartAimingDist float
-- TASK_GOTO_ENTITY_AIMING(ped, target, distanceToStopAt, StartAimingDist)

--- TASK_GOTO_ENTITY_OFFSET
-- @param ped Ped
-- @param p1 Any
-- @param p2 Any
-- @param x float
-- @param y float
-- @param z float
-- @param duration int
-- TASK_GOTO_ENTITY_OFFSET(ped, p1, p2, x, y, z, duration)

--- TASK_GOTO_ENTITY_OFFSET_XY
-- @param ped Ped
-- @param entity Entity
-- @param duration int
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param moveBlendRatio float
-- @param useNavmesh BOOL
-- TASK_GOTO_ENTITY_OFFSET_XY(ped, entity, duration, xOffset, yOffset, zOffset, moveBlendRatio, useNavmesh)

--- TASK_GO_STRAIGHT_TO_COORD
-- @param ped Ped - The ped handle.
-- @param x float - The x coordinate.
-- @param y float - The y coordinate.
-- @param z float - The z coordinate.
-- @param speed float - The ped movement speed.
-- @param timeout int - \-1 , other values appear to break the ped movement.
-- @param targetHeading float - The heading you want the ped to be on x,y,z coord.
-- @param distanceToSlide float - The distance from x,y,z where the ped will start sliding.
-- TASK_GO_STRAIGHT_TO_COORD(ped, x, y, z, speed, timeout, targetHeading, distanceToSlide)

--- TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY
-- @param entity1 Entity
-- @param entity2 Entity
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 Any
-- TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(entity1, entity2, p2, p3, p4, p5, p6)

--- TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD
-- ```
The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
Example:
enum AimFlag
{
   AimAtFocusLocation,
   AimAtGoToLocation
};
Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
// 1st example
TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f /*run*/, true /*shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtGoToLocation, -957453492 /*FullAuto pattern*/);
// 2nd example
TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f /*walk*/, false /*don't shoot*/, 3.0f /*stop at*/, 0.0f /*noRoadsDistance*/, true /*always true*/, 0 /*possible flag*/, AimFlag::AimAtFocusLocation, -957453492 /*FullAuto pattern*/);
1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
```
-- @param pedHandle Ped
-- @param goToLocationX float
-- @param goToLocationY float
-- @param goToLocationZ float
-- @param focusLocationX float
-- @param focusLocationY float
-- @param focusLocationZ float
-- @param speed float
-- @param shootAtEnemies BOOL
-- @param distanceToStopAt float
-- @param noRoadsDistance float
-- @param unkTrue BOOL
-- @param unkFlag int
-- @param aimingFlag int
-- @param firingPattern Hash
-- TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, unkTrue, unkFlag, aimingFlag, firingPattern)

--- TASK_GO_TO_COORD_ANY_MEANS
-- Tells a ped to go to a coord by any means.

```cpp
enum eDrivingMode {
  DF_StopForCars = 1,
  DF_StopForPeds = 2,
  DF_SwerveAroundAllCars = 4,
  DF_SteerAroundStationaryCars = 8,
  DF_SteerAroundPeds = 16,
  DF_SteerAroundObjects = 32,
  DF_DontSteerAroundPlayerPed = 64,
  DF_StopAtLights = 128,
  DF_GoOffRoadWhenAvoiding = 256,
  DF_DriveIntoOncomingTraffic = 512,
  DF_DriveInReverse = 1024,

  // If pathfinding fails, cruise randomly instead of going on a straight line
  DF_UseWanderFallbackInsteadOfStraightLine = 2048,

  DF_AvoidRestrictedAreas = 4096,

  // These only work on MISSION_CRUISE
  DF_PreventBackgroundPathfinding = 8192,
  DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,

  DF_UseShortCutLinks =  262144,
  DF_ChangeLanesAroundObstructions = 524288,
  // cruise tasks ignore this anyway--only used for goto's
  DF_UseSwitchedOffNodes =  2097152,
  // if you're going to be primarily driving off road
  DF_PreferNavmeshRoute =  4194304,

  // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly
  DF_PlaneTaxiMode =  8388608,

  DF_ForceStraightLine = 16777216,
  DF_UseStringPullingAtJunctions = 33554432,

  DF_AvoidHighways = 536870912,
  DF_ForceJoinInRoadDirection = 1073741824,

  // Standard driving mode. stops for cars, peds, and lights, goes around stationary obstructions
  DRIVINGMODE_STOPFORCARS = 786603, // DF_StopForCars|DF_StopForPeds|DF_SteerAroundObjects|DF_SteerAroundStationaryCars|DF_StopAtLights|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,		// Obey lights too

  // Like the above, but doesn't steer around anything in its way - will only wait instead.
  DRIVINGMODE_STOPFORCARS_STRICT = 262275, // DF_StopForCars|DF_StopForPeds|DF_StopAtLights|DF_UseShortCutLinks, // Doesn't deviate an inch.

  // Default "alerted" driving mode. drives around everything, doesn't obey lights
  DRIVINGMODE_AVOIDCARS = 786469, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars,

  // Very erratic driving. difference between this and AvoidCars is that it doesn't use the brakes at ALL to help with steering
  DRIVINGMODE_AVOIDCARS_RECKLESS = 786468, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,

  // Smashes through everything
  DRIVINGMODE_PLOUGHTHROUGH = 262144, // DF_UseShortCutLinks

  // Drives normally except for the fact that it ignores lights
  DRIVINGMODE_STOPFORCARS_IGNORELIGHTS = 786475, // DF_StopForCars|DF_SteerAroundStationaryCars|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions

  // Try to swerve around everything, but stop for lights if necessary
  DRIVINGMODE_AVOIDCARS_OBEYLIGHTS = 786597, // DF_SwerveAroundAllCars|DF_StopAtLights|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars

  // Swerve around cars, be careful around peds, and stop for lights
  DRIVINGMODE_AVOIDCARS_STOPFORPEDS_OBEYLIGHTS = 786599 // DF_SwerveAroundAllCars|DF_StopAtLights|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
};
```
-- @param ped Ped - The `Ped` Handle.
-- @param x float - The goto target coordinate.
-- @param y float - The goto target coordinate.
-- @param z float - The goto target coordinate.
-- @param fMoveBlendRatio float - 0.0 = still, 1.0 = walk, 2.0 = run, 3.0 = sprint.
-- @param vehicle Vehicle - If defined, the pedestrian will only move if said vehicle exists. If you don't want any sort of association, just set it to `0`.
-- @param bUseLongRangeVehiclePathing BOOL - Setting to `true` tells the vehicle to use longrange vehicle pathing.
-- @param drivingFlags int - See `eDrivingMode` enum.
-- @param fMaxRangeToShootTargets float - Determines the maximum distance at which the `Ped` will engage in combat with threatening targets.
-- TASK_GO_TO_COORD_ANY_MEANS(ped, x, y, z, fMoveBlendRatio, vehicle, bUseLongRangeVehiclePathing, drivingFlags, fMaxRangeToShootTargets)

--- TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS
-- ```
NativeDB Added Parameter 13: Any p12
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param speed float
-- @param p5 Any
-- @param p6 BOOL
-- @param walkingStyle int
-- @param p8 float
-- @param p9 Any
-- @param p10 Any
-- @param p11 Any
-- TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11)

--- TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED
-- ```
NativeDB Added Parameter 14: Any p13
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param speed float
-- @param p5 Any
-- @param p6 BOOL
-- @param walkingStyle int
-- @param p8 float
-- @param p9 Any
-- @param p10 Any
-- @param p11 Any
-- @param p12 Any
-- TASK_GO_TO_COORD_ANY_MEANS_EXTRA_PARAMS_WITH_CRUISE_SPEED(ped, x, y, z, speed, p5, p6, walkingStyle, p8, p9, p10, p11, p12)

--- TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD
-- Will make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates.
-- @param ped Ped - Ped to task
-- @param x float - Destination X position
-- @param y float - Destination Y position
-- @param z float - Destination Z position
-- @param aimAtX float - Aim at target x position
-- @param aimAtY float - Aim at target Y position
-- @param aimAtZ float - Aim at target Z position
-- @param moveSpeed float - mostly 2f, but also 1/1.2f, etc.
-- @param shoot BOOL - If true ped will shoot; false - will not
-- @param p9 float - Usually 2.0f
-- @param p10 float - Usually 0.5f
-- @param p11 BOOL - If true ped will stay still; false - will not
-- @param flags Any - 0 / 512 / 513, etc
-- @param p13 BOOL
-- @param firingPattern Hash - ${firing_pattern_full_auto}, 0xC6EE6B4C
-- TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(ped, x, y, z, aimAtX, aimAtY, aimAtZ, moveSpeed, shoot, p9, p10, p11, flags, p13, firingPattern)

--- TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY
-- Will make the ped move to a coordinate while aiming (and optionally shooting) at the given entity.

```cpp
enum eFiringPatternHashes {
    FIRING_PATTERN_DEFAULT = 0,
    FIRING_PATTERN_BURST_FIRE = -687903391,
    FIRING_PATTERN_BURST_FIRE_DRIVEBY = -753768974,
    FIRING_PATTERN_FULL_AUTO = -957453492,
    FIRING_PATTERN_SINGLE_SHOT = 1566631136,
    FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 2055493265,
    FIRING_PATTERN_BURST_FIRE_HELI = -1857128337,
    FIRING_PATTERN_SHORT_BURSTS = 445831135,
    FIRING_PATTERN_BURST_FIRE_MICRO = 1122960381,
    FIRING_PATTERN_SLOW_FIRE_TANK = -490063247,
    FIRING_PATTERN_TAMPA_MORTAR = -1842093953
}
```
-- @param ped Ped - Ped to task
-- @param x float - Destination X position
-- @param y float - Destination Y position
-- @param z float - Destination Z position
-- @param entityToAimAt Entity - Entity that the ped will aim at.
-- @param moveSpeed float - Mostly 2f, but also 1/1.2f, etc.
-- @param shoot BOOL - If true ped will shoot; false - will not
-- @param targetRadius float - Usually 0.5f
-- @param slowDistance float - Usually 4f
-- @param useNavMesh BOOL
-- @param navFlags int - Usually 0 or 64
-- @param instantBlendAtAim BOOL
-- @param firingPattern Hash - The firing pattern to use, refer to `eFiringPatternHashes`
-- @param time int - Usually 20000 (ms)
-- TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(ped, x, y, z, entityToAimAt, moveSpeed, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendAtAim, firingPattern, time)

--- TASK_GO_TO_ENTITY
-- ```
The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)
Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
```
-- @param entity Entity
-- @param target Entity
-- @param duration int
-- @param distance float
-- @param speed float
-- @param p5 float
-- @param p6 int
-- TASK_GO_TO_ENTITY(entity, target, duration, distance, speed, p5, p6)

--- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD
-- @param p0 Any
-- @param p1 Any
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 BOOL
-- @param p7 float
-- @param p8 float
-- @param p9 BOOL
-- @param p10 BOOL
-- @param p11 Any
-- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)

--- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY
-- ```
shootatEntity:  
If true, peds will shoot at Entity till it is dead.  
If false, peds will just walk till they reach the entity and will cease shooting.  
```
-- @param ped Ped
-- @param entityToWalkTo Entity
-- @param entityToAimAt Entity
-- @param speed float
-- @param shootatEntity BOOL
-- @param p5 float
-- @param p6 float
-- @param p7 BOOL
-- @param p8 BOOL
-- @param firingPattern Hash
-- TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, p5, p6, p7, p8, firingPattern)

--- TASK_GUARD_ASSIGNED_DEFENSIVE_AREA
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 Any
-- TASK_GUARD_ASSIGNED_DEFENSIVE_AREA(p0, p1, p2, p3, p4, p5, p6)

--- TASK_GUARD_CURRENT_POSITION
-- ```
From re_prisonvanbreak:
TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);
```
-- @param p0 Ped
-- @param p1 float
-- @param p2 float
-- @param p3 BOOL
-- TASK_GUARD_CURRENT_POSITION(p0, p1, p2, p3)

--- TASK_GUARD_SPHERE_DEFENSIVE_AREA
-- ```
p0 - Guessing PedID  
p1, p2, p3 - XYZ?  
p4 - ???  
p5 - Maybe the size of sphere from XYZ?  
p6 - ???  
p7, p8, p9 - XYZ again?  
p10 - Maybe the size of sphere from second XYZ?  
```
-- @param p0 Ped
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 Any
-- @param p7 float
-- @param p8 float
-- @param p9 float
-- @param p10 float
-- TASK_GUARD_SPHERE_DEFENSIVE_AREA(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)

--- TASK_HANDS_UP
-- ```
In the scripts, p3 was always -1.  
p3 seems to be duration or timeout of turn animation.  
Also facingPed can be 0 or -1 so ped will just raise hands up.  
```
-- @param ped Ped
-- @param duration int
-- @param facingPed Ped
-- @param p3 int
-- @param p4 BOOL
-- TASK_HANDS_UP(ped, duration, facingPed, p3, p4)

--- TASK_HELI_CHASE
-- ```
Ped pilot should be in a heli.  
EntityToFollow can be a vehicle or Ped.  
x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)  
NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.  
```
-- @param pilot Ped
-- @param entityToFollow Entity
-- @param x float
-- @param y float
-- @param z float
-- TASK_HELI_CHASE(pilot, entityToFollow, x, y, z)

--- TASK_HELI_MISSION
-- All parameters except ped, heli and speed are optional, with `pedTarget`, `vehicleTarget`, `x`, `y`, `z` being dependent on `missionType` (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either `x`, `y`, `z` or a target ped/vehicle).

If you don't want to use a parameter; pass `0.0f` for `x`, `y` and `z`, `0` for `pedTarget`, `vehicleTarget`, `0` for other int parameters, and `-1.0f` for the remaining float parameters.

```cpp
enum eHeliMissionFlags
{
  None = 0,
  AttainRequestedOrientation = 1,
  DontModifyOrientation = 2,
  DontModifyPitch = 4,
  DontModifyThrottle = 8,
  DontModifyRoll = 16,
  LandOnArrival = 32,
  DontDoAvoidance = 64,
  StartEngineImmediately = 128,
  ForceHeightMapAvoidance = 256,
  DontClampProbesToDestination = 512,
  EnableTimeslicingWhenPossible = 1024,
  CircleOppositeDirection = 2048,
  MaintainHeightAboveTerrain = 4096,
  IgnoreHiddenEntitiesDuringLand = 8192,
  DisableAllHeightMapAvoidance = 16384,
  // ForceHeightMapAvoidance | DontDoAvoidance
  HeightMapOnlyAvoidance = 320,
}
```
-- @param ped Ped - The ped to be tasked.
-- @param heli Vehicle - The helicopters' entity handle.
-- @param vehicleTarget Vehicle - The target vehicle (default is 0).
-- @param pedTarget Ped - The target ped (default is 0).
-- @param x float - The x coordinate of the target (default is 0.0f).
-- @param y float - The y coordinate of the target (default is 0.0f).
-- @param z float - The z coordinate of the target (default is 0.0f).
-- @param missionType int - The mission type (default is 0) (see [TaskVehicleMission](#\_0x659427E0EF36BCDE)).
-- @param speed float - The speed in m/s.
-- @param radius float - The radius of when the task will be completed (default is -1.0f).
-- @param heading float - The heading the helicopter will face at task completion (default is -1.0f).
-- @param height float - The height the helicopter will fly at (default is -1.0f).
-- @param minHeight float - The height the helicopter will not fly below (default is -1.0f).
-- @param slowDist float - The distance to the target at which the helicopter will slow down (default is -1.0f).
-- @param missionFlags int - The mission flags (default is 0) (see `eHeliMissionFlags`).
-- TASK_HELI_MISSION(ped, heli, vehicleTarget, pedTarget, x, y, z, missionType, speed, radius, heading, height, minHeight, slowDist, missionFlags)

--- TASK_JUMP
-- ```
Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).  
v350: Ped ped, bool unused  
v678: Ped ped, bool unused, bool flag1, bool flag2  
flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.  
```

```
NativeDB Added Parameter 3: Any p2
NativeDB Added Parameter 4: Any p3
```
-- @param ped Ped
-- @param unused BOOL
-- TASK_JUMP(ped, unused)

--- TASK_LEAVE_ANY_VEHICLE
-- Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#\_0xD3DBCE61A490BE02)
-- @param ped Ped
-- @param p1 int
-- @param flags int
-- TASK_LEAVE_ANY_VEHICLE(ped, p1, flags)

--- TASK_LEAVE_VEHICLE
-- ```
Flags from decompiled scripts:  
0 = normal exit and closes door.  
1 = normal exit and closes door.  
16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)
64 = normal exit and closes door, maybe a bit slower animation than 0.  
256 = normal exit but does not close the door.  
4160 = ped is throwing himself out, even when the vehicle is still.  
262144 = ped moves to passenger seat first, then exits normally  
Others to be tried out: 320, 512, 131072.  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param flags int
-- TASK_LEAVE_VEHICLE(ped, vehicle, flags)

--- TASK_LOOK_AT_COORD
-- @param entity Entity
-- @param x float
-- @param y float
-- @param z float
-- @param duration int
-- @param p5 Any
-- @param p6 Any
-- TASK_LOOK_AT_COORD(entity, x, y, z, duration, p5, p6)

--- TASK_LOOK_AT_ENTITY
-- ```
param3: duration in ms, use -1 to look forever  
param4: using 2048 is fine  
param5: using 3 is fine  
```
-- @param ped Ped
-- @param lookAt Entity
-- @param duration int
-- @param unknown1 int
-- @param unknown2 int
-- TASK_LOOK_AT_ENTITY(ped, lookAt, duration, unknown1, unknown2)

--- TASK_MOVE_NETWORK_ADVANCED_BY_NAME
-- ```
Example:
TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);
```
-- @param ped Ped
-- @param p1 char*
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 Any
-- @param p9 float
-- @param p10 BOOL
-- @param animDict char*
-- @param flags int
-- TASK_MOVE_NETWORK_ADVANCED_BY_NAME(ped, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, animDict, flags)

--- TASK_MOVE_NETWORK_BY_NAME
-- ```
Example:
TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);
```
-- @param ped Ped
-- @param task char*
-- @param multiplier float
-- @param p3 BOOL
-- @param animDict char*
-- @param flags int
-- TASK_MOVE_NETWORK_BY_NAME(ped, task, multiplier, p3, animDict, flags)

--- TASK_OPEN_VEHICLE_DOOR
-- The given ped will try to open the nearest door to 'seat'.

Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
-- @param ped Ped - The ped to do the task
-- @param vehicle Vehicle - The vehicle whose doors the ped shoud open
-- @param timeOut int - Sets a timeout to the task; doesn't work for 0
-- @param seat int - The seat index - the ped will attempt to open doors to get to the specified seat
-- @param speed float
-- TASK_OPEN_VEHICLE_DOOR(ped, vehicle, timeOut, seat, speed)

--- TASK_PARACHUTE
-- ```
This function has a third parameter as well (bool).  
Second parameter is unused.  
seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed  
```

```
NativeDB Added Parameter 3: BOOL p2
```
-- @param ped Ped
-- @param p1 BOOL
-- TASK_PARACHUTE(ped, p1)

--- TASK_PARACHUTE_TO_TARGET
-- ```
makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED  
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- TASK_PARACHUTE_TO_TARGET(ped, x, y, z)

--- TASK_PATROL
-- ```
After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
"miss_Tower_01" (this went from 01 - 10)
"miss_Ass0" (0, 4, 6, 3)
"MISS_PATROL_8"
I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
From the scripts
    TASK::OPEN_PATROL_ROUTE("miss_Ass0");
    TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0/*3*/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
    TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1/*3*/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
    TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2/*3*/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));
    TASK::ADD_PATROL_ROUTE_LINK(0, 1);
    TASK::ADD_PATROL_ROUTE_LINK(1, 2);
    TASK::ADD_PATROL_ROUTE_LINK(2, 0);
    TASK::CLOSE_PATROL_ROUTE();
    TASK::CREATE_PATROL_ROUTE();
```
-- @param ped Ped
-- @param p1 char*
-- @param p2 Any
-- @param p3 BOOL
-- @param p4 BOOL
-- TASK_PATROL(ped, p1, p2, p3, p4)

--- TASK_PAUSE
-- This tasks the ped to do nothing for the specified amount of miliseconds.
This is useful if you want to add a delay between tasks when using a sequence task.
-- @param ped Ped - The ped to pause. Set to this 0 when using task sequences.
-- @param ms int - The amount of miliseconds to wait.
-- TASK_PAUSE(ped, ms)

--- TASK_PED_SLIDE_TO_COORD
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param duration float
-- TASK_PED_SLIDE_TO_COORD(ped, x, y, z, heading, duration)

--- TASK_PED_SLIDE_TO_COORD_HDG_RATE
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param p5 float
-- @param p6 float
-- TASK_PED_SLIDE_TO_COORD_HDG_RATE(ped, x, y, z, heading, p5, p6)

--- TASK_PERFORM_SEQUENCE
-- For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#\_0xE8854A4326B9E12B)
-- @param ped Ped - The ped to perform the sequence on
-- @param taskSequenceId int - The sequenceId to perform
-- TASK_PERFORM_SEQUENCE(ped, taskSequenceId)

--- TASK_PERFORM_SEQUENCE_FROM_PROGRESS
-- @param ped Ped - The ped to perform the task on
-- @param taskIndex int
-- @param progress1 int - The progress to start from
-- @param progress2 int - Unknown what it does, it has to be set higher than 0 to not break the sequence
-- TASK_PERFORM_SEQUENCE_FROM_PROGRESS(ped, taskIndex, progress1, progress2)

--- TASK_PERFORM_SEQUENCE_LOCALLY
-- For an example on how to use this please refer to \[OPEN_SEQUENCE_TASK]\(#\_0xE8854A4326B9E12B
-- @param ped Ped - The ped to perform the sequence on
-- @param taskSequenceId int - The sequence to perform
-- TASK_PERFORM_SEQUENCE_LOCALLY(ped, taskSequenceId)

--- TASK_PLANE_CHASE
-- @param pilot Ped
-- @param entityToFollow Entity
-- @param x float
-- @param y float
-- @param z float
-- TASK_PLANE_CHASE(pilot, entityToFollow, x, y, z)

--- TASK_PLANE_LAND
-- @param pilot Ped
-- @param plane Vehicle
-- @param runwayStartX float
-- @param runwayStartY float
-- @param runwayStartZ float
-- @param runwayEndX float
-- @param runwayEndY float
-- @param runwayEndZ float
-- TASK_PLANE_LAND(pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ)

--- TASK_PLANE_MISSION
-- ```
EDITED (7/13/2017)  
NOTE: If you want air combat, AI::TASK_COMBAT_PED (while your pilot is in an aircraft) also does the same thing as this native.  
DESCRIPTION:  
Ever wish your buddy could shoot down one of your enemies for you? Ever wanted an auto-pilot? Well look no further! This is the native for you! (Ped intelligence may vary)  
USAGE:  
-- REQUIRED --  
• pilot = The ped flying the aircraft.  
• aircraft = The aircraft the pilot is flying  
-- OPTIONAL -- [atleast 1 must be assigned]  
• targetVehicle = The vehicle the pilot will target.  
• targetPed = The ped the pilot will target.  
• destinationX, destinationY, destinationZ = The location the pilot will target.  
-- LOGIC --  
• missionFlag = The type of mission. pastebin.com/R8x73dbv  
• angularDrag = The higher the value, the slower the plane will rotate. Value ranges from 0 - Infinity.  
• unk = Set to 0, and you'll be fine.  
• targetHeading = The target angle (from world space north) that the pilot will try to acheive before executing an attack/landing.  
• maxZ = Maximum Z coordinate height for flying.  
• minZ = Minimum Z coordinate height for flying.  
Z: 2,700 is the default max height a pilot will be able to fly. Anything greater and he will fly downward until reaching 2,700 again.  
Mission Types (incase you don't like links..):  
0 = None  
1 = Unk  
2 = CTaskVehicleRam  
3 = CTaskVehicleBlock  
4 = CTaskVehicleGoToPlane  
5 = CTaskVehicleStop  
6 = CTaskVehicleAttack  
7 = CTaskVehicleFollow  
8 = CTaskVehicleFleeAirborne  
9 = CTaskVehicleCircle  
10 = CTaskVehicleEscort  
15 = CTaskVehicleFollowRecording  
16 = CTaskVehiclePoliceBehaviour  
17 = CTaskVehicleCrash  
Example C#:  
Function.Call(Hash.TASK_PLANE_MISSION, pilot, vehicle, 0, Game.Player.Character, 0, 0, 0, 6, 0f, 0f, 0f, 2500.0f, -1500f);  
Example C++  
AI::TASK_PLANE_MISSION(pilot, vehicle, 0, PLAYER::GET_PLAYER_PED(PLAYER::GET_PLAYER_INDEX()), 0, 0, 0, 6, 0.0, 0.0, 0.0, 2500.0, -1500.0);  
[DEPRECATED] EXAMPLE USAGE:  
pastebin.com/gx7Finsk  
```

```
NativeDB Added Parameter 14: Any p13
```
-- @param pilot Ped
-- @param aircraft Vehicle
-- @param targetVehicle Vehicle
-- @param targetPed Ped
-- @param destinationX float
-- @param destinationY float
-- @param destinationZ float
-- @param missionFlag int
-- @param angularDrag float
-- @param unk float
-- @param targetHeading float
-- @param maxZ float
-- @param minZ float
-- TASK_PLANE_MISSION(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, unk, targetHeading, maxZ, minZ)

--- TASK_PLANE_TAXI
-- The given ped will try to drive the plane to the given coordinates and will then drive around the given coords (the plane will form 8s on the ground)
-- @param pilot Ped - The ped driving the plane.
-- @param aircraft Vehicle - The plane used.
-- @param xPos float - The X coordinate.
-- @param yPos float - The Y coordinate.
-- @param zPos float - The Z coordinate.
-- @param fCruiseSpeed float - The speed of the plane (in m/s).
-- @param fTargetReachedDist float - Distance (in meters) at which the plane thinks it has arrived to the given coordinates.
-- TASK_PLANE_TAXI(pilot, aircraft, xPos, yPos, zPos, fCruiseSpeed, fTargetReachedDist)

--- TASK_PLANT_BOMB
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- TASK_PLANT_BOMB(ped, x, y, z, heading)

--- TASK_PLAY_ANIM
-- [Animations list](https://alexguirre.github.io/animations-list/)

```cpp
enum eScriptedAnimFlags
{
    AF_LOOPING = 1,
    AF_HOLD_LAST_FRAME = 2,
    AF_REPOSITION_WHEN_FINISHED = 4,
    AF_NOT_INTERRUPTABLE = 8,
    AF_UPPERBODY = 16,
    AF_SECONDARY = 32,
    AF_REORIENT_WHEN_FINISHED = 64,
    AF_ABORT_ON_PED_MOVEMENT = 128,
    AF_ADDITIVE = 256,
    AF_TURN_OFF_COLLISION = 512,
    AF_OVERRIDE_PHYSICS = 1024,
    AF_IGNORE_GRAVITY = 2048,
    AF_EXTRACT_INITIAL_OFFSET = 4096,
    AF_EXIT_AFTER_INTERRUPTED = 8192,
    AF_TAG_SYNC_IN = 16384,
    AF_TAG_SYNC_OUT = 32768,
    AF_TAG_SYNC_CONTINUOUS = 65536,
    AF_FORCE_START = 131072,
    AF_USE_KINEMATIC_PHYSICS = 262144,
    AF_USE_MOVER_EXTRACTION = 524288,
    AF_HIDE_WEAPON = 1048576,
    AF_ENDS_IN_DEAD_POSE = 2097152,
    AF_ACTIVATE_RAGDOLL_ON_COLLISION = 4194304,
    AF_DONT_EXIT_ON_DEATH = 8388608,
    AF_ABORT_ON_WEAPON_DAMAGE = 16777216,
    AF_DISABLE_FORCED_PHYSICS_UPDATE = 33554432,
    AF_PROCESS_ATTACHMENTS_ON_START = 67108864,
    AF_EXPAND_PED_CAPSULE_FROM_SKELETON = 134217728,
    AF_USE_ALTERNATIVE_FP_ANIM = 268435456,
    AF_BLENDOUT_WRT_LAST_FRAME = 536870912,
    AF_USE_FULL_BLENDING = 1073741824
}
```
-- @param ped Ped - The ped you want to play the animation
-- @param animDictionary char* - The animation dictionary
-- @param animationName char* - The animation name
-- @param blendInSpeed float - The speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant
-- @param blendOutSpeed float - The speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant
-- @param duration int - The duration of the animation in milliseconds. -1 will play the animation until canceled
-- @param flag int - The animation flags (see enum)
-- @param playbackRate float - The playback rate (between 0.0 and 1.0)
-- @param lockX BOOL
-- @param lockY BOOL
-- @param lockZ BOOL
-- TASK_PLAY_ANIM(ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ)

--- TASK_PLAY_ANIM_ADVANCED
-- Similar in functionality to [`TASK_PLAY_ANIM`](#\_0xEA47FE3719165B94), except the position and rotation parameters let you specify the initial position and rotation of the task. The ped is teleported to the position specified.

[Animations list](https://alexguirre.github.io/animations-list/)
-- @param ped Ped - The ped you want to play the animation
-- @param animDictionary char* - The animation dictionary
-- @param animationName char* - The animation name
-- @param posX float - Initial X position of the task
-- @param posY float - Initial Y position of the task
-- @param posZ float - Initial Z position of the task
-- @param rotX float - Initial X rotation of the task
-- @param rotY float - Initial Y rotation of the task
-- @param rotZ float - Initial Z rotation of the task
-- @param blendInSpeed float - The speed at which the animation blends in. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant
-- @param blendOutSpeed float - The speed at which the animation blends out. Lower is slower and higher is faster, 1.0 is normal, 8.0 is basically instant
-- @param duration int - The duration of the animation in milliseconds. -1 will play the animation until canceled
-- @param flag Any - See [`TASK_PLAY_ANIM`](#\_0xEA47FE3719165B94)
-- @param animTime float - Value between 0.0 and 1.0, lets you start an animation from the given point
-- @param p14 Any
-- @param p15 Any
-- TASK_PLAY_ANIM_ADVANCED(ped, animDictionary, animationName, posX, posY, posZ, rotX, rotY, rotZ, blendInSpeed, blendOutSpeed, duration, flag, animTime, p14, p15)

--- TASK_PLAY_PHONE_GESTURE_ANIMATION
-- ```
Example from the scripts:
TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);
=========================================================
^^ No offense, but Idk how that would really help anyone.
As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
Known boneMaskTypes'
"BONEMASK_HEADONLY"
"BONEMASK_HEAD_NECK_AND_ARMS"
"BONEMASK_HEAD_NECK_AND_L_ARM"
"BONEMASK_HEAD_NECK_AND_R_ARM"
p4 known args - 0.0f, 0.5f, 0.25f
p5 known args - 0.0f, 0.25f
p6 known args - 1 if a global if check is passed.
p7 known args - 1 if a global if check is passed.
The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
=========================================================
```
-- @param ped Ped
-- @param animDict char*
-- @param animation char*
-- @param boneMaskType char*
-- @param p4 float
-- @param p5 float
-- @param p6 BOOL
-- @param p7 BOOL
-- TASK_PLAY_PHONE_GESTURE_ANIMATION(ped, animDict, animation, boneMaskType, p4, p5, p6, p7)

--- TASK_PUT_PED_DIRECTLY_INTO_COVER
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param timeout Any
-- @param p5 BOOL
-- @param p6 float
-- @param p7 BOOL
-- @param p8 BOOL
-- @param p9 Any
-- @param p10 BOOL
-- TASK_PUT_PED_DIRECTLY_INTO_COVER(ped, x, y, z, timeout, p5, p6, p7, p8, p9, p10)

--- TASK_PUT_PED_DIRECTLY_INTO_MELEE
-- ```
from armenian3.c4
TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);
```
-- @param ped Ped
-- @param meleeTarget Ped
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 BOOL
-- TASK_PUT_PED_DIRECTLY_INTO_MELEE(ped, meleeTarget, p2, p3, p4, p5)

--- TASK_RAPPEL_FROM_HELI
-- ```
Only appears twice in the scripts.
TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);
TASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);
```
-- @param ped Ped
-- @param unused float
-- TASK_RAPPEL_FROM_HELI(ped, unused)

--- TASK_REACT_AND_FLEE_PED
-- @param ped Ped
-- @param fleeTarget Ped
-- TASK_REACT_AND_FLEE_PED(ped, fleeTarget)

--- TASK_RELOAD_WEAPON
-- ```
The 2nd param (unused) is not implemented.
-----------------------------------------------------------------------
The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
            if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {
                TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);
            }
```
-- @param ped Ped
-- @param unused BOOL
-- TASK_RELOAD_WEAPON(ped, unused)

--- TASK_SCRIPTED_ANIMATION
-- ```
From fm_mission_controller.c:  
reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);  
	vVar28 = {0.094f, 0.02f, -0.005f};  
	vVar29 = {-92.24f, 63.64f, 150.24f};  
	func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);  
	set_entity_lod_dist(net_to_ent(uVar30), 500);  
	attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);  
	Var31.imm_4 = 1065353216;  
	Var31.imm_5 = 1065353216;  
	Var31.imm_9 = 1065353216;  
	Var31.imm_10 = 1065353216;  
	Var31.imm_14 = 1065353216;  
	Var31.imm_15 = 1065353216;  
	Var31.imm_17 = 1040187392;  
	Var31.imm_18 = 1040187392;  
	Var31.imm_19 = -1;  
	Var32.imm_4 = 1065353216;  
	Var32.imm_5 = 1065353216;  
	Var32.imm_9 = 1065353216;  
	Var32.imm_10 = 1065353216;  
	Var32.imm_14 = 1065353216;  
	Var32.imm_15 = 1065353216;  
	Var32.imm_17 = 1040187392;  
	Var32.imm_18 = 1040187392;  
	Var32.imm_19 = -1;  
	Var31 = 1;  
	Var31.imm_1 = "weapons@misc@jerrycan@mp_male";  
	Var31.imm_2 = "idle";  
	Var31.imm_20 = 1048633;  
	Var31.imm_4 = 0.5f;  
	Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");  
	task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);  
	set_model_as_no_longer_needed(joaat("prop_ld_case_01"));  
	remove_anim_dict("anim@heists@biolab@");  
```
-- @param ped Ped
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- @param p4 float
-- @param p5 float
-- TASK_SCRIPTED_ANIMATION(ped, p1, p2, p3, p4, p5)

--- TASK_SEEK_COVER_FROM_PED
-- @param ped Ped
-- @param target Ped
-- @param duration int
-- @param p3 BOOL
-- TASK_SEEK_COVER_FROM_PED(ped, target, duration, p3)

--- TASK_SEEK_COVER_FROM_POS
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param duration int
-- @param p5 BOOL
-- TASK_SEEK_COVER_FROM_POS(ped, x, y, z, duration, p5)

--- TASK_SEEK_COVER_TO_COORDS
-- ```
from michael2:
TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);
appears to be shorter variation
from michael3:
TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);
```
-- @param ped Ped
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param p7 Any
-- @param p8 BOOL
-- TASK_SEEK_COVER_TO_COORDS(ped, x1, y1, z1, x2, y2, z2, p7, p8)

--- TASK_SEEK_COVER_TO_COVER_POINT
-- @param p0 Any
-- @param p1 Any
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 Any
-- @param p6 BOOL
-- TASK_SEEK_COVER_TO_COVER_POINT(p0, p1, p2, p3, p4, p5, p6)

--- TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS
-- ```
I cant believe I have to define this, this is one of the best natives.  
It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.  
Since it is a task, every time the native is called the ped will stop for a moment.  
```
-- @param ped Ped
-- @param toggle BOOL
-- TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(ped, toggle)

--- TASK_SET_DECISION_MAKER
-- ```
p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used  
```
-- @param ped Ped
-- @param p1 Hash
-- TASK_SET_DECISION_MAKER(ped, p1)

--- TASK_SET_SPHERE_DEFENSIVE_AREA
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- TASK_SET_SPHERE_DEFENSIVE_AREA(p0, p1, p2, p3, p4)

--- TASK_SHOCKING_EVENT_REACT
-- @param ped Ped
-- @param eventHandle int
-- TASK_SHOCKING_EVENT_REACT(ped, eventHandle)

--- TASK_SHOOT_AT_COORD
-- ```
Firing Pattern Hash Information: https://pastebin.com/Px036isB
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param duration int
-- @param firingPattern Hash
-- TASK_SHOOT_AT_COORD(ped, x, y, z, duration, firingPattern)

--- TASK_SHOOT_AT_ENTITY
-- ```
//this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
Entity aimedentity;
Player player = PLAYER::PLAYER_ID();
PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);
//bg is an array of peds
TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));
in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
Firing Pattern Hash Information: https://pastebin.com/Px036isB
```
-- @param entity Entity
-- @param target Entity
-- @param duration int
-- @param firingPattern Hash
-- TASK_SHOOT_AT_ENTITY(entity, target, duration, firingPattern)

--- TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT
-- ```
Makes the specified ped shuffle to the next vehicle seat.  
The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.  
```

```
NativeDB Added Parameter 3: Any p2
```
-- @param ped Ped
-- @param vehicle Vehicle
-- TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(ped, vehicle)

--- TASK_SKY_DIVE
-- ```
NativeDB Added Parameter 2: BOOL p1
```
-- @param ped Ped
-- TASK_SKY_DIVE(ped)

--- TASK_SMART_FLEE_COORD
-- ```
Makes the specified ped flee the specified distance from the specified position.  
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param distance float
-- @param time int
-- @param p6 BOOL
-- @param p7 BOOL
-- TASK_SMART_FLEE_COORD(ped, x, y, z, distance, time, p6, p7)

--- TASK_SMART_FLEE_PED
-- ```
Makes a ped run away from another ped (fleeTarget).  
distance = ped will flee this distance.  
fleeTime = ped will flee for this amount of time, set to "-1" to flee forever  
```
-- @param ped Ped
-- @param fleeTarget Ped
-- @param distance float
-- @param fleeTime Any
-- @param p4 BOOL
-- @param p5 BOOL
-- TASK_SMART_FLEE_PED(ped, fleeTarget, distance, fleeTime, p4, p5)

--- TASK_STAND_GUARD
-- ```
scenarioName example: "WORLD_HUMAN_GUARD_STAND"  
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param scenarioName char*
-- TASK_STAND_GUARD(ped, x, y, z, heading, scenarioName)

--- TASK_STAND_STILL
-- ```
Makes the specified ped stand still for (time) milliseconds.  
```
-- @param ped Ped
-- @param time int
-- TASK_STAND_STILL(ped, time)

--- TASK_START_SCENARIO_AT_POSITION
-- The ped will move or warp to the position and heading given, then start the scenario passed. See [`TASK_START_SCENARIO_IN_PLACE`](#\_0x142A02425FF02BD9) for a list of scenarios.
-- @param ped Ped - The ped handle.
-- @param scenarioName char* - The name of the scenario to start.
-- @param x float - The x coordinate to start at.
-- @param y float - The y coordinate to start at.
-- @param z float - The z coordinate to start at. Should be the ground position plus the ped's ground to root offset.
-- @param heading float - The heading to start at.
-- @param timeToLeave int - Sets the timeout on the scenario point to the specified time in milliseconds. If less than 0, sets the `IdleForever` flag.
-- @param playIntro BOOL - If the ped should play the scenarios enter animation. Sets the `SkipEnterClip` flag.
-- @param warp BOOL - If the ped should be warped to the position. Sets the `Warp` flag.
-- TASK_START_SCENARIO_AT_POSITION(ped, scenarioName, x, y, z, heading, timeToLeave, playIntro, warp)

--- TASK_START_SCENARIO_IN_PLACE
-- Puts the ped into the given scenario immediately at their current location. [List of scenario names](https://pastebin.com/6mrYTdQv) or in `update/update.rpf/common/data/ai/scenarios.meta`.
-- @param ped Ped - The ped handle.
-- @param scenarioName char* - The name of the scenario to start.
-- @param timeToLeave int - Sets the timeout on the scenario point to the specified time in milliseconds. If less than 0, sets the `IdleForever` flag.
-- @param playIntroClip BOOL - If the ped should play the scenarios enter animation. Sets the `SkipEnterClip` flag.
-- TASK_START_SCENARIO_IN_PLACE(ped, scenarioName, timeToLeave, playIntroClip)

--- TASK_STAY_IN_COVER
-- ```
Makes the ped run to take cover  
```
-- @param ped Ped
-- TASK_STAY_IN_COVER(ped)

--- TASK_STEALTH_KILL
-- ```
Stealth kill action name hashes:  
stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta  
...  
{  
    "ACT_stealth_kill_a",  
    "ACT_stealth_kill_weapon",  
    "ACT_stealth_kill_b",  
    "ACT_stealth_kill_c",  
    "ACT_stealth_kill_d",  
    "ACT_stealth_kill_a_gardener"  
}  
Only known script using this native: fbi4_prep2  
EXAMPLE:  
ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);  
Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target  
```
-- @param killer Ped
-- @param target Ped
-- @param actionType Hash
-- @param p3 float
-- @param p4 Any
-- TASK_STEALTH_KILL(killer, target, actionType, p3, p4)

--- TASK_STOP_PHONE_GESTURE_ANIMATION
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param ped Ped
-- TASK_STOP_PHONE_GESTURE_ANIMATION(ped)

--- TASK_SWAP_WEAPON
-- @param ped Ped
-- @param p1 BOOL
-- TASK_SWAP_WEAPON(ped, p1)

--- TASK_SWEEP_AIM_ENTITY
-- ```
This function is called on peds in vehicles.  
anim: animation name  
p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"  
p5: no idea what it does but is usually -1  
```
-- @param ped Ped
-- @param anim char*
-- @param p2 char*
-- @param p3 char*
-- @param p4 char*
-- @param p5 int
-- @param vehicle Vehicle
-- @param p7 float
-- @param p8 float
-- TASK_SWEEP_AIM_ENTITY(ped, anim, p2, p3, p4, p5, vehicle, p7, p8)

--- TASK_SWEEP_AIM_POSITION
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any*
-- @param p3 Any*
-- @param p4 Any*
-- @param p5 Any
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 float
-- @param p10 float
-- TASK_SWEEP_AIM_POSITION(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)

--- TASK_SYNCHRONIZED_SCENE
-- ```
 TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);
```
-- @param ped Ped
-- @param scene int
-- @param animDictionary char*
-- @param animationName char*
-- @param speed float
-- @param speedMultiplier float
-- @param duration int
-- @param flag int
-- @param playbackRate float
-- @param p9 Any
-- TASK_SYNCHRONIZED_SCENE(ped, scene, animDictionary, animationName, speed, speedMultiplier, duration, flag, playbackRate, p9)

--- TASK_THROW_PROJECTILE
-- ```
In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.  
The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.  
---  
It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).  
It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.  
----------------------------------------------------  
The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.  
```

```
NativeDB Added Parameter 5: Any p4
NativeDB Added Parameter 6: Any p5
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- TASK_THROW_PROJECTILE(ped, x, y, z)

--- TASK_TOGGLE_DUCK
-- ```
used in sequence task  
both parameters seems to be always 0  
```
-- @param p0 BOOL
-- @param p1 BOOL
-- TASK_TOGGLE_DUCK(p0, p1)

--- TASK_TURN_PED_TO_FACE_COORD
-- ```
duration in milliseconds  
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param duration int
-- TASK_TURN_PED_TO_FACE_COORD(ped, x, y, z, duration)

--- TASK_TURN_PED_TO_FACE_ENTITY
-- ```
duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped  
```
-- @param ped Ped
-- @param entity Entity
-- @param duration int
-- TASK_TURN_PED_TO_FACE_ENTITY(ped, entity, duration)

--- TASK_USE_MOBILE_PHONE
-- ```
Actually has 3 params, not 2.  
p0: Ped  
p1: int (or bool?)  
p2: int  
```

```
NativeDB Added Parameter 3: Any p2
```
-- @param ped Ped
-- @param p1 int
-- TASK_USE_MOBILE_PHONE(ped, p1)

--- TASK_USE_MOBILE_PHONE_TIMED
-- @param ped Ped
-- @param duration int
-- TASK_USE_MOBILE_PHONE_TIMED(ped, duration)

--- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 Any
-- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(p0, p1, p2, p3, p4, p5)

--- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 Any
-- TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(p0, p1, p2, p3, p4, p5)

--- TASK_USE_NEAREST_SCENARIO_TO_COORD
-- ```
Updated variables
An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.
```
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param distance float
-- @param duration int
-- TASK_USE_NEAREST_SCENARIO_TO_COORD(ped, x, y, z, distance, duration)

--- TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param p5 Any
-- TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(ped, x, y, z, radius, p5)

--- TASK_VEHICLE_AIM_AT_COORD
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- TASK_VEHICLE_AIM_AT_COORD(ped, x, y, z)

--- TASK_VEHICLE_AIM_AT_PED
-- @param ped Ped
-- @param target Ped
-- TASK_VEHICLE_AIM_AT_PED(ped, target)

--- TASK_VEHICLE_CHASE
-- ```
chases targetEnt fast and aggressively  
--  
Makes ped (needs to be in vehicle) chase targetEnt.  
```
-- @param driver Ped
-- @param targetEnt Entity
-- TASK_VEHICLE_CHASE(driver, targetEnt)

--- TASK_VEHICLE_DRIVE_TO_COORD
-- ```
info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/  
---------------------------------------------------------------  
Passing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.  
P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.  
Here the e.g. code I used  
Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- @param speed float
-- @param p6 Any
-- @param vehicleModel Hash
-- @param drivingMode int
-- @param stopRange float
-- @param p10 float
-- TASK_VEHICLE_DRIVE_TO_COORD(ped, vehicle, x, y, z, speed, p6, vehicleModel, drivingMode, stopRange, p10)

--- TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE
-- You can let your character drive to the destination at the speed and driving style you set. You can use map marks to set the destination.

```cpp
enum eDriveBehaviorFlags {
  DF_StopForCars = 1,
  DF_StopForPeds = 2,
  DF_SwerveAroundAllCars = 4,
  DF_SteerAroundStationaryCars = 8,
  DF_SteerAroundPeds = 16,
  DF_SteerAroundObjects = 32,
  DF_DontSteerAroundPlayerPed = 64,
  DF_StopAtLights = 128,
  DF_GoOffRoadWhenAvoiding = 256,
  DF_DriveIntoOncomingTraffic = 512,
  DF_DriveInReverse = 1024,
  DF_UseWanderFallbackInsteadOfStraightLine = 2048,
  DF_AvoidRestrictedAreas = 4096,
  DF_PreventBackgroundPathfinding = 8192, // **These only work on MISSION_CRUISE**
  DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
  DF_UseShortCutLinks = 262144,
  DF_ChangeLanesAroundObstructions = 524288,
  DF_UseSwitchedOffNodes = 2097152,	//cruise tasks ignore this anyway--only used for goto's
  DF_PreferNavmeshRoute = 4194304,	//if you're going to be primarily driving off road
  DF_PlaneTaxiMode = 8388608, // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly
  DF_ForceStraightLine = 16777216,
  DF_UseStringPullingAtJunctions = 33554432,
  DF_AvoidHighways = 536870912,
  DF_ForceJoinInRoadDirection = 1073741824
}
```
-- @param ped Ped - Ped id for the task.
-- @param vehicle Vehicle - Vehicle entity id for the task.
-- @param x float - Destination X coordinate.
-- @param y float - Destination Y coordinate.
-- @param z float - Destination Z coordinate.
-- @param speed float - Speed of driving.
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param stopRange float - Stops in the specific range near the destination. 20.0 works fine.
-- TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(ped, vehicle, x, y, z, speed, drivingStyle, stopRange)

--- TASK_VEHICLE_DRIVE_WANDER
-- Drive randomly with no destination set.
-- @param ped Ped - Ped id for the task.
-- @param vehicle Vehicle - Vehicle entity id for the task.
-- @param speed float - Speed of driving.
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- TASK_VEHICLE_DRIVE_WANDER(ped, vehicle, speed, drivingStyle)

--- TASK_VEHICLE_ESCORT
-- ```
Makes a ped follow the targetVehicle with <minDistance> in between.  
note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.  
Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.  
-1 = behind  
0 = ahead  
1 = left  
2 = right  
3 = back left  
4 = back right  
if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.  
Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param targetVehicle Vehicle
-- @param mode int
-- @param speed float
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param minDistance float
-- @param p7 int
-- @param noRoadsDistance float
-- TASK_VEHICLE_ESCORT(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, p7, noRoadsDistance)

--- TASK_VEHICLE_FOLLOW
-- ```
Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
```
-- @param driver Ped
-- @param vehicle Vehicle
-- @param targetEntity Entity
-- @param speed float
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param minDistance int
-- TASK_VEHICLE_FOLLOW(driver, vehicle, targetEntity, speed, drivingStyle, minDistance)

--- TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING
-- ```
task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
p3 = 786468
p4 = 0
p5 = 16
p6 = -1 (angle?)
p7/8/9 = usually v3.zero
p10 = bool (repeat?)
p11 = 1073741824
-khorio
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param WPRecording char*
-- @param p3 int
-- @param p4 int
-- @param p5 int
-- @param p6 int
-- @param p7 float
-- @param p8 BOOL
-- @param p9 float
-- TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(ped, vehicle, WPRecording, p3, p4, p5, p6, p7, p8, p9)

--- TASK_VEHICLE_GOTO_NAVMESH
-- ```
Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.  
WARNING:  
A behaviorFlag value of 0 will result in a clunky, stupid driver!  
Recommended settings:  
speed = 30.0f,  
behaviorFlag = 156,   
stoppingRange = 5.0f;  
If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.   
If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.  
EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- @param speed float
-- @param behaviorFlag int
-- @param stoppingRange float
-- TASK_VEHICLE_GOTO_NAVMESH(ped, vehicle, x, y, z, speed, behaviorFlag, stoppingRange)

--- TASK_VEHICLE_HELI_PROTECT
-- ```
pilot, vehicle and altitude are rather self-explanatory.  
p4: is unused variable in the function.  
entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.  
'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.  
'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.  
NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.  
NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.  
```
-- @param pilot Ped
-- @param vehicle Vehicle
-- @param entityToFollow Entity
-- @param targetSpeed float
-- @param p4 int
-- @param radius float
-- @param altitude int
-- @param p7 int
-- TASK_VEHICLE_HELI_PROTECT(pilot, vehicle, entityToFollow, targetSpeed, p4, radius, altitude, p7)

--- TASK_VEHICLE_MISSION
-- All parameters except ped, vehicle, vehicleTarget and speed are optional; with `missionType` being only those that require a target entity.

If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.

```cpp
enum eVehicleMissionType
{
  None = 0,
  Cruise = 1,
  Ram = 2,
  Block = 3,
  GoTo = 4,
  Stop = 5,
  Attack = 6,
  Follow = 7,
  Flee = 8,
  Circle = 9,
  Escort = 12,
  GoToRacing = 14,
  FollowRecording = 15,
  PoliceBehaviour = 16,
  Land = 19,
  LandAndWait = 20,
  Crash = 21,
  PullOver = 22,
  HeliProtect = 23
}
```
-- @param ped Ped - The ped to be tasked.
-- @param vehicle Vehicle - The vehicles' entity handle.
-- @param vehicleTarget Vehicle - The target vehicle.
-- @param missionType int - The mission type (default is 0) (see `eVehicleMissionType`).
-- @param speed float - The speed in m/s.
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param radius float - The radius of when the task will be completed (default is -1.0f).
-- @param straightLineDist float - The distance before the vehicle will drive straight to the target (default is -1.0f).
-- @param DriveAgainstTraffic BOOL - Whether the vehicle should drive against traffic (default is false).
-- TASK_VEHICLE_MISSION(ped, vehicle, vehicleTarget, missionType, speed, drivingStyle, radius, straightLineDist, DriveAgainstTraffic)

--- TASK_VEHICLE_MISSION_COORS_TARGET
-- All parameters except ped, vehicle, x, y, z and speed are optional; with `missionType` being only those that don't require a target entity.

If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
-- @param ped Ped - The ped to be tasked.
-- @param vehicle Vehicle - The vehicles' entity handle.
-- @param x float - The x coordinate.
-- @param y float - The y coordinate.
-- @param z float - The z coordinate.
-- @param missionType int - The mission type (default is 0) (see [TaskVehicleMission](#\_0x659427E0EF36BCDE)).
-- @param speed float - The speed in m/s.
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param radius float - The radius of when the task will be completed (default is -1.0f).
-- @param straightLineDist float - The distance before the vehicle will drive straight to the target (default is -1.0f).
-- @param DriveAgainstTraffic BOOL - Whether the vehicle should drive against traffic (default is false).
-- TASK_VEHICLE_MISSION_COORS_TARGET(ped, vehicle, x, y, z, missionType, speed, drivingStyle, radius, straightLineDist, DriveAgainstTraffic)

--- TASK_VEHICLE_MISSION_PED_TARGET
-- All parameters except ped, vehicle, pedTarget and speed are optional; with `missionType` being only those that require a target entity.

If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
-- @param ped Ped - The ped to be tasked.
-- @param vehicle Vehicle - The vehicles' entity handle.
-- @param pedTarget Ped - The target ped.
-- @param missionType int - The mission type (default is 0) (see [TaskVehicleMission](#\_0x659427E0EF36BCDE)).
-- @param speed float - The speed in m/s.
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param radius float - The radius of when the task will be completed (default is -1.0f).
-- @param straightLineDist float - The distance before the vehicle will drive straight to the target (default is -1.0f).
-- @param DriveAgainstTraffic BOOL - Whether the vehicle should drive against traffic (default is false).
-- TASK_VEHICLE_MISSION_PED_TARGET(ped, vehicle, pedTarget, missionType, speed, drivingStyle, radius, straightLineDist, DriveAgainstTraffic)

--- TASK_VEHICLE_PARK
-- ```
Modes:  
0 - ignore heading  
1 - park forward  
2 - park backwards  
Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.  
Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.  
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param mode int
-- @param radius float
-- @param keepEngineOn BOOL
-- TASK_VEHICLE_PARK(ped, vehicle, x, y, z, heading, mode, radius, keepEngineOn)

--- TASK_VEHICLE_PLAY_ANIM
-- ```
Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
Here's how its used -
TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");
TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0/*1*/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");
FYI : Speedo is the name of van in which chop was put in the mission.
```
-- @param vehicle Vehicle
-- @param animationSet char*
-- @param animationName char*
-- TASK_VEHICLE_PLAY_ANIM(vehicle, animationSet, animationName)

--- TASK_VEHICLE_SHOOT_AT_COORD
-- @param ped Ped
-- @param x float
-- @param y float
-- @param z float
-- @param p4 float
-- TASK_VEHICLE_SHOOT_AT_COORD(ped, x, y, z, p4)

--- TASK_VEHICLE_SHOOT_AT_PED
-- @param ped Ped
-- @param target Ped
-- @param p2 float
-- TASK_VEHICLE_SHOOT_AT_PED(ped, target, p2)

--- TASK_VEHICLE_TEMP_ACTION
-- Gives the vehicle a temporary action.

**Note**: For migrating objects, a `CScriptEntityStateChangeEvent` will be sent over the network to let other clients know that this object is being given a temporary action. At the same time, temporary actions cannot be applied to clones/remote objects.

```cpp
enum eTempAction {
    TA_NONE = 0,
    TA_WAIT = 1,
    TA_UNUSED = 2,
    TA_BRAKE_REVERSE = 3,
    TA_HANDBRAKE_TURN_LEFT = 4,
    TA_HANDBRAKE_TURN_RIGHT = 5,
    TA_HANDBRAKE_UNTIL_TIME_ENDS = 6,
    TA_TURN_LEFT = 7,
    TA_TURN_RIGHT = 8,
    TA_ACCELERATE = 9,
    TA_TURN_LEFT = 10,
    TA_TURN_RIGHT = 11,
    TA_UNUSED_12 = 12,
    TA_TURN_LEFT_GO_REVERSE = 13,
    TA_TURN_RIGHT_GO_REVERSE = 14,
    TA_PLANE_FLY_UP = 15, // (crashes game if not in plane)
    TA_PLANE_FLY_STRAIGHT = 16, // (crashes game if not in plane)
    TA_PLANE_SHARP_LEFT = 17, // (crashes game if not in plane)
    TA_PLANE_SHARP_RIGHT = 18, // (crashes game if not in plane)
    TA_STRONG_BRAKE = 19,
    TA_TURN_LEFT_AND_STOP = 20,
    TA_TURN_RIGHT_AND_STOP = 21,
    TA_GO_IN_REVERSE = 22,
    TA_ACCELERATE_FAST = 23,
    TA_BRAKE_ACTION = 24,
    TA_HANDBRAKE_TURN_LEFT_MORE = 25,
    TA_HANDBRAKE_TURN_RIGHT_MORE = 26,
    TA_HANDBRAKE_BRAKE_STRAIGHT = 27,
    TA_BRAKE_STRONG_REVERSE_ACCELERATION = 28,
    TA_UNUSED_29 = 29,
    TA_PERFORMS_BURNOUT = 30,
    TA_REV_ENGINE = 31,
    TA_ACCELERATE_VERY_STRONG = 32,
    TA_SURFACE_IN_SUBMARINE = 33
};
```
-- @param driver Ped - The vehicle driver (`Ped`).
-- @param vehicle Vehicle - The vehicle handle.
-- @param action int - The temporary action, see `eTempAction`.
-- @param time int - The time to run this temp action for, use `-1` for infinite. Time is in milliseconds.
-- TASK_VEHICLE_TEMP_ACTION(driver, vehicle, action, time)

--- TASK_WANDER_IN_AREA
-- Makes a ped wander/patrol around the specified area.

The ped will continue to wander after getting distracted, but only if this additional task is temporary, ie. killing a target, after killing the target it will continue to wander around.

Use `GetIsTaskActive(ped, 222)` to check if the ped is still wandering the area.
-- @param ped Ped - The ped which will wander the area.
-- @param x float - The X coordinate.
-- @param y float - The Y coordinate
-- @param z float - The Z coordinate
-- @param radius float - The radius of the area to wander around in
-- @param minimalLength int - The minimal length it will wander before waiting timeBetweenWalks seconds before continuing
-- @param timeBetweenWalks float - The length of time the ped will stand still/rest between walks
-- TASK_WANDER_IN_AREA(ped, x, y, z, radius, minimalLength, timeBetweenWalks)

--- TASK_WANDER_STANDARD
-- ```
Makes ped walk around the area.  
set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.  
```
-- @param ped Ped
-- @param p1 float
-- @param p2 int
-- TASK_WANDER_STANDARD(ped, p1, p2)

--- TASK_WARP_PED_DIRECTLY_INTO_COVER
-- This task warps a ped directly into a cover position closest to the specified point. This can be used to quickly place peds in strategic positions during gameplay.

```
NativeDB Introduced: 2545
```
-- @param ped Ped - The ped to warp into cover.
-- @param time int - Duration in milliseconds the ped should take to enter the cover.
-- @param canPeekAndAim BOOL - If `true`, allows the ped to peek and aim while in cover.
-- @param forceInitialFacingDirection BOOL - If `true`, forces the ped to face the initial direction when entering cover.
-- @param forceFaceLeft BOOL - If `true`, forces the ped to face left relative to the cover position.
-- @param coverIndex int - The index of the cover point to warp the ped to. If `null`, the game will choose the nearest cover point.
-- TASK_WARP_PED_DIRECTLY_INTO_COVER(ped, time, canPeekAndAim, forceInitialFacingDirection, forceFaceLeft, coverIndex)

--- TASK_WARP_PED_INTO_VEHICLE
-- ```
NativeDB Introduced: v323
```

Warp a ped into a vehicle.

**Note**: It's better to use [`TASK_ENTER_VEHICLE`](#\_0xC20E50AA46D09CA8) with the flag "warp" flag instead of this native.
-- @param ped Ped - The Ped to be warped into the vehicle.
-- @param vehicle Vehicle - The target vehicle into which the ped will be warped.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- TASK_WARP_PED_INTO_VEHICLE(ped, vehicle, seatIndex)

--- TASK_WRITHE
-- ```
NativeDB Added Parameter 5: Any p4
NativeDB Added Parameter 6: Any p5
```
-- @param ped Ped
-- @param target Ped
-- @param time int
-- @param p3 int
-- TASK_WRITHE(ped, target, time, p3)

--- UNCUFF_PED
-- @param ped Ped
-- UNCUFF_PED(ped)

--- UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET
-- @param p0 Ped
-- @param p1 Ped
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 BOOL
-- UPDATE_TASK_AIM_GUN_SCRIPTED_TARGET(p0, p1, p2, p3, p4, p5)

--- UPDATE_TASK_HANDS_UP_DURATION
-- @param ped Ped
-- @param duration int
-- UPDATE_TASK_HANDS_UP_DURATION(ped, duration)

--- UPDATE_TASK_SWEEP_AIM_ENTITY
-- @param ped Ped
-- @param entity Entity
-- UPDATE_TASK_SWEEP_AIM_ENTITY(ped, entity)

--- UPDATE_TASK_SWEEP_AIM_POSITION
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- UPDATE_TASK_SWEEP_AIM_POSITION(p0, p1, p2, p3)

--- USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE
-- @param name char* - Waypoint recording name.
-- @param p1 BOOL
-- @param p2 float
-- @param p3 float
-- USE_WAYPOINT_RECORDING_AS_ASSISTED_MOVEMENT_ROUTE(name, p1, p2, p3)

--- VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED
-- @param vehicle Vehicle
-- @param speed float
-- VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(vehicle, speed)

--- VEHICLE_WAYPOINT_PLAYBACK_PAUSE
-- @param vehicle Vehicle
-- VEHICLE_WAYPOINT_PLAYBACK_PAUSE(vehicle)

--- VEHICLE_WAYPOINT_PLAYBACK_RESUME
-- @param vehicle Vehicle
-- VEHICLE_WAYPOINT_PLAYBACK_RESUME(vehicle)

--- VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
-- @param vehicle Vehicle
-- VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(vehicle)

--- WAYPOINT_PLAYBACK_GET_IS_PAUSED
-- @param p0 Any
-- WAYPOINT_PLAYBACK_GET_IS_PAUSED(p0)

--- WAYPOINT_PLAYBACK_OVERRIDE_SPEED
-- @param p0 Any
-- @param p1 float
-- @param p2 BOOL
-- WAYPOINT_PLAYBACK_OVERRIDE_SPEED(p0, p1, p2)

--- WAYPOINT_PLAYBACK_PAUSE
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 BOOL
-- WAYPOINT_PLAYBACK_PAUSE(p0, p1, p2)

--- WAYPOINT_PLAYBACK_RESUME
-- @param p0 Any
-- @param p1 BOOL
-- @param p2 Any
-- @param p3 Any
-- WAYPOINT_PLAYBACK_RESUME(p0, p1, p2, p3)

--- WAYPOINT_PLAYBACK_START_AIMING_AT_COORD
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 BOOL
-- WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(p0, p1, p2, p3, p4)

--- WAYPOINT_PLAYBACK_START_AIMING_AT_PED
-- @param p0 Any
-- @param p1 Any
-- @param p2 BOOL
-- WAYPOINT_PLAYBACK_START_AIMING_AT_PED(p0, p1, p2)

--- WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 BOOL
-- @param p5 Any
-- WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(p0, p1, p2, p3, p4, p5)

--- WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED
-- @param p0 Any
-- @param p1 Any
-- @param p2 BOOL
-- @param p3 Any
-- WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(p0, p1, p2, p3)

--- WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING
-- @param p0 Any
-- WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(p0)

--- WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED
-- @param p0 Any
-- WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(p0)

--- WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT
-- ```
For a full list of the points, see here: goo.gl/wIH0vn
```
-- @param name char*
-- @param x float
-- @param y float
-- @param z float
-- @param point int*
-- WAYPOINT_RECORDING_GET_CLOSEST_WAYPOINT(name, x, y, z, point)

--- WAYPOINT_RECORDING_GET_COORD
-- ```
For a full list of the points, see here: goo.gl/wIH0vn
```
-- @param name char*
-- @param point int
-- @param coord Vector3*
-- WAYPOINT_RECORDING_GET_COORD(name, point, coord)

--- WAYPOINT_RECORDING_GET_NUM_POINTS
-- ```
For a full list of the points, see here: goo.gl/wIH0vn
```
-- @param name char*
-- @param points int*
-- WAYPOINT_RECORDING_GET_NUM_POINTS(name, points)

--- WAYPOINT_RECORDING_GET_SPEED_AT_POINT
-- @param name char*
-- @param point int
-- WAYPOINT_RECORDING_GET_SPEED_AT_POINT(name, point)

--- _CLEAR_VEHICLE_TASKS
-- ```
CLEAR_*

NativeDB Introduced: v1290
```
-- @param vehicle Vehicle - The vehicle to have tasks cleared
-- _CLEAR_VEHICLE_TASKS(vehicle)

--- _GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param signalName char*
-- _GET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(ped, signalName)

--- _SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2
-- ```
NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param signalName char*
-- @param value float
-- _SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT_2(ped, signalName, value)

--- _TASK_AGITATED_ACTION
-- @param ped Ped
-- @param ped2 Ped
-- _TASK_AGITATED_ACTION(ped, ped2)

--- _TASK_HELI_ESCORT_HELI
-- ```
NativeDB Introduced: v1290
```
-- @param pilot Ped
-- @param heli1 Vehicle
-- @param heli2 Vehicle
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- _TASK_HELI_ESCORT_HELI(pilot, heli1, heli2, p3, p4, p5)

--- _TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS
-- ```
Used only once in the scripts (am_mp_nightclub)
```

```
Used only once in the scripts (am_mp_nightclub)

NativeDB Introduced: v1493
```
-- @param ped Ped
-- @param p1 char*
-- @param data Any*
-- @param p3 float
-- @param p4 BOOL
-- @param animDict char*
-- @param flags int
-- _TASK_MOVE_NETWORK_BY_NAME_WITH_INIT_PARAMS(ped, p1, data, p3, p4, animDict, flags)

--- _TASK_PLANE_GOTO_PRECISE_VTOL
-- ```
NativeDB Introduced: v1290
```
-- @param ped Ped
-- @param vehicle Vehicle
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- @param p9 Any
-- _TASK_PLANE_GOTO_PRECISE_VTOL(ped, vehicle, p2, p3, p4, p5, p6, p7, p8, p9)

--- _TASK_RAPPEL_DOWN_WALL
-- Attaches a ped to a rope and allows player control to rappel down a wall.
Disables all collisions while on the rope.

NativeDB Introduced: v1868
-- @param ped Ped - Ped to perform the task
-- @param x1 float - X coord to start the task
-- @param y1 float - Y coord to start the task
-- @param z1 float - Z coord to start the task
-- @param x2 float - Second X coord, uses the same position as above in the scripts
-- @param y2 float - Second Y coord
-- @param z2 float - Second Z coord
-- @param minZ float - Minimum Z that the player can descend to
-- @param ropeId int - Rope to attach this task to, must be created with [ADD_ROPE](#\_0xE832D760399EB220)
-- @param clipset char* - Clipset to use for the task
-- @param p10 Any - Usually 1 in the scripts
-- _TASK_RAPPEL_DOWN_WALL(ped, x1, y1, z1, x2, y2, z2, minZ, ropeId, clipset, p10)

--- _TASK_SUBMARINE_GOTO_AND_STOP
-- Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
p0 is always 0, p5 is always 1
p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after

```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param submarine Vehicle
-- @param x float
-- @param y float
-- @param z float
-- @param p5 Any
-- _TASK_SUBMARINE_GOTO_AND_STOP(p0, submarine, x, y, z, p5)

--- _TASK_WANDER_SPECIFIC
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- _TASK_WANDER_SPECIFIC(p0, p1, p2, p3)


-- ========== VEHICLE ==========

--- 0x0205F5365292D2EB
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param p1 float
-- 0x0205F5365292D2EB(vehicle, p1)

--- 0x0419B167EE128F33
-- @param p0 Any
-- @param p1 Any
-- 0x0419B167EE128F33(p0, p1)

--- 0x0581730AB9380412
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- 0x0581730AB9380412(p0, p1, p2, p3, p4, p5)

--- 0x063AE2B2CC273588
-- ```
A vehicle recording playback flag only used in jewelry_heist
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x063AE2B2CC273588(vehicle, p1)

--- 0x065D03A9D6B2C6B5
-- @param p0 Any
-- @param p1 Any
-- 0x065D03A9D6B2C6B5(p0, p1)

--- 0x107A473D7A6647A9
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- 0x107A473D7A6647A9(vehicle)

--- 0x1312DDD8385AEE4E
-- @param p0 Any
-- @param p1 Any
-- 0x1312DDD8385AEE4E(p0, p1)

--- 0x182F266C2D9E2BEB
-- @param vehicle Vehicle
-- @param p1 float
-- 0x182F266C2D9E2BEB(vehicle, p1)

--- 0x2310A8F9421EBF43
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- 0x2310A8F9421EBF43(p0)

--- 0x2311DD7159F00582
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x2311DD7159F00582(vehicle, p1)

--- 0x2C4A1590ABF43E8B
-- ```
SET_VEHICLE_W* (next character is either H or I)
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x2C4A1590ABF43E8B(vehicle, p1)

--- 0x2FA2494B47FDD009
-- @param p0 Any
-- @param p1 Any
-- 0x2FA2494B47FDD009(p0, p1)

--- 0x3441CAD2F2231923
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x3441CAD2F2231923(vehicle, p1)

--- 0x35BB21DE06784373
-- @param p0 Any
-- @param p1 Any
-- 0x35BB21DE06784373(p0, p1)

--- 0x35E0654F4BAD7971
-- @param p0 BOOL
-- 0x35E0654F4BAD7971(p0)

--- 0x36DE109527A2C0C4
-- ```
Does nothing. It's a nullsub.

NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- 0x36DE109527A2C0C4(toggle)

--- 0x3B458DDB57038F08
-- ```
Usually used alongside other vehicle door natives.
```
-- @param vehicle Vehicle
-- @param doorIndex int
-- @param toggle BOOL
-- 0x3B458DDB57038F08(vehicle, doorIndex, toggle)

--- 0x407DC5E97DB1A4D3
-- ```
NativeDB Introduced: v1493
```
-- @param p0 Any
-- @param p1 Any
-- 0x407DC5E97DB1A4D3(p0, p1)

--- 0x41290B40FA63E6DA
-- @param p0 Any
-- 0x41290B40FA63E6DA(p0)

--- 0x428AD3E26C8D9EB0
-- ```
SET_*
```
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- @param p4 float
-- 0x428AD3E26C8D9EB0(vehicle, x, y, z, p4)

--- 0x430A7631A84C9BE7
-- ```
NativeDB Introduced: v1180
```
-- @param p0 Any
-- 0x430A7631A84C9BE7(p0)

--- 0x4419966C9936071A
-- ```
CLEAR_VEHICLE_*
```
-- @param vehicle Vehicle
-- 0x4419966C9936071A(vehicle)

--- 0x4AD280EB48B2D8E6
-- ```
NativeDB Introduced: v1868
```
-- @param vehicle Vehicle
-- @param togle BOOL
-- 0x4AD280EB48B2D8E6(vehicle, togle)

--- 0x4D9D109F63FEE1D4
-- @param p0 Any
-- @param p1 BOOL
-- 0x4D9D109F63FEE1D4(p0, p1)

--- 0x51DB102F4A3BA5E0
-- @param toggle BOOL
-- 0x51DB102F4A3BA5E0(toggle)

--- 0x51F30DB60626A20E
-- Usex in decompiled scripts in combination with [`_GET_VEHICLE_SUSPENSION_BOUNDS`](#\_0xDF7E3EEB29642C38).

NativeDB Introduced: v1180

```
// Example from fm_bj_race_controller.c
if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))
{
    VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);
    VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);
    fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);
    uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);
    if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))
    {
        uParam0->f_12.f_3 = { uParam0->f_6 };
        uParam0->f_12 = { uParam0->f_9 };
    }
}
```
-- @param vehicle Vehicle - the target vehicle
-- @param x float - vehicle location
-- @param y float - vehicle location
-- @param z float - vehicle location
-- @param rotX float - some kind of vehicle rotation value
-- @param rotY float - some kind of vehicle rotation value
-- @param rotZ float - some kind of vehicle rotation value
-- @param p7 int - usually 2
-- @param p8 Any - usually 1
-- 0x51F30DB60626A20E(vehicle, x, y, z, rotX, rotY, rotZ, p7, p8)

--- 0x56EB5E94318D3FB6
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x56EB5E94318D3FB6(vehicle, p1)

--- 0x5845066D8A1EA7F7
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- @param p4 Any
-- 0x5845066D8A1EA7F7(vehicle, x, y, z, p4)

--- 0x59C3757B3B7408E8
-- ```
NativeDB Introduced: v1493
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- @param p2 float
-- 0x59C3757B3B7408E8(vehicle, toggle, p2)

--- 0x5BA68A0840D546AC
-- @param p0 Any
-- @param p1 Any
-- 0x5BA68A0840D546AC(p0, p1)

--- 0x5BBCF35BF6E456F7
-- ```
NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- 0x5BBCF35BF6E456F7(toggle)

--- 0x5E569EC46EC21CAE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x5E569EC46EC21CAE(vehicle, toggle)

--- 0x5EE5632F47AE9695
-- ```
Sets some health value. Looks like it's used for helis.
```
-- @param vehicle Vehicle
-- @param health float
-- 0x5EE5632F47AE9695(vehicle, health)

--- 0x6501129C9E0FFA05
-- @param p0 Any
-- @param p1 Any
-- 0x6501129C9E0FFA05(p0, p1)

--- 0x65B080555EA48149
-- @param p0 Any
-- 0x65B080555EA48149(p0)

--- 0x66E3AAFACE2D1EB8
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x66E3AAFACE2D1EB8(p0, p1, p2)

--- 0x6A973569BA094650
-- ```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- @param p1 Any
-- 0x6A973569BA094650(vehicle, p1)

--- 0x6EAAEFC76ACC311F
-- @param p0 Any
-- 0x6EAAEFC76ACC311F(p0)

--- 0x6EBFB22D646FFC18
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x6EBFB22D646FFC18(vehicle, p1)

--- 0x725012A415DBA050
-- Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`.
Unknown what it does, couldn't find good examples in the decompiled scripts.
-- @param p0 Any
-- @param p1 Any*
-- @param p2 Any
-- 0x725012A415DBA050(p0, p1, p2)

--- 0x72BECCF4B829522E
-- @param p0 Any
-- @param p1 Any
-- 0x72BECCF4B829522E(p0, p1)

--- 0x73561D4425A021A2
-- @param p0 Any
-- @param p1 Any
-- 0x73561D4425A021A2(p0, p1)

--- 0x737E398138550FFF
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x737E398138550FFF(vehicle, toggle)

--- 0x76D26A22750E849E
-- ```
SET_VEHICLE_*
```
-- @param vehicle Vehicle
-- 0x76D26A22750E849E(vehicle)

--- 0x78CEEE41F49F421F
-- @param p0 Any
-- @param p1 Any
-- 0x78CEEE41F49F421F(p0, p1)

--- 0x796A877E459B99EA
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- 0x796A877E459B99EA(p0, p1, p2, p3)

--- 0x7BBE7FF626A591FE
-- @param p0 Any
-- 0x7BBE7FF626A591FE(p0)

--- 0x7D6F9A3EF26136A0
-- ```
SET_VEHICLE_AL*
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- @param p2 BOOL
-- 0x7D6F9A3EF26136A0(vehicle, toggle, p2)

--- 0x80E3357FDEF45C21
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x80E3357FDEF45C21(vehicle, toggle)

--- 0x8235F1BEAD557629
-- ```
NativeDB Introduced: v1180
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x8235F1BEAD557629(vehicle, toggle)

--- 0x82E0AC411E41A5B4
-- ```
Does nothing. It's a nullsub.

NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- 0x82E0AC411E41A5B4(toggle)

--- 0x8533CAFDE1F0F336
-- @param p0 Any
-- 0x8533CAFDE1F0F336(p0)

--- 0x8664170EF165C4A6
-- ```
NativeDB Introduced: v2189
```
-- @param p0 Any
-- @param p1 Any
-- 0x8664170EF165C4A6(p0, p1)

--- 0x870B8B7A766615C8
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0x870B8B7A766615C8(p0, p1, p2)

--- 0x8821196D91FA2DE5
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x8821196D91FA2DE5(vehicle, toggle)

--- 0x887FA38787DE8C72
-- ```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle
-- 0x887FA38787DE8C72(vehicle)

--- 0x88BC673CA9E0AE99
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x88BC673CA9E0AE99(vehicle, p1)

--- 0x8F0D5BA1C2CC91D7
-- ```
NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- 0x8F0D5BA1C2CC91D7(toggle)

--- 0x9640E30A7F395E4B
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param p1 Any
-- @param p2 Any
-- @param p3 Any
-- @param p4 Any
-- 0x9640E30A7F395E4B(vehicle, p1, p2, p3, p4)

--- 0x97841634EF7DF1D6
-- ```
NativeDB Introduced: v1180
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x97841634EF7DF1D6(vehicle, toggle)

--- 0x9849DE24FCF23CCC
-- ```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0x9849DE24FCF23CCC(vehicle, toggle)

--- 0x99A05839C46CE316
-- ```
Does nothing. It's a nullsub.

NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- 0x99A05839C46CE316(toggle)

--- 0x99CAD8E7AFDB60FA
-- @param vehicle Vehicle
-- @param p1 float
-- @param p2 float
-- 0x99CAD8E7AFDB60FA(vehicle, p1, p2)

--- 0x9BDDC73CC6A115D4
-- @param vehicle Vehicle
-- @param p1 BOOL
-- @param p2 BOOL
-- 0x9BDDC73CC6A115D4(vehicle, p1, p2)

--- 0x9BECD4B9FEF3F8A6
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x9BECD4B9FEF3F8A6(vehicle, p1)

--- 0x9D30687C57BAA0BB
-- @param p0 Any
-- 0x9D30687C57BAA0BB(p0)

--- 0x9F3F689B814F2599
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0x9F3F689B814F2599(vehicle, p1)

--- 0xA01BC64DD4BFBBAC
-- Gets hash related to task happening with seat index
Native name: GET_I\*
-- @param vehicle Vehicle
-- @param seatIndex int
-- 0xA01BC64DD4BFBBAC(vehicle, seatIndex)

--- 0xA247F9EF01D8082E
-- @param p0 Any
-- 0xA247F9EF01D8082E(p0)

--- 0xA4822F1CF23F4810
-- @param outVec Vector3*
-- @param p1 Vector3*
-- @param outVec1 Vector3*
-- @param p3 Any
-- @param p4 Any
-- @param p5 Any
-- @param p6 Any
-- @param p7 Any
-- @param p8 Any
-- 0xA4822F1CF23F4810(outVec, p1, outVec1, p3, p4, p5, p6, p7, p8)

--- 0xA4A9A4C40E615885
-- ```
NativeDB Introduced: v1604
```
-- @param p0 Any
-- 0xA4A9A4C40E615885(p0)

--- 0xA7DCDF4DED40A8F4
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xA7DCDF4DED40A8F4(vehicle, p1)

--- 0xAA653AE61924B0A0
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0xAA653AE61924B0A0(vehicle, toggle)

--- 0xAB04325045427AAE
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xAB04325045427AAE(vehicle, p1)

--- 0xAB31EF4DE6800CE9
-- @param p0 Any
-- @param p1 Any
-- 0xAB31EF4DE6800CE9(p0, p1)

--- 0xAE3FEE8709B39DCB
-- @param vehicle Vehicle
-- 0xAE3FEE8709B39DCB(vehicle)

--- 0xAF60E6A2936F982A
-- @param p0 Any
-- @param p1 Any
-- 0xAF60E6A2936F982A(p0, p1)

--- 0xB2E0C0D6922D31F2
-- ```
SET_C*
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0xB2E0C0D6922D31F2(vehicle, toggle)

--- 0xB68CFAF83A02768D
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0xB68CFAF83A02768D(vehicle, toggle)

--- 0xB9562064627FF9DB
-- @param p0 Any
-- @param p1 Any
-- 0xB9562064627FF9DB(p0, p1)

--- 0xBB2333BB87DDD87F
-- @param p0 Any
-- @param p1 Any
-- 0xBB2333BB87DDD87F(p0, p1)

--- 0xBE5C1255A1830FF5
-- @param vehicle Vehicle
-- @param toggle BOOL
-- 0xBE5C1255A1830FF5(vehicle, toggle)

--- 0xC0ED6438E6D39BA8
-- @param p0 Any
-- @param p1 Any
-- @param p2 Any
-- 0xC0ED6438E6D39BA8(p0, p1, p2)

--- 0xC361AA040D6637A8
-- Vehicle must be a plane.
Native name is between SET_VEHICLE_BRAKE_LIGHTS and SET_VEHICLE_BULLDOZER_ARM_POSITION alphabetically.
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xC361AA040D6637A8(vehicle, p1)

--- 0xC4B3347BD68BD609
-- @param p0 Any
-- 0xC4B3347BD68BD609(p0)

--- 0xC50CE861B55EAB8B
-- ```
SET_VEHICLE_LI*
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xC50CE861B55EAB8B(vehicle, p1)

--- 0xCF9159024555488C
-- @param p0 Any
-- 0xCF9159024555488C(p0)

--- 0xCFD778E7904C255E
-- ```
what does this do?  
```
-- @param vehicle Vehicle
-- 0xCFD778E7904C255E(vehicle)

--- 0xD3301660A57C9272
-- @param p0 Any
-- 0xD3301660A57C9272(p0)

--- 0xD3E51C0AB8C26EEE
-- @param p0 Any
-- @param p1 Any
-- 0xD3E51C0AB8C26EEE(p0, p1)

--- 0xD4196117AF7BB974
-- @param p0 Any
-- @param p1 Any
-- 0xD4196117AF7BB974(p0, p1)

--- 0xD565F438137F0E10
-- @param p0 Any
-- @param p1 Any
-- 0xD565F438137F0E10(p0, p1)

--- 0xDBC631F109350B8C
-- ```
Related to locking the vehicle or something similar.  
In the decompiled scripts, its always called after  
VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);  
VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);  
VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);  
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xDBC631F109350B8C(vehicle, p1)

--- 0xDCE97BDF8A0EABC8
-- ```
NativeDB Added Parameter 1: Vehicle vehicle
NativeDB Added Parameter 2: Any p1
```
-- 0xDCE97BDF8A0EABC8()

--- 0xE05DD0E9707003A3
-- @param p0 Any
-- @param p1 BOOL
-- 0xE05DD0E9707003A3(p0, p1)

--- 0xE2F53F172B45EDE1
-- ```
RESET_*

Resets the effect of 0x428AD3E26C8D9EB0
```
-- 0xE2F53F172B45EDE1()

--- 0xE5810AC70602F2F5
-- @param vehicle Vehicle
-- @param p1 float
-- 0xE5810AC70602F2F5(vehicle, p1)

--- 0xE851E480B814D4BA
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xE851E480B814D4BA(vehicle, p1)

--- 0xE8718FAF591FD224
-- ```
GET_H*

NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- 0xE8718FAF591FD224(vehicle)

--- 0xED5EDE9E676643C9
-- @param p0 Any
-- @param p1 Any
-- 0xED5EDE9E676643C9(p0, p1)

--- 0xEEBFC7A7EFDC35B4
-- ```
Some kind of flags.  
```
-- @param vehicle Vehicle
-- 0xEEBFC7A7EFDC35B4(vehicle)

--- 0xEF9D388F8D377F44
-- ```
Only used in R* Script fm_content_cargo
```

```
NativeDB Introduced: v2699
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- 0xEF9D388F8D377F44(vehicle, p1)

--- 0xF051D9BFB6BA39C0
-- @param p0 Any
-- 0xF051D9BFB6BA39C0(p0)

--- 0xF25E02CB9C5818F8
-- 0xF25E02CB9C5818F8()

--- 0xF3B0E0AED097A3F5
-- @param p0 Any
-- @param p1 Any
-- 0xF3B0E0AED097A3F5(p0, p1)

--- 0xF8B49F5BA7F850E7
-- ```
NativeDB Introduced: v2060
```
-- @param vehicle Vehicle
-- @param p1 int
-- 0xF8B49F5BA7F850E7(vehicle, p1)

--- 0xFAF2A78061FD9EF4
-- @param p0 Any
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- 0xFAF2A78061FD9EF4(p0, p1, p2, p3)

--- ADD_ROAD_NODE_SPEED_ZONE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param speed float
-- @param p5 BOOL
-- ADD_ROAD_NODE_SPEED_ZONE(x, y, z, radius, speed, p5)

--- ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- ADD_VEHICLE_COMBAT_ANGLED_AVOIDANCE_AREA(p0, p1, p2, p3, p4, p5, p6)

--- ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE
-- @param vehicle Vehicle
-- ADD_VEHICLE_PHONE_EXPLOSIVE_DEVICE(vehicle)

--- ADD_VEHICLE_STUCK_CHECK_WITH_WARP
-- @param p0 Any
-- @param p1 float
-- @param p2 Any
-- @param p3 BOOL
-- @param p4 BOOL
-- @param p5 BOOL
-- @param p6 Any
-- ADD_VEHICLE_STUCK_CHECK_WITH_WARP(p0, p1, p2, p3, p4, p5, p6)

--- ADD_VEHICLE_UPSIDEDOWN_CHECK
-- @param vehicle Vehicle
-- ADD_VEHICLE_UPSIDEDOWN_CHECK(vehicle)

--- ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS
-- This native it's a debug native. Won't do anything.
-- @param vehicle Vehicle
-- ALLOW_AMBIENT_VEHICLES_TO_AVOID_ADVERSE_CONDITIONS(vehicle)

--- ARE_ALL_VEHICLE_WINDOWS_INTACT
-- ```
Appears to return false if any window is broken.  
```
-- @param vehicle Vehicle
-- ARE_ALL_VEHICLE_WINDOWS_INTACT(vehicle)

--- ARE_ANY_VEHICLE_SEATS_FREE
-- ```
Returns false if every seat is occupied.  
```
-- @param vehicle Vehicle
-- ARE_ANY_VEHICLE_SEATS_FREE(vehicle)

--- ARE_PLANE_CONTROL_PANELS_INTACT
-- Queries whether the control panels of a plane are intact. This native is used to determine the operational status of a plane's cockpit controls, which can affect the plane's flyability.
-- @param vehicle Vehicle - The vehicle to check. This should be a plane.
-- @param checkForZeroHealth BOOL - If set to `true`, the native also checks if the plane's health is zero, indicating it is completely destroyed. If `false`, only the state of the control panels is considered.
-- ARE_PLANE_CONTROL_PANELS_INTACT(vehicle, checkForZeroHealth)

--- ARE_PLANE_PROPELLERS_INTACT
-- @param plane Vehicle
-- ARE_PLANE_PROPELLERS_INTACT(plane)

--- ATTACH_ENTITY_TO_CARGOBOB
-- @param vehicle Vehicle
-- @param entity Entity
-- @param p2 int
-- @param x float
-- @param y float
-- @param z float
-- ATTACH_ENTITY_TO_CARGOBOB(vehicle, entity, p2, x, y, z)

--- ATTACH_VEHICLE_ON_TO_TRAILER
-- @param vehicle Vehicle - The vehicle to attach to the trailer
-- @param trailer Vehicle - The trailer to attach the vehicle to
-- @param offsetX float - The x offset of the vehicle
-- @param offsetY float - The y offset of the vehicle
-- @param offsetZ float - The z offset of the vehicle
-- @param coordsX float - The x coords of where you want the vehicle placed (must be an offset from the trailer itself)
-- @param coordsY float - The y coords of where you want the vehicle placed (must be an offset from the trailer itself)
-- @param coordsZ float - The z coords of where you want the vehicle placed (must be an offset from the trailer itself)
-- @param rotationX float - The x rotation of where you want the vehicle placed
-- @param rotationY float - The y rotation of where you want the vehicle placed
-- @param rotationZ float - The z rotation of where you want the vehicle placed
-- @param disableColls float - Should actually be a boolean, this will disable the collision between the vehicle you're attaching and the trailer
-- ATTACH_VEHICLE_ON_TO_TRAILER(vehicle, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableColls)

--- ATTACH_VEHICLE_TO_CARGOBOB
-- @param cargobob Vehicle - The cargobob
-- @param vehicle Vehicle - The vehicle that will be attached
-- @param vehicleBoneIndex int - A Vehicle bone the hook/magnet should attach to or -1 for none/default [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA)
-- @param x float - x hook/magnet Offset
-- @param y float - y hook/magnet Offset
-- @param z float - z hook/magnet Offset
-- ATTACH_VEHICLE_TO_CARGOBOB(cargobob, vehicle, vehicleBoneIndex, x, y, z)

--- ATTACH_VEHICLE_TO_TOW_TRUCK
-- ```
HookOffset defines where the hook is attached. leave at 0 for default attachment.
```
-- @param towTruck Vehicle
-- @param vehicle Vehicle
-- @param rear BOOL
-- @param hookOffsetX float
-- @param hookOffsetY float
-- @param hookOffsetZ float
-- ATTACH_VEHICLE_TO_TOW_TRUCK(towTruck, vehicle, rear, hookOffsetX, hookOffsetY, hookOffsetZ)

--- ATTACH_VEHICLE_TO_TRAILER
-- @param vehicle Vehicle
-- @param trailer Vehicle
-- @param radius float
-- ATTACH_VEHICLE_TO_TRAILER(vehicle, trailer, radius)

--- BRING_VEHICLE_TO_HALT
-- This native makes the vehicle stop immediately, as it happens when we enter a multiplayer garage.
-- @param vehicle Vehicle - The vehicle to stop.
-- @param distance float - The distance from the initial coords at which the vehicle should come to rest.
-- @param duration int - The length of time in seconds to hold the car at rest after stopping.
-- @param bControlVerticalVelocity BOOL - `false` by default which allows gravity to act normally in the z direction. Enable this option to halt the vehicle's vertical velocity as well.
-- BRING_VEHICLE_TO_HALT(vehicle, distance, duration, bControlVerticalVelocity)

--- CAN_ANCHOR_BOAT_HERE
-- Checks if a boat can be anchored at its present position without possibly intersecting collision later.

```
NativeDB Introduced: v323
```
-- @param boat Vehicle - The boat to check.
-- CAN_ANCHOR_BOAT_HERE(boat)

--- CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS
-- Checks if a boat can be anchored at its present position, ignoring any players standing on the boat.

```
NativeDB Introduced: v678
```
-- @param boat Vehicle - The boat to check.
-- CAN_ANCHOR_BOAT_HERE_IGNORE_PLAYERS(boat)

--- CAN_CARGOBOB_PICK_UP_ENTITY
-- Determines whether the specified Cargobob can pick up a given entity.
-- @param cargobob Vehicle - The Cargobob helicopter to be checked.
-- @param entity Entity - The entity to be checked for pick-up.
-- CAN_CARGOBOB_PICK_UP_ENTITY(cargobob, entity)

--- CAN_SHUFFLE_SEAT
-- @param vehicle Vehicle - The vehicle to check.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- CAN_SHUFFLE_SEAT(vehicle, seatIndex)

--- CLEAR_LAST_DRIVEN_VEHICLE
-- CLEAR_LAST_DRIVEN_VEHICLE()

--- CLEAR_NITROUS
-- ```
NativeDB Introduced: 3095
```

Resets or clears the nitrous system for a specified vehicle. You can check if a vehicle has nitrous with [`IS_NITROUS_ACTIVE`](#\_0x491E822B2C464FE4)
-- @param vehicle Vehicle - The vehicle whose nitrous system needs to be cleared.
-- CLEAR_NITROUS(vehicle)

--- CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR
-- @param vehicle Vehicle
-- CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle)

--- CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR
-- @param vehicle Vehicle
-- CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle)

--- CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST
-- Removes the cargen area of interest and resumes normal cargen spawning.

You can set the area of interest with [`SET_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#\_0x9A75585FB2E54FAD)
-- CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST()

--- CLEAR_VEHICLE_ROUTE_HISTORY
-- @param vehicle Vehicle
-- CLEAR_VEHICLE_ROUTE_HISTORY(vehicle)

--- CLOSE_BOMB_BAY_DOORS
-- @param vehicle Vehicle
-- CLOSE_BOMB_BAY_DOORS(vehicle)

--- CONTROL_LANDING_GEAR
-- ```
Works for vehicles with a retractable landing gear  
landing gear states:  
0: Deployed  
1: Closing  
2: Opening  
3: Retracted  
```
-- @param vehicle Vehicle
-- @param state int
-- CONTROL_LANDING_GEAR(vehicle, state)

--- COPY_VEHICLE_DAMAGES
-- Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
-- @param sourceVehicle Vehicle - The source to copy the vehicle damage.
-- @param targetVehicle Vehicle - The target to paste the vehicle damage.
-- COPY_VEHICLE_DAMAGES(sourceVehicle, targetVehicle)

--- CREATE_MISSION_TRAIN
-- Train models must be [requested](#\_0x963D27A58DF860AC) before use. See trains.xml (located in `Grand Theft Auto V\update\update.rpf\common\data\levels\gta5\trains.xml`) for freight and metro variations.

Model names to request can be found by searching `model_name` in the file.

The `Lua` usage example provided down below has been provided in such way so users can test each and every train variation.

### Newly added parameters (seen in 2372 build)

```
NativeDB Added Parameter 6: BOOL isNetwork
NativeDB Added Parameter 7: BOOL netMissionEntity
```

*   **isNetwork**: Whether to create a network object for the train. If false, the train exists only locally.
*   **netMissionEntity**: Whether to register the train as pinned to the script host in the R\* network model.

### Train Models:

*   freight

### Carriage Models:

*   freightcar
*   freightcar2 (Added v2372)
*   freightcont1
*   freightcont2
*   freightgrain
*   metrotrain
*   tankercar

### Some train variations (default from trains.xml as of build 2372)

*   17. Very long train and freight variation.
*   18. Freight train only.
*   26. Double metro train (with both models flipped opposite to each other). This used to be `25` before the 2802 build, it also used to be `24` before the 2372 build.
-- @param variation int - The variation id, these can range from 0 to 26 as of build 2802 (previously `0-25` in build 2372 and `0-24` before that).
-- @param x float - Spawn coordinate X component.
-- @param y float - Spawn coordinate Y component.
-- @param z float - Spawn coordinate Z component.
-- @param direction BOOL - The direction in which the train will go (true or false)
-- CREATE_MISSION_TRAIN(variation, x, y, z, direction)

--- CREATE_PICK_UP_ROPE_FOR_CARGOBOB
-- Drops the Hook/Magnet on a cargobob

```cpp
enum eCargobobHook  
{  
	CARGOBOB_HOOK = 0,  
	CARGOBOB_MAGNET = 1,  
};  
```
-- @param cargobob Vehicle
-- @param state int
-- CREATE_PICK_UP_ROPE_FOR_CARGOBOB(cargobob, state)

--- CREATE_SCRIPT_VEHICLE_GENERATOR
-- ```
Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.  
Parameters:  
a/w/s - Generator position  
heading - Generator heading  
p4 - Unknown (always 5.0)  
p5 - Unknown (always 3.0)  
modelHash - Vehicle model hash  
p7/8/9/10 - Unknown (always -1)  
p11 - Unknown (usually TRUE, only one instance of FALSE)  
p12/13 - Unknown (always FALSE)  
p14 - Unknown (usally FALSE, only two instances of TRUE)  
p15 - Unknown (always TRUE)  
p16 - Unknown (always -1)  
Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);  
```
-- @param x float
-- @param y float
-- @param z float
-- @param heading float
-- @param p4 float
-- @param p5 float
-- @param modelHash Hash
-- @param p7 int
-- @param p8 int
-- @param p9 int
-- @param p10 int
-- @param p11 BOOL
-- @param p12 BOOL
-- @param p13 BOOL
-- @param p14 BOOL
-- @param p15 BOOL
-- @param p16 int
-- CREATE_SCRIPT_VEHICLE_GENERATOR(x, y, z, heading, p4, p5, modelHash, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16)

--- CREATE_VEHICLE
-- Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).

```
NativeDB Added Parameter 8: BOOL p7
```
-- @param modelHash Hash - The model of vehicle to spawn.
-- @param x float - Spawn coordinate X component.
-- @param y float - Spawn coordinate Y component.
-- @param z float - Spawn coordinate Z component.
-- @param heading float - Heading to face towards, in degrees.
-- @param isNetwork BOOL - Whether to create a network object for the vehicle. If false, the vehicle exists only locally.
-- @param netMissionEntity BOOL - Whether to register the vehicle as pinned to the script host in the R\* network model.
-- CREATE_VEHICLE(modelHash, x, y, z, heading, isNetwork, netMissionEntity)

--- DELETE_ALL_TRAINS
-- DELETE_ALL_TRAINS()

--- DELETE_MISSION_TRAIN
-- Used to delete mission trains created with [`CREATE_MISSION_TRAIN`](#\_0x63C6CCA8E68AE8C8).
-- @param train Vehicle*
-- DELETE_MISSION_TRAIN(train)

--- DELETE_SCRIPT_VEHICLE_GENERATOR
-- Removes a scripted vehicle generator.
-- @param vehicleGenerator int
-- DELETE_SCRIPT_VEHICLE_GENERATOR(vehicleGenerator)

--- DELETE_VEHICLE
-- ```
Deletes a vehicle.  
The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  
eg how to use:  
SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);  
DELETE_VEHICLE(&vehicle);  
Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.  
```
-- @param vehicle Vehicle*
-- DELETE_VEHICLE(vehicle)

--- DETACH_CONTAINER_FROM_HANDLER_FRAME
-- @param vehicle Vehicle
-- DETACH_CONTAINER_FROM_HANDLER_FRAME(vehicle)

--- DETACH_ENTITY_FROM_CARGOBOB
-- Detaches the specified entity currently being carried by a Cargobob.
-- @param vehicle Vehicle - The Cargobob helicopter.
-- @param entity Entity - The entity to be detached.
-- DETACH_ENTITY_FROM_CARGOBOB(vehicle, entity)

--- DETACH_VEHICLE_FROM_ANY_CARGOBOB
-- @param vehicle Vehicle
-- DETACH_VEHICLE_FROM_ANY_CARGOBOB(vehicle)

--- DETACH_VEHICLE_FROM_ANY_TOW_TRUCK
-- @param vehicle Vehicle
-- DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(vehicle)

--- DETACH_VEHICLE_FROM_CARGOBOB
-- @param cargobob Vehicle
-- @param vehicle Vehicle
-- DETACH_VEHICLE_FROM_CARGOBOB(cargobob, vehicle)

--- DETACH_VEHICLE_FROM_TOW_TRUCK
-- ```
First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.  
```
-- @param towTruck Vehicle
-- @param vehicle Vehicle
-- DETACH_VEHICLE_FROM_TOW_TRUCK(towTruck, vehicle)

--- DETACH_VEHICLE_FROM_TRAILER
-- @param vehicle Vehicle
-- DETACH_VEHICLE_FROM_TRAILER(vehicle)

--- DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE
-- DETONATE_VEHICLE_PHONE_EXPLOSIVE_DEVICE()

--- DISABLE_INDIVIDUAL_PLANE_PROPELLER
-- @param vehicle Vehicle
-- @param propeller int
-- DISABLE_INDIVIDUAL_PLANE_PROPELLER(vehicle, propeller)

--- DISABLE_PLANE_AILERON
-- @param vehicle Vehicle
-- @param p1 BOOL
-- @param p2 BOOL
-- DISABLE_PLANE_AILERON(vehicle, p1, p2)

--- DISABLE_VEHICLE_WEAPON
-- ```
how does this work?  
```
-- @param disabled BOOL
-- @param weaponHash Hash
-- @param vehicle Vehicle
-- @param owner Ped
-- DISABLE_VEHICLE_WEAPON(disabled, weaponHash, vehicle, owner)

--- DOES_CARGOBOB_HAVE_PICKUP_MAGNET
-- ```
Returns true only when the magnet is active, will return false if the hook is active  
```
-- @param cargobob Vehicle
-- DOES_CARGOBOB_HAVE_PICKUP_MAGNET(cargobob)

--- DOES_CARGOBOB_HAVE_PICK_UP_ROPE
-- ```
Returns true only when the hook is active, will return false if the magnet is active  
```
-- @param cargobob Vehicle
-- DOES_CARGOBOB_HAVE_PICK_UP_ROPE(cargobob)

--- DOES_EXTRA_EXIST
-- ```
Checks via CVehicleModelInfo  
```
-- @param vehicle Vehicle
-- @param extraId int
-- DOES_EXTRA_EXIST(vehicle, extraId)

--- DOES_SCRIPT_VEHICLE_GENERATOR_EXIST
-- @param vehicleGenerator int
-- DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(vehicleGenerator)

--- DOES_VEHICLE_EXIST_WITH_DECORATOR
-- @param decorator char*
-- DOES_VEHICLE_EXIST_WITH_DECORATOR(decorator)

--- DOES_VEHICLE_HAVE_ROOF
-- Determines whether a specific vehicle is equipped with a roof.

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The vehicle to check for a roof presence.
-- DOES_VEHICLE_HAVE_ROOF(vehicle)

--- DOES_VEHICLE_HAVE_SEARCHLIGHT
-- Determines whether the specified vehicle is equipped with a searchlight.

```
NativeDB Introduced: v2189
```
-- @param vehicle Vehicle - The vehicle to check for the presence of a searchlight.
-- DOES_VEHICLE_HAVE_SEARCHLIGHT(vehicle)

--- DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK
-- ```
Maximum amount of vehicles with vehicle stuck check appears to be 16.  
```
-- @param vehicle Vehicle
-- DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(vehicle)

--- DOES_VEHICLE_HAVE_WEAPONS
-- @param vehicle Vehicle
-- DOES_VEHICLE_HAVE_WEAPONS(vehicle)

--- EXPLODE_VEHICLE
-- ```
Explodes a selected vehicle.  
Vehicle vehicle = Vehicle you want to explode.  
BOOL isAudible = If explosion makes a sound.  
BOOL isInvisible = If the explosion is invisible or not.  
First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.  
```
-- @param vehicle Vehicle
-- @param isAudible BOOL
-- @param isInvisible BOOL
-- EXPLODE_VEHICLE(vehicle, isAudible, isInvisible)

--- EXPLODE_VEHICLE_IN_CUTSCENE
-- @param vehicle Vehicle
-- @param p1 BOOL
-- EXPLODE_VEHICLE_IN_CUTSCENE(vehicle, p1)

--- FIX_VEHICLE_WINDOW
-- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).

This function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
-- @param vehicle Vehicle
-- @param windowIndex int
-- FIX_VEHICLE_WINDOW(vehicle, windowIndex)

--- FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE
-- ```
Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE(vehicle, p1)

--- FORCE_SUBMARINE_NEURTAL_BUOYANCY
-- Forces a submarine to maintain neutral buoyancy for a specified duration, preventing it from rising when unoccupied or without a driver.

```
NativeDB Introduced: v2189
```
-- @param submarine Vehicle - The submarine vehicle to apply neutral buoyancy to.
-- @param time int - The duration in milliseconds for which to maintain neutral buoyancy.
-- FORCE_SUBMARINE_NEURTAL_BUOYANCY(submarine, time)

--- FORCE_SUBMARINE_SURFACE_MODE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- FORCE_SUBMARINE_SURFACE_MODE(vehicle, toggle)

--- FULLY_CHARGE_NITROUS
-- ```
NativeDB Introduced: v3095
```

Recharges the nitrous system of the specified vehicle to its maximum capacity. This action sets the nitrous charge duration to the maximum limit defined by previous settings applied through [`SET_OVERRIDE_NITROUS_LEVEL`](#\_0xC8E9B6B71B8E660D).
-- @param vehicle Vehicle - The vehicle whose nitrous system is to be fully recharged.
-- FULLY_CHARGE_NITROUS(vehicle)

--- GET_BOAT_BOOM_POSITION_RATIO
-- @param vehicle Vehicle
-- GET_BOAT_BOOM_POSITION_RATIO(vehicle)

--- GET_BOAT_VEHICLE_MODEL_AGILITY
-- Retrieves the agility for a specific boat model, including any vehicle mods. Unlike other vehicles where Rockstar Games typically assess performance based on traction, boats use agility as a measure. This static value is distinct from the traction metrics used for other vehicle types.

```
NativeDB Introduced: v323
```
-- @param modelHash Hash - The model hash of the boat.
-- GET_BOAT_VEHICLE_MODEL_AGILITY(modelHash)

--- GET_CLOSEST_VEHICLE
-- ```
Example usage  
VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)   
x, y, z: Position to get closest vehicle to.  
radius: Max radius to get a vehicle.  
modelHash: Limit to vehicles with this model. 0 for any.  
flags: The bitwise flags altering the function's behaviour.  
Does not return police cars or helicopters.  
It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason  
Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.   
These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.  
Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles  
Conversion of found flags to binary: pastebin.com/kghNFkRi  
At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.   
It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT  
-------------------------------------------------------------------------  
Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
Use flag 127 to return police cars
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param modelHash Hash
-- @param flags int
-- GET_CLOSEST_VEHICLE(x, y, z, radius, modelHash, flags)

--- GET_CONVERTIBLE_ROOF_STATE
-- Returns the convertible state of the specified vehicle.

```cpp
enum eRoofState {
    RAISED = 0,
    LOWERING = 1,
    LOWERED = 2,
    RAISING = 3,
    CLOSING_BOOT = 4,
    ROOF_STUCK_RAISED = 5,
    ROOF_STUCK_LOWERED = 6
}
```
-- @param vehicle Vehicle - Vehicle to get the state of
-- GET_CONVERTIBLE_ROOF_STATE(vehicle)

--- GET_CURRENT_PLAYBACK_FOR_VEHICLE
-- @param vehicle Vehicle
-- GET_CURRENT_PLAYBACK_FOR_VEHICLE(vehicle)

--- GET_DISPLAY_NAME_FROM_VEHICLE_MODEL
-- Returns the display name/text label (`gameName` in `vehicles.meta`) for the specified vehicle model.
-- @param modelHash Hash - A vehicle model to check.
-- GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(modelHash)

--- GET_ENTITY_ATTACHED_TO_TOW_TRUCK
-- @param towTruck Vehicle
-- GET_ENTITY_ATTACHED_TO_TOW_TRUCK(towTruck)

--- GET_HELI_MAIN_ROTOR_HEALTH
-- ```
Max 1000.  
At 0 the main rotor will stall.  
```
-- @param vehicle Vehicle
-- GET_HELI_MAIN_ROTOR_HEALTH(vehicle)

--- GET_HELI_TAIL_BOOM_HEALTH
-- ```
Max 1000.
At -100 both helicopter rotors will stall.
```
-- @param vehicle Vehicle
-- GET_HELI_TAIL_BOOM_HEALTH(vehicle)

--- GET_HELI_TAIL_ROTOR_HEALTH
-- ```
NativeDB Introduced: v323
```
-- @param heli Vehicle - Helicopter for which you want to get the rotor health.
-- GET_HELI_TAIL_ROTOR_HEALTH(heli)

--- GET_IS_BOAT_CAPSIZED
-- Checks whether the specified boat vehicle is capsized, meaning it has overturned or is upside down in the water.
-- @param vehicle Vehicle - The vehicle to check. This should be a boat-type vehicle.
-- GET_IS_BOAT_CAPSIZED(vehicle)

--- GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED
-- ```
From the driver's perspective, is the left headlight broken.  
```
-- @param vehicle Vehicle
-- GET_IS_LEFT_VEHICLE_HEADLIGHT_DAMAGED(vehicle)

--- GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED
-- ```
From the driver's perspective, is the right headlight broken.  
```
-- @param vehicle Vehicle
-- GET_IS_RIGHT_VEHICLE_HEADLIGHT_DAMAGED(vehicle)

--- GET_IS_VEHICLE_ENGINE_RUNNING
-- ```
Returns true when in a vehicle, false whilst entering/exiting.  
```
-- @param vehicle Vehicle
-- GET_IS_VEHICLE_ENGINE_RUNNING(vehicle)

--- GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM
-- @param vehicle Vehicle
-- GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(vehicle)

--- GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM
-- ```
Check if Vehicle Secondary is avaliable for customize  
```
-- @param vehicle Vehicle
-- GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(vehicle)

--- GET_LANDING_GEAR_STATE
-- ```
Landing gear states:  
0: Deployed  
1: Closing (Retracting)
3: Opening (Deploying)
4: Retracted  
5: Broken
```

Landing gear state 2 is never used.
-- @param vehicle Vehicle - The vehicle to check.
-- GET_LANDING_GEAR_STATE(vehicle)

--- GET_LAST_DRIVEN_VEHICLE
-- GET_LAST_DRIVEN_VEHICLE()

--- GET_LAST_PED_IN_VEHICLE_SEAT
-- @param vehicle Vehicle - The vehicle to get the ped for.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- GET_LAST_PED_IN_VEHICLE_SEAT(vehicle, seatIndex)

--- GET_LIVERY_NAME
-- ```
Second Param = LiveryIndex  
example   
int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);  
for (int i = 0; i < count; i++)    
	{  
char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);  
	}  
this example will work fine to fetch all names   
for example for Sanchez we get   
SANC_LV1  
SANC_LV2  
SANC_LV3  
SANC_LV4  
SANC_LV5  
Use _GET_LABEL_TEXT, to get the localized livery name.  
-----------  
NOTE: You may need to set the vehicle's modKit to 0 by using this function: SET_VEHICLE_MOD_KIT() before getting the name, otherwise this native may return NULL.  
dev-c.com/nativedb/func/info/1f2aa07f00b3217a  
```
-- @param vehicle Vehicle
-- @param liveryIndex int
-- GET_LIVERY_NAME(vehicle, liveryIndex)

--- GET_MAKE_NAME_FROM_VEHICLE_MODEL
-- Retrieves the manufacturer's name for a specified vehicle.

```
NativeDB Introduced: v1868
```
-- @param modelHash Hash - The model hash of the vehicle.
-- GET_MAKE_NAME_FROM_VEHICLE_MODEL(modelHash)

--- GET_MOD_SLOT_NAME
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- GET_MOD_SLOT_NAME(vehicle, modType)

--- GET_MOD_TEXT_LABEL
-- ```
Returns the text label of a mod type for a given vehicle  
Use _GET_LABEL_TEXT to get the part name in the game's language  
```
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @param modValue int
-- GET_MOD_TEXT_LABEL(vehicle, modType, modValue)

--- GET_NUMBER_OF_VEHICLE_COLOURS
-- ```
Actually number of color combinations  
```
-- @param vehicle Vehicle
-- GET_NUMBER_OF_VEHICLE_COLOURS(vehicle)

--- GET_NUMBER_OF_VEHICLE_NUMBER_PLATES
-- ```
Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.  
```
-- GET_NUMBER_OF_VEHICLE_NUMBER_PLATES()

--- GET_NUM_MOD_COLORS
-- ```
paintType:
0: Normal
1: Metallic
2: Pearl
3: Matte
4: Metal
5: Chrome
```
-- @param paintType int
-- @param p1 BOOL
-- GET_NUM_MOD_COLORS(paintType, p1)

--- GET_NUM_MOD_KITS
-- @param vehicle Vehicle
-- GET_NUM_MOD_KITS(vehicle)

--- GET_NUM_VEHICLE_MODS
-- ```
Returns how many possible mods a vehicle has for a given mod type  
```
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- GET_NUM_VEHICLE_MODS(vehicle, modType)

--- GET_NUM_VEHICLE_WINDOW_TINTS
-- GET_NUM_VEHICLE_WINDOW_TINTS()

--- GET_PED_IN_VEHICLE_SEAT
-- Gets the ped in the specified seat of the passed vehicle.

If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.

**NativeDB Added Parameter 3**: BOOL p2 (uses a different GetOccupant function)
-- @param vehicle Vehicle - The vehicle to get the ped for.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- GET_PED_IN_VEHICLE_SEAT(vehicle, seatIndex)

--- GET_PED_USING_VEHICLE_DOOR
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- GET_PED_USING_VEHICLE_DOOR(vehicle, doorIndex)

--- GET_POSITION_IN_RECORDING
-- ```
Distance traveled in the vehicles current recording.
```
-- @param vehicle Vehicle
-- GET_POSITION_IN_RECORDING(vehicle)

--- GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME
-- This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.

See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
-- @param recording int
-- @param time float
-- @param script char*
-- GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(recording, time, script)

--- GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME
-- @param id int
-- @param time float
-- GET_POSITION_OF_VEHICLE_RECORDING_ID_AT_TIME(id, time)

--- GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 int
-- @param p5 int
-- @param p6 int
-- GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(p0, p1, p2, p3, p4, p5, p6)

--- GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 int
-- @param p5 int
-- @param p6 int
-- GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(p0, p1, p2, p3, p4, p5, p6)

--- GET_RANDOM_VEHICLE_IN_SPHERE
-- ```
Gets a random vehicle in a sphere at the specified position, of the specified radius.  
x: The X-component of the position of the sphere.  
y: The Y-component of the position of the sphere.  
z: The Z-component of the position of the sphere.  
radius: The radius of the sphere. Max is 9999.9004.  
modelHash: The vehicle model to limit the selection to. Pass 0 for any model.  
flags: The bitwise flags that modifies the behaviour of this function.  
```
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param modelHash Hash
-- @param flags int
-- GET_RANDOM_VEHICLE_IN_SPHERE(x, y, z, radius, modelHash, flags)

--- GET_RANDOM_VEHICLE_MODEL_IN_MEMORY
-- ```
Not present in the retail version! It's just a nullsub.  
p0 always true (except in one case)  
p1 a random vehicle hash loaded in memory  
successIndicator: 0 if success, -1 if failed
```
-- @param p0 BOOL
-- @param modelHash Hash*
-- @param successIndicator int*
-- GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(p0, modelHash, successIndicator)

--- GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME
-- @param recording int
-- @param time float
-- @param script char*
-- GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(recording, time, script)

--- GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME
-- @param id int
-- @param time float
-- GET_ROTATION_OF_VEHICLE_RECORDING_ID_AT_TIME(id, time)

--- GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH
-- Determines if the submarine is operating below its designated crush depth.

```
NativeDB Introduced: v2189
```
-- @param submarine Vehicle - The submarine vehicle to be evaluated for being under its crush depth threshold.
-- GET_SUBMARINE_IS_UNDER_DESIGN_DEPTH(submarine)

--- GET_SUBMARINE_NUMBER_OF_AIR_LEAKS
-- Checks if a Submarine has any air leaks, when there is more than 4 the player will drown.

```
NativeDB Introduced: v2189
```
-- @param submarine Vehicle - The submarine vehicle to check for air leaks.
-- GET_SUBMARINE_NUMBER_OF_AIR_LEAKS(submarine)

--- GET_TIME_POSITION_IN_RECORDING
-- ```
Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
```
-- @param vehicle Vehicle
-- GET_TIME_POSITION_IN_RECORDING(vehicle)

--- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING
-- @param recording int
-- @param script char*
-- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(recording, script)

--- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID
-- @param id int
-- GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(id)

--- GET_TRAIN_CARRIAGE
-- ```
Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.  
```
-- @param train Vehicle
-- @param trailerNumber int
-- GET_TRAIN_CARRIAGE(train, trailerNumber)

--- GET_VEHICLE_ACCELERATION
-- Retrieves a static value representing the maximum drive force of specific a vehicle, including any vehicle mods. This value does not change dynamically during gameplay. This value provides an approximation and should be considered alongside other performance metrics like top speed for a more comprehensive understanding of the vehicle's capabilities.

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The vehicle for which to obtain the acceleration.
-- GET_VEHICLE_ACCELERATION(vehicle)

--- GET_VEHICLE_ATTACHED_TO_CARGOBOB
-- ```
Returns attached vehicle (Vehicle in parameter must be cargobob)  
```
-- @param cargobob Vehicle
-- GET_VEHICLE_ATTACHED_TO_CARGOBOB(cargobob)

--- GET_VEHICLE_BODY_HEALTH
-- ```
Seems related to vehicle health, like the one in IV.  
Max 1000, min 0.  
Vehicle does not necessarily explode or become undrivable at 0.  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_BODY_HEALTH(vehicle)

--- GET_VEHICLE_CAUSE_OF_DESTRUCTION
-- @param vehicle Vehicle - The vehicle to get the cause of destruction of.
-- GET_VEHICLE_CAUSE_OF_DESTRUCTION(vehicle)

--- GET_VEHICLE_CLASS
-- ```
Returns an int  
Vehicle Classes:  
0: Compacts  
1: Sedans  
2: SUVs  
3: Coupes  
4: Muscle  
5: Sports Classics  
6: Sports  
7: Super  
8: Motorcycles  
9: Off-road  
10: Industrial  
11: Utility  
12: Vans  
13: Cycles  
14: Boats  
15: Helicopters  
16: Planes  
17: Service  
18: Emergency  
19: Military  
20: Commercial  
21: Trains  
22: Open Wheel
char buffer[128];  
std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));  
char* className = UI::_GET_LABEL_TEXT(buffer);  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_CLASS(vehicle)

--- GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED
-- @param vehicleClass int
-- GET_VEHICLE_CLASS_ESTIMATED_MAX_SPEED(vehicleClass)

--- GET_VEHICLE_CLASS_FROM_NAME
-- ```
For a full enum, see here : pastebin.com/i2GGAjY0
char buffer[128];
std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));
const char* className = HUD::_GET_LABEL_TEXT(buffer);
```
-- @param modelHash Hash
-- GET_VEHICLE_CLASS_FROM_NAME(modelHash)

--- GET_VEHICLE_CLASS_MAX_ACCELERATION
-- @param vehicleClass int
-- GET_VEHICLE_CLASS_MAX_ACCELERATION(vehicleClass)

--- GET_VEHICLE_CLASS_MAX_AGILITY
-- @param vehicleClass int
-- GET_VEHICLE_CLASS_MAX_AGILITY(vehicleClass)

--- GET_VEHICLE_CLASS_MAX_BRAKING
-- @param vehicleClass int
-- GET_VEHICLE_CLASS_MAX_BRAKING(vehicleClass)

--- GET_VEHICLE_CLASS_MAX_TRACTION
-- @param vehicleClass int
-- GET_VEHICLE_CLASS_MAX_TRACTION(vehicleClass)

--- GET_VEHICLE_COLOR
-- See [`SET_VEHICLE_CUSTOM_PRIMARY_COLOUR`](#\_0x7141766F91D15BEA) and [`SET_VEHICLE_CUSTOM_SECONDARY_COLOUR`](#\_0x36CED73BFED89754).
-- @param vehicle Vehicle - The target vehicle
-- @param r int*
-- @param g int*
-- @param b int*
-- GET_VEHICLE_COLOR(vehicle, r, g, b)

--- GET_VEHICLE_COLOURS
-- @param vehicle Vehicle
-- @param colorPrimary int*
-- @param colorSecondary int*
-- GET_VEHICLE_COLOURS(vehicle, colorPrimary, colorSecondary)

--- GET_VEHICLE_COLOUR_COMBINATION
-- @param vehicle Vehicle
-- GET_VEHICLE_COLOUR_COMBINATION(vehicle)

--- GET_VEHICLE_CUSTOM_PRIMARY_COLOUR
-- @param vehicle Vehicle
-- @param r int*
-- @param g int*
-- @param b int*
-- GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, r, g, b)

--- GET_VEHICLE_CUSTOM_SECONDARY_COLOUR
-- @param vehicle Vehicle
-- @param r int*
-- @param g int*
-- @param b int*
-- GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, r, g, b)

--- GET_VEHICLE_DEFORMATION_AT_POS
-- ```
The only example I can find of this function in the scripts, is this:  
struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);  
-----------------------------------------------------------------------------------------------------------------------------------------  
PC scripts:  
v_5/*{3}*/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);  
```
-- @param vehicle Vehicle
-- @param offsetX float
-- @param offsetY float
-- @param offsetZ float
-- GET_VEHICLE_DEFORMATION_AT_POS(vehicle, offsetX, offsetY, offsetZ)

--- GET_VEHICLE_DIRT_LEVEL
-- A getter for [`SET_VEHICLE_DIRT_LEVEL`](#\_0x79D3B596FE44EE8B).
-- @param vehicle Vehicle - The vehicle to check.
-- GET_VEHICLE_DIRT_LEVEL(vehicle)

--- GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
-- @param vehicle Vehicle
-- @param player Player
-- GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, player)

--- GET_VEHICLE_DOOR_ANGLE_RATIO
-- Checks the angle of the door mapped from 0.0 - 1.0 where 0.0 is fully closed and 1.0 is fully open.

See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle - Vehicle
-- @param doorIndex int - Index of door to check
-- GET_VEHICLE_DOOR_ANGLE_RATIO(vehicle, doorIndex)

--- GET_VEHICLE_DOOR_LOCK_STATUS
-- @param vehicle Vehicle
-- GET_VEHICLE_DOOR_LOCK_STATUS(vehicle)

--- GET_VEHICLE_ENGINE_HEALTH
-- ```
Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.  
Minimum: -4000  
Maximum: 1000  
-4000: Engine is destroyed  
0 and below: Engine catches fire and health rapidly declines  
300: Engine is smoking and losing functionality  
1000: Engine is perfect  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_ENGINE_HEALTH(vehicle)

--- GET_VEHICLE_ENVEFF_SCALE
-- ```
formerly known as _GET_VEHICLE_PAINT_FADE
The result is a value from 0-1, where 0 is fresh paint.
```
-- @param vehicle Vehicle
-- GET_VEHICLE_ENVEFF_SCALE(vehicle)

--- GET_VEHICLE_ESTIMATED_MAX_SPEED
-- Retrieves a static value representing the estimated max speed of a specific vehicle, including any vehicle mods. This value does not change dynamically during gameplay.

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The vehicle for which to obtain the estimated max speed.
-- GET_VEHICLE_ESTIMATED_MAX_SPEED(vehicle)

--- GET_VEHICLE_EXTRA_COLOURS
-- @param vehicle Vehicle
-- @param pearlescentColor int*
-- @param wheelColor int*
-- GET_VEHICLE_EXTRA_COLOURS(vehicle, pearlescentColor, wheelColor)

--- GET_VEHICLE_FLIGHT_NOZZLE_POSITION
-- @param aircraft Vehicle - The vehicle to check the hover mode on.
-- GET_VEHICLE_FLIGHT_NOZZLE_POSITION(aircraft)

--- GET_VEHICLE_HAS_KERS
-- @param vehicle Vehicle - The vehicle handle.
-- GET_VEHICLE_HAS_KERS(vehicle)

--- GET_VEHICLE_HEALTH_PERCENTAGE
-- ```
NativeDB Added Parameter 2: float maxEngineHealth
NativeDB Added Parameter 3: float maxPetrolTankHealth
NativeDB Added Parameter 4: float maxBodyHealth
NativeDB Added Parameter 5: float maxMainRotorHealth
NativeDB Added Parameter 6: float maxTailRotorHealth
NativeDB Added Parameter 7: float maxUnkHealth
```
-- @param vehicle Vehicle
-- GET_VEHICLE_HEALTH_PERCENTAGE(vehicle)

--- GET_VEHICLE_HOMING_LOCKON_STATE
-- ```
Returns a value depending on the lock-on state of vehicle weapons.
0: not locked on
1: locking on
2: locked on
```
-- @param vehicle Vehicle
-- GET_VEHICLE_HOMING_LOCKON_STATE(vehicle)

--- GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- GET_VEHICLE_INDIVIDUAL_DOOR_LOCK_STATUS(vehicle, doorIndex)

--- GET_VEHICLE_IS_MERCENARY
-- Returns whether the specified vehicle is designated as a mercenary vehicle
-- @param vehicle Vehicle - The vehicle to check for mercenary status.
-- GET_VEHICLE_IS_MERCENARY(vehicle)

--- GET_VEHICLE_LAYOUT_HASH
-- @param vehicle Vehicle
-- GET_VEHICLE_LAYOUT_HASH(vehicle)

--- GET_VEHICLE_LIGHTS_STATE
-- @param vehicle Vehicle
-- @param lightsOn BOOL*
-- @param highbeamsOn BOOL*
-- GET_VEHICLE_LIGHTS_STATE(vehicle, lightsOn, highbeamsOn)

--- GET_VEHICLE_LIVERY
-- ```
-1 = no livery  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_LIVERY(vehicle)

--- GET_VEHICLE_LIVERY_COUNT
-- ```
Returns -1 if the vehicle has no livery  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_LIVERY_COUNT(vehicle)

--- GET_VEHICLE_LOCK_ON_TARGET
-- @param vehicle Vehicle
-- @param entity Entity*
-- GET_VEHICLE_LOCK_ON_TARGET(vehicle, entity)

--- GET_VEHICLE_MAX_BRAKING
-- @param vehicle Vehicle
-- GET_VEHICLE_MAX_BRAKING(vehicle)

--- GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS
-- @param vehicle Vehicle
-- GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle)

--- GET_VEHICLE_MAX_TRACTION
-- @param vehicle Vehicle
-- GET_VEHICLE_MAX_TRACTION(vehicle)

--- GET_VEHICLE_MOD
-- @param vehicle Vehicle - The vehicle to get the mod of.
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- GET_VEHICLE_MOD(vehicle, modType)

--- GET_VEHICLE_MODEL_ACCELERATION
-- Returns the acceleration of the specified model.
-- @param modelHash Hash
-- GET_VEHICLE_MODEL_ACCELERATION(modelHash)

--- GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED
-- ```
Returns max speed (without mods) of the specified vehicle model in m/s.
```
-- @param modelHash Hash
-- GET_VEHICLE_MODEL_ESTIMATED_MAX_SPEED(modelHash)

--- GET_VEHICLE_MODEL_MAX_BRAKING
-- ```
Returns max braking of the specified vehicle model.
```
-- @param modelHash Hash
-- GET_VEHICLE_MODEL_MAX_BRAKING(modelHash)

--- GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS
-- @param modelHash Hash
-- GET_VEHICLE_MODEL_MAX_BRAKING_MAX_MODS(modelHash)

--- GET_VEHICLE_MODEL_MAX_TRACTION
-- ```
Returns max traction of the specified vehicle model.
```
-- @param modelHash Hash
-- GET_VEHICLE_MODEL_MAX_TRACTION(modelHash)

--- GET_VEHICLE_MODEL_NUMBER_OF_SEATS
-- ```
Returns max number of passengers (including the driver) for the specified vehicle model.
```
-- @param modelHash Hash
-- GET_VEHICLE_MODEL_NUMBER_OF_SEATS(modelHash)

--- GET_VEHICLE_MODEL_VALUE
-- ```
Returns `nMonetaryValue` from handling.meta for specific model, which is the vehicle's monetary value.
```
-- @param vehicleModel Hash
-- GET_VEHICLE_MODEL_VALUE(vehicleModel)

--- GET_VEHICLE_MOD_COLOR_1
-- @param vehicle Vehicle
-- @param paintType int*
-- @param color int*
-- @param pearlescentColor int*
-- GET_VEHICLE_MOD_COLOR_1(vehicle, paintType, color, pearlescentColor)

--- GET_VEHICLE_MOD_COLOR_1_NAME
-- ```
returns a string which is the codename of the vehicle's currently selected primary color  
p1 is always 0  
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- GET_VEHICLE_MOD_COLOR_1_NAME(vehicle, p1)

--- GET_VEHICLE_MOD_COLOR_2
-- @param vehicle Vehicle
-- @param paintType int*
-- @param color int*
-- GET_VEHICLE_MOD_COLOR_2(vehicle, paintType, color)

--- GET_VEHICLE_MOD_COLOR_2_NAME
-- ```
returns a string which is the codename of the vehicle's currently selected secondary color  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_MOD_COLOR_2_NAME(vehicle)

--- GET_VEHICLE_MOD_IDENTIFIER_HASH
-- ```
Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
```
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @param modIndex int
-- GET_VEHICLE_MOD_IDENTIFIER_HASH(vehicle, modType, modIndex)

--- GET_VEHICLE_MOD_KIT
-- @param vehicle Vehicle
-- GET_VEHICLE_MOD_KIT(vehicle)

--- GET_VEHICLE_MOD_KIT_TYPE
-- @param vehicle Vehicle
-- GET_VEHICLE_MOD_KIT_TYPE(vehicle)

--- GET_VEHICLE_MOD_MODIFIER_VALUE
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @param modIndex int
-- GET_VEHICLE_MOD_MODIFIER_VALUE(vehicle, modType, modIndex)

--- GET_VEHICLE_MOD_VARIATION
-- ```
Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
```
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- GET_VEHICLE_MOD_VARIATION(vehicle, modType)

--- GET_VEHICLE_NUMBER_OF_PASSENGERS
-- ```
Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_NUMBER_OF_PASSENGERS(vehicle)

--- GET_VEHICLE_NUMBER_PLATE_TEXT
-- ```
Returns the license plate text from a vehicle.  8 chars maximum.  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_NUMBER_PLATE_TEXT(vehicle)

--- GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX
-- ```cpp
enum eVehiclePlateIndicies {
	SanAndreasCursive = 0,
	SanAndreasBlack = 1,
	SanAndreasBlue = 2,
	SanAndreasPlain = 3,
	SRExcept = 4,
	NorthYankton = 5,
	// All indicies below this require b3095
	ECola = 6,
	LasVenturas = 7,
	LiberyCity = 8,
	LSCarMeet = 9,
	LSPanic = 10,
	LSPounders = 11,
	Sprunk = 12,
}
```
-- @param vehicle Vehicle - The vehicle to get the plate index of
-- GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle)

--- GET_VEHICLE_PETROL_TANK_HEALTH
-- ```
1000 is max health  
Begins leaking gas at around 650 health  
```
-- @param vehicle Vehicle
-- GET_VEHICLE_PETROL_TANK_HEALTH(vehicle)

--- GET_VEHICLE_PLATE_TYPE
-- Returns the plates a vehicle has.

```cpp
enum eVehiclePlateType
{
	VPT_FRONT_AND_BACK_PLATES = 0,
	VPT_FRONT_PLATES = 1,
	VPT_BACK_PLATES = 2,
	VPT_NONE = 3,
};
```

Motorcycles with no visible plates will sometimes return a 2 for unknown reasons.
-- @param vehicle Vehicle
-- GET_VEHICLE_PLATE_TYPE(vehicle)

--- GET_VEHICLE_RECORDING_ID
-- See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
-- @param recording int
-- @param script char*
-- GET_VEHICLE_RECORDING_ID(recording, script)

--- GET_VEHICLE_TRAILER_VEHICLE
-- ```
Gets the trailer of a vehicle and puts it into the trailer parameter.  
```
-- @param vehicle Vehicle
-- @param trailer Vehicle*
-- GET_VEHICLE_TRAILER_VEHICLE(vehicle, trailer)

--- GET_VEHICLE_TYRES_CAN_BURST
-- @param vehicle Vehicle
-- GET_VEHICLE_TYRES_CAN_BURST(vehicle)

--- GET_VEHICLE_TYRE_SMOKE_COLOR
-- @param vehicle Vehicle
-- @param r int*
-- @param g int*
-- @param b int*
-- GET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, r, g, b)

--- GET_VEHICLE_WHEEL_TYPE
-- ```cpp
enum eVehicleWheelType
{
    VWT_SPORT = 0,
    VWT_MUSCLE = 1,
    VWT_LOWRIDER = 2,
    VWT_SUV = 3,
    VWT_OFFROAD = 4,
    VWT_TUNER = 5,
    VWT_BIKE = 6,
    VWT_HIEND = 7,
    // Benny's Original
    VWT_SUPERMOD1 = 8,
    // Benny's Bespoke
    VWT_SUPERMOD2 = 9,
    // Open Wheel
    VWT_SUPERMOD3 = 10,
    // Street
    VWT_SUPERMOD4 = 11,
    // Track
    VWT_SUPERMOD5 = 12,
};
```
-- @param vehicle Vehicle
-- GET_VEHICLE_WHEEL_TYPE(vehicle)

--- GET_VEHICLE_WINDOW_TINT
-- @param vehicle Vehicle
-- GET_VEHICLE_WINDOW_TINT(vehicle)

--- HAS_PRELOAD_MODS_FINISHED
-- @param p0 Any
-- HAS_PRELOAD_MODS_FINISHED(p0)

--- HAS_VEHICLE_ASSET_LOADED
-- @param vehicleAsset int
-- HAS_VEHICLE_ASSET_LOADED(vehicleAsset)

--- HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE
-- HAS_VEHICLE_PHONE_EXPLOSIVE_DEVICE()

--- HAS_VEHICLE_RECORDING_BEEN_LOADED
-- @param recording int
-- @param script char*
-- HAS_VEHICLE_RECORDING_BEEN_LOADED(recording, script)

--- HAVE_VEHICLE_MODS_STREAMED_IN
-- @param vehicle Vehicle
-- HAVE_VEHICLE_MODS_STREAMED_IN(vehicle)

--- INSTANTLY_FILL_VEHICLE_POPULATION
-- INSTANTLY_FILL_VEHICLE_POPULATION()

--- IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME
-- @param vehicle Vehicle
-- IS_ANY_ENTITY_ATTACHED_TO_HANDLER_FRAME(vehicle)

--- IS_ANY_PED_RAPPELLING_FROM_HELI
-- @param vehicle Vehicle
-- IS_ANY_PED_RAPPELLING_FROM_HELI(vehicle)

--- IS_ANY_VEHICLE_NEAR_POINT
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- IS_ANY_VEHICLE_NEAR_POINT(x, y, z, radius)

--- IS_BIG_VEHICLE
-- @param vehicle Vehicle
-- IS_BIG_VEHICLE(vehicle)

--- IS_BOAT_ANCHORED
-- Checks if a boat is currently anchored.

This native is a getter for [SET_BOAT_ANCHOR](#\_0x75DBEC174AEEAD10).

```
NativeDB Introduced: v573
```
-- @param boat Vehicle - The boat to check.
-- IS_BOAT_ANCHORED(boat)

--- IS_COP_VEHICLE_IN_AREA_3D
-- ```
Usage:  
public bool isCopInRange(Vector3 Location, float Range)  
        {  
            return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);  
        }  
```
-- @param x1 float
-- @param x2 float
-- @param y1 float
-- @param y2 float
-- @param z1 float
-- @param z2 float
-- IS_COP_VEHICLE_IN_AREA_3D(x1, x2, y1, y2, z1, z2)

--- IS_ENTITY_ATTACHED_TO_HANDLER_FRAME
-- @param vehicle Vehicle
-- @param entity Entity
-- IS_ENTITY_ATTACHED_TO_HANDLER_FRAME(vehicle, entity)

--- IS_HELI_LANDING_AREA_BLOCKED
-- @param vehicle Vehicle
-- IS_HELI_LANDING_AREA_BLOCKED(vehicle)

--- IS_HELI_PART_BROKEN
-- @param vehicle Vehicle
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- IS_HELI_PART_BROKEN(vehicle, p1, p2, p3)

--- IS_NITROUS_ACTIVE
-- ```
NativeDB Introduced: 3095
```

Determines if the nitrous is currently activated in the specified vehicle.
-- @param vehicle Vehicle - The vehicle to check.
-- IS_NITROUS_ACTIVE(vehicle)

--- IS_PLANE_LANDING_GEAR_INTACT
-- @param plane Vehicle
-- IS_PLANE_LANDING_GEAR_INTACT(plane)

--- IS_PLAYBACK_GOING_ON_FOR_VEHICLE
-- @param vehicle Vehicle
-- IS_PLAYBACK_GOING_ON_FOR_VEHICLE(vehicle)

--- IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE
-- @param vehicle Vehicle
-- IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(vehicle)

--- IS_SEAT_WARP_ONLY
-- @param vehicle Vehicle - The vehicle to check.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- IS_SEAT_WARP_ONLY(vehicle, seatIndex)

--- IS_TAXI_LIGHT_ON
-- @param vehicle Vehicle
-- IS_TAXI_LIGHT_ON(vehicle)

--- IS_THIS_MODEL_A_BICYCLE
-- @param model Hash
-- IS_THIS_MODEL_A_BICYCLE(model)

--- IS_THIS_MODEL_A_BIKE
-- @param model Hash
-- IS_THIS_MODEL_A_BIKE(model)

--- IS_THIS_MODEL_A_BOAT
-- @param model Hash
-- IS_THIS_MODEL_A_BOAT(model)

--- IS_THIS_MODEL_A_CAR
-- ```
To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)  
```
-- @param model Hash
-- IS_THIS_MODEL_A_CAR(model)

--- IS_THIS_MODEL_A_HELI
-- @param model Hash
-- IS_THIS_MODEL_A_HELI(model)

--- IS_THIS_MODEL_A_PLANE
-- @param model Hash
-- IS_THIS_MODEL_A_PLANE(model)

--- IS_THIS_MODEL_A_QUADBIKE
-- @param model Hash
-- IS_THIS_MODEL_A_QUADBIKE(model)

--- IS_THIS_MODEL_A_TRAIN
-- @param model Hash
-- IS_THIS_MODEL_A_TRAIN(model)

--- IS_TOGGLE_MOD_ON
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- IS_TOGGLE_MOD_ON(vehicle, modType)

--- IS_TURRET_SEAT
-- @param vehicle Vehicle - The vehicle to check.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- IS_TURRET_SEAT(vehicle, seatIndex)

--- IS_VEHICLE_ALARM_ACTIVATED
-- @param vehicle Vehicle
-- IS_VEHICLE_ALARM_ACTIVATED(vehicle)

--- IS_VEHICLE_ATTACHED_TO_CARGOBOB
-- @param cargobob Vehicle
-- @param vehicleAttached Vehicle
-- IS_VEHICLE_ATTACHED_TO_CARGOBOB(cargobob, vehicleAttached)

--- IS_VEHICLE_ATTACHED_TO_TOW_TRUCK
-- ```
Scripts verify that towTruck is the first parameter, not the second.  
```
-- @param towTruck Vehicle
-- @param vehicle Vehicle
-- IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(towTruck, vehicle)

--- IS_VEHICLE_ATTACHED_TO_TRAILER
-- @param vehicle Vehicle
-- IS_VEHICLE_ATTACHED_TO_TRAILER(vehicle)

--- IS_VEHICLE_A_CONVERTIBLE
-- Determines if a vehicle is a convertible with an animatable roof. This native checks if the specified vehicle model features a convertible roof that can be lowered or raised through an animation.

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The vehicle to check.
-- @param checkRoofExtras BOOL - When set to `false`, the native checks only for vehicles with an animatable convertible roof. Set to `true` to include additional checks for vehicles that might have a non-animatable roof (i.e., using vehicle extras)
-- IS_VEHICLE_A_CONVERTIBLE(vehicle, checkRoofExtras)

--- IS_VEHICLE_BUMPER_BOUNCING
-- @param vehicle Vehicle
-- @param frontBumper BOOL
-- IS_VEHICLE_BUMPER_BOUNCING(vehicle, frontBumper)

--- IS_VEHICLE_BUMPER_BROKEN_OFF
-- @param vehicle Vehicle
-- @param front BOOL
-- IS_VEHICLE_BUMPER_BROKEN_OFF(vehicle, front)

--- IS_VEHICLE_DOOR_DAMAGED
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param veh Vehicle
-- @param doorID int
-- IS_VEHICLE_DOOR_DAMAGED(veh, doorID)

--- IS_VEHICLE_DOOR_FULLY_OPEN
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle - The vehicle to check.
-- @param doorIndex int - The index of the door to check.
-- IS_VEHICLE_DOOR_FULLY_OPEN(vehicle, doorIndex)

--- IS_VEHICLE_DRIVEABLE
-- ```
p1 is always 0 in the scripts.  
p1 = check if vehicle is on fire  
```
-- @param vehicle Vehicle
-- @param isOnFireCheck BOOL
-- IS_VEHICLE_DRIVEABLE(vehicle, isOnFireCheck)

--- IS_VEHICLE_EXTRA_TURNED_ON
-- @param vehicle Vehicle
-- @param extraId int
-- IS_VEHICLE_EXTRA_TURNED_ON(vehicle, extraId)

--- IS_VEHICLE_HIGH_DETAIL
-- @param vehicle Vehicle
-- IS_VEHICLE_HIGH_DETAIL(vehicle)

--- IS_VEHICLE_IN_BURNOUT
-- ```
Returns whether the specified vehicle is currently in a burnout.  
vb.net  
Public Function isVehicleInBurnout(vh As Vehicle) As Boolean  
        Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)  
    End Function  
```
-- @param vehicle Vehicle
-- IS_VEHICLE_IN_BURNOUT(vehicle)

--- IS_VEHICLE_IN_GARAGE_AREA
-- ```
garageName example "Michael - Beverly Hills"
```
-- @param garageName char*
-- @param vehicle Vehicle
-- IS_VEHICLE_IN_GARAGE_AREA(garageName, vehicle)

--- IS_VEHICLE_IN_SUBMARINE_MODE
-- ```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- IS_VEHICLE_IN_SUBMARINE_MODE(vehicle)

--- IS_VEHICLE_MODEL
-- @param vehicle Vehicle
-- @param model Hash
-- IS_VEHICLE_MODEL(vehicle, model)

--- IS_VEHICLE_ON_ALL_WHEELS
-- ```
Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean  
Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)  
		    End Function  
```
-- @param vehicle Vehicle
-- IS_VEHICLE_ON_ALL_WHEELS(vehicle)

--- IS_VEHICLE_SEARCHLIGHT_ON
-- ```
Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.  
```
-- @param vehicle Vehicle
-- IS_VEHICLE_SEARCHLIGHT_ON(vehicle)

--- IS_VEHICLE_SEAT_FREE
-- Seat indices range from -1 to [`GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS`](#\_0xA7C4F2C6E744A550) minus one.

```cpp
// CTaskExitVehicleSeat::eSeatPosition - 1
enum eSeatPosition
{
    SF_FrontDriverSide = -1,
    SF_FrontPassengerSide = 0,
    SF_BackDriverSide = 1,
    SF_BackPassengerSide = 2,
    SF_AltFrontDriverSide = 3,
    SF_AltFrontPassengerSide = 4,
    SF_AltBackDriverSide = 5,
    SF_AltBackPassengerSide = 6,
};
```

```
NativeDB Added Parameter 3: BOOL isTaskRunning

isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
```
-- @param vehicle Vehicle - The vehicle to check.
-- @param seatIndex int - The eSeatPosition or -2 for **any** vehicle seat.
-- IS_VEHICLE_SEAT_FREE(vehicle, seatIndex)

--- IS_VEHICLE_SIREN_AUDIO_ON
-- @param vehicle Vehicle
-- IS_VEHICLE_SIREN_AUDIO_ON(vehicle)

--- IS_VEHICLE_SIREN_ON
-- Returns whether the vehicle's lights and sirens are on.
-- @param vehicle Vehicle
-- IS_VEHICLE_SIREN_ON(vehicle)

--- IS_VEHICLE_SPRAYABLE
-- ```
Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
```
-- @param vehicle Vehicle
-- IS_VEHICLE_SPRAYABLE(vehicle)

--- IS_VEHICLE_STOLEN
-- @param vehicle Vehicle
-- IS_VEHICLE_STOLEN(vehicle)

--- IS_VEHICLE_STOPPED
-- ```
Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
For some vehicles it returns true if the current speed is <= 0.00039999999.
```
-- @param vehicle Vehicle
-- IS_VEHICLE_STOPPED(vehicle)

--- IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS
-- This native checks if the given vehicle is stopped at a red or amber traffic light junction, provided the driver's personality is set to not run amber lights.
-- @param vehicle Vehicle - The vehicle handle.
-- IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(vehicle)

--- IS_VEHICLE_STUCK_ON_ROOF
-- @param vehicle Vehicle
-- IS_VEHICLE_STUCK_ON_ROOF(vehicle)

--- IS_VEHICLE_STUCK_TIMER_UP
-- ```
p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.  
```
-- @param vehicle Vehicle
-- @param p1 int
-- @param p2 int
-- IS_VEHICLE_STUCK_TIMER_UP(vehicle, p1, p2)

--- IS_VEHICLE_TYRE_BURST
-- ```cpp
enum eVehicleWheels
{
	WHEEL_LF = 0, // Vehicle Left front
	WHEEL_RF = 1, // Vehicle Right front
	WHEEL_LM = 2, // Vehicle Left middle
	WHEEL_RM = 3, // Vehicle Right middle
	WHEEL_LR = 4, // Vehicle Left rear
	WHEEL_RR = 5, // Vehicle Right rear
	WHEEL_BF = 6, // Bike front
	WHEEL_BR = 7, // Bike rear
	MAX_WHEELS = 8
};
```
-- @param vehicle Vehicle - The vehicle to check the tire status of
-- @param wheelID int - The wheel id to check, see `eVehicleWheels`
-- @param isBurstToRim BOOL - Whether it should only return `true` if the tire is bursted to its rims
-- IS_VEHICLE_TYRE_BURST(vehicle, wheelID, isBurstToRim)

--- IS_VEHICLE_VISIBLE
-- @param vehicle Vehicle
-- IS_VEHICLE_VISIBLE(vehicle)

--- IS_VEHICLE_WINDOW_INTACT
-- ```cpp
enum eWindowId {
	VEH_EXT_WINDOW_LF = 0,
	VEH_EXT_WINDOW_RF = 1,
	VEH_EXT_WINDOW_LR = 2,
	VEH_EXT_WINDOW_RR = 3,
	VEH_EXT_WINDOW_LM = 4,
	VEH_EXT_WINDOW_RM = 5,
	VEH_EXT_WINDSCREEN = 6,
	VEH_EXT_WINDSCREEN_R = 7,
}
```
-- @param vehicle Vehicle - The vehicle handle
-- @param windowIndex int - The index of the window
-- IS_VEHICLE_WINDOW_INTACT(vehicle, windowIndex)

--- LOWER_CONVERTIBLE_ROOF
-- Lowers the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of lowering the roof.

You can check if the vehicle has an convertible roof using [`IS_VEHICLE_A_CONVERTIBLE`](#\_0x52F357A30698BCCE).

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The convertible vehicle whose roof you want to lower.
-- @param instantlyLower BOOL - A boolean value indicating whether the roof should be lowered instantly without transitioning through the animation. Set to `false` to lower the roof with the animation or `true` to lower it instantly.
-- LOWER_CONVERTIBLE_ROOF(vehicle, instantlyLower)

--- MODIFY_VEHICLE_TOP_SPEED
-- @param vehicle Vehicle
-- @param value float
-- MODIFY_VEHICLE_TOP_SPEED(vehicle, value)

--- OPEN_BOMB_BAY_DOORS
-- @param vehicle Vehicle
-- OPEN_BOMB_BAY_DOORS(vehicle)

--- PAUSE_PLAYBACK_RECORDED_VEHICLE
-- @param vehicle Vehicle
-- PAUSE_PLAYBACK_RECORDED_VEHICLE(vehicle)

--- POP_OUT_VEHICLE_WINDSCREEN
-- Detaches the vehicle's windscreen.
-- @param vehicle Vehicle
-- POP_OUT_VEHICLE_WINDSCREEN(vehicle)

--- PRELOAD_VEHICLE_MOD
-- @param p0 Any
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @param p2 Any
-- PRELOAD_VEHICLE_MOD(p0, modType, p2)

--- RAISE_CONVERTIBLE_ROOF
-- Raises the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of raising the roof.

You can check if the vehicle has an convertible roof using [`IS_VEHICLE_A_CONVERTIBLE`](#\_0x52F357A30698BCCE).

To lower the convertible roof, you can use [`LOWER_CONVERTIBLE_ROOF`](#\_0xDED51F703D0FA83D).

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The convertible vehicle whose roof you wish to raise.
-- @param instantlyRaise BOOL - A boolean indicating whether the roof should be raised instantly without the animation transition. Set `false` to raise the roof with the animation, or `true` to raise it immediately.
-- RAISE_CONVERTIBLE_ROOF(vehicle, instantlyRaise)

--- RELEASE_PRELOAD_MODS
-- @param vehicle Vehicle
-- RELEASE_PRELOAD_MODS(vehicle)

--- REMOVE_PICK_UP_ROPE_FOR_CARGOBOB
-- ```
Retracts the hook on the cargobob.  
Note: after you retract it the natives for dropping the hook no longer work  
```
-- @param cargobob Vehicle
-- REMOVE_PICK_UP_ROPE_FOR_CARGOBOB(cargobob)

--- REMOVE_ROAD_NODE_SPEED_ZONE
-- @param speedzone int
-- REMOVE_ROAD_NODE_SPEED_ZONE(speedzone)

--- REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param unk Any
-- REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(x1, y1, z1, x2, y2, z2, unk)

--- REMOVE_VEHICLE_ASSET
-- @param vehicleAsset int
-- REMOVE_VEHICLE_ASSET(vehicleAsset)

--- REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA
-- @param p0 Any
-- REMOVE_VEHICLE_COMBAT_AVOIDANCE_AREA(p0)

--- REMOVE_VEHICLE_HIGH_DETAIL_MODEL
-- @param vehicle Vehicle
-- REMOVE_VEHICLE_HIGH_DETAIL_MODEL(vehicle)

--- REMOVE_VEHICLE_MOD
-- @param vehicle Vehicle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- REMOVE_VEHICLE_MOD(vehicle, modType)

--- REMOVE_VEHICLE_RECORDING
-- See [REQUEST_VEHICLE_RECORDING](#\_0xAF514CABE74CBF15)
-- @param recording int
-- @param script char*
-- REMOVE_VEHICLE_RECORDING(recording, script)

--- REMOVE_VEHICLE_STUCK_CHECK
-- @param vehicle Vehicle
-- REMOVE_VEHICLE_STUCK_CHECK(vehicle)

--- REMOVE_VEHICLE_UPSIDEDOWN_CHECK
-- @param vehicle Vehicle
-- REMOVE_VEHICLE_UPSIDEDOWN_CHECK(vehicle)

--- REMOVE_VEHICLE_WINDOW
-- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- @param vehicle Vehicle
-- @param windowIndex int
-- REMOVE_VEHICLE_WINDOW(vehicle, windowIndex)

--- REQUEST_VEHICLE_ASSET
-- ```
REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);  
vehicle found that have asset's:  
cargobob3  
submersible  
blazer  
```
-- @param vehicleHash Hash
-- @param vehicleAsset int
-- REQUEST_VEHICLE_ASSET(vehicleHash, vehicleAsset)

--- REQUEST_VEHICLE_HIGH_DETAIL_MODEL
-- @param vehicle Vehicle
-- REQUEST_VEHICLE_HIGH_DETAIL_MODEL(vehicle)

--- REQUEST_VEHICLE_RECORDING
-- ```
Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
```
-- @param recording int
-- @param script char*
-- REQUEST_VEHICLE_RECORDING(recording, script)

--- RESET_VEHICLE_STUCK_TIMER
-- ```
The inner function has a switch on the second parameter. It's the stuck timer index.  
Here's some pseudo code I wrote for the inner function:  
void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)  
{  
	switch (timerIndex)  
	{  
	case 0:  
unknownClassInVehicle->FirstStuckTimer = (WORD)0u;  
	case 1:  
unknownClassInVehicle->SecondStuckTimer = (WORD)0u;  
	case 2:  
unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;  
	case 3:  
unknownClassInVehicle->FourthStuckTimer = (WORD)0u;  
	case 4:  
unknownClassInVehicle->FirstStuckTimer = (WORD)0u;  
unknownClassInVehicle->SecondStuckTimer = (WORD)0u;  
unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;  
unknownClassInVehicle->FourthStuckTimer = (WORD)0u;  
break;  
	};  
}  
```
-- @param vehicle Vehicle
-- @param nullAttributes int
-- RESET_VEHICLE_STUCK_TIMER(vehicle, nullAttributes)

--- RESET_VEHICLE_WHEELS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- RESET_VEHICLE_WHEELS(vehicle, toggle)

--- ROLL_DOWN_WINDOW
-- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- @param vehicle Vehicle
-- @param windowIndex int
-- ROLL_DOWN_WINDOW(vehicle, windowIndex)

--- ROLL_DOWN_WINDOWS
-- ```
Roll down all the windows of the vehicle passed through the first parameter.  
```
-- @param vehicle Vehicle
-- ROLL_DOWN_WINDOWS(vehicle)

--- ROLL_UP_WINDOW
-- See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- @param vehicle Vehicle
-- @param windowIndex int
-- ROLL_UP_WINDOW(vehicle, windowIndex)

--- SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE
-- @param active BOOL
-- SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(active)

--- SET_ALL_VEHICLE_GENERATORS_ACTIVE
-- SET_ALL_VEHICLE_GENERATORS_ACTIVE()

--- SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param p6 BOOL
-- @param p7 BOOL
-- SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(x1, y1, z1, x2, y2, z2, p6, p7)

--- SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME
-- @param range float - Most likely a value between 0.0 and 1.0.
-- SET_AMBIENT_VEHICLE_RANGE_MULTIPLIER_THIS_FRAME(range)

--- SET_BIKE_ON_STAND
-- ```
Only works on bikes, both X and Y work in the -1 - 1 range.
X forces the bike to turn left or right (-1, 1)
Y forces the bike to lean to the left or to the right (-1, 1)
Example with X -1/Y 1
http://i.imgur.com/TgIuAPJ.jpg
```
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- SET_BIKE_ON_STAND(vehicle, x, y)

--- SET_BOAT_ANCHOR
-- Sets the anchor state for a boat.

```
NativeDB Introduced: v323
```

**Note**: You might want to check if you can use your anchor before with [CAN_ANCHOR_BOAT_HERE](#\_0x26C10ECBDA5D043B).
-- @param boat Vehicle - The target boat.
-- @param toggle BOOL - Set the anchor state `true` deploys the anchor, false `raises` it.
-- SET_BOAT_ANCHOR(boat, toggle)

--- SET_BOAT_DISABLE_AVOIDANCE
-- @param vehicle Vehicle
-- @param p1 BOOL
-- SET_BOAT_DISABLE_AVOIDANCE(vehicle, p1)

--- SET_BOAT_LOW_LOD_ANCHOR_DISTANCE
-- Sets the distance from the player at which anchored boats switch between high and low LOD (Level of Detail) buoyancy mode.

```
NativeDB Introduced: v323
```
-- @param boat Vehicle - The target boat.
-- @param value float - The distance at which the LOD switch occurs. Set to `-1.0` to reset the LOD distance to the default value.
-- SET_BOAT_LOW_LOD_ANCHOR_DISTANCE(boat, value)

--- SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER
-- Sets whether a boat should remain anchored even when a player is driving it.

**Note**: This native is always used with [SET_BOAT_ANCHOR](#\_0x75DBEC174AEEAD10).

```
NativeDB Introduced: v323
```
-- @param boat Vehicle - The target boat.
-- @param toggle BOOL - Set the anchoring behavior. If `true`, the boat will remain anchored even when a player is driving. If `false`, normal anchoring behavior applies (anchor is raised when a player drives).
-- SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER(boat, toggle)

--- SET_BOAT_SINKS_WHEN_WRECKED
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_BOAT_SINKS_WHEN_WRECKED(vehicle, toggle)

--- SET_CAN_RESPRAY_VEHICLE
-- ```
Hardcoded to not work in multiplayer.  
```
-- @param vehicle Vehicle
-- @param state BOOL
-- SET_CAN_RESPRAY_VEHICLE(vehicle, state)

--- SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY
-- Prevents a specified entity from being detached from a Cargobob, even in the event of collisions.
-- @param cargobob Vehicle - The Cargobob helicopter from which the entity is not to be detached
-- @param entity Entity - The entity to remain attached to the Cargobob.
-- SET_CARGOBOB_EXCLUDE_FROM_PICKUP_ENTITY(cargobob, entity)

--- SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE
-- Stops cargobob from being able to detach the attached vehicle.
-- @param cargobob Vehicle
-- @param toggle BOOL
-- SET_CARGOBOB_FORCE_DONT_DETACH_VEHICLE(cargobob, toggle)

--- SET_CARGOBOB_PICKUP_MAGNET_ACTIVE
-- ```
Won't attract or magnetize to any helicopters or planes of course, but that's common sense.  
```
-- @param cargobob Vehicle
-- @param isActive BOOL
-- SET_CARGOBOB_PICKUP_MAGNET_ACTIVE(cargobob, isActive)

--- SET_CARGOBOB_PICKUP_MAGNET_EFFECT_RADIUS
-- @param vehicle Vehicle
-- @param p1 float
-- SET_CARGOBOB_PICKUP_MAGNET_EFFECT_RADIUS(vehicle, p1)

--- SET_CARGOBOB_PICKUP_MAGNET_FALLOFF
-- @param vehicle Vehicle
-- @param p1 float
-- SET_CARGOBOB_PICKUP_MAGNET_FALLOFF(vehicle, p1)

--- SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH
-- @param cargobob Vehicle
-- @param p1 float
-- SET_CARGOBOB_PICKUP_MAGNET_PULL_ROPE_LENGTH(cargobob, p1)

--- SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH
-- @param cargobob Vehicle
-- @param p1 float
-- SET_CARGOBOB_PICKUP_MAGNET_PULL_STRENGTH(cargobob, p1)

--- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF
-- @param cargobob Vehicle
-- @param p1 float
-- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_FALLOFF(cargobob, p1)

--- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH
-- @param cargobob Vehicle
-- @param vehicle Vehicle
-- SET_CARGOBOB_PICKUP_MAGNET_REDUCED_STRENGTH(cargobob, vehicle)

--- SET_CARGOBOB_PICKUP_MAGNET_STRENGTH
-- @param cargobob Vehicle
-- @param strength float
-- SET_CARGOBOB_PICKUP_MAGNET_STRENGTH(cargobob, strength)

--- SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER
-- @param cargobob Vehicle
-- @param p1 float
-- SET_CARGOBOB_PICKUP_ROPE_DAMPING_MULTIPLIER(cargobob, p1)

--- SET_CARGOBOB_PICKUP_ROPE_TYPE
-- @param vehicle Vehicle
-- @param state int
-- SET_CARGOBOB_PICKUP_ROPE_TYPE(vehicle, state)

--- SET_CAR_BOOT_OPEN
-- @param vehicle Vehicle
-- SET_CAR_BOOT_OPEN(vehicle)

--- SET_CONVERTIBLE_ROOF
-- Enables or disables the convertible roof on vehicles that support old-style GTA IV roofs, which are not animated. Setting `toggle` to true will apply the roof to the vehicle, and setting it to false will remove the roof, assuming the vehicle has versions with and without a roof.

If you want to lock or unlock the roof mechanism, use [`SET_CONVERTIBLE_ROOF_LATCH_STATE`](#\_0x1A78AD3D8240536F).

You can check if the vehicle has a roof with [`DOES_VEHICLE_HAVE_ROOF`](#\_0x8AC862B0B32C5B80).

```
NativeDB Introduced: v323
```

#### Vehicles with both roofed and roofless versions (others may exist; this list is compiled from decompiled scripts).

*   chino
*   voltic
*   buccaneer
*   buccaneer2
*   chino2
*   faction
*   faction2
*   mamba
-- @param vehicle Vehicle - The vehicle to which the roof state will be applied.
-- @param toggle BOOL - Boolean value where `true` adds the roof and `false` removes it, applicable only if the vehicle has a version with and without a roof.
-- SET_CONVERTIBLE_ROOF(vehicle, toggle)

--- SET_CONVERTIBLE_ROOF_LATCH_STATE
-- This native is used to latch or unlatch the convertible roof of a vehicle. It allows for direct control over the roof's mechanism without actually opening or closing the roof. This can be useful for scenarios where you need to prepare a vehicle's roof to be opened or closed by another action or to ensure it remains fixed in its current state regardless of other interactions.

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The vehicle whose convertible roof latch state is to be set.
-- @param bLatched BOOL - A boolean value indicating the desired latch state of the roof. Set to `true` to latch (lock) the roof, preventing it from being opened. Set to `false` to unlatch (unlock) the roof, allowing it to be opened or closed.
-- SET_CONVERTIBLE_ROOF_LATCH_STATE(vehicle, bLatched)

--- SET_DISABLE_BMX_EXTRA_TRICK_FORCES
-- Disables the additional physics forces applied to BMX bikes that enable them to perform tricks.

```
NativeDB Introduced: v463
```
-- @param disableExtraTrickForces BOOL - Set to `true` to disable the extra forces applied for tricks on BMX bicycles, making the bike behave more like a regular bicycle without trick capabilities. Set to `false` to allow BMX bikes to perform tricks normally.
-- SET_DISABLE_BMX_EXTRA_TRICK_FORCES(disableExtraTrickForces)

--- SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION
-- Prevents a vehicle from exploding upon sustaining body damage from physical collisions. This can be used to increase the durability of vehicles in high-impact scenarios, such as races or combat situations, by preventing them from being destroyed due to collision-induced body damage.

For helicopters, you might want to check [`SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE`](#\_0xEDBC8405B3895CC9) instead.

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle - The vehicle to apply this setting to.
-- @param disableExplode BOOL - `true` to disable explosion from body damage on collision; `false` to allow explosions as normal.
-- SET_DISABLE_EXPLODE_FROM_BODY_DAMAGE_ON_COLLISION(vehicle, disableExplode)

--- SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE
-- Prevents a helicopter from exploding due to relatively minor body damage.

```
NativeDB Introduced: v1103
```
-- @param helicopter Vehicle - The helicopter to apply this setting to.
-- @param disableExplode BOOL - `true` to disable explosion from body damage on collision; `false` to allow explosions as normal.
-- SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE(helicopter, disableExplode)

--- SET_DISABLE_HOVER_MODE_FLIGHT
-- Disables wings for `Deluxo` and `Oppressor MK II`. For the Deluxo, it retracts the wings immediately, preventing flight. For the Oppressor Mk II, the wings retract after landing and take-off is not possible, though it can still glide if launched into the air.
-- @param vehicle Vehicle - The vehicle to which the toggle will be applied.
-- @param toggle BOOL - Boolean parameter where setting `true` disables the vehicle's wings, preventing flight. Setting it to `false` allows the vehicle to fly as usual.
-- SET_DISABLE_HOVER_MODE_FLIGHT(vehicle, toggle)

--- SET_DISABLE_PRETEND_OCCUPANTS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_DISABLE_PRETEND_OCCUPANTS(vehicle, toggle)

--- SET_DISABLE_RANDOM_TRAINS_THIS_FRAME
-- @param toggle BOOL
-- SET_DISABLE_RANDOM_TRAINS_THIS_FRAME(toggle)

--- SET_DISABLE_VEHICLE_ENGINE_FIRES
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_DISABLE_VEHICLE_ENGINE_FIRES(vehicle, toggle)

--- SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(vehicle, toggle)

--- SET_DISABLE_VEHICLE_PETROL_TANK_FIRES
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_DISABLE_VEHICLE_PETROL_TANK_FIRES(vehicle, toggle)

--- SET_DISTANT_CARS_ENABLED
-- ```
Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.  
```
-- @param toggle BOOL
-- SET_DISTANT_CARS_ENABLED(toggle)

--- SET_ENABLE_VEHICLE_SLIPSTREAMING
-- Enable/Disables global slipstream physics
-- @param toggle BOOL
-- SET_ENABLE_VEHICLE_SLIPSTREAMING(toggle)

--- SET_FAR_DRAW_VEHICLES
-- @param toggle BOOL
-- SET_FAR_DRAW_VEHICLES(toggle)

--- SET_FORCE_HD_VEHICLE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_FORCE_HD_VEHICLE(vehicle, toggle)

--- SET_FORCE_LOW_LOD_ANCHOR_MODE
-- Sets whether a boat should remain in the non-physical, low LOD anchor mode even when a player is driving it.

**Note**: This native requires [SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER](#\_0xE3EBAAE484798530) to be set to `true` to work properly.

```
NativeDB Introduced: v323
```
-- @param boat Vehicle - The target boat.
-- @param toggle BOOL - Set the forced low LOD anchor mode. If `true`, the boat will remain in low LOD anchor mode even when a player is driving.
-- SET_FORCE_LOW_LOD_ANCHOR_MODE(boat, toggle)

--- SET_FORKLIFT_FORK_HEIGHT
-- ```
0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
```
-- @param vehicle Vehicle
-- @param height float
-- SET_FORKLIFT_FORK_HEIGHT(vehicle, height)

--- SET_GARBAGE_TRUCKS
-- @param toggle BOOL
-- SET_GARBAGE_TRUCKS(toggle)

--- SET_HELI_BLADES_FULL_SPEED
-- ```
Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);  
this native works on planes to?  
```
-- @param vehicle Vehicle
-- SET_HELI_BLADES_FULL_SPEED(vehicle)

--- SET_HELI_BLADES_SPEED
-- ```
Sets the speed of the helicopter blades in percentage of the full speed.  
vehicleHandle: The helicopter.  
speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.  
```
-- @param vehicle Vehicle
-- @param speed float
-- SET_HELI_BLADES_SPEED(vehicle, speed)

--- SET_HELI_COMBAT_OFFSET
-- Set a specific offset for helis chasing target in combat

```
NativeDB Introduced: v1180
```
-- @param vehicle Vehicle - Helicopter for which the combat offset is being set.
-- @param x float - Offset along the X-axis (left/right) relative to the helicopter's current position and orientation
-- @param y float - Offset along the Y-axis (forward/backward) relative to the helicopter's current position and orientation
-- @param z float - Offset along the Z-axis (up/down) relative to the helicopter's current position and orientation.
-- SET_HELI_COMBAT_OFFSET(vehicle, x, y, z)

--- SET_HELI_RESIST_TO_EXPLOSION
-- Makes a helicopter resistant to multiple explosions. When enabled, helicopters can survive two or more explosions.

```
NativeDB Introduced: 2545
```
-- @param helicopter Vehicle - The helicopter to apply resistance to.
-- @param bResistToExplosion BOOL - Set to `true` to make the helicopter resistant to explosions, or `false` to disable this resistance.
-- SET_HELI_RESIST_TO_EXPLOSION(helicopter, bResistToExplosion)

--- SET_HELI_TAIL_BOOM_CAN_BREAK_OFF
-- Enables or disables the ability for a helicopter's tail boom to break off.

```
NativeDB Introduced: v323
```
-- @param heli Vehicle - The helicopter for which the tail boom can break off.
-- @param toggle BOOL - Determines whether the helicopter's tail boom can break off.
-- SET_HELI_TAIL_BOOM_CAN_BREAK_OFF(heli, toggle)

--- SET_HELI_TURBULENCE_SCALAR
-- @param vehicle Vehicle
-- @param p1 float
-- SET_HELI_TURBULENCE_SCALAR(vehicle, p1)

--- SET_HOVER_MODE_WING_RATIO
-- This native allows opening or closing the wings of the Deluxo/Oppressor. For the Deluxo, wing deployment depends on sufficient altitude.
-- @param vehicle Vehicle - The vehicle to which the ratio will be applied.
-- @param ratio float - Between 0.0 and 1.0. 0.0 is wings closed, 1.0 is wings open.
-- SET_HOVER_MODE_WING_RATIO(vehicle, ratio)

--- SET_LAST_DRIVEN_VEHICLE
-- @param vehicle Vehicle
-- SET_LAST_DRIVEN_VEHICLE(vehicle)

--- SET_LIGHTS_CUTOFF_DISTANCE_TWEAK
-- @param distance float
-- SET_LIGHTS_CUTOFF_DISTANCE_TWEAK(distance)

--- SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED
-- ```
p1 is always 0  
```
-- @param train Vehicle*
-- @param p1 BOOL
-- SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(train, p1)

--- SET_MISSION_TRAIN_COORDS
-- @param train Vehicle
-- @param x float
-- @param y float
-- @param z float
-- SET_MISSION_TRAIN_COORDS(train, x, y, z)

--- SET_NITROUS_IS_ACTIVE
-- ```
NativeDB Introduced: 3095
```

Activates or deactivates the nitrous system in the specified vehicle, based on the boolean value provided.
You can clear the nitrous with [`CLEAR_NITROUS`](#\_0xC889AE921400E1ED), if you want to have more control on the nitrous and those settings, use [`SET_OVERRIDE_NITROUS_LEVEL`](#\_0xC8E9B6B71B8E660D)
-- @param vehicle Vehicle - The vehicle whose nitrous system is to be controlled.
-- @param isActive BOOL - A boolean value where `true` activates the nitrous system and `false` deactivates it.
-- SET_NITROUS_IS_ACTIVE(vehicle, isActive)

--- SET_NUMBER_OF_PARKED_VEHICLES
-- @param value int
-- SET_NUMBER_OF_PARKED_VEHICLES(value)

--- SET_OPEN_REAR_DOORS_ON_EXPLOSION
-- Enables or disables the opening of a vehicle's rear doors in the event of a sticky bomb explosion. This native is effective for armored vehicles, such as the Stockade (Brinks vehicle), allowing the rear doors to be opened through controlled explosions, which might otherwise remain locked due to the vehicle nature.
-- @param vehicle Vehicle - The vehicle to apply this setting to.
-- @param toggle BOOL - A boolean value where `true` allows the rear doors to open upon explosion, and `false` prevents them from opening.
-- SET_OPEN_REAR_DOORS_ON_EXPLOSION(vehicle, toggle)

--- SET_OVERRIDE_NITROUS_LEVEL
-- ```
NativeDB Introduced: v1604
NativeDB Added Parameter 2 (2060): float durationMod : A multiplier applied to the default nitrous duration (default is 3 seconds). 
NativeDB Added Parameter 3 (2060): float power : A multiplier applied to the default nitrous power multiplier (default is 3).
NativeDB Added Parameter 4 (2060): float rechargeTime : A multiplier applied to the default nitrous recharge rate.
NativeDB Added Parameter 5 (2060): BOOL disableSound : A boolean to disable the default nitrous sound when the nitrous is active.
```

Overrides the default settings of a vehicle's nitrous system, allowing custom control over its performance characteristics.
-- @param vehicle Vehicle - The vehicle whose nitrous system is to be overridden.
-- @param override BOOL - A boolean toggle to enable or disable the override settings.
-- SET_OVERRIDE_NITROUS_LEVEL(vehicle, override)

--- SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
-- @param multiplier float
-- SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)

--- SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB
-- ```
min: 1.9f, max: 100.0f
```
-- @param cargobob Vehicle
-- @param length1 float
-- @param length2 float
-- @param state BOOL
-- SET_PICKUP_ROPE_LENGTH_FOR_CARGOBOB(cargobob, length1, length2, state)

--- SET_PLANE_RESIST_TO_EXPLOSION
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_PLANE_RESIST_TO_EXPLOSION(vehicle, toggle)

--- SET_PLANE_SECTION_DAMAGE_SCALE
-- Adjusts the scale of damage applied to a specified section of a plane.
In the decompiled scripts the `damageScale` is always set to `0f` (maybe to disable damages on the specified section)

```cpp
enum ePlaneDamageSection {
    WING_L = 0,
    WING_R = 1,
    TAIL = 2,
    ENGINE_L = 3,
    ENGINE_R = 4,
    ELEVATOR_L = 5,
    ELEVATOR_R = 6,
    AILERON_L = 7,
    AILERON_R = 8,
    RUDDER = 9,
    RUDDER_2 = 10,
    AIRBRAKE_L = 11,
    AIRBRAKE_R = 12
}
```

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle - Plane to which the damage scale adjustment will be applied.
-- @param damageSection int - Specific section of the plane, as defined in the `ePlaneDamageSection` enum, where the damage scale will be adjusted.
-- @param damageScale float - A float value representing the scale of damage to be applied to the specified section.
-- SET_PLANE_SECTION_DAMAGE_SCALE(vehicle, damageSection, damageScale)

--- SET_PLANE_TURBULENCE_MULTIPLIER
-- This native sets the turbulence multiplier. It only works for planes.
0.0 = no turbulence at all.
1.0 = heavy turbulence.

Works by just calling it once, does not need to be called every tick.
-- @param vehicle Vehicle - The plane to set the multiplier for
-- @param multiplier float - The turbulence multiplier. Value between 0.0 and 1.0
-- SET_PLANE_TURBULENCE_MULTIPLIER(vehicle, multiplier)

--- SET_PLAYBACK_SPEED
-- @param vehicle Vehicle
-- @param speed float
-- SET_PLAYBACK_SPEED(vehicle, speed)

--- SET_PLAYBACK_TO_USE_AI
-- Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
-- @param vehicle Vehicle
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- SET_PLAYBACK_TO_USE_AI(vehicle, drivingStyle)

--- SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
-- ```
Time is number of milliseconds before reverting, zero for indefinitely.
```
-- @param vehicle Vehicle
-- @param time int
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- @param p3 BOOL
-- SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(vehicle, time, drivingStyle, p3)

--- SET_PLAYERS_LAST_VEHICLE
-- @param vehicle Vehicle
-- SET_PLAYERS_LAST_VEHICLE(vehicle)

--- SET_POLICE_FOCUS_WILL_TRACK_VEHICLE
-- Sets flag on vehicle that changes behaviour in relation to when player gets wanted level
-- @param vehicle Vehicle
-- @param p1 BOOL
-- SET_POLICE_FOCUS_WILL_TRACK_VEHICLE(vehicle, p1)

--- SET_RANDOM_BOATS
-- @param toggle BOOL
-- SET_RANDOM_BOATS(toggle)

--- SET_RANDOM_TRAINS
-- Enables spawning random trains on the preset tracks.

Requires [`SWITCH_TRAIN_TRACK`](#\_0xFD813BB7DB977F20) and [`SET_TRAIN_TRACK_SPAWN_FREQUENCY`](#\_0x21973BBF8D17EDFA) to be set.
-- @param toggle BOOL - Whether to enable random trains.
-- SET_RANDOM_TRAINS(toggle)

--- SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
-- @param multiplier float
-- SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)

--- SET_RENDER_TRAIN_AS_DERAILED
-- ```
makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)  
```
-- @param train Vehicle
-- @param toggle BOOL
-- SET_RENDER_TRAIN_AS_DERAILED(train, toggle)

--- SET_SCRIPT_VEHICLE_GENERATOR
-- ```
Only called once in the decompiled scripts. Presumably activates the specified generator.  
```
-- @param vehicleGenerator int
-- @param enabled BOOL
-- SET_SCRIPT_VEHICLE_GENERATOR(vehicleGenerator, enabled)

--- SET_SPECIAL_FLIGHT_MODE_ALLOWED
-- Allows locking the hover/non-hover mode of a vehicle, such as the flying mode of the `Deluxo`. In the decompiled scripts, this native is used on `oppressor2` but couldn't get it to work on it.
-- @param vehicle Vehicle - The vehicle to which the locking state will be applied.
-- @param toggle BOOL - Boolean parameter where setting `false` locks the current state of the vehicle, preventing transitions such as the `Deluxo` or Oppressor switching between their flying and driving modes. Setting it to `true` allows changing the vehicle state as usual.
-- SET_SPECIAL_FLIGHT_MODE_ALLOWED(vehicle, toggle)

--- SET_SPECIAL_FLIGHT_MODE_RATIO
-- Used alongside [`SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO`](#\_0x438B3D7CA026FE91), this function initiates hover transformation for vehicles with a hover mode, like the `Deluxo`, based on a specified ratio (0.0 to 1.0). Incorrect values can glitch the vehicle. Without pairing, vehicles revert to car mode. Ineffective on the `oppressor2`
-- @param vehicle Vehicle - The vehicle to which the ratio will be applied.
-- @param ratio float - A value between 0.0 and 1.0 indicating the target state for the vehicle's hover mode transition. In decompiled scripts, a common usage is 0.75 - GetFrameTime(). Exceeding the maximum can cause the `Deluxo's` wheels to glitch, delaying their return to the initial position.
-- SET_SPECIAL_FLIGHT_MODE_RATIO(vehicle, ratio)

--- SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO
-- According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
Does nothing when used on `oppressor2`.

For the deluxo:

*   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
*   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).

If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.

This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.

Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
-- @param vehicle Vehicle - The vehicle (a deluxo or oppressor2).
-- @param state float - The transform state (value between 0.0 and 1.0).
-- SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(vehicle, state)

--- SET_SUBMARINE_CRUSH_DEPTHS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- @param depth1 float
-- @param depth2 float
-- @param depth3 float
-- SET_SUBMARINE_CRUSH_DEPTHS(vehicle, toggle, depth1, depth2, depth3)

--- SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN
-- @param plane Vehicle
-- @param height int
-- SET_TASK_VEHICLE_GOTO_PLANE_MIN_HEIGHT_ABOVE_TERRAIN(plane, height)

--- SET_TAXI_LIGHTS
-- ```
This is not tested - it's just an assumption.  
Doesn't seem to work.  I'll try with an int instead. --JT  
Read the scripts, im dumpass.   
Doesn't work at all, wether with an bool neither an int  
                            if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {  
                                VEHICLE::SET_TAXI_LIGHTS(l_115, 1);  
                            }  
```
-- @param vehicle Vehicle
-- @param state BOOL
-- SET_TAXI_LIGHTS(vehicle, state)

--- SET_TRAILER_INVERSE_MASS_SCALE
-- @param vehicle Vehicle
-- @param p1 float
-- SET_TRAILER_INVERSE_MASS_SCALE(vehicle, p1)

--- SET_TRAILER_LEGS_RAISED
-- ```
in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
```
-- @param vehicle Vehicle
-- SET_TRAILER_LEGS_RAISED(vehicle)

--- SET_TRAIN_CRUISE_SPEED
-- Used to control train speed, can be used to start and stop its movement as well.
-- @param train Vehicle
-- @param speed float
-- SET_TRAIN_CRUISE_SPEED(train, speed)

--- SET_TRAIN_SPEED
-- @param train Vehicle
-- @param speed float
-- SET_TRAIN_SPEED(train, speed)

--- SET_TRAIN_TRACK_SPAWN_FREQUENCY
-- ```
Only called once inside main_persitant with the parameters, 0  
```
-- @param trackIndex int
-- @param frequency int
-- SET_TRAIN_TRACK_SPAWN_FREQUENCY(trackIndex, frequency)

--- SET_TRANSFORM_RATE_FOR_ANIMATION
-- Affects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted. In decompiled scripts the only value used for transformRate is 2.5.
-- @param vehicle Vehicle - The vehicle for which the submarine car conversion animation speed should be adjusted.
-- @param transformRate float - The rate at which the submarine car conversion animations will be played.
-- SET_TRANSFORM_RATE_FOR_ANIMATION(vehicle, transformRate)

--- SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT
-- Changes the key used to transform a vehicle into submarine mode. When set to true, the transformation key switches from the default raise/lower convertible roof key (usually 'H') to the special vehicle transformation key (usually 'X').

```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle - The vehicle for which the submarine mode should be configured.
-- @param useAlternateInput bool - A boolean switch to enable/disable the use of alternate input.
-- SET_TRANSFORM_TO_SUBMARINE_USES_ALTERNATE_INPUT(vehicle, useAlternateInput)

--- SET_VEHICLE_ACTIVE_DURING_PLAYBACK
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_ACTIVE_DURING_PLAYBACK(vehicle, toggle)

--- SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_ACTIVE_FOR_PED_NAVIGATION(vehicle, toggle)

--- SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING
-- This native is used to simulate a high-speed impact for a vehicle when it collides with a breakable object (frag). It's particularly useful in scripted sequences where a vehicle is required to break through a barrier but might not actually be moving at a sufficient speed to do so realistically. Note that this setting is temporary and will reset after one frame, so it needs to be called every frame for a lasting effect.
-- @param vehicle Vehicle - The vehicle to be affected by this setting.
-- @param actHighSpeed BOOL - A boolean flag. Set to `true` to make the vehicle act as if it's at high speed for the current frame
-- SET_VEHICLE_ACT_AS_IF_HIGH_SPEED_FOR_FRAG_SMASHING(vehicle, actHighSpeed)

--- SET_VEHICLE_ALARM
-- @param vehicle Vehicle
-- @param state BOOL
-- SET_VEHICLE_ALARM(vehicle, state)

--- SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON
-- ```
Makes the vehicle accept no passengers.  
```
-- @param veh Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(veh, toggle)

--- SET_VEHICLE_AUTOMATICALLY_ATTACHES
-- @param vehicle Vehicle
-- @param p1 BOOL
-- @param p2 Any
-- SET_VEHICLE_AUTOMATICALLY_ATTACHES(vehicle, p1, p2)

--- SET_VEHICLE_BODY_HEALTH
-- ```
p2 often set to 1000.0 in the decompiled scripts.  
```
-- @param vehicle Vehicle
-- @param value float
-- SET_VEHICLE_BODY_HEALTH(vehicle, value)

--- SET_VEHICLE_BRAKE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_BRAKE(vehicle, toggle)

--- SET_VEHICLE_BRAKE_LIGHTS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_BRAKE_LIGHTS(vehicle, toggle)

--- SET_VEHICLE_BULLDOZER_ARM_POSITION
-- Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
-- @param vehicle Vehicle
-- @param position float
-- @param p2 BOOL
-- SET_VEHICLE_BULLDOZER_ARM_POSITION(vehicle, position, p2)

--- SET_VEHICLE_BURNOUT
-- ```
On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_BURNOUT(vehicle, toggle)

--- SET_VEHICLE_CAN_BE_TARGETTED
-- ```
This has not yet been tested - it's just an assumption of what the types could be.  
```
-- @param vehicle Vehicle
-- @param state BOOL
-- SET_VEHICLE_CAN_BE_TARGETTED(vehicle, state)

--- SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_CAN_BE_USED_BY_FLEEING_PEDS(vehicle, toggle)

--- SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED
-- @param vehicle Vehicle
-- @param state BOOL
-- SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(vehicle, state)

--- SET_VEHICLE_CAN_BREAK
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_CAN_BREAK(vehicle, toggle)

--- SET_VEHICLE_CAN_DEFORM_WHEELS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_CAN_DEFORM_WHEELS(vehicle, toggle)

--- SET_VEHICLE_CAN_LEAK_OIL
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_CAN_LEAK_OIL(vehicle, toggle)

--- SET_VEHICLE_CAN_LEAK_PETROL
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_CAN_LEAK_PETROL(vehicle, toggle)

--- SET_VEHICLE_CAN_SAVE_IN_GARAGE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_CAN_SAVE_IN_GARAGE(vehicle, toggle)

--- SET_VEHICLE_CEILING_HEIGHT
-- ```
Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
from Decrypted Scripts I found
VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2/*2*/], 420.0);
```
-- @param vehicle Vehicle
-- @param height float
-- SET_VEHICLE_CEILING_HEIGHT(vehicle, height)

--- SET_VEHICLE_CHEAT_POWER_INCREASE
-- ```
<1.0 - Decreased torque
=1.0 - Default torque
>1.0 - Increased torque
Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
value - is between 0.2 and 1.8 in the decompiled scripts.
This needs to be called every frame to take effect.
```
-- @param vehicle Vehicle
-- @param value float
-- SET_VEHICLE_CHEAT_POWER_INCREASE(vehicle, value)

--- SET_VEHICLE_COLOURS
-- colorPrimary & colorSecondary are the paint indexes for the vehicle.

For a list of valid paint indexes, view: pastebin.com/pwHci0xK
-- @param vehicle Vehicle
-- @param colorPrimary int
-- @param colorSecondary int
-- SET_VEHICLE_COLOURS(vehicle, colorPrimary, colorSecondary)

--- SET_VEHICLE_COLOUR_COMBINATION
-- Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).

Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
-- @param vehicle Vehicle - The vehicle to modify.
-- @param colorCombination int - One of the default color values of the vehicle.
-- SET_VEHICLE_COLOUR_COMBINATION(vehicle, colorCombination)

--- SET_VEHICLE_CUSTOM_PRIMARY_COLOUR
-- ```
p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)  
```
-- @param vehicle Vehicle
-- @param r int
-- @param g int
-- @param b int
-- SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(vehicle, r, g, b)

--- SET_VEHICLE_CUSTOM_SECONDARY_COLOUR
-- ```
p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)  
```
-- @param vehicle Vehicle
-- @param r int
-- @param g int
-- @param b int
-- SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(vehicle, r, g, b)

--- SET_VEHICLE_DAMAGE
-- Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
Radius of effect damage applied in a sphere at impact location
When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
-- @param vehicle Vehicle
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param damage float
-- @param radius float - the size of the damage sphere to apply
-- @param focusOnModel BOOL - when set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
-- SET_VEHICLE_DAMAGE(vehicle, xOffset, yOffset, zOffset, damage, radius, focusOnModel)

--- SET_VEHICLE_DEFORMATION_FIXED
-- ```
This fixes the deformation of a vehicle but the vehicle health doesn't improve  
```
-- @param vehicle Vehicle
-- SET_VEHICLE_DEFORMATION_FIXED(vehicle)

--- SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME
-- **Usage:**

*   Use this native inside a looped function.
*   Values:
    *   `0.0` = no vehicles on streets
    *   `1.0` = normal vehicles on streets

`1.0` Seems to be the maximum.
-- @param multiplier float
-- SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(multiplier)

--- SET_VEHICLE_DIRT_LEVEL
-- Sets the dirt level of the passed vehicle.
-- @param vehicle Vehicle - The vehicle to set.
-- @param dirtLevel float - A number between 0.0 and 15.0 representing the vehicles dirt level.
-- SET_VEHICLE_DIRT_LEVEL(vehicle, dirtLevel)

--- SET_VEHICLE_DISABLE_TOWING
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_DISABLE_TOWING(vehicle, toggle)

--- SET_VEHICLE_DOORS_LOCKED
-- Locks the doors of a specified vehicle to a defined lock state, affecting how players and NPCs can interact with the vehicle.

```
NativeDB Introduced: v323
```

```cpp
enum eVehicleLockState {
    // No specific lock state, vehicle behaves according to the game's default settings.
    VEHICLELOCK_NONE = 0,
    // Vehicle is fully unlocked, allowing free entry by players and NPCs.
    VEHICLELOCK_UNLOCKED = 1,
    // Vehicle is locked, preventing entry by players and NPCs.
    VEHICLELOCK_LOCKED = 2,
    // Vehicle locks out only players, allowing NPCs to enter.
    VEHICLELOCK_LOCKOUT_PLAYER_ONLY = 3,
    // Vehicle is locked once a player enters, preventing others from entering.
    VEHICLELOCK_LOCKED_PLAYER_INSIDE = 4,
    // Vehicle starts in a locked state, but may be unlocked through game events.
    VEHICLELOCK_LOCKED_INITIALLY = 5,
    // Forces the vehicle's doors to shut and lock.
    VEHICLELOCK_FORCE_SHUT_DOORS = 6,
    // Vehicle is locked but can still be damaged.
    VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7,
    // Vehicle is locked, but its trunk/boot remains unlocked.
    VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED = 8,
    // Vehicle is locked and does not allow passengers, except for the driver.
    VEHICLELOCK_LOCKED_NO_PASSENGERS = 9,
    // Vehicle is completely locked, preventing entry entirely, even if previously inside.
    VEHICLELOCK_CANNOT_ENTER = 10 
};

```
-- @param vehicle Vehicle - The vehicle whose doors are to be locked.
-- @param doorLockStatus int - The lock state to apply to the vehicle's doors, see `eVehicleLockState`.
-- SET_VEHICLE_DOORS_LOCKED(vehicle, doorLockStatus)

--- SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(vehicle, toggle)

--- SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_DOORS_LOCKED_FOR_NON_SCRIPT_PLAYERS(vehicle, toggle)

--- SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER
-- @param vehicle Vehicle
-- @param player Player
-- @param toggle BOOL
-- SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(vehicle, player, toggle)

--- SET_VEHICLE_DOORS_LOCKED_FOR_TEAM
-- @param vehicle Vehicle
-- @param team int
-- @param toggle BOOL
-- SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(vehicle, team, toggle)

--- SET_VEHICLE_DOORS_SHUT
-- ```
Closes all doors of a vehicle:  
```
-- @param vehicle Vehicle
-- @param closeInstantly BOOL
-- SET_VEHICLE_DOORS_SHUT(vehicle, closeInstantly)

--- SET_VEHICLE_DOOR_BROKEN
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- @param deleteDoor BOOL
-- SET_VEHICLE_DOOR_BROKEN(vehicle, doorIndex, deleteDoor)

--- SET_VEHICLE_DOOR_CONTROL
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- @param speed int - 5 is fast, 1 is slow 3 is medium
-- @param angle float
-- SET_VEHICLE_DOOR_CONTROL(vehicle, doorIndex, speed, angle)

--- SET_VEHICLE_DOOR_LATCHED
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- @param forceClose BOOL
-- @param lock BOOL
-- @param p4 BOOL
-- SET_VEHICLE_DOOR_LATCHED(vehicle, doorIndex, forceClose, lock, p4)

--- SET_VEHICLE_DOOR_OPEN
-- Sets the specified door index open on the passed vehicle. See [`IS_VEHICLE_DOOR_FULLY_OPEN`](#\_0x3E933CFF7B111C22).
-- @param vehicle Vehicle - Vehicle.
-- @param doorIndex int - Index of the door you want to open (0-7)
-- @param loose BOOL - Whether the door is "loose" (if true the doors have no "spring" and can be closed easily.)
-- @param openInstantly BOOL - Whether the doors open instantly (if true this native seems to ignore loose)
-- SET_VEHICLE_DOOR_OPEN(vehicle, doorIndex, loose, openInstantly)

--- SET_VEHICLE_DOOR_SHUT
-- Sets the specified door index shut on the passed vehicle.

```cpp
enum eDoorId
{
	VEH_EXT_DOOR_DSIDE_F = 0,
	VEH_EXT_DOOR_DSIDE_R = 1,
	VEH_EXT_DOOR_PSIDE_F = 2,
	VEH_EXT_DOOR_PSIDE_R = 3,
	VEH_EXT_BONNET = 4,
	VEH_EXT_BOOT = 5,
	// 0x872E72B8 = 0xFFFFFFFF,
}
```
-- @param vehicle Vehicle - Vehicle.
-- @param doorIndex int - Index of the door you want to close.
-- @param closeInstantly BOOL - Whether the doors close instantly.
-- SET_VEHICLE_DOOR_SHUT(vehicle, doorIndex, closeInstantly)

--- SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP
-- ```
Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
youtu.be/3arlUxzHl5Y
i.imgur.com/WrNpYFs.jpg
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_DROPS_MONEY_WHEN_BLOWN_UP(vehicle, toggle)

--- SET_VEHICLE_ENGINE_CAN_DEGRADE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_ENGINE_CAN_DEGRADE(vehicle, toggle)

--- SET_VEHICLE_ENGINE_HEALTH
-- ```
1000 is max health
Begins leaking gas at around 650 health
-999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
-------------------------
Minimum: -4000
Maximum: 1000
-4000: Engine is destroyed
0 and below: Engine catches fire and health rapidly declines
300: Engine is smoking and losing functionality
1000: Engine is perfect
```
-- @param vehicle Vehicle
-- @param health float
-- SET_VEHICLE_ENGINE_HEALTH(vehicle, health)

--- SET_VEHICLE_ENGINE_ON
-- Starts or stops the engine on the specified vehicle.
From what I've tested when I do this to a helicopter the propellers turn off after the engine has started.
-- @param vehicle Vehicle - The vehicle to start or stop the engine on.
-- @param value BOOL - true to turn the vehicle on; false to turn it off.
-- @param instantly BOOL - if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
-- @param disableAutoStart BOOL - If true, the system will prevent the engine from starting when the player got into it.
-- SET_VEHICLE_ENGINE_ON(vehicle, value, instantly, disableAutoStart)

--- SET_VEHICLE_ENVEFF_SCALE
-- Examples with a besra:

*   [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
*   [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
*   [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)

The parameter fade is a value from 0-1, where 0 is fresh paint.
-- @param vehicle Vehicle - Target vehicle
-- @param fade float - The paint fade effect strength
-- SET_VEHICLE_ENVEFF_SCALE(vehicle, fade)

--- SET_VEHICLE_EXCLUSIVE_DRIVER
-- Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.

Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).

See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#\_0xB5C51B5502E85E83).

```
NativeDB Removed Parameter 2: int index
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_EXCLUSIVE_DRIVER(vehicle, toggle)

--- SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE
-- ```
Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(vehicle, toggle)

--- SET_VEHICLE_EXTENDED_REMOVAL_RANGE
-- ```
Max value is 32767
```
-- @param vehicle Vehicle
-- @param range int
-- SET_VEHICLE_EXTENDED_REMOVAL_RANGE(vehicle, range)

--- SET_VEHICLE_EXTRA
-- ```
Note: only some vehicle have extras  
extra ids are from 1 - 9 depending on the vehicle  
-------------------------------------------------  
^ not sure if outdated or simply wrong. Max extra ID for b944 is 14  
-------------------------------------------------  
p2 is not a on/off toggle. mostly 0 means on and 1 means off.  
not sure if it really should be a BOOL.  
-------------------------------------------------  
Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]  
```
-- @param vehicle Vehicle
-- @param extraId int
-- @param disable BOOL
-- SET_VEHICLE_EXTRA(vehicle, extraId, disable)

--- SET_VEHICLE_EXTRA_COLOURS
-- ```
They use the same color indexs as SET_VEHICLE_COLOURS.  
```
-- @param vehicle Vehicle
-- @param pearlescentColor int
-- @param wheelColor int
-- SET_VEHICLE_EXTRA_COLOURS(vehicle, pearlescentColor, wheelColor)

--- SET_VEHICLE_FIXED
-- Fix a given vehicle.
If the vehicle's engine's broken then you cannot fix it with this native.
-- @param vehicle Vehicle - The vehicle that will be fixed
-- SET_VEHICLE_FIXED(vehicle)

--- SET_VEHICLE_FLIGHT_NOZZLE_POSITION
-- @param vehicle Vehicle
-- @param angleRatio float
-- SET_VEHICLE_FLIGHT_NOZZLE_POSITION(vehicle, angleRatio)

--- SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE
-- @param vehicle Vehicle
-- @param angle float
-- SET_VEHICLE_FLIGHT_NOZZLE_POSITION_IMMEDIATE(vehicle, angle)

--- SET_VEHICLE_FORCE_AFTERBURNER
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_FORCE_AFTERBURNER(vehicle, toggle)

--- SET_VEHICLE_FORWARD_SPEED
-- ```
SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.  
Speed is in meters per second  
You can convert meters/s to mph here:  
http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm  
```
-- @param vehicle Vehicle
-- @param speed float
-- SET_VEHICLE_FORWARD_SPEED(vehicle, speed)

--- SET_VEHICLE_FRICTION_OVERRIDE
-- ```
Seems to be related to the metal parts, not tyres (like i was expecting lol)  
Must be called every tick.  
```
-- @param vehicle Vehicle
-- @param friction float
-- SET_VEHICLE_FRICTION_OVERRIDE(vehicle, friction)

--- SET_VEHICLE_FULLBEAM
-- ```
It switch to highbeam when p1 is set to true.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_FULLBEAM(vehicle, toggle)

--- SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS
-- ```
Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_GENERATES_ENGINE_SHOCKING_EVENTS(vehicle, toggle)

--- SET_VEHICLE_GENERATOR_AREA_OF_INTEREST
-- Specifies an area of interest where cargens will focus on spawning vehicles

You can clear the area of interest with [`CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#\_0x0A436B8643716D14)
-- @param x float - The X coordinate of the central point of the area of interest.
-- @param y float - The Y coordinate of the central point of the area of interest.
-- @param z float - The Z coordinate of the central point of the area of interest.
-- @param radius float - The radius around the central point, defining the size of the area of interest
-- SET_VEHICLE_GENERATOR_AREA_OF_INTEREST(x, y, z, radius)

--- SET_VEHICLE_GRAVITY
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_GRAVITY(vehicle, toggle)

--- SET_VEHICLE_HANDBRAKE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_HANDBRAKE(vehicle, toggle)

--- SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_HAS_BEEN_DRIVEN_FLAG(vehicle, toggle)

--- SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER
-- @param vehicle Vehicle
-- @param owned BOOL
-- SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(vehicle, owned)

--- SET_VEHICLE_HAS_MUTED_SIRENS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_HAS_MUTED_SIRENS(vehicle, toggle)

--- SET_VEHICLE_HAS_STRONG_AXLES
-- ```
if true, axles won't bend.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_HAS_STRONG_AXLES(vehicle, toggle)

--- SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS
-- Sets whether the vehicle's lights can be broken.

```
NativeDB Introduced: v323
```
-- @param vehicle Vehicle - The target vehicle.
-- @param toggle BOOL - Set the lights' breakability `true` makes lights unbreakable, `false` allows them to break.
-- SET_VEHICLE_HAS_UNBREAKABLE_LIGHTS(vehicle, toggle)

--- SET_VEHICLE_HEADLIGHT_SHADOWS
-- Sets the vehicle headlight shadow flags.

```
NativeDB Introduced: v323
```

```cpp
enum eVehicleHeadlightShadowFlags {
    // Default (Lights can be toggled between off, normal and high beams)
    NO_HEADLIGHT_SHADOWS = 0,
    // Lights Disabled (Lights are fully disabled, cannot be toggled)
    HEADLIGHTS_CAST_DYNAMIC_SHADOWS = 1,
    // Always On (Lights can be toggled between normal and high beams)
    HEADLIGHTS_CAST_STATIC_SHADOWS = 2,
    HEADLIGHTS_CAST_FULL_SHADOWS = 3 
};
```
-- @param vehicle Vehicle - The target vehicle.
-- @param flag int - A value from `eVehicleHeadlightShadowFlags` representing the desired headlight shadow flag.
-- SET_VEHICLE_HEADLIGHT_SHADOWS(vehicle, flag)

--- SET_VEHICLE_INACTIVE_DURING_PLAYBACK
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_INACTIVE_DURING_PLAYBACK(vehicle, toggle)

--- SET_VEHICLE_INDICATOR_LIGHTS
-- ```
Sets the turn signal enabled for a vehicle.  
Set turnSignal to 1 for left light, 0 for right light.  
```
-- @param vehicle Vehicle
-- @param turnSignal int
-- @param toggle BOOL
-- SET_VEHICLE_INDICATOR_LIGHTS(vehicle, turnSignal, toggle)

--- SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
-- @param vehicle Vehicle
-- @param doorIndex int - See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param doorLockStatus int - See eCarLock declared in [`SET_VEHICLE_DOORS_LOCKED`](#\_0xB664292EAECF7FA6)
-- SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED(vehicle, doorIndex, doorLockStatus)

--- SET_VEHICLE_INFLUENCES_WANTED_LEVEL
-- This native sets whether a specific vehicle influences the player's wanted level when it is involved in an incident that typically triggers a wanted response, such as being marked as a "victim" vehicle.

This is particularly useful when utilizing the wanted system from GTA, and you want to prevent a vehicle from affecting the wanted level when it is stolen. In the decompiled scripts this native is only used to disable the influence of the vehicle on the wanted level.
-- @param vehicle Vehicle - The specific vehicle to be set for influencing the wanted level.
-- @param influenceWantedLevel BOOL - A boolean value. Set to `true` to make the vehicle influence the wanted level; `false` to prevent it from doing so.
-- SET_VEHICLE_INFLUENCES_WANTED_LEVEL(vehicle, influenceWantedLevel)

--- SET_VEHICLE_INTERIORLIGHT
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_INTERIORLIGHT(vehicle, toggle)

--- SET_VEHICLE_IS_CONSIDERED_BY_PLAYER
-- ```
Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(vehicle, toggle)

--- SET_VEHICLE_IS_RACING
-- ```
p1 (toggle) was always 1 (true) except in one case in the b678 scripts.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_IS_RACING(vehicle, toggle)

--- SET_VEHICLE_IS_STOLEN
-- @param vehicle Vehicle
-- @param isStolen BOOL
-- SET_VEHICLE_IS_STOLEN(vehicle, isStolen)

--- SET_VEHICLE_IS_WANTED
-- ```
Sets the wanted state of this vehicle.  
```
-- @param vehicle Vehicle
-- @param state BOOL
-- SET_VEHICLE_IS_WANTED(vehicle, state)

--- SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED
-- Calling this native will keep a vehicle's engine running after exiting.
-- @param vehicle Vehicle - The vehicle handle.
-- @param toggle BOOL - `true` to keep the engine on, otherwise `false`.
-- SET_VEHICLE_KEEP_ENGINE_ON_WHEN_ABANDONED(vehicle, toggle)

--- SET_VEHICLE_KERS_ALLOWED
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_KERS_ALLOWED(vehicle, toggle)

--- SET_VEHICLE_LIGHTS
-- Sets the vehicle lights state. Allowing for different lighting modes.

```
NativeDB Introduced: v323
```

```cpp
enum eVehicleLightSetting {
    // Normal light behavior. Lights cycle through off, then low beams, then high beams.
    // Note: It's affected by day or night; high beams don't exist in daytime.
    NO_VEHICLE_LIGHT_OVERRIDE = 0,
    // Vehicle doesn't have lights, always off.
    FORCE_VEHICLE_LIGHTS_OFF  = 1, 
    // Vehicle has always-on lights.
    // During day: Cycles between low beams and high beams. 
    // At night: Cycles between low beams, low beams, and high beams.
    FORCE_VEHICLE_LIGHTS_ON   = 2,
    // Sets vehicle lights on. Behaves like normal lights (same as 0).
    SET_VEHICLE_LIGHTS_ON     = 3,
    // Sets vehicle lights off. Behaves like normal lights (same as 0).
    SET_VEHICLE_LIGHTS_OFF    = 4 
};
```
-- @param vehicle Vehicle - The target vehicle.
-- @param state int - A value from `eVehicleLightSetting` representing the desired light setting.
-- SET_VEHICLE_LIGHTS(vehicle, state)

--- SET_VEHICLE_LIGHT_MULTIPLIER
-- This multiplier has no limit, by default the game has this set to `1.0`.
-- @param vehicle Vehicle - The vehicle handle.
-- @param multiplier float - The multiplier applied to the vehicle's headlights.
-- SET_VEHICLE_LIGHT_MULTIPLIER(vehicle, multiplier)

--- SET_VEHICLE_LIVERY
-- @param vehicle Vehicle
-- @param livery int
-- SET_VEHICLE_LIVERY(vehicle, livery)

--- SET_VEHICLE_LOD_MULTIPLIER
-- @param vehicle Vehicle
-- @param multiplier float
-- SET_VEHICLE_LOD_MULTIPLIER(vehicle, multiplier)

--- SET_VEHICLE_MOD
-- ```cpp
// eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).
enum eVehicleModType
{
	VMT_SPOILER = 0,
	VMT_BUMPER_F = 1,
	VMT_BUMPER_R = 2,
	VMT_SKIRT = 3,
	VMT_EXHAUST = 4,
	VMT_CHASSIS = 5,
	VMT_GRILL = 6,
	VMT_BONNET = 7,
	VMT_WING_L = 8,
	VMT_WING_R = 9,
	VMT_ROOF = 10,
	VMT_ENGINE = 11,
	VMT_BRAKES = 12,
	VMT_GEARBOX = 13,
	VMT_HORN = 14,
	VMT_SUSPENSION = 15,
	VMT_ARMOUR = 16,
	VMT_NITROUS = 17,
	VMT_TURBO = 18,
	VMT_SUBWOOFER = 19,
	VMT_TYRE_SMOKE = 20,
	VMT_HYDRAULICS = 21,
	VMT_XENON_LIGHTS = 22,
	VMT_WHEELS = 23,
	VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
	VMT_PLTHOLDER = 25,
	VMT_PLTVANITY = 26,
	VMT_INTERIOR1 = 27,
	VMT_INTERIOR2 = 28,
	VMT_INTERIOR3 = 29,
	VMT_INTERIOR4 = 30,
	VMT_INTERIOR5 = 31,
	VMT_SEATS = 32,
	VMT_STEERING = 33,
	VMT_KNOB = 34,
	VMT_PLAQUE = 35,
	VMT_ICE = 36,
	VMT_TRUNK = 37,
	VMT_HYDRO = 38,
	VMT_ENGINEBAY1 = 39,
	VMT_ENGINEBAY2 = 40,
	VMT_ENGINEBAY3 = 41,
	VMT_CHASSIS2 = 42,
	VMT_CHASSIS3 = 43,
	VMT_CHASSIS4 = 44,
	VMT_CHASSIS5 = 45,
	VMT_DOOR_L = 46,
	VMT_DOOR_R = 47,
	VMT_LIVERY_MOD = 48,
	VMT_LIGHTBAR = 49,
};
```
-- @param vehicle Vehicle
-- @param modType int
-- @param modIndex int
-- @param customTires BOOL
-- SET_VEHICLE_MOD(vehicle, modType, modIndex, customTires)

--- SET_VEHICLE_MODEL_IS_SUPPRESSED
-- ```
seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:  
VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);  
```
-- @param model Hash
-- @param suppressed BOOL
-- SET_VEHICLE_MODEL_IS_SUPPRESSED(model, suppressed)

--- SET_VEHICLE_MOD_COLOR_1
-- ```
paintType:  
0: Normal  
1: Metallic  
2: Pearl  
3: Matte  
4: Metal  
5: Chrome  
color: number of the color.  
p3 seems to always be 0.  
```
-- @param vehicle Vehicle
-- @param paintType int
-- @param color int
-- @param pearlescentColor int
-- SET_VEHICLE_MOD_COLOR_1(vehicle, paintType, color, pearlescentColor)

--- SET_VEHICLE_MOD_COLOR_2
-- ```
Changes the secondary paint type and color  
paintType:  
0: Normal  
1: Metallic  
2: Pearl  
3: Matte  
4: Metal  
5: Chrome  
color: number of the color  
```
-- @param vehicle Vehicle
-- @param paintType int
-- @param color int
-- SET_VEHICLE_MOD_COLOR_2(vehicle, paintType, color)

--- SET_VEHICLE_MOD_KIT
-- ```
Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
```
-- @param vehicle Vehicle
-- @param modKit int
-- SET_VEHICLE_MOD_KIT(vehicle, modKit)

--- SET_VEHICLE_NAME_DEBUG
-- This method is utilized solely for debugging purposes and is functional only in debug builds of the game. Please note that its functionality may not be available in the retail version.
-- @param vehicle Vehicle - The vehicle id.
-- @param name char* - Debug name.
-- SET_VEHICLE_NAME_DEBUG(vehicle, name)

--- SET_VEHICLE_NEEDS_TO_BE_HOTWIRED
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(vehicle, toggle)

--- SET_VEHICLE_NUMBER_PLATE_TEXT
-- @param vehicle Vehicle - The vehicle to set the plate for
-- @param plateText char* - The text to set the plate to, 8 chars maximum
-- SET_VEHICLE_NUMBER_PLATE_TEXT(vehicle, plateText)

--- SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX
-- Please refer to [`GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX`](#\_0xF11BC2DD9A3E7195) for plate indicies.
-- @param vehicle Vehicle - The vehicle handle.
-- @param plateIndex int - The style to use for the plate, see plate styles.
-- SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(vehicle, plateIndex)

--- SET_VEHICLE_ON_GROUND_PROPERLY
-- ```
Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.  
```

```
NativeDB Added Parameter 2: float p1
```
-- @param vehicle Vehicle
-- SET_VEHICLE_ON_GROUND_PROPERLY(vehicle)

--- SET_VEHICLE_OUT_OF_CONTROL
-- ```
Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.  
```
-- @param vehicle Vehicle
-- @param killDriver BOOL
-- @param explodeOnImpact BOOL
-- SET_VEHICLE_OUT_OF_CONTROL(vehicle, killDriver, explodeOnImpact)

--- SET_VEHICLE_PETROL_TANK_HEALTH
-- ```
1000 is max health  
Begins leaking gas at around 650 health  
```
-- @param vehicle Vehicle
-- @param health float
-- SET_VEHICLE_PETROL_TANK_HEALTH(vehicle, health)

--- SET_VEHICLE_PROVIDES_COVER
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_PROVIDES_COVER(vehicle, toggle)

--- SET_VEHICLE_REDUCE_GRIP
-- ```
Reduces grip significantly so it's hard to go anywhere.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_REDUCE_GRIP(vehicle, toggle)

--- SET_VEHICLE_RUDDER_BROKEN
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_RUDDER_BROKEN(vehicle, toggle)

--- SET_VEHICLE_SEARCHLIGHT
-- ```
Only works during nighttime.
```
-- @param heli Vehicle
-- @param toggle BOOL
-- @param canBeUsedByAI BOOL
-- SET_VEHICLE_SEARCHLIGHT(heli, toggle, canBeUsedByAI)

--- SET_VEHICLE_SHOOT_AT_TARGET
-- ```
Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:  
WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);  
```
-- @param driver Ped
-- @param entity Entity
-- @param xTarget float
-- @param yTarget float
-- @param zTarget float
-- SET_VEHICLE_SHOOT_AT_TARGET(driver, entity, xTarget, yTarget, zTarget)

--- SET_VEHICLE_SIREN
-- ```
Activate siren on vehicle (Only works if the vehicle has a siren).  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_SIREN(vehicle, toggle)

--- SET_VEHICLE_STEERING_BIAS_SCALAR
-- @param vehicle Vehicle
-- @param scalar float
-- SET_VEHICLE_STEERING_BIAS_SCALAR(vehicle, scalar)

--- SET_VEHICLE_STEER_BIAS
-- ```
Locks the vehicle's steering to the desired angle, explained below.  
Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.  
Steer bias:  
-1.0 = full right  
0.0 = centered steering  
1.0 = full left  
```
-- @param vehicle Vehicle
-- @param value float
-- SET_VEHICLE_STEER_BIAS(vehicle, value)

--- SET_VEHICLE_STRONG
-- ```
If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_STRONG(vehicle, toggle)

--- SET_VEHICLE_TANK_TURRET_POSITION
-- @param vehicle Vehicle
-- @param position float
-- @param p2 BOOL
-- SET_VEHICLE_TANK_TURRET_POSITION(vehicle, position, p2)

--- SET_VEHICLE_TIMED_EXPLOSION
-- @param vehicle Vehicle
-- @param ped Ped
-- @param toggle BOOL
-- SET_VEHICLE_TIMED_EXPLOSION(vehicle, ped, toggle)

--- SET_VEHICLE_TOW_TRUCK_ARM_POSITION
-- ```
Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.  
```
-- @param vehicle Vehicle
-- @param position float
-- SET_VEHICLE_TOW_TRUCK_ARM_POSITION(vehicle, position)

--- SET_VEHICLE_TURRET_SPEED_THIS_FRAME
-- @param vehicle Vehicle
-- @param speed float
-- SET_VEHICLE_TURRET_SPEED_THIS_FRAME(vehicle, speed)

--- SET_VEHICLE_TYRES_CAN_BURST
-- ```
Allows you to toggle bulletproof tires.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_TYRES_CAN_BURST(vehicle, toggle)

--- SET_VEHICLE_TYRE_BURST
-- ```
"To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)  
to burst all tyres type it 8 times where p1 = 0 to 7.  
p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.  
'0 = wheel_lf / bike, plane or jet front  
'1 = wheel_rf  
'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  
'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  
'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  
'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  
'45 = 6 wheels trailer mid wheel left  
'47 = 6 wheels trailer mid wheel right  
```
-- @param vehicle Vehicle
-- @param index int
-- @param onRim BOOL
-- @param p3 float
-- SET_VEHICLE_TYRE_BURST(vehicle, index, onRim, p3)

--- SET_VEHICLE_TYRE_FIXED
-- ```
tyreIndex = 0 to 4 on normal vehicles  
'0 = wheel_lf / bike, plane or jet front  
'1 = wheel_rf  
'2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left  
'3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right  
'4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left  
'5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right  
'45 = 6 wheels trailer mid wheel left  
'47 = 6 wheels trailer mid wheel right  
```
-- @param vehicle Vehicle
-- @param tyreIndex int
-- SET_VEHICLE_TYRE_FIXED(vehicle, tyreIndex)

--- SET_VEHICLE_TYRE_SMOKE_COLOR
-- ```
Sets the tire smoke's color of this vehicle.  
vehicle: The vehicle that is the target of this method.  
r: The red level in the RGB color code.  
g: The green level in the RGB color code.  
b: The blue level in the RGB color code.  
Note:  
setting r,g,b to 0 will give the car independance day tyre smoke  
```
-- @param vehicle Vehicle
-- @param r int
-- @param g int
-- @param b int
-- SET_VEHICLE_TYRE_SMOKE_COLOR(vehicle, r, g, b)

--- SET_VEHICLE_UNDRIVEABLE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_UNDRIVEABLE(vehicle, toggle)

--- SET_VEHICLE_USES_LARGE_REAR_RAMP
-- ```
vehicle must be a plane
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_USES_LARGE_REAR_RAMP(vehicle, toggle)

--- SET_VEHICLE_USE_ALTERNATE_HANDLING
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_USE_ALTERNATE_HANDLING(vehicle, toggle)

--- SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION
-- @param p0 Vehicle
-- @param p1 BOOL
-- @param p2 BOOL
-- @param p3 BOOL
-- SET_VEHICLE_USE_CUTSCENE_WHEEL_COMPRESSION(p0, p1, p2, p3)

--- SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_USE_PLAYER_LIGHT_SETTINGS(vehicle, toggle)

--- SET_VEHICLE_WHEELS_CAN_BREAK
-- @param vehicle Vehicle
-- @param enabled BOOL
-- SET_VEHICLE_WHEELS_CAN_BREAK(vehicle, enabled)

--- SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP
-- @param vehicle Vehicle
-- @param toggle BOOL
-- SET_VEHICLE_WHEELS_CAN_BREAK_OFF_WHEN_BLOW_UP(vehicle, toggle)

--- SET_VEHICLE_WHEEL_TYPE
-- Refer to [GET_VEHICLE_WHEEL_TYPE](#\_0xB3ED1BFB4BE636DC) for wheel types.
-- @param vehicle Vehicle
-- @param wheelType int
-- SET_VEHICLE_WHEEL_TYPE(vehicle, wheelType)

--- SET_VEHICLE_WINDOW_TINT
-- ```cpp
enum WindowTints  
{  
	WINDOWTINT_NONE = 0,
	WINDOWTINT_PURE_BLACK = 1,
	WINDOWTINT_DARKSMOKE = 2,
	WINDOWTINT_LIGHTSMOKE = 3,
	WINDOWTINT_STOCK = 4,
	WINDOWTINT_LIMO = 5,
	WINDOWTINT_GREEN = 6
};  
```
-- @param vehicle Vehicle
-- @param tint int
-- SET_VEHICLE_WINDOW_TINT(vehicle, tint)

--- SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE
-- ```
SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
```
-- @param vehicle Vehicle
-- @param time float
-- SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(vehicle, time)

--- SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE
-- @param vehicle Vehicle
-- SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(vehicle)

--- SMASH_VEHICLE_WINDOW
-- Smashes a vehicles window. See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
-- @param vehicle Vehicle - The vehicle id.
-- @param windowIndex int - Windows to smash index.
-- SMASH_VEHICLE_WINDOW(vehicle, windowIndex)

--- STABILISE_ENTITY_ATTACHED_TO_HELI
-- @param vehicle Vehicle
-- @param entity Entity
-- @param p2 float
-- STABILISE_ENTITY_ATTACHED_TO_HELI(vehicle, entity, p2)

--- START_PLAYBACK_RECORDED_VEHICLE
-- p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).

See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
-- @param vehicle Vehicle
-- @param recording int
-- @param script char*
-- @param p3 BOOL
-- START_PLAYBACK_RECORDED_VEHICLE(vehicle, recording, script, p3)

--- START_PLAYBACK_RECORDED_VEHICLE_USING_AI
-- ```
AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.

0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings.
```
-- @param vehicle Vehicle
-- @param recording int
-- @param script char*
-- @param speed float
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- START_PLAYBACK_RECORDED_VEHICLE_USING_AI(vehicle, recording, script, speed, drivingStyle)

--- START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS
-- ```
flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
```
-- @param vehicle Vehicle
-- @param recording int
-- @param script char*
-- @param flags int
-- @param time int
-- @param drivingStyle int - The driving style (default is 0) (see [SetDriveTaskDrivingStyle](#\_0xDACE1BE37D88AF67)).
-- START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(vehicle, recording, script, flags, time, drivingStyle)

--- START_VEHICLE_ALARM
-- @param vehicle Vehicle
-- START_VEHICLE_ALARM(vehicle)

--- START_VEHICLE_HORN
-- Sounds the horn for the specified vehicle. Note that if a player is in the vehicle, it will only sound briefly.
-- @param vehicle Vehicle - Vehicle id
-- @param duration int - The duration to sound the horn, in milliseconds.
-- @param mode Hash - The hash of "NORMAL" or "HELDDOWN". Can be 0.
-- @param forever BOOL
-- START_VEHICLE_HORN(vehicle, duration, mode, forever)

--- STOP_ALL_GARAGE_ACTIVITY
-- STOP_ALL_GARAGE_ACTIVITY()

--- STOP_PLAYBACK_RECORDED_VEHICLE
-- @param vehicle Vehicle
-- STOP_PLAYBACK_RECORDED_VEHICLE(vehicle)

--- SWITCH_TRAIN_TRACK
-- Toggles whether ambient trains can spawn on the specified track or not.

| trackId | File | Description |
| --- | --- | --- |
| 0 | `trains1.dat` | Main track around SA |
| 1 | `trains2.dat` | Davis Quartz Quarry branch |
| 2 | `trains3.dat` | Second track alongside live track along Roy Lewenstein Blv. |
| 3 | `trains4.dat` | Metro track circuit |
| 4 | `trains5.dat` | Branch in Mirror Park Railyard |
| 5 | `trains6.dat` | Branch in Mirror Park Railyard |
| 6 | `trains7.dat` | LS branch to Mirror Park Railyard |
| 7 | `trains8.dat` | Overground part of metro track along Forum Dr. |
| 8 | `trains9.dat` | Branch to Mirror Park Railyard |
| 9 | `trains10.dat` | Yankton train |
| 10 | `trains11.dat` | Part of metro track near mission row |
| 11 | `trains12.dat` | Yankton prologue mission train |

Tracks IDs `0` and `3` are the main tracks you find trains on during normal gameplay, all the others are used during missions and are not complete tracks.
-- @param trackId int - The internal id of the train track to switch
-- @param state BOOL - Whether ambient trains can spawn or not
-- SWITCH_TRAIN_TRACK(trackId, state)

--- TOGGLE_VEHICLE_MOD
-- Enables or disables a vehicle mod by index (`modType`) for a given vehicle.

`eVehicleModType` enum, used for `modType` index can be found under [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @param vehicle Vehicle - The vehicle handle
-- @param modType int - Refer to eVehicleModType in [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
-- @param toggle BOOL - A bool indicating whether the mod should be enabled/disabled (true/false)
-- TOGGLE_VEHICLE_MOD(vehicle, modType, toggle)

--- TRACK_VEHICLE_VISIBILITY
-- ```
in script hook .net   
Vehicle v = ...;  
Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);  
```
-- @param vehicle Vehicle
-- TRACK_VEHICLE_VISIBILITY(vehicle)

--- TRANSFORM_TO_CAR
-- Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle Vehicle - A vehicle handle.
-- @param instantly BOOL - If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
-- TRANSFORM_TO_CAR(vehicle, instantly)

--- TRANSFORM_TO_SUBMARINE
-- Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
-- @param vehicle Vehicle - A vehicle handle.
-- @param instantly BOOL - If true, the vehicle will be instantly transformed, when false the transform animation plays normally.
-- TRANSFORM_TO_SUBMARINE(vehicle, instantly)

--- UNPAUSE_PLAYBACK_RECORDED_VEHICLE
-- @param vehicle Vehicle
-- UNPAUSE_PLAYBACK_RECORDED_VEHICLE(vehicle)

--- _ARE_BOMB_BAY_DOORS_OPEN
-- Returns true when the bomb bay doors of this plane are open. False if they're closed.
-- @param aircraft Vehicle - The vehicle to check the bomb bay doors on.
-- _ARE_BOMB_BAY_DOORS_OPEN(aircraft)

--- _ARE_HELI_STUB_WINGS_DEPLOYED
-- Only used with the "akula" in the decompiled native scripts.

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- _ARE_HELI_STUB_WINGS_DEPLOYED(vehicle)

--- _ARE_OUTRIGGER_LEGS_DEPLOYED
-- Returns whether the outrigger legs are deployed for the vehicle.
The Chernobog is one of the few vehicles with outrigger legs.

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- _ARE_OUTRIGGER_LEGS_DEPLOYED(vehicle)

--- _ARE_PLANE_WINGS_INTACT
-- @param plane Vehicle
-- _ARE_PLANE_WINGS_INTACT(plane)

--- _ATTACH_CONTAINER_TO_HANDLER_FRAME
-- @param handler Vehicle
-- @param container Entity
-- _ATTACH_CONTAINER_TO_HANDLER_FRAME(handler, container)

--- _CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE
-- _CLEAR_VEHICLE_PHONE_EXPLOSIVE_DEVICE()

--- _DISABLE_VEHICLE_NEON_LIGHTS
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _DISABLE_VEHICLE_NEON_LIGHTS(vehicle, toggle)

--- _DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME
-- @param vehicle Vehicle
-- _DISABLE_VEHICLE_TURRET_MOVEMENT_THIS_FRAME(vehicle)

--- _DISABLE_VEHICLE_WORLD_COLLISION
-- Disables collision for this vehicle (maybe it also supports other entities, not sure).
Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.

[Example video](https://streamable.com/6n45d5)

Not sure if there is a native (and if so, which one) that resets the collisions.
-- @param vehicle Vehicle - the vehicle to disable world collisions for
-- _DISABLE_VEHICLE_WORLD_COLLISION(vehicle)

--- _DOES_VEHICLE_ALLOW_RAPPEL
-- ```
Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
```
-- @param vehicle Vehicle
-- _DOES_VEHICLE_ALLOW_RAPPEL(vehicle)

--- _DOES_VEHICLE_HAVE_LANDING_GEAR
-- ```
NativeDB Introduced: v1180
```
-- @param vehicle Vehicle
-- _DOES_VEHICLE_HAVE_LANDING_GEAR(vehicle)

--- _DOES_VEHICLE_TYRE_EXIST
-- ```
Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
```

```
NativeDB Introduced: v1493
```
-- @param vehicle Vehicle
-- @param tyreIndex int
-- _DOES_VEHICLE_TYRE_EXIST(vehicle, tyreIndex)

--- _EJECT_JB700_ROOF
-- @param vehicle Vehicle
-- @param x float
-- @param y float
-- @param z float
-- _EJECT_JB700_ROOF(vehicle, x, y, z)

--- _ENABLE_AIRCRAFT_OBSTACLE_AVOIDANCE
-- Will disable a plane or a helicopter's need to swerve around object in its heightmap when using TASK_PLANE_MISSION or other AI / Pilot behavior.  Will ensure plane flys directly to it's destination or die trying! This native does NOT need to be called every frame, but instead, just called once on the vehicle (NOT THE PED) you're trying to disable avoidance for!
-- @param vehicle Vehicle - The vehicle handle to toggle obstacle avoidance for.
-- @param avoidObstacles BOOL - `true` / `false` to enable/disable heightmap obstacle avoidance respectively!
-- _ENABLE_AIRCRAFT_OBSTACLE_AVOIDANCE(vehicle, avoidObstacles)

--- _FIND_RANDOM_POINT_IN_SPACE
-- Native is significantly more complicated than simply generating a random vector & length.

The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport\_\__IsSphereVisible.

```
NativeDB Introduced: v1290
```
-- @param ped Ped
-- _FIND_RANDOM_POINT_IN_SPACE(ped)

--- _FIND_VEHICLE_CARRYING_THIS_ENTITY
-- ```
Finds the vehicle that is carrying this entity with a handler frame.
The model of the entity must be prop_contr_03b_ld or the function will return 0.
```
-- @param entity Entity
-- _FIND_VEHICLE_CARRYING_THIS_ENTITY(entity)

--- _GET_ALL_VEHICLES
-- @param vehArray int*
-- _GET_ALL_VEHICLES(vehArray)

--- _GET_BOAT_BOOM_POSITION_RATIO_2
-- ```
Same call as VEHICLE::_0x0F3B4D4E43177236
```
-- @param vehicle Vehicle
-- @param p1 BOOL
-- _GET_BOAT_BOOM_POSITION_RATIO_2(vehicle, p1)

--- _GET_BOAT_BOOM_POSITION_RATIO_3
-- @param vehicle Vehicle
-- @param p1 BOOL
-- _GET_BOAT_BOOM_POSITION_RATIO_3(vehicle, p1)

--- _GET_CAN_VEHICLE_JUMP
-- ```
Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
```
-- @param vehicle Vehicle
-- _GET_CAN_VEHICLE_JUMP(vehicle)

--- _GET_CARGOBOB_HOOK_POSITION
-- Gets the position of the cargobob hook, in world coords.
-- @param cargobob Vehicle
-- _GET_CARGOBOB_HOOK_POSITION(cargobob)

--- _GET_DOES_VEHICLE_HAVE_TOMBSTONE
-- ```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- _GET_DOES_VEHICLE_HAVE_TOMBSTONE(vehicle)

--- _GET_DRIFT_TYRES_ENABLED
-- ```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- _GET_DRIFT_TYRES_ENABLED(vehicle)

--- _GET_ENTITY_ATTACHED_TO_CARGOBOB
-- @param vehicle Vehicle
-- _GET_ENTITY_ATTACHED_TO_CARGOBOB(vehicle)

--- _GET_ENTRY_POSITION_OF_DOOR
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- _GET_ENTRY_POSITION_OF_DOOR(vehicle, doorIndex)

--- _GET_HAS_RETRACTABLE_WHEELS
-- @param vehicle Vehicle
-- _GET_HAS_RETRACTABLE_WHEELS(vehicle)

--- _GET_HAS_ROCKET_BOOST
-- @param vehicle Vehicle
-- _GET_HAS_ROCKET_BOOST(vehicle)

--- _GET_HYDRAULIC_WHEEL_VALUE
-- ```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- @param wheelId int
-- _GET_HYDRAULIC_WHEEL_VALUE(vehicle, wheelId)

--- _GET_IS_DOOR_VALID
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- _GET_IS_DOOR_VALID(vehicle, doorIndex)

--- _GET_IS_VEHICLE_ELECTRIC
-- Checks if the vehicle is electric.

```
NativeDB Introduced: v3258
```
-- @param vehicleModel Hash - The hash of the vehicle model to check.
-- _GET_IS_VEHICLE_ELECTRIC(vehicleModel)

--- _GET_IS_VEHICLE_EMP_DISABLED
-- ```
Returns whether this vehicle is currently disabled by an EMP mine.

NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- _GET_IS_VEHICLE_EMP_DISABLED(vehicle)

--- _GET_IS_VEHICLE_SHUNT_BOOST_ACTIVE
-- ```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- _GET_IS_VEHICLE_SHUNT_BOOST_ACTIVE(vehicle)

--- _GET_IS_WHEELS_LOWERED_STATE_ACTIVE
-- @param vehicle Vehicle
-- _GET_IS_WHEELS_LOWERED_STATE_ACTIVE(vehicle)

--- _GET_LAST_RAMMED_VEHICLE
-- ```
Returns last vehicle that was rammed by the given vehicle using the shunt boost.

NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- _GET_LAST_RAMMED_VEHICLE(vehicle)

--- _GET_NUMBER_OF_VEHICLE_DOORS
-- @param vehicle Vehicle
-- _GET_NUMBER_OF_VEHICLE_DOORS(vehicle)

--- _GET_REMAINING_NITROUS_DURATION
-- ```
NativeDB Introduced: 3095
```

Retrieves the remaining duration of nitrous boost available for the specified vehicle.
-- @param vehicle Vehicle - The vehicle for which to retrieve the remaining nitrous duration.
-- _GET_REMAINING_NITROUS_DURATION(vehicle)

--- _GET_TYRE_HEALTH
-- ```
NativeDB Introduced: v1868
```
-- @param vehicle Vehicle
-- @param wheelIndex int
-- _GET_TYRE_HEALTH(vehicle, wheelIndex)

--- _GET_TYRE_WEAR_MULTIPLIER
-- ```
NativeDB Introduced: v2060
```
-- @param vehicle Vehicle
-- @param wheelIndex int
-- _GET_TYRE_WEAR_MULTIPLIER(vehicle, wheelIndex)

--- _GET_VEHICLE_BOMB_COUNT
-- Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.

In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).

Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
-- @param aircraft Vehicle - The vehicle to get the amount of bombs from.
-- _GET_VEHICLE_BOMB_COUNT(aircraft)

--- _GET_VEHICLE_CAN_ACTIVATE_PARACHUTE
-- @param vehicle Vehicle
-- _GET_VEHICLE_CAN_ACTIVATE_PARACHUTE(vehicle)

--- _GET_VEHICLE_COUNTERMEASURE_COUNT
-- Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.

Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
-- @param aircraft Vehicle - The vehicle to get the amount of countermeasures from.
-- _GET_VEHICLE_COUNTERMEASURE_COUNT(aircraft)

--- _GET_VEHICLE_CURRENT_SLIPSTREAM_DRAFT
-- ```
Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
GET_VEHICLE_*
```
-- @param vehicle Vehicle
-- _GET_VEHICLE_CURRENT_SLIPSTREAM_DRAFT(vehicle)

--- _GET_VEHICLE_DASHBOARD_COLOR
-- @param vehicle Vehicle
-- @param color int*
-- _GET_VEHICLE_DASHBOARD_COLOR(vehicle, color)

--- _GET_VEHICLE_DRIVETRAIN_TYPE
-- ```
NativeDB Introduced: v3258
```

**Note**: When using this native, the hash of the vehicle needs to be loaded into the client's memory. This can be done by requesting the model with [`REQUEST_MODEL`](#\_0x963D27A58DF860AC) or by simply having the vehicle spawned.

```cpp

enum eVehicleDrivetrainType
{
    INVALID = 0,
    FWD = 1,
    RWD = 2,
    AWD = 3
};
```

```
NativeDB Introduced: v3258
```
-- @param vehicleModel Hash - The hash of the vehicle model to check.
-- _GET_VEHICLE_DRIVETRAIN_TYPE(vehicleModel)

--- _GET_VEHICLE_HAS_PARACHUTE
-- @param vehicle Vehicle
-- _GET_VEHICLE_HAS_PARACHUTE(vehicle)

--- _GET_VEHICLE_INTERIOR_COLOR
-- @param vehicle Vehicle
-- @param color int*
-- _GET_VEHICLE_INTERIOR_COLOR(vehicle, color)

--- _GET_VEHICLE_MODEL_ESTIMATED_AGILITY
-- ```
GET_VEHICLE_MODEL_*
9.8 * thrust if air vehicle, else 0.38 + drive force?
```
-- @param modelHash Hash
-- _GET_VEHICLE_MODEL_ESTIMATED_AGILITY(modelHash)

--- _GET_VEHICLE_MODEL_MAX_KNOTS
-- ```
GET_VEHICLE_MODEL_*
Function pertains only to aviation vehicles.
```
-- @param modelHash Hash
-- _GET_VEHICLE_MODEL_MAX_KNOTS(modelHash)

--- _GET_VEHICLE_NEON_LIGHTS_COLOUR
-- Gets the color of the neon lights of the specified vehicle.

See [`_SET_VEHICLE_NEON_LIGHTS_COLOUR`](#\_0x8E0A582209A62695) for more information
-- @param vehicle Vehicle
-- @param r int*
-- @param g int*
-- @param b int*
-- _GET_VEHICLE_NEON_LIGHTS_COLOUR(vehicle, r, g, b)

--- _GET_VEHICLE_NUMBER_OF_BROKEN_BONES
-- @param vehicle Vehicle
-- _GET_VEHICLE_NUMBER_OF_BROKEN_BONES(vehicle)

--- _GET_VEHICLE_NUMBER_OF_BROKEN_OFF_BONES
-- ```
Also includes some "turnOffBones" when vehicle mods are installed.
```
-- @param vehicle Vehicle
-- _GET_VEHICLE_NUMBER_OF_BROKEN_OFF_BONES(vehicle)

--- _GET_VEHICLE_ROOF_LIVERY
-- Returns index of the current vehicle's rooftop livery.
A getter for [\_SET_VEHICLE_ROOF_LIVERY](#\_0xA6D3A8750DC73270).
-- @param vehicle Vehicle - The vehicle handle.
-- _GET_VEHICLE_ROOF_LIVERY(vehicle)

--- _GET_VEHICLE_ROOF_LIVERY_COUNT
-- Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
-- @param vehicle Vehicle - The vehicle handle.
-- _GET_VEHICLE_ROOF_LIVERY_COUNT(vehicle)

--- _GET_VEHICLE_SUSPENSION_BOUNDS
-- ```
Outputs 2 Vector3's.
Scripts check if out2.x - out1.x > something.x
Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
```
-- @param vehicle Vehicle
-- @param out1 Vector3*
-- @param out2 Vector3*
-- _GET_VEHICLE_SUSPENSION_BOUNDS(vehicle, out1, out2)

--- _GET_VEHICLE_SUSPENSION_HEIGHT
-- ```
Gets the height of the vehicle's suspension.  
The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.  
0.000 is the stock suspension.  
0.008 is Ultra Suspension.  
```
-- @param vehicle Vehicle
-- _GET_VEHICLE_SUSPENSION_HEIGHT(vehicle)

--- _GET_VEHICLE_WEAPON_CAPACITY
-- @param vehicle Vehicle
-- @param weaponIndex int
-- _GET_VEHICLE_WEAPON_CAPACITY(vehicle, weaponIndex)

--- _GET_VEHICLE_XENON_LIGHTS_COLOR
-- Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.

You must enable xenon headlights for this native to work properly.

```cpp
enum eHeadlightColors {
    Default = 255,
    White = 0,
    Blue = 1,
    ElectricBlue = 2,
    MintGreen = 3,
    LimeGreen = 4,
    Yellow = 5,
    GoldenShower = 6,
    Orange = 7,
    Red = 8,
    PonyPink = 9,
    HotPink = 10,
    Purple = 11,
    Blacklight = 12
}
```
-- @param vehicle Vehicle - The vehicle to get the headlight color from.
-- _GET_VEHICLE_XENON_LIGHTS_COLOR(vehicle)

--- _HAS_FILLED_VEHICLE_POPULATION
-- ```
HAS_*
```
-- _HAS_FILLED_VEHICLE_POPULATION()

--- _HIDE_VEHICLE_TOMBSTONE
-- ```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _HIDE_VEHICLE_TOMBSTONE(vehicle, toggle)

--- _IS_HANDLER_FRAME_ABOVE_CONTAINER
-- @param handler Vehicle
-- @param container Entity
-- _IS_HANDLER_FRAME_ABOVE_CONTAINER(handler, container)

--- _IS_MISSION_TRAIN
-- ```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- _IS_MISSION_TRAIN(vehicle)

--- _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE
-- @param ped Ped
-- @param vehicle Vehicle
-- @param outIndex int*
-- _IS_PED_EXCLUSIVE_DRIVER_OF_VEHICLE(ped, vehicle, outIndex)

--- _IS_THIS_MODEL_AN_AMPHIBIOUS_CAR
-- @param model Hash
-- _IS_THIS_MODEL_AN_AMPHIBIOUS_CAR(model)

--- _IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE
-- @param model Hash
-- _IS_THIS_MODEL_AN_AMPHIBIOUS_QUADBIKE(model)

--- _IS_THIS_MODEL_A_JETSKI
-- ```
Checks if model is a boat, then checks for FLAG_IS_JETSKI.
```
-- @param model Hash
-- _IS_THIS_MODEL_A_JETSKI(model)

--- _IS_VEHICLE_BEING_HALTED
-- ```
Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
_IS_VEHICLE_*
```

```
NativeDB Introduced: v1493
```
-- @param vehicle Vehicle
-- _IS_VEHICLE_BEING_HALTED(vehicle)

--- _IS_VEHICLE_DAMAGED
-- ```
Appears to return true if the vehicle has any damage, including cosmetically.
GET_*
```
-- @param vehicle Vehicle
-- _IS_VEHICLE_DAMAGED(vehicle)

--- _IS_VEHICLE_ENGINE_ON_FIRE
-- Only ever used once in decompiled scripts: **am_pi_menu**:
Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it **has been** on fire.

It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.

This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
-- @param vehicle Vehicle - The vehicle to check.
-- _IS_VEHICLE_ENGINE_ON_FIRE(vehicle)

--- _IS_VEHICLE_MOD_HSW_EXCLUSIVE
-- ```
mpsum2_g9ec
```

```
NativeDB Introduced: v2699
```
-- @param vehicle Vehicle
-- @param modType int
-- @param modIndex int
-- _IS_VEHICLE_MOD_HSW_EXCLUSIVE(vehicle, modType, modIndex)

--- _IS_VEHICLE_NEON_LIGHT_ENABLED
-- ```
indices:  
0 = Left  
1 = Right  
2 = Front  
3 = Back  
```
-- @param vehicle Vehicle
-- @param index int
-- _IS_VEHICLE_NEON_LIGHT_ENABLED(vehicle, index)

--- _IS_VEHICLE_PARACHUTE_ACTIVE
-- Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
-- @param vehicle Vehicle
-- _IS_VEHICLE_PARACHUTE_ACTIVE(vehicle)

--- _IS_VEHICLE_ROCKET_BOOST_ACTIVE
-- @param vehicle Vehicle
-- _IS_VEHICLE_ROCKET_BOOST_ACTIVE(vehicle)

--- _IS_VEHICLE_SEAT_ACCESSIBLE
-- ```
Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
onEnter = check if you can enter (true) or exit (false) a vehicle.
```
-- @param ped Ped
-- @param vehicle Vehicle - The vehicle to check.
-- @param seatIndex int - See eSeatPosition declared in [`IS_VEHICLE_SEAT_FREE`](#\_0x22AC59A870E6A669).
-- @param side BOOL
-- @param onEnter BOOL
-- _IS_VEHICLE_SEAT_ACCESSIBLE(ped, vehicle, seatIndex, side, onEnter)

--- _IS_VEHICLE_SLIPSTREAM_LEADER
-- @param vehicle Vehicle
-- _IS_VEHICLE_SLIPSTREAM_LEADER(vehicle)

--- _IS_VEHICLE_WEAPON_DISABLED
-- @param weaponHash Hash
-- @param vehicle Vehicle
-- @param owner Ped
-- _IS_VEHICLE_WEAPON_DISABLED(weaponHash, vehicle, owner)

--- _LOWER_RETRACTABLE_WHEELS
-- @param vehicle Vehicle
-- _LOWER_RETRACTABLE_WHEELS(vehicle)

--- _NETWORK_USE_HIGH_PRECISION_VEHICLE_BLENDING
-- ```
Implemented only for Trains.
```

```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _NETWORK_USE_HIGH_PRECISION_VEHICLE_BLENDING(vehicle, toggle)

--- _RAISE_RETRACTABLE_WHEELS
-- @param vehicle Vehicle
-- _RAISE_RETRACTABLE_WHEELS(vehicle)

--- _REMOVE_VEHICLE_SHADOW_EFFECT
-- Remove the weird shadow applied by [\_SET_VEHICLE_SHADOW_EFFECT](#\_0x2A70BAE8883E4C81)
-- @param vehicle Vehicle
-- _REMOVE_VEHICLE_SHADOW_EFFECT(vehicle)

--- _REQUEST_VEHICLE_DASHBOARD_SCALEFORM_MOVIE
-- ```
REQUEST_VEHICLE_*  
```
-- @param vehicle Vehicle
-- _REQUEST_VEHICLE_DASHBOARD_SCALEFORM_MOVIE(vehicle)

--- _SET_BOAT_BOOM_POSITION_RATIO
-- Sets the boat boom position for the `TR3` trailer.

Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.

To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#\_0x6636C535F6CC2725).
-- @param vehicle Vehicle - The TR3 vehicle.
-- @param ratio float - A value between 0.0 (left) and 1.0 (back)
-- _SET_BOAT_BOOM_POSITION_RATIO(vehicle, ratio)

--- _SET_BOAT_IS_SINKING
-- @param vehicle Vehicle
-- _SET_BOAT_IS_SINKING(vehicle)

--- _SET_CAMBERED_WHEELS_DISABLED
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_CAMBERED_WHEELS_DISABLED(vehicle, toggle)

--- _SET_CARGOBOB_HOOK_CAN_ATTACH
-- ```
Stops the cargobob from being able to attach any vehicle
```

```
NativeDB Introduced: v1180
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_CARGOBOB_HOOK_CAN_ATTACH(vehicle, toggle)

--- _SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER
-- ```
Something to do with "high speed bump severity"?  
if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {  
    VEHICLE::_84FD40F56075E816(0.0);  
    sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);  
}  
```
-- @param multiplier float
-- _SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER(multiplier)

--- _SET_DEPLOY_HELI_STUB_WINGS
-- Only used with the "akula" and "annihilator2" in the decompiled native scripts.

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param deploy BOOL
-- @param p2 BOOL
-- _SET_DEPLOY_HELI_STUB_WINGS(vehicle, deploy, p2)

--- _SET_DISABLE_SUPERDUMMY_MODE
-- @param vehicle Vehicle
-- @param p1 BOOL
-- _SET_DISABLE_SUPERDUMMY_MODE(vehicle, p1)

--- _SET_DISABLE_TURRET_MOVEMENT_THIS_FRAME
-- Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.

```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle
-- @param turretIdx int
-- _SET_DISABLE_TURRET_MOVEMENT_THIS_FRAME(vehicle, turretIdx)

--- _SET_DISABLE_VEHICLE_FLIGHT_NOZZLE_POSITION
-- ```
True stops vtols from switching modes. Doesn't stop the sound though.
```

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param direction BOOL
-- _SET_DISABLE_VEHICLE_FLIGHT_NOZZLE_POSITION(vehicle, direction)

--- _SET_DISABLE_VEHICLE_UNK
-- ```
NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- _SET_DISABLE_VEHICLE_UNK(toggle)

--- _SET_DISABLE_VEHICLE_UNK_2
-- ```
NativeDB Introduced: v1604
```
-- @param toggle BOOL
-- _SET_DISABLE_VEHICLE_UNK_2(toggle)

--- _SET_DISABLE_VEHICLE_WINDOW_COLLISIONS
-- R\* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
-- @param vehicle Vehicle - The vehicle to toggle this for.
-- @param toggle BOOL - True disables the collision, false enables the collision
-- _SET_DISABLE_VEHICLE_WINDOW_COLLISIONS(vehicle, toggle)

--- _SET_DRIFT_TYRES_ENABLED
-- ```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_DRIFT_TYRES_ENABLED(vehicle, toggle)

--- _SET_HELICOPTER_ROLL_PITCH_YAW_MULT
-- ```
value between 0.0 and 1.0  
```
-- @param helicopter Vehicle
-- @param multiplier float
-- _SET_HELICOPTER_ROLL_PITCH_YAW_MULT(helicopter, multiplier)

--- _SET_HELI_MAIN_ROTOR_HEALTH
-- @param vehicle Vehicle
-- @param health float
-- _SET_HELI_MAIN_ROTOR_HEALTH(vehicle, health)

--- _SET_HELI_TAIL_ROTOR_HEALTH
-- @param vehicle Vehicle
-- @param health float
-- _SET_HELI_TAIL_ROTOR_HEALTH(vehicle, health)

--- _SET_HYDRAULIC_RAISED
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_HYDRAULIC_RAISED(vehicle, toggle)

--- _SET_HYDRAULIC_WHEEL_STATE
-- @param vehicle Vehicle
-- @param state int
-- _SET_HYDRAULIC_WHEEL_STATE(vehicle, state)

--- _SET_HYDRAULIC_WHEEL_STATE_TRANSITION
-- ```
Sets vehicle wheel hydraulic states transition. Known states:
0 - reset
1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
2 - jump using wheel
```
-- @param vehicle Vehicle
-- @param wheelId int
-- @param state int
-- @param value float
-- @param p4 float
-- _SET_HYDRAULIC_WHEEL_STATE_TRANSITION(vehicle, wheelId, state, value, p4)

--- _SET_HYDRAULIC_WHEEL_VALUE
-- ```
Works only on vehicles that support hydraulic.
```
-- @param vehicle Vehicle
-- @param wheelId int
-- @param value float
-- _SET_HYDRAULIC_WHEEL_VALUE(vehicle, wheelId, value)

--- _SET_OPPRESSOR_TRANSFORM_STATE
-- Set state to true to extend the wings, false to retract them.
-- @param vehicle Vehicle - The vehicle (tested with oppressor only)
-- @param extend BOOL - Set to true to extend the wings, false to retract them.
-- _SET_OPPRESSOR_TRANSFORM_STATE(vehicle, extend)

--- _SET_PLANE_ENGINE_HEALTH
-- ```
Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
```
-- @param vehicle Vehicle
-- @param health float
-- _SET_PLANE_ENGINE_HEALTH(vehicle, health)

--- _SET_PLANE_PROPELLERS_HEALTH
-- @param plane Vehicle
-- @param health float
-- _SET_PLANE_PROPELLERS_HEALTH(plane, health)

--- _SET_RANDOM_BOATS_IN_MP
-- ```
NativeDB Introduced: v2372
```
-- @param toggle BOOL
-- _SET_RANDOM_BOATS_IN_MP(toggle)

--- _SET_REDUCE_DRIFT_VEHICLE_SUSPENSION
-- Lowers the vehicle's stance. Only works for vehicles that support this feature.

```
NativeDB Introduced: v2372
```
-- @param vehicle Vehicle
-- @param enable BOOL
-- _SET_REDUCE_DRIFT_VEHICLE_SUSPENSION(vehicle, enable)

--- _SET_TRAILER_LEGS_LOWERED
-- ```
Inverse of 0x95CF53B3D687F9FA
```

```
NativeDB Added Parameter 1: Vehicle vehicle
```
-- _SET_TRAILER_LEGS_LOWERED()

--- _SET_TYRE_HEALTH
-- ```
NativeDB Introduced: v1868
```
-- @param vehicle Vehicle
-- @param wheelIndex int
-- @param health float
-- _SET_TYRE_HEALTH(vehicle, wheelIndex, health)

--- _SET_TYRE_SOFTNESS_MULTIPLIER
-- ```
Controls how fast the tires wear out.
Default values from Rockstar's Open Wheel Race JSON's:
"owrtss" (Soft): 2.2
"owrtsm" (Medium): 1.7
"owrtsh" (Hard): 1.2
Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
```

```
NativeDB Introduced: v2060
```
-- @param vehicle Vehicle
-- @param wheelIndex int
-- @param multiplier float
-- _SET_TYRE_SOFTNESS_MULTIPLIER(vehicle, wheelIndex, multiplier)

--- _SET_TYRE_TRACTION_LOSS_MULTIPLIER
-- ```
Controls how much traction the wheel loses.
Default values from Rockstar's Open Wheel Race JSON's:
"owrtds" (Soft): 0.05
"owrtdm" (Medium): 0.45
"owrtdh" (Hard): 0.8
Usable wheels:
0: wheel_lf
1: wheel_rf
2: wheel_lm1
3: wheel_rm1
4: wheel_lr
5: wheel_rr
```

```
NativeDB Introduced: v2060
```
-- @param vehicle Vehicle
-- @param wheelIndex int
-- @param multiplier float
-- _SET_TYRE_TRACTION_LOSS_MULTIPLIER(vehicle, wheelIndex, multiplier)

--- _SET_TYRE_WEAR_MULTIPLIER
-- ```
NativeDB Introduced: v1868
```
-- @param vehicle Vehicle
-- @param wheelIndex int
-- @param multiplier float
-- _SET_TYRE_WEAR_MULTIPLIER(vehicle, wheelIndex, multiplier)

--- _SET_USE_HIGHER_VEHICLE_JUMP_FORCE
-- Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_USE_HIGHER_VEHICLE_JUMP_FORCE(vehicle, toggle)

--- _SET_VEHICLE_BOMB_COUNT
-- Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.

In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.

Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
-- @param aircraft Vehicle - The vehicle to set the bombCount on.
-- @param bombCount int - The amount of bombs to set for this vehicle.
-- _SET_VEHICLE_BOMB_COUNT(aircraft, bombCount)

--- _SET_VEHICLE_CAN_BE_LOCKED_ON
-- ```
SET_VEHICLE_AL*
```
-- @param vehicle Vehicle
-- @param canBeLockedOn BOOL
-- @param unk BOOL
-- _SET_VEHICLE_CAN_BE_LOCKED_ON(vehicle, canBeLockedOn, unk)

--- _SET_VEHICLE_CAN_ENGINE_OPERATE_ON_FIRE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_CAN_ENGINE_OPERATE_ON_FIRE(vehicle, toggle)

--- _SET_VEHICLE_CONTROLS_INVERTED
-- ```
Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
Doesn't work for planes/helis.
```
-- @param vehicle Vehicle
-- @param state BOOL
-- _SET_VEHICLE_CONTROLS_INVERTED(vehicle, state)

--- _SET_VEHICLE_COUNTERMEASURE_COUNT
-- Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.

Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
-- @param aircraft Vehicle - The vehicle to set the amount of countermeasures on.
-- @param count int - The amount of countermeasures to set on this vehicle.
-- _SET_VEHICLE_COUNTERMEASURE_COUNT(aircraft, count)

--- _SET_VEHICLE_DAMAGE_MODIFIER
-- ```
SET_VEHICLE_D*
```
-- @param vehicle Vehicle
-- @param p1 float
-- _SET_VEHICLE_DAMAGE_MODIFIER(vehicle, p1)

--- _SET_VEHICLE_DASHBOARD_COLOR
-- @param vehicle Vehicle
-- @param color int
-- _SET_VEHICLE_DASHBOARD_COLOR(vehicle, color)

--- _SET_VEHICLE_DOORS_LOCKED_FOR_UNK
-- ```
NativeDB Introduced: v1365
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_DOORS_LOCKED_FOR_UNK(vehicle, toggle)

--- _SET_VEHICLE_DOOR_CAN_BREAK
-- See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
-- @param vehicle Vehicle
-- @param doorIndex int
-- @param isBreakable BOOL
-- _SET_VEHICLE_DOOR_CAN_BREAK(vehicle, doorIndex, isBreakable)

--- _SET_VEHICLE_EXCLUSIVE_DRIVER_2
-- The **actual** [`SET_VEHICLE_EXCLUSIVE_DRIVER`](#\_0x41062318F23ED854) native.
-- @param vehicle Vehicle
-- @param ped Ped
-- @param index int
-- _SET_VEHICLE_EXCLUSIVE_DRIVER_2(vehicle, ped, index)

--- _SET_VEHICLE_HANDLING_HASH_FOR_AI
-- @param vehicle Vehicle
-- @param hash Hash
-- _SET_VEHICLE_HANDLING_HASH_FOR_AI(vehicle, hash)

--- _SET_VEHICLE_INTERIOR_COLOR
-- @param vehicle Vehicle
-- @param color int
-- _SET_VEHICLE_INTERIOR_COLOR(vehicle, color)

--- _SET_VEHICLE_MAX_SPEED
-- To reset the max speed, set the `speed` value to `0.0` or lower.
-- @param vehicle Vehicle - The vehicle handle.
-- @param speed float - The speed limit in meters per second.
-- _SET_VEHICLE_MAX_SPEED(vehicle, speed)

--- _SET_VEHICLE_NEON_LIGHTS_COLOR_2
-- ```
NativeDB Introduced: v1493
```
-- @param vehicle Vehicle
-- @param color int
-- _SET_VEHICLE_NEON_LIGHTS_COLOR_2(vehicle, color)

--- _SET_VEHICLE_NEON_LIGHTS_COLOUR
-- Sets the color of the neon lights on the specified vehicle.

RGB values and colour names taken from the decompiled scripts:

| Colour         |  R  |  G  |  B  |
|---------------|:---:|:---:|:---:|
| White         | 222 | 222 | 255 |
| Blue          | 2   | 21  | 255 |
| Electric Blue | 3   | 83  | 255 |
| Mint Green    | 0   | 255 | 140 |
| Lime Green    | 94  | 255 | 1   |
| Yellow        | 255 | 255 | 0   |
| Golden Shower | 255 | 150 | 0   |
| Orange        | 255 | 62  | 0   |
| Red           | 255 | 1   | 1   |
| Pony Pink     | 255 | 50  | 100 |
| Hot Pink      | 255 | 5   | 190 |
| Purple        | 35  | 1   | 255 |
| Blacklight    | 15  | 3   | 255 |
-- @param vehicle Vehicle
-- @param r int
-- @param g int
-- @param b int
-- _SET_VEHICLE_NEON_LIGHTS_COLOUR(vehicle, r, g, b)

--- _SET_VEHICLE_NEON_LIGHT_ENABLED
-- ```
Sets the neon lights of the specified vehicle on/off.  
Indices:  
0 = Left  
1 = Right  
2 = Front  
3 = Back  
```
-- @param vehicle Vehicle
-- @param index int
-- @param toggle BOOL
-- _SET_VEHICLE_NEON_LIGHT_ENABLED(vehicle, index, toggle)

--- _SET_VEHICLE_PARACHUTE_ACTIVE
-- @param vehicle Vehicle
-- @param active BOOL
-- _SET_VEHICLE_PARACHUTE_ACTIVE(vehicle, active)

--- _SET_VEHICLE_PARACHUTE_MODEL
-- ```
parachuteModel = 230075693  
```
-- @param vehicle Vehicle
-- @param modelHash Hash
-- _SET_VEHICLE_PARACHUTE_MODEL(vehicle, modelHash)

--- _SET_VEHICLE_PARACHUTE_TEXTURE_VARIATION
-- ```
colorIndex = 0 - 7
```
-- @param vehicle Vehicle
-- @param textureVariation int
-- _SET_VEHICLE_PARACHUTE_TEXTURE_VARIATION(vehicle, textureVariation)

--- _SET_VEHICLE_RAMP_LAUNCH_MODIFIER
-- @param vehicle Vehicle
-- @param p1 float
-- _SET_VEHICLE_RAMP_LAUNCH_MODIFIER(vehicle, p1)

--- _SET_VEHICLE_RAMP_SIDEWAYS_LAUNCH_MOTION
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_RAMP_SIDEWAYS_LAUNCH_MOTION(vehicle, toggle)

--- _SET_VEHICLE_RAMP_UPWARDS_LAUNCH_MOTION
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_RAMP_UPWARDS_LAUNCH_MOTION(vehicle, toggle)

--- _SET_VEHICLE_RECEIVES_RAMP_DAMAGE
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_RECEIVES_RAMP_DAMAGE(vehicle, toggle)

--- _SET_VEHICLE_REDUCE_TRACTION
-- Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#\_0x222FF6A823D122E2).

```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- @param val int
-- _SET_VEHICLE_REDUCE_TRACTION(vehicle, val)

--- _SET_VEHICLE_ROCKET_BOOST_ACTIVE
-- @param vehicle Vehicle
-- @param active BOOL
-- _SET_VEHICLE_ROCKET_BOOST_ACTIVE(vehicle, active)

--- _SET_VEHICLE_ROCKET_BOOST_PERCENTAGE
-- @param vehicle Vehicle
-- @param percentage float
-- _SET_VEHICLE_ROCKET_BOOST_PERCENTAGE(vehicle, percentage)

--- _SET_VEHICLE_ROCKET_BOOST_REFILL_TIME
-- @param vehicle Vehicle
-- @param time float
-- _SET_VEHICLE_ROCKET_BOOST_REFILL_TIME(vehicle, time)

--- _SET_VEHICLE_ROOF_LIVERY
-- Used to set the tornado custom (convertible) rooftop livery.

Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.

Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
-- @param vehicle Vehicle - The vehicle handle.
-- @param livery int - Livery index.
-- _SET_VEHICLE_ROOF_LIVERY(vehicle, livery)

--- _SET_VEHICLE_SHADOW_EFFECT
-- ```
Adds some kind of shadow to the vehicle.
-1 disables the effect.
DISABLE_*
```
-- @param vehicle Vehicle
-- @param p1 int
-- @param p2 int
-- _SET_VEHICLE_SHADOW_EFFECT(vehicle, p1, p2)

--- _SET_VEHICLE_SILENT
-- ```
If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_SILENT(vehicle, toggle)

--- _SET_VEHICLE_ST
-- ```
Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.  
============================================  
May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.  
Btw, func_1333 ends up calling this func which uses this native,  
void func_1338(int iParam0)//Position   
{  
	ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);  
	ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);  
	ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);  
	VEHICLE::_0xDF594D8D(iParam0, true);  
}  
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_ST(vehicle, toggle)

--- _SET_VEHICLE_TURRET_UNK
-- ```
Toggles specific flag on turret
```

```
NativeDB Introduced: v1290
```
-- @param vehicle Vehicle
-- @param index int
-- @param toggle BOOL
-- _SET_VEHICLE_TURRET_UNK(vehicle, index, toggle)

--- _SET_VEHICLE_UNK_DAMAGE_MULTIPLIER
-- @param vehicle Vehicle
-- @param multiplier float
-- _SET_VEHICLE_UNK_DAMAGE_MULTIPLIER(vehicle, multiplier)

--- _SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS
-- ```
NativeDB Introduced: v3095
```

Enables or disables the use of the vehicle's horn button for activating the nitrous system.
-- @param vehicle Vehicle - The vehicle where this setting will be applied.
-- @param bToggle BOOL - If set to `true`, the horn button will activate the nitrous system; if `false`, it will not.
-- _SET_VEHICLE_USE_HORN_BUTTON_FOR_NITROUS(vehicle, bToggle)

--- _SET_VEHICLE_WEAPONS_DISABLED
-- @param vehicle Vehicle
-- @param weaponSlot int
-- _SET_VEHICLE_WEAPONS_DISABLED(vehicle, weaponSlot)

--- _SET_VEHICLE_WEAPON_CAPACITY
-- @param vehicle Vehicle
-- @param weaponIndex int
-- @param capacity int
-- _SET_VEHICLE_WEAPON_CAPACITY(vehicle, weaponIndex, capacity)

--- _SET_VEHICLE_WHEELS_DEAL_DAMAGE
-- ```
Related to monster trucks in native scripts.
```

```
NativeDB Introduced: v1604
```
-- @param vehicle Vehicle
-- @param toggle BOOL
-- _SET_VEHICLE_WHEELS_DEAL_DAMAGE(vehicle, toggle)

--- _SET_VEHICLE_XENON_LIGHTS_COLOR
-- Paint index goes from 0 to 12.

You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
-- @param vehicle Vehicle - The vehicle handle.
-- @param color int - The paint index.
-- _SET_VEHICLE_XENON_LIGHTS_COLOR(vehicle, color)

--- _STOP_BRING_VEHICLE_TO_HALT
-- ```
Stops CTaskBringVehicleToHalt
```
-- @param vehicle Vehicle
-- _STOP_BRING_VEHICLE_TO_HALT(vehicle)


-- ========== WATER ==========

--- 0x547237AA71AB44DE
-- @param p0 float
-- 0x547237AA71AB44DE(p0)

--- ADD_EXTRA_CALMING_QUAD
-- Only 8 current rises can exist. If rises need to be changed, use REMOVE_EXTRA_CALMING_QUAD and then ADD_EXTRA_CALMING_QUAD again.
After removing a rise, you will be able to add a rise again.
-- @param xLow float
-- @param yLow float
-- @param xHigh float
-- @param yHigh float
-- @param height float
-- ADD_EXTRA_CALMING_QUAD(xLow, yLow, xHigh, yHigh, height)

--- GET_DEEP_OCEAN_SCALER
-- ```
Gets the aggressiveness factor of the ocean waves.  
```
-- GET_DEEP_OCEAN_SCALER()

--- GET_WATER_HEIGHT
-- Retrieves the depth of the water beneath the specified position, accounting for the waves.

**Note:** The result might vary depending on the specific frame when this command is executed due to wave fluctuations.
-- @param x float - The coordinate at which to test at for water.
-- @param y float - The coordinate at which to test at for water.
-- @param z float - The coordinate at which to test at for water.
-- @param height float* - The height at which to test at for water.
-- GET_WATER_HEIGHT(x, y, z, height)

--- GET_WATER_HEIGHT_NO_WAVES
-- Retrieves the depth of the water beneath the specified position, disregarding wave effects.

**Note:** The result remains consistent across different frames as it doesn't consider wave fluctuations.
-- @param x float
-- @param y float
-- @param z float
-- @param height float*
-- GET_WATER_HEIGHT_NO_WAVES(x, y, z, height)

--- MODIFY_WATER
-- ```
Sets the water height for a given position and radius.  
```
-- @param x float
-- @param y float
-- @param height float
-- @param radius float
-- MODIFY_WATER(x, y, height, radius)

--- RESET_DEEP_OCEAN_SCALER
-- ```
Sets the waves intensity back to original (1.0 in most cases). 
```
-- RESET_DEEP_OCEAN_SCALER()

--- SET_DEEP_OCEAN_SCALER
-- ```
Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.  
Works only ~200 meters around the player.  
```
-- @param intensity float
-- SET_DEEP_OCEAN_SCALER(intensity)

--- TEST_PROBE_AGAINST_ALL_WATER
-- Flags are identical to START_SHAPE_TEST\*, however, 128 is automatically set.
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param flag int - See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param result Vector3*
-- TEST_PROBE_AGAINST_ALL_WATER(x1, y1, z1, x2, y2, z2, flag, result)

--- TEST_PROBE_AGAINST_WATER
-- @param x1 float
-- @param y1 float
-- @param z1 float
-- @param x2 float
-- @param y2 float
-- @param z2 float
-- @param result Vector3*
-- TEST_PROBE_AGAINST_WATER(x1, y1, z1, x2, y2, z2, result)

--- TEST_VERTICAL_PROBE_AGAINST_ALL_WATER
-- @param x float
-- @param y float
-- @param z float
-- @param flag int - See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E)
-- @param height float*
-- TEST_VERTICAL_PROBE_AGAINST_ALL_WATER(x, y, z, flag, height)

--- _REMOVE_CURRENT_RISE
-- ```
p0 is the handle returned from _0xFDBF4CDBC07E1706  
```
-- @param p0 int
-- _REMOVE_CURRENT_RISE(p0)


-- ========== WEAPON ==========

--- 0x24C024BA8379A70A
-- ```
NativeDB Introduced: v1868
```
-- @param p0 Any
-- @param p1 Any
-- 0x24C024BA8379A70A(p0, p1)

--- 0x50276EF8172F5F12
-- Related to the ped's weapon - flag used when disabling ped vehicle weapon

SET_PED_\*

```
NativeDB Introduced: v1734
```
-- @param ped Ped
-- 0x50276EF8172F5F12(ped)

--- 0x977CA98939E82E4B
-- ```
SET_WEAPON_OBJECT_*
```
-- @param weaponObject Object
-- @param p1 int
-- 0x977CA98939E82E4B(weaponObject, p1)

--- 0xA2C9AC24B4061285
-- @param ped Ped
-- @param weaponHash Hash
-- 0xA2C9AC24B4061285(ped, weaponHash)

--- 0xE4DCEC7FD5B739A5
-- @param ped Ped
-- 0xE4DCEC7FD5B739A5(ped)

--- 0xE6D2CEDD370FF98E
-- ```
NativeDB Introduced: v2372
```
-- @param p0 Any
-- @param p1 Any
-- 0xE6D2CEDD370FF98E(p0, p1)

--- ADD_AMMO_TO_PED
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammo int
-- ADD_AMMO_TO_PED(ped, weaponHash, ammo)

--- CAN_USE_WEAPON_ON_PARACHUTE
-- ```
this returns if you can use the weapon while using a parachute  
```
-- @param weaponHash Hash
-- CAN_USE_WEAPON_ON_PARACHUTE(weaponHash)

--- CLEAR_ENTITY_LAST_WEAPON_DAMAGE
-- @param entity Entity
-- CLEAR_ENTITY_LAST_WEAPON_DAMAGE(entity)

--- CLEAR_PED_LAST_WEAPON_DAMAGE
-- Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
-- @param ped Ped
-- CLEAR_PED_LAST_WEAPON_DAMAGE(ped)

--- CREATE_WEAPON_OBJECT
-- Create a weapon object that cannot be attached to a ped. If you want to create a weapon object that can be attached to a ped, use [`CREATE_OBJECT`](#\_0x509D5878EB39E842) instead.

```
NativeDB Added Parameter 9: BOOL bRegisterAsNetworkObject
NativeDB Added Parameter 10: BOOL bScriptHostObject
```
-- @param weaponHash Hash - The hash of the weapon to create.
-- @param ammoCount int - The amount of ammo for the weapon.
-- @param x float - X coordinate for the weapon's position.
-- @param y float - Y coordinate for the weapon's position.
-- @param z float - Z coordinate for the weapon's position.
-- @param bCreateDefaultComponents BOOL - Boolean that indicates whether the default components should be created for that weapon (`true`/`false`).
-- @param scale float - The size of the object, to increase it, set the scale to a value greater than `1.0`.
-- @param customModelHash int - The hash of the custom model to use for the weapon object. Set to `0` if you do not intend to use a custom model hash.
-- CREATE_WEAPON_OBJECT(weaponHash, ammoCount, x, y, z, bCreateDefaultComponents, scale, customModelHash)

--- DOES_WEAPON_TAKE_WEAPON_COMPONENT
-- @param weaponHash Hash
-- @param componentHash Hash
-- DOES_WEAPON_TAKE_WEAPON_COMPONENT(weaponHash, componentHash)

--- ENABLE_LASER_SIGHT_RENDERING
-- ```
Enables laser sight on any weapon.  
It doesn't work. Neither on tick nor OnKeyDown  
```
-- @param toggle BOOL
-- ENABLE_LASER_SIGHT_RENDERING(toggle)

--- EXPLODE_PROJECTILES
-- ```
WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);  
```
-- @param ped Ped
-- @param weaponHash Hash
-- @param p2 BOOL
-- EXPLODE_PROJECTILES(ped, weaponHash, p2)

--- GET_AMMO_IN_CLIP
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammo int*
-- GET_AMMO_IN_CLIP(ped, weaponHash, ammo)

--- GET_AMMO_IN_PED_WEAPON
-- ```
WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)  
From decompiled scripts  
Returns total ammo in weapon  
GTALua Example :  
natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)  
```
-- @param ped Ped
-- @param weaponhash Hash
-- GET_AMMO_IN_PED_WEAPON(ped, weaponhash)

--- GET_BEST_PED_WEAPON
-- @param ped Ped
-- @param ignoreAmmoCount BOOL - If set to true, the best weapon can have no ammo, otherwise, it will return the best weapon with ammo. Default value is `0`.
-- GET_BEST_PED_WEAPON(ped, ignoreAmmoCount)

--- GET_CURRENT_PED_VEHICLE_WEAPON
-- @param ped Ped
-- @param weaponHash Hash*
-- GET_CURRENT_PED_VEHICLE_WEAPON(ped, weaponHash)

--- GET_CURRENT_PED_WEAPON
-- ```
The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.  
p2 seems to be 1 most of the time; and is not implemented.
```
-- @param ped Ped
-- @param weaponHash Hash*
-- @param p2 BOOL
-- GET_CURRENT_PED_WEAPON(ped, weaponHash, p2)

--- GET_CURRENT_PED_WEAPON_ENTITY_INDEX
-- ```
NativeDB Added Parameter 2: Any p1
```
-- @param ped Ped
-- GET_CURRENT_PED_WEAPON_ENTITY_INDEX(ped)

--- GET_IS_PED_GADGET_EQUIPPED
-- ```
gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").  
```
-- @param ped Ped
-- @param gadgetHash Hash
-- GET_IS_PED_GADGET_EQUIPPED(ped, gadgetHash)

--- GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON
-- @param ped Ped
-- GET_LOCKON_DISTANCE_OF_CURRENT_PED_WEAPON(ped)

--- GET_MAX_AMMO
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammo int*
-- GET_MAX_AMMO(ped, weaponHash, ammo)

--- GET_MAX_AMMO_IN_CLIP
-- ```
p2 is mostly 1 in the scripts.  
```
-- @param ped Ped
-- @param weaponHash Hash
-- @param p2 BOOL
-- GET_MAX_AMMO_IN_CLIP(ped, weaponHash, p2)

--- GET_MAX_RANGE_OF_CURRENT_PED_WEAPON
-- @param ped Ped
-- GET_MAX_RANGE_OF_CURRENT_PED_WEAPON(ped)

--- GET_PED_AMMO_BY_TYPE
-- @param ped Ped
-- @param ammoType Hash
-- GET_PED_AMMO_BY_TYPE(ped, ammoType)

--- GET_PED_AMMO_TYPE_FROM_WEAPON
-- ```
Returns the current ammo type of the specified ped's specified weapon.

MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.

Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
```
-- @param ped Ped
-- @param weaponHash Hash
-- GET_PED_AMMO_TYPE_FROM_WEAPON(ped, weaponHash)

--- GET_PED_LAST_WEAPON_IMPACT_COORD
-- ```
Pass ped. Pass address of Vector3.  
The coord will be put into the Vector3.  
The return will determine whether there was a coord found or not.  
```
-- @param ped Ped
-- @param coords Vector3*
-- GET_PED_LAST_WEAPON_IMPACT_COORD(ped, coords)

--- GET_PED_WEAPONTYPE_IN_SLOT
-- @param ped Ped
-- @param weaponSlot Hash
-- GET_PED_WEAPONTYPE_IN_SLOT(ped, weaponSlot)

--- GET_PED_WEAPON_TINT_INDEX
-- @param ped Ped
-- @param weaponHash Hash
-- GET_PED_WEAPON_TINT_INDEX(ped, weaponHash)

--- GET_SELECTED_PED_WEAPON
-- @param ped Ped
-- GET_SELECTED_PED_WEAPON(ped)

--- GET_WEAPONTYPE_GROUP
-- Gets and returns the hash of the group of the specified weapon (group names can be found/changed under "Group" in the weapons' meta file).
Note that the group is **not** the same as the location on the weapon wheel.
-- @param weaponHash Hash - The hash of the weapon.
-- GET_WEAPONTYPE_GROUP(weaponHash)

--- GET_WEAPONTYPE_MODEL
-- ```
Returns the model of any weapon.  
Can also take an ammo hash?  
sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));  
```
-- @param weaponHash Hash
-- GET_WEAPONTYPE_MODEL(weaponHash)

--- GET_WEAPONTYPE_SLOT
-- @param weaponHash Hash
-- GET_WEAPONTYPE_SLOT(weaponHash)

--- GET_WEAPON_CLIP_SIZE
-- ```
// Returns the size of the default weapon component clip.  
Use it like this:  
char cClipSize[32];  
Hash cur;  
if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))  
{  
    if (WEAPON::IS_WEAPON_VALID(cur))  
    {  
        int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);  
        sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);  
        vDrawString(cClipSize, 0.5f, 0.5f);  
    }  
}  
```
-- @param weaponHash Hash
-- GET_WEAPON_CLIP_SIZE(weaponHash)

--- GET_WEAPON_COMPONENT_HUD_STATS
-- @param componentHash Hash
-- @param outData int*
-- GET_WEAPON_COMPONENT_HUD_STATS(componentHash, outData)

--- GET_WEAPON_COMPONENT_TYPE_MODEL
-- @param componentHash Hash
-- GET_WEAPON_COMPONENT_TYPE_MODEL(componentHash)

--- GET_WEAPON_DAMAGE
-- This native does not return damages of weapons from the melee and explosive group.
-- @param weaponHash Hash
-- @param componentHash Hash - 0 in the decompiled scripts.
-- GET_WEAPON_DAMAGE(weaponHash, componentHash)

--- GET_WEAPON_DAMAGE_TYPE
-- ```
0=unknown (or incorrect weaponHash)  
1= no damage (flare,snowball, petrolcan)  
2=melee  
3=bullet  
4=force ragdoll fall  
5=explosive (RPG, Railgun, grenade)  
6=fire(molotov)  
8=fall(WEAPON_HELI_CRASH)  
10=electric  
11=barbed wire  
12=extinguisher  
13=gas  
14=water cannon(WEAPON_HIT_BY_WATER_CANNON)  
```
-- @param weaponHash Hash
-- GET_WEAPON_DAMAGE_TYPE(weaponHash)

--- GET_WEAPON_HUD_STATS
-- ```
// members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure  
struct WeaponHudStatsData  
{  
	alignas(8) uint8_t hudDamage; // 0x0000  
	alignas(8) uint8_t hudSpeed; // 0x0008  
	alignas(8) uint8_t hudCapacity; // 0x0010  
	alignas(8) uint8_t hudAccuracy; // 0x0018  
	alignas(8) uint8_t hudRange; // 0x0020  
};  
Usage:  
WeaponHudStatsData data;  
if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))  
{  
    // uint8_t damagePercentage = data.hudDamage etc...  
}  
```
-- @param weaponHash Hash
-- @param outData Any*
-- GET_WEAPON_HUD_STATS(weaponHash, outData)

--- GET_WEAPON_OBJECT_FROM_PED
-- ```
Drops the current weapon and returns the object  
Unknown behavior when unarmed.  
```
-- @param ped Ped
-- @param p1 BOOL
-- GET_WEAPON_OBJECT_FROM_PED(ped, p1)

--- GET_WEAPON_OBJECT_TINT_INDEX
-- @param weapon Object
-- GET_WEAPON_OBJECT_TINT_INDEX(weapon)

--- GET_WEAPON_TINT_COUNT
-- @param weaponHash Hash
-- GET_WEAPON_TINT_COUNT(weaponHash)

--- GIVE_DELAYED_WEAPON_TO_PED
-- ```
Gives a weapon to PED with a delay, example:
WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)
```
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammoCount int
-- @param bForceInHand BOOL
-- GIVE_DELAYED_WEAPON_TO_PED(ped, weaponHash, ammoCount, bForceInHand)

--- GIVE_WEAPON_COMPONENT_TO_PED
-- @param ped Ped
-- @param weaponHash Hash
-- @param componentHash Hash
-- GIVE_WEAPON_COMPONENT_TO_PED(ped, weaponHash, componentHash)

--- GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT
-- ```
addonHash:
(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)
${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
```
-- @param weaponObject Object
-- @param addonHash Hash
-- GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(weaponObject, addonHash)

--- GIVE_WEAPON_OBJECT_TO_PED
-- @param weaponObject Object
-- @param ped Ped
-- GIVE_WEAPON_OBJECT_TO_PED(weaponObject, ped)

--- GIVE_WEAPON_TO_PED
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammoCount int
-- @param isHidden BOOL
-- @param bForceInHand BOOL
-- GIVE_WEAPON_TO_PED(ped, weaponHash, ammoCount, isHidden, bForceInHand)

--- HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON
-- ```
It determines what weapons caused damage:
If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
If you want to define any melee weapon, second parameter=0, third parameter=1.
If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
```
-- @param entity Entity
-- @param weaponHash Hash
-- @param weaponType int
-- HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(entity, weaponHash, weaponType)

--- HAS_PED_BEEN_DAMAGED_BY_WEAPON
-- ```
It determines what weapons caused damage:  
If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0  
If you want to define any melee weapon, second parameter=0, third parameter=1.  
If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.  
```
-- @param ped Ped
-- @param weaponHash Hash
-- @param weaponType int
-- HAS_PED_BEEN_DAMAGED_BY_WEAPON(ped, weaponHash, weaponType)

--- HAS_PED_GOT_WEAPON
-- ```
p2 should be FALSE, otherwise it seems to always return FALSE  
Bool does not check if the weapon is current equipped, unfortunately.  
```
-- @param ped Ped
-- @param weaponHash Hash
-- @param p2 BOOL
-- HAS_PED_GOT_WEAPON(ped, weaponHash, p2)

--- HAS_PED_GOT_WEAPON_COMPONENT
-- @param ped Ped
-- @param weaponHash Hash
-- @param componentHash Hash
-- HAS_PED_GOT_WEAPON_COMPONENT(ped, weaponHash, componentHash)

--- HAS_VEHICLE_GOT_PROJECTILE_ATTACHED
-- ```
Third Parameter = unsure, but pretty sure it is weapon hash  
--> get_hash_key("weapon_stickybomb")  
Fourth Parameter = unsure, almost always -1  
```
-- @param driver Ped
-- @param vehicle Vehicle
-- @param weaponHash Hash
-- @param p3 Any
-- HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(driver, vehicle, weaponHash, p3)

--- HAS_WEAPON_ASSET_LOADED
-- @param weaponHash Hash
-- HAS_WEAPON_ASSET_LOADED(weaponHash)

--- HAS_WEAPON_GOT_WEAPON_COMPONENT
-- @param weapon Object
-- @param addonHash Hash
-- HAS_WEAPON_GOT_WEAPON_COMPONENT(weapon, addonHash)

--- HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE
-- ```
Hides the players weapon during a cutscene.  
```
-- @param ped Ped
-- @param toggle BOOL
-- HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(ped, toggle)

--- IS_FLASH_LIGHT_ON
-- @param ped Ped
-- IS_FLASH_LIGHT_ON(ped)

--- IS_PED_ARMED
-- Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.

| Bit value | Effect            |
|-----------|-------------------|
| 1         | Melee weapons     |
| 2         | Explosive weapons |
| 4         | Any other weapons |

Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
-- @param ped Ped - The ped to check armed state on.
-- @param typeFlags int - Type flags to check.
-- IS_PED_ARMED(ped, typeFlags)

--- IS_PED_CURRENT_WEAPON_SILENCED
-- ```
This native returns a true or false value.  
Ped ped = The ped whose weapon you want to check.  
```
-- @param ped Ped
-- IS_PED_CURRENT_WEAPON_SILENCED(ped)

--- IS_PED_WEAPON_COMPONENT_ACTIVE
-- @param ped Ped
-- @param weaponHash Hash
-- @param componentHash Hash
-- IS_PED_WEAPON_COMPONENT_ACTIVE(ped, weaponHash, componentHash)

--- IS_PED_WEAPON_READY_TO_SHOOT
-- @param ped Ped
-- IS_PED_WEAPON_READY_TO_SHOOT(ped)

--- IS_WEAPON_VALID
-- @param weaponHash Hash
-- IS_WEAPON_VALID(weaponHash)

--- MAKE_PED_RELOAD
-- Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
-- @param ped Ped
-- MAKE_PED_RELOAD(ped)

--- REFILL_AMMO_INSTANTLY
-- @param ped Ped
-- REFILL_AMMO_INSTANTLY(ped)

--- REMOVE_ALL_PED_WEAPONS
-- Parameter `p1` does not seem to be used or referenced in game binaries.\
**Note:** When called for networked entities, a `CRemoveAllWeaponsEvent` will be created per request.
-- @param ped Ped - The ped entity
-- @param p1 BOOL
-- REMOVE_ALL_PED_WEAPONS(ped, p1)

--- REMOVE_ALL_PROJECTILES_OF_TYPE
-- If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
-- @param weaponHash Hash
-- @param explode BOOL
-- REMOVE_ALL_PROJECTILES_OF_TYPE(weaponHash, explode)

--- REMOVE_WEAPON_ASSET
-- @param weaponHash Hash
-- REMOVE_WEAPON_ASSET(weaponHash)

--- REMOVE_WEAPON_COMPONENT_FROM_PED
-- @param ped Ped
-- @param weaponHash Hash
-- @param componentHash Hash
-- REMOVE_WEAPON_COMPONENT_FROM_PED(ped, weaponHash, componentHash)

--- REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT
-- @param weaponObject Object
-- @param addonHash Hash
-- REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(weaponObject, addonHash)

--- REMOVE_WEAPON_FROM_PED
-- ```
This native removes a specified weapon from your selected ped.  
Weapon Hashes: pastebin.com/0wwDZgkF  
Example:  
C#:  
Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);  
C++:  
WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);  
The code above removes the knife from the player.  
```
-- @param ped Ped
-- @param weaponHash Hash
-- REMOVE_WEAPON_FROM_PED(ped, weaponHash)

--- REQUEST_WEAPON_ASSET
-- ```
Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.  
REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);  
```
-- @param weaponHash Hash
-- @param p1 int
-- @param p2 int
-- REQUEST_WEAPON_ASSET(weaponHash, p1, p2)

--- REQUEST_WEAPON_HIGH_DETAIL_MODEL
-- @param weaponObject Entity
-- REQUEST_WEAPON_HIGH_DETAIL_MODEL(weaponObject)

--- SET_AMMO_IN_CLIP
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammo int
-- SET_AMMO_IN_CLIP(ped, weaponHash, ammo)

--- SET_CURRENT_PED_VEHICLE_WEAPON
-- @param ped Ped
-- @param weaponHash Hash
-- SET_CURRENT_PED_VEHICLE_WEAPON(ped, weaponHash)

--- SET_CURRENT_PED_WEAPON
-- @param ped Ped
-- @param weaponHash Hash
-- @param bForceInHand BOOL
-- SET_CURRENT_PED_WEAPON(ped, weaponHash, bForceInHand)

--- SET_FLASH_LIGHT_FADE_DISTANCE
-- @param distance float
-- SET_FLASH_LIGHT_FADE_DISTANCE(distance)

--- SET_PED_AMMO
-- ```
NativeDB Added Parameter 4: BOOL p3
```
-- @param ped Ped
-- @param weaponHash Hash
-- @param ammo int
-- SET_PED_AMMO(ped, weaponHash, ammo)

--- SET_PED_AMMO_BY_TYPE
-- @param ped Ped
-- @param ammoType Hash
-- @param ammo int
-- SET_PED_AMMO_BY_TYPE(ped, ammoType, ammo)

--- SET_PED_AMMO_TO_DROP
-- @param ped Ped
-- @param ammo int
-- SET_PED_AMMO_TO_DROP(ped, ammo)

--- SET_PED_CHANCE_OF_FIRING_BLANKS
-- @param ped Ped
-- @param xBias float
-- @param yBias float
-- SET_PED_CHANCE_OF_FIRING_BLANKS(ped, xBias, yBias)

--- SET_PED_CURRENT_WEAPON_VISIBLE
-- ```
Has 5 parameters since latest patches.  
```
-- @param ped Ped
-- @param visible BOOL
-- @param deselectWeapon BOOL
-- @param p3 BOOL
-- @param p4 BOOL
-- SET_PED_CURRENT_WEAPON_VISIBLE(ped, visible, deselectWeapon, p3, p4)

--- SET_PED_DROPS_INVENTORY_WEAPON
-- @param ped Ped
-- @param weaponHash Hash
-- @param xOffset float
-- @param yOffset float
-- @param zOffset float
-- @param ammoCount int
-- SET_PED_DROPS_INVENTORY_WEAPON(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount)

--- SET_PED_DROPS_WEAPON
-- @param ped Ped
-- SET_PED_DROPS_WEAPON(ped)

--- SET_PED_DROPS_WEAPONS_WHEN_DEAD
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_DROPS_WEAPONS_WHEN_DEAD(ped, toggle)

--- SET_PED_GADGET
-- ```
p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").  
p2 is always true.  
```
-- @param ped Ped
-- @param gadgetHash Hash
-- @param p2 BOOL
-- SET_PED_GADGET(ped, gadgetHash, p2)

--- SET_PED_INFINITE_AMMO
-- @param ped Ped
-- @param toggle BOOL
-- @param weaponHash Hash
-- SET_PED_INFINITE_AMMO(ped, toggle, weaponHash)

--- SET_PED_INFINITE_AMMO_CLIP
-- @param ped Ped
-- @param toggle BOOL
-- SET_PED_INFINITE_AMMO_CLIP(ped, toggle)

--- SET_PED_SHOOT_ORDNANCE_WEAPON
-- ```
Returns handle of the projectile.
```
-- @param ped Ped
-- @param p1 float
-- SET_PED_SHOOT_ORDNANCE_WEAPON(ped, p1)

--- SET_PED_WEAPON_TINT_INDEX
-- ```
tintIndex can be the following:  
0 : Default/Black
1 : Green
2 : Gold
3 : Pink
4 : Army
5 : LSPD
6 : Orange
7 : Platinum

tintIndex for MK2 weapons :
0 : Classic Black
1 : Classic Gray
2 : Classic Two-Tone
3 : Classic White
4 : Classic Beige
5 : Classic Green
6 : Classic Blue
7 : Classic Earth
8 : Classic Brown & Black
9 : Red Contrast
10 : Blue Contrast
11 : Yellow Contrast
12 : Orange Contrast
13 : Bold Pink
14 : Bold Purple & Yellow
15 : Bold Orange
16 : Bold Green & Purple
17 : Bold Red Features
18 : Bold Green Features
19 : Bold Cyan Features
20 : Bold Yellow Features
21 : Bold Red & White
22 : Bold Blue & White
23 : Metallic Gold
24 : Metallic Platinum
25 : Metallic Gray & Lilac
26 : Metallic Purple & Lime
27 : Metallic Red
28 : Metallic Green
29 : Metallic Blue
30 : Metallic White & Aqua
31 : Metallic Orange & Yellow
32 : Mettalic Red and Yellow
```
-- @param ped Ped - The target ped
-- @param weaponHash Hash - The target weapon hash
-- @param tintIndex int - Tint for weapon hash
-- SET_PED_WEAPON_TINT_INDEX(ped, weaponHash, tintIndex)

--- SET_PICKUP_AMMO_AMOUNT_SCALER
-- @param p0 float
-- SET_PICKUP_AMMO_AMOUNT_SCALER(p0)

--- SET_WEAPON_ANIMATION_OVERRIDE
-- Changes the selected ped aiming animation style, you can find the list of animations below.

These are stored in the `weaponanimations.meta` file located in `Grand Theft Auto V\update\update.rpf\common\data\ai\weaponanimations.meta`.

For Lua, it's best if you send the animation using [compile-time jenkins](https://cookbook.fivem.net/2019/06/23/lua-support-for-compile-time-jenkins-hashes/) hashes to avoid overhead. An example is shown down below.

### Animations

```cpp
enum eWeaponAnimationOverrides {
	Ballistic = 0x5534A626,
	Default = 0xE4DF46D5,
	Franklin = 0x44C24694,
	Gang = 0xBC066B98,
	Michael = 0x55932F38,
	MP_F_Freemode = 0xACB10C83,
	Trevor = 0x2737D5AC,
	Hillbilly = 0x8503D409,
	Gang1H = 0x724A7AB7,
	FirstPerson = 0xEE38E8E0,
	FirstPersonAiming = 0xC76297A3,
	FirstPersonRNG = 0xA4FDD608,
	FirstPersonScope = 0x28117C22,
	FirstPersonMichael = 0xEAA2550B,
	FirstPersonMichaelAiming = 0x3E6FF30F,
	FirstPersonMichaelRNG = 0xB7A826C1,
	FirstPersonMichaelScope = 0xC554CF97,
	FirstPersonFranklin = 0xC407163A,
	FirstPersonFranklinAiming = 0x3D4B7B03,
	FirstPersonFranklinRNG = 0xBE79B0B4,
	FirstPersonFranklinScope = 0xAFEA6593,
	FirstPersonTrevor = 0xA65D5351,
	FirstPersonTrevorAiming = 0xF9BE8ED9,
	FirstPersonTrevorRNG = 0xD181ED09,
	FirstPersonTrevorScope = 0x34A67D6D,
	FirstPersonMPFemale = 0x8431583F,
	Fat = 0xC531A409,
	SuperFat = 0x529E5780,
	Female = 0x6D155A1B,
	GangFemale = 0x678ADF82,
}
```
-- @param ped Ped - The ped handle.
-- @param animStyle Hash - The animation style to apply, passed as a hash.
-- SET_WEAPON_ANIMATION_OVERRIDE(ped, animStyle)

--- SET_WEAPON_OBJECT_TINT_INDEX
-- @param weapon Object
-- @param tintIndex int
-- SET_WEAPON_OBJECT_TINT_INDEX(weapon, tintIndex)

--- _ADD_AMMO_TO_PED_BY_TYPE
-- @param ped Ped
-- @param ammoType Hash
-- @param ammo int
-- _ADD_AMMO_TO_PED_BY_TYPE(ped, ammoType, ammo)

--- _CREATE_AIR_DEFENSE_AREA
-- @param p0 float
-- @param p1 float
-- @param p2 float
-- @param p3 float
-- @param p4 float
-- @param p5 float
-- @param p6 float
-- @param p7 float
-- @param p8 float
-- @param p9 float
-- @param weaponHash Hash
-- _CREATE_AIR_DEFENSE_AREA(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, weaponHash)

--- _CREATE_AIR_DEFENSE_SPHERE
-- Both coordinates are from objects in the decompiled scripts.

Native related to [\_0xECDC202B25E5CF48](#\_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
-- @param x float - X coordinate
-- @param y float - Y coordinate
-- @param z float - Z coordinate
-- @param radius float - Unknown float 150.0 is used in freemode script.
-- @param p4 float - X coordinate
-- @param p5 float - Y coordinate
-- @param p6 float - Z coordinate
-- @param weaponHash Hash - weapon_air_defence_gun and 0 are used in the decompiled scripts.
-- _CREATE_AIR_DEFENSE_SPHERE(x, y, z, radius, p4, p5, p6, weaponHash)

--- _DOES_AIR_DEFENSE_ZONE_EXIST
-- @param zoneId int
-- _DOES_AIR_DEFENSE_ZONE_EXIST(zoneId)

--- _FIRE_AIR_DEFENSE_WEAPON
-- @param zoneId int
-- @param x float
-- @param y float
-- @param z float
-- _FIRE_AIR_DEFENSE_WEAPON(zoneId, x, y, z)

--- _GET_MAX_AMMO_BY_TYPE
-- @param ped Ped
-- @param ammoType Hash
-- @param ammo int*
-- _GET_MAX_AMMO_BY_TYPE(ped, ammoType, ammo)

--- _GET_PED_AMMO_TYPE_FROM_WEAPON_2
-- ```
Returns the base/default ammo type of the specified ped's specified weapon.

Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
```
-- @param ped Ped
-- @param weaponHash Hash
-- _GET_PED_AMMO_TYPE_FROM_WEAPON_2(ped, weaponHash)

--- _GET_PED_WEAPON_LIVERY_COLOR
-- @param ped Ped
-- @param weaponHash Hash
-- @param camoComponentHash Hash
-- _GET_PED_WEAPON_LIVERY_COLOR(ped, weaponHash, camoComponentHash)

--- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_COUNT
-- @param componentHash Hash
-- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_COUNT(componentHash)

--- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_MODEL
-- @param componentHash Hash
-- @param extraComponentIndex int
-- _GET_WEAPON_COMPONENT_VARIANT_EXTRA_COMPONENT_MODEL(componentHash, extraComponentIndex)

--- _GET_WEAPON_OBJECT_LIVERY_COLOR
-- @param weaponObject Object
-- @param camoComponentHash Hash
-- _GET_WEAPON_OBJECT_LIVERY_COLOR(weaponObject, camoComponentHash)

--- _GET_WEAPON_TIME_BETWEEN_SHOTS
-- @param weaponHash Hash
-- _GET_WEAPON_TIME_BETWEEN_SHOTS(weaponHash)

--- _GIVE_LOADOUT_TO_PED
-- List of all available loadouts:

```
LOADOUT_DEFAULT
LOADOUT_ANIMAL
LOADOUT_COUGAR
LOADOUT_HILLBILLY
LOADOUT_CULT
LOADOUT_CHEAT_0
LOADOUT_CHEAT_1
LOADOUT_GUARD
LOADOUT_NETWORK_BOT
LOADOUT_LOST
LOADOUT_LOST_L1
LOADOUT_LOST_L2
LOADOUT_LOST_L3
LOADOUT_MEXICAN
LOADOUT_MEXICAN_L1
LOADOUT_MEXICAN_L2
LOADOUT_MEXICAN_L3
LOADOUT_FAMILY
LOADOUT_ASIAN
LOADOUT_SECUR
LOADOUT_POLICE_GUARD
LOADOUT_COP
LOADOUT_COP_L1
LOADOUT_COP_L2
LOADOUT_COP_L3
LOADOUT_SWAT
LOADOUT_SWAT_NO_LASER
LOADOUT_COP_SHOTGUN
LOADOUT_FIREMAN
LOADOUT_COP_HELI
LOADOUT_COP_BOAT
LOADOUT_ARMY
LOADOUT_ANIMAL_RETRIEVER
LOADOUT_SMALL_DOG
LOADOUT_TIGER_SHARK
LOADOUT_HAMMERHEAD_SHARK
LOADOUT_KILLER_WHALE
LOADOUT_BOAR
LOADOUT_PIG
LOADOUT_COYOTE
LOADOUT_DEER
LOADOUT_HEN
LOADOUT_RABBIT
LOADOUT_CAT
LOADOUT_COW
```
-- @param ped Ped - The ped handle to apply this to.
-- @param loadoutHash Hash - The loadout to use (needs to be a hash).
-- _GIVE_LOADOUT_TO_PED(ped, loadoutHash)

--- _IS_ANY_AIR_DEFENSE_ZONE_INSIDE_SPHERE
-- @param x float
-- @param y float
-- @param z float
-- @param radius float
-- @param SphereIndex int*
-- _IS_ANY_AIR_DEFENSE_ZONE_INSIDE_SPHERE(x, y, z, radius, SphereIndex)

--- _REMOVE_AIR_DEFENSE_ZONE
-- @param zoneId int
-- _REMOVE_AIR_DEFENSE_ZONE(zoneId)

--- _REMOVE_ALL_AIR_DEFENSE_ZONES
-- _REMOVE_ALL_AIR_DEFENSE_ZONES()

--- _SET_CAN_PED_EQUIP_ALL_WEAPONS
-- Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](#\_0xB4771B9AAF4E68E4) except for all weapons.
-- @param ped Ped
-- @param toggle BOOL
-- _SET_CAN_PED_EQUIP_ALL_WEAPONS(ped, toggle)

--- _SET_CAN_PED_EQUIP_WEAPON
-- Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
-- @param ped Ped
-- @param weaponHash Hash
-- @param toggle BOOL
-- _SET_CAN_PED_EQUIP_WEAPON(ped, weaponHash, toggle)

--- _SET_FLASH_LIGHT_ENABLED
-- Enables/disables flashlight on ped's weapon.

```
NativeDB Introduced: v2060
```
-- @param ped Ped
-- @param toggle BOOL
-- _SET_FLASH_LIGHT_ENABLED(ped, toggle)

--- _SET_PED_WEAPON_LIVERY_COLOR
-- @param ped Ped
-- @param weaponHash Hash
-- @param camoComponentHash Hash
-- @param colorIndex int
-- _SET_PED_WEAPON_LIVERY_COLOR(ped, weaponHash, camoComponentHash, colorIndex)

--- _SET_PLAYER_AIR_DEFENSE_ZONE_FLAG
-- @param player Player
-- @param zoneId int
-- @param enable BOOL
-- _SET_PLAYER_AIR_DEFENSE_ZONE_FLAG(player, zoneId, enable)

--- _SET_WEAPON_DAMAGE_MODIFIER
-- Changes the weapon damage output by the given multiplier value.
Does NOT need to be called every frame.
-- @param weaponHash Hash - Hash of the weapon
-- @param damageMultiplier float - Damage Multiplier
-- _SET_WEAPON_DAMAGE_MODIFIER(weaponHash, damageMultiplier)

--- _SET_WEAPON_EXPLOSION_RADIUS_MULTIPLIER
-- ```
NativeDB Introduced: v2372
```
-- @param weaponHash Hash
-- @param multiplier float
-- _SET_WEAPON_EXPLOSION_RADIUS_MULTIPLIER(weaponHash, multiplier)

--- _SET_WEAPON_OBJECT_LIVERY_COLOR
-- @param weaponObject Object
-- @param camoComponentHash Hash
-- @param colorIndex int
-- _SET_WEAPON_OBJECT_LIVERY_COLOR(weaponObject, camoComponentHash, colorIndex)


-- ========== ZONE ==========

--- CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL
-- ```
Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  
Modified example from "am_imp_exp.c4", line 6418:  
/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  
etc.  
*/  
STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);  
ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);  
```
-- @param scheduleId int
-- CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(scheduleId)

--- GET_HASH_OF_MAP_AREA_AT_COORDS
-- ```
Returns a hash representing which part of the map the given coords are located.  
Possible return values:  
(Hash of) city -> -289320599  
(Hash of) countryside -> 2072609373  
C# Example :  
Ped player = Game.Player.Character;  
Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);  
```
-- @param x float
-- @param y float
-- @param z float
-- GET_HASH_OF_MAP_AREA_AT_COORDS(x, y, z)

--- GET_NAME_OF_ZONE
-- ```
AIRP = Los Santos International Airport  
ALAMO = Alamo Sea  
ALTA = Alta  
ARMYB = Fort Zancudo  
BANHAMC = Banham Canyon Dr  
BANNING = Banning  
BEACH = Vespucci Beach  
BHAMCA = Banham Canyon  
BRADP = Braddock Pass  
BRADT = Braddock Tunnel  
BURTON = Burton  
CALAFB = Calafia Bridge  
CANNY = Raton Canyon  
CCREAK = Cassidy Creek  
CHAMH = Chamberlain Hills  
CHIL = Vinewood Hills  
CHU = Chumash  
CMSW = Chiliad Mountain State Wilderness  
CYPRE = Cypress Flats  
DAVIS = Davis  
DELBE = Del Perro Beach  
DELPE = Del Perro  
DELSOL = La Puerta  
DESRT = Grand Senora Desert  
DOWNT = Downtown  
DTVINE = Downtown Vinewood  
EAST_V = East Vinewood  
EBURO = El Burro Heights  
ELGORL = El Gordo Lighthouse  
ELYSIAN = Elysian Island  
GALFISH = Galilee  
GOLF = GWC and Golfing Society  
GRAPES = Grapeseed  
GREATC = Great Chaparral  
HARMO = Harmony  
HAWICK = Hawick  
HORS = Vinewood Racetrack  
HUMLAB = Humane Labs and Research  
JAIL = Bolingbroke Penitentiary  
KOREAT = Little Seoul  
LACT = Land Act Reservoir  
LAGO = Lago Zancudo  
LDAM = Land Act Dam  
LEGSQU = Legion Square  
LMESA = La Mesa  
LOSPUER = La Puerta  
MIRR = Mirror Park  
MORN = Morningwood  
MOVIE = Richards Majestic  
MTCHIL = Mount Chiliad  
MTGORDO = Mount Gordo  
MTJOSE = Mount Josiah  
MURRI = Murrieta Heights  
NCHU = North Chumash  
NOOSE = N.O.O.S.E  
OCEANA = Pacific Ocean  
PALCOV = Paleto Cove  
PALETO = Paleto Bay  
PALFOR = Paleto Forest  
PALHIGH = Palomino Highlands  
PALMPOW = Palmer-Taylor Power Station  
PBLUFF = Pacific Bluffs  
PBOX = Pillbox Hill  
PROCOB = Procopio Beach  
RANCHO = Rancho  
RGLEN = Richman Glen  
RICHM = Richman  
ROCKF = Rockford Hills  
RTRAK = Redwood Lights Track  
SANAND = San Andreas  
SANCHIA = San Chianski Mountain Range  
SANDY = Sandy Shores  
SKID = Mission Row  
SLAB = Stab City  
STAD = Maze Bank Arena  
STRAW = Strawberry  
TATAMO = Tataviam Mountains  
TERMINA = Terminal  
TEXTI = Textile City  
TONGVAH = Tongva Hills  
TONGVAV = Tongva Valley  
VCANA = Vespucci Canals  
VESP = Vespucci  
VINE = Vinewood  
WINDF = Ron Alternates Wind Farm  
WVINE = West Vinewood  
ZANCUDO = Zancudo River  
ZP_ORT = Port of South Los Santos  
ZQ_UAR = Davis Quartz  
PROL = Prologue / North Yankton
ISHeist = Cayo Perico Island
```
-- @param x float
-- @param y float
-- @param z float
-- GET_NAME_OF_ZONE(x, y, z)

--- GET_ZONE_AT_COORDS
-- @param x float
-- @param y float
-- @param z float
-- GET_ZONE_AT_COORDS(x, y, z)

--- GET_ZONE_FROM_NAME_ID
-- ```
'zoneName' corresponds to an entry in 'popzone.ipl'.  
AIRP = Los Santos International Airport  
ALAMO = Alamo Sea  
ALTA = Alta  
ARMYB = Fort Zancudo  
BANHAMC = Banham Canyon Dr  
BANNING = Banning  
BEACH = Vespucci Beach  
BHAMCA = Banham Canyon  
BRADP = Braddock Pass  
BRADT = Braddock Tunnel  
BURTON = Burton  
CALAFB = Calafia Bridge  
CANNY = Raton Canyon  
CCREAK = Cassidy Creek  
CHAMH = Chamberlain Hills  
CHIL = Vinewood Hills  
CHU = Chumash  
CMSW = Chiliad Mountain State Wilderness  
CYPRE = Cypress Flats  
DAVIS = Davis  
DELBE = Del Perro Beach  
DELPE = Del Perro  
DELSOL = La Puerta  
DESRT = Grand Senora Desert  
DOWNT = Downtown  
DTVINE = Downtown Vinewood  
EAST_V = East Vinewood  
EBURO = El Burro Heights  
ELGORL = El Gordo Lighthouse  
ELYSIAN = Elysian Island  
GALFISH = Galilee  
GOLF = GWC and Golfing Society  
GRAPES = Grapeseed  
GREATC = Great Chaparral  
HARMO = Harmony  
HAWICK = Hawick  
HORS = Vinewood Racetrack  
HUMLAB = Humane Labs and Research  
JAIL = Bolingbroke Penitentiary  
KOREAT = Little Seoul  
LACT = Land Act Reservoir  
LAGO = Lago Zancudo  
LDAM = Land Act Dam  
LEGSQU = Legion Square  
LMESA = La Mesa  
LOSPUER = La Puerta  
MIRR = Mirror Park  
MORN = Morningwood  
MOVIE = Richards Majestic  
MTCHIL = Mount Chiliad  
MTGORDO = Mount Gordo  
MTJOSE = Mount Josiah  
MURRI = Murrieta Heights  
NCHU = North Chumash  
NOOSE = N.O.O.S.E  
OCEANA = Pacific Ocean  
PALCOV = Paleto Cove  
PALETO = Paleto Bay  
PALFOR = Paleto Forest  
PALHIGH = Palomino Highlands  
PALMPOW = Palmer-Taylor Power Station  
PBLUFF = Pacific Bluffs  
PBOX = Pillbox Hill  
PROCOB = Procopio Beach  
RANCHO = Rancho  
RGLEN = Richman Glen  
RICHM = Richman  
ROCKF = Rockford Hills  
RTRAK = Redwood Lights Track  
SANAND = San Andreas  
SANCHIA = San Chianski Mountain Range  
SANDY = Sandy Shores  
SKID = Mission Row  
SLAB = Stab City  
STAD = Maze Bank Arena  
STRAW = Strawberry  
TATAMO = Tataviam Mountains  
TERMINA = Terminal  
TEXTI = Textile City  
TONGVAH = Tongva Hills  
TONGVAV = Tongva Valley  
VCANA = Vespucci Canals  
VESP = Vespucci  
VINE = Vinewood  
WINDF = Ron Alternates Wind Farm  
WVINE = West Vinewood  
ZANCUDO = Zancudo River  
ZP_ORT = Port of South Los Santos  
ZQ_UAR = Davis Quartz  
```
-- @param zoneName char*
-- GET_ZONE_FROM_NAME_ID(zoneName)

--- GET_ZONE_POPSCHEDULE
-- @param zoneId int
-- GET_ZONE_POPSCHEDULE(zoneId)

--- GET_ZONE_SCUMMINESS
-- Gets the zone scumminess level, used to calculate the cellphone signal strength.

```cpp
enum eZoneScumminess
{
    SCUMMINESS_POSH = 0,
    SCUMMINESS_NICE = 1,
    SCUMMINESS_ABOVE_AVERAGE = 2,
    SCUMMINESS_BELOW_AVERAGE = 3,
    SCUMMINESS_CRAP = 4,
    SCUMMINESS_SCUM = 5
}
```
-- @param zoneId int - The zone id
-- GET_ZONE_SCUMMINESS(zoneId)

--- OVERRIDE_POPSCHEDULE_VEHICLE_MODEL
-- ```
Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.  
Modified example from "am_imp_exp.c4", line 6406:  
/* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));  
etc.  
*/  
ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);  
STREAMING::REQUEST_MODEL(vehicleHash);  
```
-- @param scheduleId int
-- @param vehicleHash Hash
-- OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(scheduleId, vehicleHash)

--- SET_ZONE_ENABLED
-- @param zoneId int
-- @param toggle BOOL
-- SET_ZONE_ENABLED(zoneId, toggle)

